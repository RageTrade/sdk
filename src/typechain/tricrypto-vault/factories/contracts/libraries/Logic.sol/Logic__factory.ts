/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  Logic,
  LogicInterface,
} from '../../../../contracts/libraries/Logic.sol/Logic';

const _abi = [
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newDepositCap',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeperAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint32',
        name: 'rebalanceTimeThreshold',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'rebalancePriceThresholdBps',
        type: 'uint16',
      },
    ],
    name: 'BaseParamsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'crvSlippageTolerance',
        type: 'uint256',
      },
    ],
    name: 'CrvSwapFailedDueToSlippage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeBps',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'stablecoinSlippage',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'crvHarvestThreshold',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'crvSlippageTolerance',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'gauge',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'crvOracle',
        type: 'address',
      },
    ],
    name: 'CurveParamsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint16',
        name: 'closePositionSlippageSqrtToleranceBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'resetPositionThresholdBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'minNotionalPositionToCloseThreshold',
        type: 'uint64',
      },
    ],
    name: 'EightyTwentyParamsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    name: 'FeesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'total',
        type: 'uint256',
      },
    ],
    name: 'FeesWithdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'crvAmount',
        type: 'uint256',
      },
    ],
    name: 'Harvested',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'Rebalance',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'depositor',
        type: 'address',
      },
    ],
    name: 'Staked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lpPrice',
        type: 'uint256',
      },
    ],
    name: 'StateInfo',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'TokenPositionClosed',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'contract ILPPriceGetter',
        name: 'lpPriceHolder',
        type: 'ILPPriceGetter',
      },
    ],
    name: 'getMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'marketValue',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ILPPriceGetter',
        name: 'lpPriceHolder',
        type: 'ILPPriceGetter',
      },
    ],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'rageVPool',
        type: 'IUniswapV3Pool',
      },
      {
        internalType: 'uint32',
        name: 'rageTwapDuration',
        type: 'uint32',
      },
    ],
    name: 'getTwapSqrtPriceX96',
    outputs: [
      {
        internalType: 'uint160',
        name: 'twapSqrtPriceX96',
        type: 'uint160',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
      {
        internalType: 'uint64',
        name: 'SQRT_PRICE_FACTOR_PIPS',
        type: 'uint64',
      },
    ],
    name: 'getUpdatedBaseRangeParams',
    outputs: [
      {
        internalType: 'int24',
        name: 'baseTickLowerUpdate',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'baseTickUpperUpdate',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'baseLiquidityUpdate',
        type: 'uint128',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'rageVPool',
        type: 'IUniswapV3Pool',
      },
      {
        internalType: 'uint32',
        name: 'rageTwapDuration',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'rebalancePriceThresholdBps',
        type: 'uint16',
      },
      {
        internalType: 'int24',
        name: 'baseTickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'baseTickUpper',
        type: 'int24',
      },
    ],
    name: 'isValidRebalanceRangeWithoutCheckReset',
    outputs: [
      {
        internalType: 'bool',
        name: 'isValid',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amountBeforeWithdraw',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amountWithdrawn',
        type: 'uint256',
      },
    ],
    name: 'simulateBeforeWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'updatedAmountWithdrawn',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'tokensToTrade',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isTickUpper',
        type: 'bool',
      },
    ],
    name: 'sqrtPriceX96ToValidTick',
    outputs: [
      {
        internalType: 'int24',
        name: 'roundedTick',
        type: 'int24',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x61243261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c80638fd3ab80116100705780638fd3ab8014610139578063ad6ed5b014610150578063e4a66f3f1461018f578063e54c8fd8146101af578063ffe2e69a146101da57600080fd5b80632780ee31146100a2578063757d5fd6146100cf5780637a5fda79146100f2578063854292c714610113575b600080fd5b6100b56100b0366004611a31565b6101ed565b604080519283526020830191909152015b60405180910390f35b6100e26100dd366004611a97565b6105e9565b60405190151581526020016100c6565b610105610100366004611b08565b61066e565b6040519081526020016100c6565b610126610121366004611b46565b61068f565b60405160029190910b81526020016100c6565b81801561014557600080fd5b5061014e610703565b005b61016361015e366004611b8a565b6108d9565b60408051600294850b81529290930b60208301526001600160801b0316918101919091526060016100c6565b81801561019b57600080fd5b506101056101aa366004611bcc565b610996565b6101c26101bd366004611c63565b610c34565b6040516001600160a01b0390911681526020016100c6565b6101056101e8366004611c91565b610c49565b6000806000856001600160a01b031663d4406e896040518163ffffffff1660e01b8152600401602060405180830381865afa158015610230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102549190611cae565b90506000866001600160a01b0316635f63e0666040518163ffffffff1660e01b8152600401602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba9190611ccb565b90506000610336886001600160a01b031663ee3a98ff6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190611ccb565b6101bd6001600160a01b03851686610c5a565b90506000826001600160a01b0316636a4864828a6001600160a01b031663e66488536040518163ffffffff1660e01b8152600401602060405180830381865afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190611ce8565b6040516001600160e01b031960e084901b168152600481019190915263ffffffff87166024820152604401602060405180830381865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104179190611ce8565b905061042481888a610cf2565b61042d90611d17565b9450600061043b8284610d3c565b905060008a6001600160a01b0316631aa3dfbb6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190611d33565b905060008b6001600160a01b0316636a8db81d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105079190611d50565b905060008c6001600160a01b031663fcb777ef6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056d9190611ccb565b90508267ffffffffffffffff168411156105d1576000610591898b898b8688610d6a565b5090508981036105a3578b9a506105cb565b60006105b96105b18f610e7b565b839089610ec4565b6105c290611d17565b9b509099508990505b506105d9565b8a9950600098505b5050505050505050935093915050565b6000806105f68787610c34565b6001600160a01b0316905060006106148261ffff8816612710610f21565b9050600284900b61063561063061062b8486611d6d565b610fd3565b61101c565b60020b13806106595750600285900b61065461063061062b8486611d85565b60020b125b1561066357600192505b505095945050505050565b600061068861067c8361132f565b8490600160801b610f21565b9392505050565b60008061069b8461101c565b905082156106ca576106ae600a82611db2565b6106b982600a611dd4565b6106c39190611e1b565b91506106e2565b6106d5600a82611db2565b6106df9082611e1b565b91505b60008160020b12156106fc576106f9600a83611e1b565b91505b5092915050565b6040516370a0823160e01b81523060048201527397e2768e8e73511ca874545dc5ff8067eb19b7879073555766f3da968ecbefa690ffd49a2ac02f47aa5f90738e0b8c8bb9db49a46697f3a5bb8a308e744821d29060009084906370a0823190602401602060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a79190611ce8565b60405163095ea7b360e01b81526001600160a01b038681166004830152600060248301529192509083169063095ea7b3906044016020604051808303816000875af11580156107fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081e9190611e63565b50604051632e1a7d4d60e01b8152600481018290526001600160a01b03851690632e1a7d4d90602401600060405180830381600087803b15801561086157600080fd5b505af1158015610875573d6000803e3d6000fd5b505060405163b6b55f2560e01b8152600481018490526001600160a01b038616925063b6b55f259150602401600060405180830381600087803b1580156108bb57600080fd5b505af11580156108cf573d6000803e3d6000fd5b5050505050505050565b600080808061090261062b6001600160a01b03891667ffffffffffffffff8816620f4240610f21565b9050600061092a61062b6001600160a01b038a16620f424067ffffffffffffffff8a16610f21565b905061093782600061068f565b945061094481600161068f565b935050506000610953846113b2565b905061098a61098561096a600a600160601b611e80565b610974848b611e94565b8991906001600160a01b0316610f21565b6116d5565b91505093509350939050565b600080876001600160a01b03166354f0f7d56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fb9190611ce8565b9050600081610a0f8c64e8d4a51000611ebc565b610a2190670de0b6b3a7640000611ebc565b610a2b9190611e80565b604051632e1a7d4d60e01b8152600481018290529091506001600160a01b03891690632e1a7d4d90602401600060405180830381600087803b158015610a7057600080fd5b505af1158015610a84573d6000803e3d6000fd5b505060405163f1dc3cc960e01b81526004810184905260006024820181905260448201526001600160a01b038a16925063f1dc3cc99150606401600060405180830381600087803b158015610ad857600080fd5b505af1158015610aec573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092506001600160a01b03891691506370a0823190602401602060405180830381865afa158015610b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5b9190611ce8565b6040516bffffffffffffffffffffffff1960608a811b82166020840152607d60ea1b603484015288901b166037820152909150600090604b01604051602081830303815290604052905073__$f09208ef53137b379b85ea4a8d399069d8$__63abd9ebe5838e848b6040518563ffffffff1660e01b8152600401610be29493929190611edb565b602060405180830381865af4158015610bff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c239190611ce8565b9d9c50505050505050505050505050565b60006106886001600160a01b038416836116eb565b6000610c548261132f565b92915050565b600080836001600160a01b0316631e2eaeaf610c7e6003610c7a8761170c565b0190565b6040518263ffffffff1660e01b8152600401610c9c91815260200190565b602060405180830381865afa158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd9190611ce8565b90506106f963ffffffff60b083901c16611726565b6000610d20610d1b60008612610d085785610d14565b610d1486600019611f56565b8585610f21565b61172e565b9050600084121561068857610d3481611d17565b949350505050565b6000610688610d656001600160a01b038416600160601b610d5e878383610cf2565b9190610cf2565b611740565b600080600080881315610da757610da061062b610d8986612710611fdb565b6001600160a01b038a169061ffff16612710610f21565b9050610dbc565b610db961062b610d8986612710612001565b90505b60405163e6ea159760e01b81526001600160a01b03878116600483015263ffffffff8b166024830152604482018a90528281166064830152600060848301819052919087169063e6ea15979060a40160e060405180830381865afa158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190612063565b90508060200151610e5c90611d17565b8160400151610e6a90611d17565b935093505050965096945050505050565b6000600160ff1b8210610ec05760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b60448201526064015b60405180910390fd5b5090565b60006001818080610ed5888561174b565b94509250610ee3878561174b565b94509150610ef1868561174b565b94509050610f03610d1b848484610f21565b945083610f1657610f1385611d17565b94505b505050509392505050565b6000808060001985870985870292508281108382030391505080600003610f5a5760008411610f4f57600080fd5b508290049050610688565b808411610f6657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b806001600160a01b03811681146110175760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b6044820152606401610eb7565b919050565b60006401000276a36001600160a01b03831610801590611058575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b611075576040516324c070df60e11b815260040160405180910390fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061111657607f810383901c9150611120565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461132057886001600160a01b0316611305826113b2565b6001600160a01b0316111561131a5781611322565b80611322565b815b9998505050505050505050565b600080826001600160a01b03166354f0f7d56040518163ffffffff1660e01b8152600401602060405180830381865afa158015611370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113949190611ce8565b905061068881600160801b6c0c9f2c9cd04674edea40000000610f21565b60008060008360020b126113c9578260020b6113d1565b8260020b6000035b9050620d89e88111156113f7576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361140e57600160801b611420565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611454576ffff97272373d413259a46990580e213a0260801c5b6004821615611473576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611492576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156114b1576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156114d0576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156114ef576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561150e576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561152e576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561154e576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561156e576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561158e576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156115ae576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156115ce576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156115ee576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561160e576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561162f576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561164f576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561166e576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561168b576b048a170391f7dc42444e8fa20260801c5b60008460020b13156116ac5780600019816116a8576116a8611d9c565b0490505b6401000000008106156116c05760016116c3565b60005b60ff16602082901c0192505050919050565b806001600160801b038116811461101757600080fd5b6000806117016001600160a01b03851684611775565b90506106f9816113b2565b63ffffffff81166000908152606460205260408120610c54565b600081610c54565b6000600160ff1b8210610ec057600080fd5b6000610c5482611991565b600080600084121561176a5791159161176384611d17565b915061176e565b8391505b5092909150565b60008163ffffffff1660000361179e57611797836001600160a01b03166119a8565b9050610c54565b60408051600280825260608201835260009260208301908036833701905050905082816000815181106117d3576117d36120f6565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110611802576118026120f6565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd9061184390849060040161210c565b600060405180830381865afa92505050801561188157506040513d6000823e601f3d908101601f1916820160405261187e91908101906121ee565b60015b6118f657836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156118c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e791906122ba565b509396506106fc945050505050565b60008260008151811061190b5761190b6120f6565b602002602001015183600181518110611926576119266120f6565b6020026020010151611938919061235c565b9050600061194c63ffffffff8816836123a2565b905060008260060b128015611972575061196c63ffffffff8816836123e0565b60060b15155b15611985578061198181612402565b9150505b9450610c549350505050565b6000808213610ec0576119a382611d17565b610c54565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156119e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0c91906122ba565b5093979650505050505050565b6001600160a01b0381168114611a2e57600080fd5b50565b600080600060608486031215611a4657600080fd5b8335611a5181611a19565b95602085013595506040909401359392505050565b63ffffffff81168114611a2e57600080fd5b61ffff81168114611a2e57600080fd5b8060020b8114611a2e57600080fd5b600080600080600060a08688031215611aaf57600080fd5b8535611aba81611a19565b94506020860135611aca81611a66565b93506040860135611ada81611a78565b92506060860135611aea81611a88565b91506080860135611afa81611a88565b809150509295509295909350565b60008060408385031215611b1b57600080fd5b823591506020830135611b2d81611a19565b809150509250929050565b8015158114611a2e57600080fd5b60008060408385031215611b5957600080fd5b8235611b6481611a19565b91506020830135611b2d81611b38565b67ffffffffffffffff81168114611a2e57600080fd5b600080600060608486031215611b9f57600080fd5b8335611baa81611a19565b9250602084013591506040840135611bc181611b74565b809150509250925092565b600080600080600080600080610100898b031215611be957600080fd5b88359750602089013596506040890135611c0281611a19565b95506060890135611c1281611a19565b94506080890135611c2281611a19565b935060a0890135611c3281611a19565b925060c0890135611c4281611a19565b915060e0890135611c5281611a19565b809150509295985092959890939650565b60008060408385031215611c7657600080fd5b8235611c8181611a19565b91506020830135611b2d81611a66565b600060208284031215611ca357600080fd5b813561068881611a19565b600060208284031215611cc057600080fd5b815161068881611a66565b600060208284031215611cdd57600080fd5b815161068881611a19565b600060208284031215611cfa57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201611d2c57611d2c611d01565b5060000390565b600060208284031215611d4557600080fd5b815161068881611b74565b600060208284031215611d6257600080fd5b815161068881611a78565b60008219821115611d8057611d80611d01565b500190565b600082821015611d9757611d97611d01565b500390565b634e487b7160e01b600052601260045260246000fd5b60008260020b80611dc557611dc5611d9c565b808360020b0791505092915050565b60008160020b8360020b6000821282627fffff03821381151615611dfa57611dfa611d01565b82627fffff19038212811615611e1257611e12611d01565b50019392505050565b60008160020b8360020b6000811281627fffff1901831281151615611e4257611e42611d01565b81627fffff018313811615611e5957611e59611d01565b5090039392505050565b600060208284031215611e7557600080fd5b815161068881611b38565b600082611e8f57611e8f611d9c565b500490565b60006001600160a01b0383811690831681811015611eb457611eb4611d01565b039392505050565b6000816000190483118215151615611ed657611ed6611d01565b500290565b84815260006020858184015260806040840152845180608085015260005b81811015611f155786810183015185820160a001528201611ef9565b81811115611f2757600060a083870101525b50601f01601f1916830160a0019150611f4d905060608301846001600160a01b03169052565b95945050505050565b60006001600160ff1b0381841382841380821686840486111615611f7c57611f7c611d01565b600160ff1b6000871282811687830589121615611f9b57611f9b611d01565b60008712925087820587128484161615611fb757611fb7611d01565b87850587128184161615611fcd57611fcd611d01565b505050929093029392505050565b600061ffff808316818516808303821115611ff857611ff8611d01565b01949350505050565b600061ffff83811690831681811015611eb457611eb4611d01565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561205b5761205b61201c565b604052919050565b600060e0828403121561207557600080fd5b60405160e0810181811067ffffffffffffffff821117156120985761209861201c565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a08301516120d781611a19565b60a082015260c08301516120ea81611a19565b60c08201529392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561214a57835163ffffffff1683529284019291840191600101612128565b50909695505050505050565b600067ffffffffffffffff8211156121705761217061201c565b5060051b60200190565b600082601f83011261218b57600080fd5b815160206121a061219b83612156565b612032565b82815260059290921b840181019181810190868411156121bf57600080fd5b8286015b848110156121e35780516121d681611a19565b83529183019183016121c3565b509695505050505050565b6000806040838503121561220157600080fd5b825167ffffffffffffffff8082111561221957600080fd5b818501915085601f83011261222d57600080fd5b8151602061223d61219b83612156565b82815260059290921b8401810191818101908984111561225c57600080fd5b948201945b8386101561228a5785518060060b811461227b5760008081fd5b82529482019490820190612261565b918801519196509093505050808211156122a357600080fd5b506122b08582860161217a565b9150509250929050565b600080600080600080600060e0888a0312156122d557600080fd5b87516122e081611a19565b60208901519097506122f181611a88565b604089015190965061230281611a78565b606089015190955061231381611a78565b608089015190945061232481611a78565b60a089015190935060ff8116811461233b57600080fd5b60c089015190925061234c81611b38565b8091505092959891949750929550565b60008160060b8360060b6000811281667fffffffffffff190183128115161561238757612387611d01565b81667fffffffffffff018313811615611e5957611e59611d01565b60008160060b8360060b806123b9576123b9611d9c565b667fffffffffffff198214600019821416156123d7576123d7611d01565b90059392505050565b60008260060b806123f3576123f3611d9c565b808360060b0791505092915050565b60008160020b627fffff19810361241b5761241b611d01565b600019019291505056fea164736f6c634300080e000a';

type LogicConstructorParams =
  | [linkLibraryAddresses: LogicLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class Logic__factory extends ContractFactory {
  constructor(...args: LogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Logic__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: LogicLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$f09208ef53137b379b85ea4a8d399069d8\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/SwapManager.sol:SwapManager']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Logic> {
    return super.deploy(overrides || {}) as Promise<Logic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Logic {
    return super.attach(address) as Logic;
  }
  override connect(signer: Signer): Logic__factory {
    return super.connect(signer) as Logic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogicInterface {
    return new utils.Interface(_abi) as LogicInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Logic {
    return new Contract(address, _abi, signerOrProvider) as Logic;
  }
}

export interface LogicLibraryAddresses {
  ['contracts/libraries/SwapManager.sol:SwapManager']: string;
}
