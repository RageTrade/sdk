/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../common';
import type {
  ChainlinkOracle,
  ChainlinkOracleInterface,
} from '../../../../../@ragetrade/core/contracts/oracles/ChainlinkOracle';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_aggregator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_flags',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: '_vTokenDecimals',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: '_vQuoteDecimals',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'aggregator',
        type: 'address',
      },
    ],
    name: 'IllegalAggregatorAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotEnoughHistory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SequencerOffline',
    type: 'error',
  },
  {
    inputs: [],
    name: 'aggregator',
    outputs: [
      {
        internalType: 'contract AggregatorV3Interface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainlinkFlags',
    outputs: [
      {
        internalType: 'contract FlagsInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'getTwapPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60c060405234801561001057600080fd5b50604051610b4a380380610b4a83398101604081905261002f916100eb565b61004b846001600160a01b03166100b160201b6101b11760201c565b156100705760405163091b998160e11b81526000600482015260240160405180910390fd5b600080546001600160a01b039586166001600160a01b031991821617909155600180549490951693169290921790925560ff9182166080521660a05261013f565b6001600160a01b03161590565b80516001600160a01b03811681146100d557600080fd5b919050565b805160ff811681146100d557600080fd5b6000806000806080858703121561010157600080fd5b61010a856100be565b9350610118602086016100be565b9250610126604086016100da565b9150610134606086016100da565b905092959194509250565b60805160a0516109e7610163600039600060c50152600061017401526109e76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063245a7bfc14610046578063dd86c10114610076578063e4440e0214610097575b600080fd5b600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61008961008436600461073d565b6100aa565b60405190815260200161006d565b600154610059906001600160a01b031681565b60006100bb8263ffffffff166101be565b90506101ab6100eb7f0000000000000000000000000000000000000000000000000000000000000000600a61085d565b6100f990600160801b61086c565b60008054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e919061088b565b610198907f00000000000000000000000000000000000000000000000000000000000000006108ae565b6101a390600a61085d565b8391906103e7565b92915050565b6001600160a01b03161590565b6001546000906001600160a01b031680156102955760006001600160a01b03821663357e47fe61020f60017fa438451d6458044c3c8cd2f6f31c91ac882a6d917fa1d50c2bc3074c4524952d6108d3565b60405160e083901b6001600160e01b031916815260609190911c6004820152602401602060405180830381865afa15801561024e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027291906108ea565b905080156102935760405163db502a6760e01b815260040160405180910390fd5b505b60008060006102a261049a565b919450925090504260006102b688836108d3565b90508715806102cc57506001600160501b038516155b806102d75750808311155b156102e85750919695505050505050565b60006102f484846108d3565b90506000610302828761086c565b905060008060008796505b896001600160501b03166000036103465784156103335761032e858561090c565b610335565b885b9d9c50505050505050505050505050565b61035160018b61092e565b995061035c8a61058e565b935091505080156103d7578582116103a15761037886886108d3565b9250610384838261086c565b61038e9085610956565b935061039a8386610956565b94506103d7565b6103ab82886108d3565b92506103b7838261086c565b6103c19085610956565b93506103cd8386610956565b945081965061030d565b83156103335761032e858561090c565b6000808060001985870985870292508281108382030391505080600003610420576000841161041557600080fd5b508290049050610493565b80841161042c57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008060008060008060008054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610518919061098a565b509350509250925060008212801561053757506001600160501b038316155b1561055557604051639ee522a960e01b815260040160405180910390fd5b600082121561057e5761057161056c60018561092e565b61058e565b9096509093509050610582565b8194505b91959394509092915050565b6000806000806000806105a087610699565b50935050925092505b6000821280156105c257506000836001600160501b0316115b15610657576105d260018461092e565b600054604051639a6fc8f560e01b81526001600160501b03831660048201529194506001600160a01b031690639a6fc8f59060240160a060405180830381865afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610648919061098a565b509194509092506105a9915050565b60008212801561066e57506001600160501b038316155b1561068c57604051639ee522a960e01b815260040160405180910390fd5b9196909550909350915050565b60008054604051639a6fc8f560e01b81526001600160501b038416600482015282918291829182916001600160a01b0390911690639a6fc8f59060240160a060405180830381865afa92505050801561070f575060408051601f3d908101601f1916820190925261070c9181019061098a565b60015b61072757506000935083925082915081905080610734565b9398509196509450925090505b91939590929450565b60006020828403121561074f57600080fd5b813563ffffffff8116811461049357600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156107b457816000190482111561079a5761079a610763565b808516156107a757918102915b93841c939080029061077e565b509250929050565b6000826107cb575060016101ab565b816107d8575060006101ab565b81600181146107ee57600281146107f857610814565b60019150506101ab565b60ff84111561080957610809610763565b50506001821b6101ab565b5060208310610133831016604e8410600b8410161715610837575081810a6101ab565b6108418383610779565b806000190482111561085557610855610763565b029392505050565b600061049360ff8416836107bc565b600081600019048311821515161561088657610886610763565b500290565b60006020828403121561089d57600080fd5b815160ff8116811461049357600080fd5b600060ff821660ff84168060ff038211156108cb576108cb610763565b019392505050565b6000828210156108e5576108e5610763565b500390565b6000602082840312156108fc57600080fd5b8151801515811461049357600080fd5b60008261092957634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160501b038381169083168181101561094e5761094e610763565b039392505050565b6000821982111561096957610969610763565b500190565b80516001600160501b038116811461098557600080fd5b919050565b600080600080600060a086880312156109a257600080fd5b6109ab8661096e565b94506020860151935060408601519250606086015191506109ce6080870161096e565b9050929550929590935056fea164736f6c634300080e000a';

type ChainlinkOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkOracle__factory extends ContractFactory {
  constructor(...args: ChainlinkOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aggregator: PromiseOrValue<string>,
    _flags: PromiseOrValue<string>,
    _vTokenDecimals: PromiseOrValue<BigNumberish>,
    _vQuoteDecimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainlinkOracle> {
    return super.deploy(
      _aggregator,
      _flags,
      _vTokenDecimals,
      _vQuoteDecimals,
      overrides || {}
    ) as Promise<ChainlinkOracle>;
  }
  override getDeployTransaction(
    _aggregator: PromiseOrValue<string>,
    _flags: PromiseOrValue<string>,
    _vTokenDecimals: PromiseOrValue<BigNumberish>,
    _vQuoteDecimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _aggregator,
      _flags,
      _vTokenDecimals,
      _vQuoteDecimals,
      overrides || {}
    );
  }
  override attach(address: string): ChainlinkOracle {
    return super.attach(address) as ChainlinkOracle;
  }
  override connect(signer: Signer): ChainlinkOracle__factory {
    return super.connect(signer) as ChainlinkOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkOracleInterface {
    return new utils.Interface(_abi) as ChainlinkOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkOracle {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkOracle;
  }
}
