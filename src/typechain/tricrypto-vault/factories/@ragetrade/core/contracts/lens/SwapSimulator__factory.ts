/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../common';
import type {
  SwapSimulator,
  SwapSimulatorInterface,
} from '../../../../../@ragetrade/core/contracts/lens/SwapSimulator';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'simulateSwap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'value1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value2',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
        ],
        internalType: 'struct SwapSimulator.SwapStepAndState[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwapOnVPool',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'value1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value2',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
        ],
        internalType: 'struct SwapSimulator.SwapStepAndState[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwapOnVPoolView',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'simulateSwapView',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b50613e80806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806304c4183d146100515780634aed8e0c1461007a578063e6ea15971461009c578063fbdeddde146100af575b600080fd5b61006461005f3660046133a1565b6100c2565b604051610071919061346d565b60405180910390f35b61008d6100883660046133a1565b6101d1565b60405161007193929190613576565b6100646100aa366004613633565b61049f565b61008d6100bd366004613633565b6105bc565b6100ca613242565b816001600160a01b03166000036101175783610104576100ff600173fffd8963efd1fc6a506488495d951d5263988d266136b1565b610114565b6101146401000276a360016136d9565b91505b8281600001818152505060008084121590506000886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d9190613704565b905061019d8287838b8b886106ea565b6101ad8987856000015187610791565b604085015260208401526101c58287838b8b88610e54565b50509695505050505050565b6101d9613242565b6101e1613291565b60606101ee6000806132d5565b836001600160a01b031660000361023b578561022857610223600173fffd8963efd1fc6a506488495d951d5263988d266136b1565b610238565b6102386401000276a360016136d9565b93505b848360000181815250506000896001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a99190613704565b90506102bd600087121588838c8c896106ea565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091528451610312906001600160a01b038d16908a9089610f646111bb565b6040890192909252602088019290925294509050610338600088121589848d8d8a610e54565b83516001600160a01b0390811660a087015260408083015190911660c087015260008054825160208083028201810190945281815292829084015b8282101561048b5760008481526020908190206040805161012081018252600a860290920180546001600160a01b03808216858501908152600160a01b808404600290810b6060808a0191909152600160b81b90950460ff1615156080808a0191909152600180880154861660a0808c01919091528389015460c0808d019190915260038a015460e0808e019190915260048b01546101008e0152968c528a519687018b5260058a0154875260068a0154878e015260078a01549788169a87019a909a529390950490910b948301949094526008850154938201939093526009909301546001600160801b0380821693850193909352600160801b900490911692820192909252828401529083529092019101610373565b505050509250505096509650969350505050565b6104a7613242565b60006104bc6001600160a01b0388168761121e565b90506105b1816020015182604001516001600160a01b03166386c8e9a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190613704565b83604001516001600160a01b031663fca6fbf26040518163ffffffff1660e01b8152600401602060405180830381865afa15801561056e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105929190613704565b60008912876105a9576105a48a613721565b6105ab565b895b896100c2565b979650505050505050565b6105c4613242565b6105cc613291565b606060006105e36001600160a01b038a168961121e565b90506106d8816020015182604001516001600160a01b03166386c8e9a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106539190613704565b83604001516001600160a01b031663fca6fbf26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b99190613704565b60008b12896106d0576106cb8c613721565b6106d2565b8b5b8b6101d1565b93509350935050955095509592505050565b851561074b578415610709578051610702908561144d565b8152610789565b80516107189060028585611498565b6080830181905260608301829052825161073e9290916107379161373d565b60016115c3565b808252610702908561144d565b84156107895780516107609060018585611498565b6080830181905260608301829052825161078692909161077f9161373d565b60006115c3565b81525b505050505050565b600080836000036107ce5760405162461bcd60e51b8152602060048201526002602482015261415360f01b60448201526064015b60405180910390fd5b600080876001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190613779565b5050505050915091508661088357816001600160a01b0316856001600160a01b031611801561087e575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038616105b6108b1565b816001600160a01b0316856001600160a01b03161080156108b157506401000276a36001600160a01b038616115b6108e35760405162461bcd60e51b815260206004820152600360248201526214d41360ea1b60448201526064016107c5565b60006040518060a00160405280846001600160a01b031681526020018360020b81526020018a6001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a9190613825565b6001600160801b031681526020018a6001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109da9190613704565b62ffffff1681526020018a6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a469190613840565b600290810b9091526040805160a0810182528a81526000602080830182905285516001600160a01b03168385015285015190930b6060820152908301516001600160801b031660808201529192508813905b805115801590610abe5750876001600160a01b031681604001516001600160a01b031614155b15610e0f576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408201516001600160a01b03908116825260608301516080860151610b2b928f1691635339c296918f611607565b1515604083015260020b60208201819052620d89e7191315610b5657620d89e7196020820152610b8a565b610b63620d89e71961385b565b60020b816020015160020b1315610b8a57610b81620d89e71961385b565b60020b60208201525b610b9781602001516117f4565b6001600160a01b031660608201526040820151610c0c908c610bd1578a6001600160a01b031683606001516001600160a01b031611610beb565b8a6001600160a01b031683606001516001600160a01b0316105b610bf9578260600151610bfb565b8a5b608085015185516060890151611b17565b60c085015260a084015260808301526001600160a01b031660408301528215610c6e57610c428160c00151826080015101611d09565b825103825260a0810151610c5590611d09565b82602001818151610c66919061387d565b905250610cb1565b610c7b8160a00151611d09565b825101825260c08101516080820151610c9c91610c979161373d565b611d09565b82602001818151610cad91906138bc565b9052505b80606001516001600160a01b031682604001516001600160a01b031603610dd257806040015115610dad57602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038e169063f30dba939060240161010060405180830381865afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5291906138fd565b5050505050509150508b15610d65576000035b600081600f0b12610d8557808360800151610d8091906139a3565b610d9d565b610d8e816139c5565b8360800151610d9d91906139eb565b6001600160801b03166080840152505b8a610dbc578060200151610dc5565b60018160200151035b60020b6060830152610e09565b80600001516001600160a01b031682604001516001600160a01b031614610e0957610e008260400151611d1f565b60020b60608301525b50610a98565b8115158a151514610e305760208101518151610e2b908b61387d565b610e42565b8051610e3c908a61387d565b81602001515b909c909b509950505050505050505050565b8515610ede578415610eb157610e6e816020015185612032565b60208201526040810151610e859060008585611498565b60808301819052606083018290526040830151610ea79290916107379161373d565b6040820152610789565b610ebf816040015185612032565b6040820181905260808201516060830151610ea7929161077f9161373d565b84610f2757610ef1816040015185612032565b60408201819052610f059060008585611498565b60808301819052606083018290526040830151610ea792909161077f9161373d565b610f35816020015185612032565b6020820152604081015160808201516060830151610f5792916107379161373d565b6040820152505050505050565b60408051808201825291825260208083019384526000805460018101825590805292518051600a9094027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638101805483850151848701511515600160b81b0260ff60b81b1962ffffff928316600160a01b9081026001600160b81b03199586166001600160a01b039c8d16171791909116919091179093556060808601517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56486018054918b166001600160a01b0319929092169190911790556080808701517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56587015560a0808801517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56688015560c0978801517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5678801559a5180517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e568880155978801517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e569870155978701517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56a86018054928901519093169094029216929097169190911717909455918101517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56b840155928301519201516001600160801b03908116600160801b029216919091177f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56c909101555050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905281906111fd613291565b61120b89898989858a612059565b919b909a50909850909650945050505050565b604080516080808201835260008083526020808401829052838501829052845160e081018652828152908101829052938401819052606080850182905291840181905260a0840181905260c0840152810191909152600061127e83612807565b60408051600480825260a08201909252919250600091906020820160808036833701905050905081816000815181106112b9576112b9613a21565b602090810291909101015260018201816001815181106112db576112db613a21565b602090810291909101015260028201816002815181106112fd576112fd613a21565b6020908102919091010152600382018160038151811061131f5761131f613a21565b602090810291909101015260405163dbd035ff60e01b81526001600160a01b0386169063dbd035ff90611356908490600401613a37565b600060405180830381865afa158015611373573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261139b9190810190613a7b565b90506113c0816000815181106113b3576113b3613a21565b6020026020010151612823565b6001600160a01b0316835280516113e490829060019081106113b3576113b3613a21565b6001600160a01b03166020840152805161140b90829060029081106113b3576113b3613a21565b6001600160a01b03166040840152805161143f908290600390811061143257611432613a21565b602002602001015161282e565b606084015250909392505050565b60008061145d83620f4240613b39565b60020b61146f62ffffff851686613b55565b6114799190613bf0565b6114849060016138bc565b905061149081856138bc565b949350505050565b60008060006114a687612902565b905060018660028111156114bc576114bc613c1e565b036114fc57836114cf86620f4240613b39565b6114d99190613b39565b62ffffff166114eb82620f4240613c34565b6114f59190613c53565b905061154c565b600286600281111561151057611510613c1e565b0361154c578361152386620f4240613c67565b61152d9190613c67565b62ffffff1661153f82620f4240613c34565b6115499190613c53565b90505b6000620f424061155c8688613c67565b61156b9062ffffff1684613c34565b6115759190613c53565b61158090600161373d565b9050620f424061159562ffffff881684613c34565b61159f9190613c53565b6115aa90600161373d565b93506115b68482613c85565b9250505094509492505050565b6000808260018111156115d8576115d8613c1e565b1460008513036115f3576115ec83856138bc565b9050611600565b6115fd838561387d565b90505b9392505050565b60008060008460020b8660020b8161162157611621613bda565b05905060008660020b12801561164e57508460020b8660020b8161164757611647613bda565b0760020b15155b1561165857600019015b8315611723576040516001600160e01b031960e089901b168152600282900b600881901d600181810b600485015290926101009092079160ff83169190911b8001600019019060009082908d908d90602401602060405180830381865afa1580156116c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116eb9190613c9c565b16801515965090508561170557888360ff16860302611718565b8861170f82612919565b840360ff168603025b9650505050506117e9565b60405160e088901b6001600160e01b0319168152600182810160020b600881901d80830b6004850152926101009091079160ff83161b60001901199060009082908d908d90602401602060405180830381865afa158015611788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ac9190613c9c565b1680151596509050856117cc57888360ff0360ff168660010101026117e2565b88836117d7836129ba565b0360ff168660010101025b9650505050505b509550959350505050565b60008060008360020b1261180b578260020b611813565b8260020b6000035b9050620d89e8811115611839576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361185057600160801b611862565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611896576ffff97272373d413259a46990580e213a0260801c5b60048216156118b5576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156118d4576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156118f3576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611912576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611931576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611950576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611970576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611990576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156119b0576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156119d0576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156119f0576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611a10576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611a30576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611a50576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611a71576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611a91576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611ab0576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611acd576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611aee578060001981611aea57611aea613bda565b0490505b640100000000810615611b02576001611b05565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590611b9c576000611b508989620f42400362ffffff16620f4240612aa4565b905082611b6957611b648c8c8c6001612b56565b611b76565b611b768b8d8c6001612bcf565b9550858110611b87578a9650611b96565b611b938c8b8386612c7b565b96505b50611be6565b81611bb357611bae8b8b8b6000612bcf565b611bc0565b611bc08a8c8b6000612b56565b9350838860000310611bd457899550611be6565b611be38b8a8a60000385612cc7565b95505b6001600160a01b038a8116908716148215611c4957808015611c055750815b611c1b57611c16878d8c6001612bcf565b611c1d565b855b9550808015611c2a575081155b611c4057611c3b878d8c6000612b56565b611c42565b845b9450611c93565b808015611c535750815b611c6957611c648c888c6001612b56565b611c6b565b855b9550808015611c78575081155b611c8e57611c898c888c6000612bcf565b611c90565b845b94505b81158015611ca357508860000385115b15611caf578860000394505b818015611cce57508a6001600160a01b0316876001600160a01b031614155b15611cdd578589039350611cfa565b611cf7868962ffffff168a620f42400362ffffff16612d13565b93505b50505095509550955095915050565b6000600160ff1b8210611d1b57600080fd5b5090565b60006401000276a36001600160a01b03831610801590611d5b575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b611d78576040516324c070df60e11b815260040160405180910390fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110611e1957607f810383901c9150611e23565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461202357886001600160a01b0316612008826117f4565b6001600160a01b0316111561201d5781612025565b80612025565b815b9998505050505050505050565b6000620f42406120428382613b39565b61204f9060020b85613b55565b6116009190613bf0565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290528190866000036120b457604051631f2a200560e01b815260040160405180910390fd5b84516001600160a01b031660000361214857886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121289190613779565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b03166000036121ce57886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561219b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bf9190613825565b6001600160801b031660608601525b846080015160020b6000036122bb57886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561221b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223f9190613704565b62ffffff1660a0860152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa15801561228e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b29190613840565b60020b60808601525b876123055784600001516001600160a01b0316866001600160a01b03161080612300575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b612336565b84600001516001600160a01b0316866001600160a01b0316118061233657506401000276a36001600160a01b038716105b1561235f576040516328da8b5760e11b81526001600160a01b03871660048201526024016107c5565b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b8151158015906123ef5750866001600160a01b031682604001516001600160a01b031614155b156127c1576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b0390811682526060840151608089015161245c928e1691635339c296918e612d53565b1515604083015260020b60208201819052620d89e719131561248757620d89e71960208201526124bb565b612494620d89e71961385b565b60020b816020015160020b13156124bb576124b2620d89e71961385b565b60020b60208201525b6124c881602001516117f4565b6001600160a01b03166060820152604083015161253d908b61250257896001600160a01b031683606001516001600160a01b03161161251c565b896001600160a01b031683606001516001600160a01b0316105b61252a57826060015161252c565b895b60c0860151865160a08c0151611b17565b60c085015260a084015260808301526001600160a01b0316604084015281156125b0576125778160c001518260800151610c97919061373d565b8351849061258690839061387d565b90525060a081015161259790611d09565b83602001516125a6919061387d565b60208401526125fb565b6125bd8160a00151611d09565b835184906125cc9083906138bc565b90525060c081015160808201516125e691610c979161373d565b83602001516125f591906138bc565b60208401525b60c08301516001600160801b0316156126435761262e8160c00151600160801b8560c001516001600160801b0316612aa4565b8360800181815161263f919061373d565b9052505b6126538a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b0316036127845780604001511561275757602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa1580156126d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f491906138fd565b5050505050509150508a1561270f5761270c816139c5565b90505b600081600f0b1261272f57808460c0015161272a91906139a3565b612747565b612738816139c5565b8460c0015161274791906139eb565b6001600160801b031660c0850152505b89612766578060200151612777565b600181602001516127779190613cb5565b60020b60608401526127bb565b80600001516001600160a01b031683604001516001600160a01b0316146127bb576127b28360400151611d1f565b60020b60608401525b506123c9565b801515891515146127e257602082015182516127dd908a61387d565b6127f4565b81516127ee908961387d565b82602001515b909b909a50919850909650505050505050565b63ffffffff811660009081526064602052604081205b92915050565b600061281d82612fa2565b6040805160e08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c08301829052835180820185529190915282519081019092528282529061288781612faa565b61ffff16825261289681612faa565b61ffff1660208301526128a881612faa565b61ffff1660408301526128ba81612fc0565b63ffffffff1660608301526128ce81612fcf565b151560808301526128de81612fcf565b151560a08301526128ee81612fe3565b6001600160a01b031660c083015250919050565b6000808213611d1b5761291482613721565b61281d565b600080821161292757600080fd5b600160801b821061293a57608091821c91015b68010000000000000000821061295257604091821c91015b640100000000821061296657602091821c91015b62010000821061297857601091821c91015b610100821061298957600891821c91015b6010821061299957600491821c91015b600482106129a957600291821c91015b600282106129b5576001015b919050565b60008082116129c857600080fd5b5060ff6001600160801b038216156129e357607f19016129eb565b608082901c91505b67ffffffffffffffff821615612a0457603f1901612a0c565b604082901c91505b63ffffffff821615612a2157601f1901612a29565b602082901c91505b61ffff821615612a3c57600f1901612a44565b601082901c91505b60ff821615612a565760071901612a5e565b600882901c91505b600f821615612a705760031901612a78565b600482901c91505b6003821615612a8a5760011901612a92565b600282901c91505b60018216156129b55760001901919050565b6000808060001985870985870292508281108382030391505080600003612add5760008411612ad257600080fd5b508290049050611600565b808411612ae957600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000836001600160a01b0316856001600160a01b03161115612b76579293925b81612ba357612b9e836001600160801b03168686036001600160a01b0316600160601b612aa4565b612bc6565b612bc6836001600160801b03168686036001600160a01b0316600160601b612d13565b95945050505050565b6000836001600160a01b0316856001600160a01b03161115612bef579293925b600160601b600160e01b03606084901b166001600160a01b038686038116908716612c1957600080fd5b83612c4f57866001600160a01b0316612c3c8383896001600160a01b0316612aa4565b81612c4957612c49613bda565b046105b1565b6105b1612c668383896001600160a01b0316612d13565b886001600160a01b0316808204910615150190565b600080856001600160a01b031611612c9257600080fd5b6000846001600160801b031611612ca857600080fd5b81612cba57612b9e8585856001612ff2565b612bc685858560016130d8565b600080856001600160a01b031611612cde57600080fd5b6000846001600160801b031611612cf457600080fd5b81612d0657612b9e85858560006130d8565b612bc68585856000612ff2565b6000612d20848484612aa4565b905060008280612d3257612d32613bda565b8486091115611600576000198110612d4957600080fd5b6001019392505050565b60008080612d618587613cfd565b905060008660020b128015612d815750612d7b8587613d37565b60020b15155b15612d945780612d9081613d59565b9150505b8315612e8e57600080612da6836131c8565b90925090506000600160ff831681901b90612dc19082613c85565b612dcb919061373d565b90506000818c8c866040518263ffffffff1660e01b8152600401612df8919060019190910b815260200190565b602060405180830381865afa158015612e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e399190613c9c565b168015159650905085612e635788612e5460ff851687613cb5565b612e5e9190613d7c565b611718565b88612e6d82612919565b612e779085613e09565b612e849060ff1687613cb5565b6117189190613d7c565b600080612ea4612e9f846001613e2c565b6131c8565b90925090506000612ebc600160ff841681901b613c85565b1990506000818c8c866040518263ffffffff1660e01b8152600401612eea919060019190910b815260200190565b602060405180830381865afa158015612f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f2b9190613c9c565b168015159650905085612f6b5788612f448460ff613e09565b60ff16612f52876001613e2c565b612f5c9190613e2c565b612f669190613d7c565b6117e2565b8883612f76836129ba565b612f809190613e09565b60ff16612f8e876001613e2c565b612f989190613e2c565b6117e29190613d7c565b60008161281d565b6000612fb982600001516131e5565b9092525090565b6000612fb982600001516131ff565b805160009060ff811615159060081c612fb9565b6000612fb98260000151613214565b600081156130645760006001600160a01b038411156130285761302384600160601b876001600160801b0316612aa4565b61303f565b61303f6001600160801b038616606086901b613c53565b905061305c613057826001600160a01b03891661373d565b61322c565b915050611490565b60006001600160a01b038411156130925761308d84600160601b876001600160801b0316612d13565b6130af565b6130af606085901b6001600160801b038716808204910615150190565b905080866001600160a01b0316116130c657600080fd5b6001600160a01b038616039050611490565b6000826000036130e9575083611490565b600160601b600160e01b03606085901b16821561317b576001600160a01b0386168481029085828161311d5761311d613bda565b040361314d5781810182811061314b5761314183896001600160a01b031683612d13565b9350505050611490565b505b5061305c81856131666001600160a01b038a1683613c53565b613170919061373d565b808204910615150190565b6001600160a01b0386168481029085828161319857613198613bda565b041480156131a557508082115b6131ae57600080fd5b808203613141613057846001600160a01b038b1684612d13565b600281900b60081d60006131de61010084613d37565b9050915091565b6000808061ffff8416601085901c5b909590945092505050565b6000808063ffffffff8416602085901c6131f4565b600080806001600160a01b03841660a085901c6131f4565b806001600160a01b03811681146129b557600080fd5b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b50805460008255600a02906000526020600020908101906132f691906132f9565b50565b5b80821115611d1b5780546001600160c01b03191681556001810180546001600160a01b0319169055600060028201819055600382018190556004820181905560058201819055600682018190556007820180546001600160b81b0319169055600882018190556009820155600a016132fa565b6001600160a01b03811681146132f657600080fd5b62ffffff811681146132f657600080fd5b80151581146132f657600080fd5b60008060008060008060c087890312156133ba57600080fd5b86356133c58161336d565b955060208701356133d581613382565b945060408701356133e581613382565b935060608701356133f581613393565b92506080870135915060a087013561340c8161336d565b809150509295509295509295565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a08101516001600160a01b0380821660a08501528060c08401511660c085015250505050565b60e0810161281d828461341a565b600081518084526020808501945080840160005b8381101561356b578151805180516001600160a01b039081168a528582015160020b868b01526040808301511515908b0152606080830151909116908a0152608080820151908a015260a080820151908a015260c0908101519089015283015161355660e089018280518252602081015160208301526001600160a01b036040820151166040830152606081015160020b60608301526080810151608083015260a08101516001600160801b0380821660a08501528060c08401511660c085015250505050565b506101c096909601959082019060010161348f565b509495945050505050565b6000610200613585838761341a565b84516001600160a01b031660e0840152602085015160020b610100840152604085015160ff1661012084015260608501516001600160801b0381166101408501525060808501516135dc61016085018260020b9052565b5060a085015162ffffff1661018084015260c08501516101a084015260e08501516101c08401526101e083018190526136178184018561347b565b9695505050505050565b63ffffffff811681146132f657600080fd5b600080600080600060a0868803121561364b57600080fd5b85356136568161336d565b9450602086013561366681613621565b935060408601359250606086013561367d8161336d565b9150608086013561368d81613393565b809150509295509295909350565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b03838116908316818110156136d1576136d161369b565b039392505050565b60006001600160a01b038083168185168083038211156136fb576136fb61369b565b01949350505050565b60006020828403121561371657600080fd5b815161160081613382565b6000600160ff1b82016137365761373661369b565b5060000390565b600082198211156137505761375061369b565b500190565b8051600281900b81146129b557600080fd5b805161ffff811681146129b557600080fd5b600080600080600080600060e0888a03121561379457600080fd5b875161379f8161336d565b96506137ad60208901613755565b95506137bb60408901613767565b94506137c960608901613767565b93506137d760808901613767565b925060a088015160ff811681146137ed57600080fd5b60c08901519092506137fe81613393565b8091505092959891949750929550565b80516001600160801b03811681146129b557600080fd5b60006020828403121561383757600080fd5b6116008261380e565b60006020828403121561385257600080fd5b61160082613755565b60008160020b627fffff1981036138745761387461369b565b60000392915050565b60008083128015600160ff1b85018412161561389b5761389b61369b565b6001600160ff1b03840183138116156138b6576138b661369b565b50500390565b600080821280156001600160ff1b03849003851316156138de576138de61369b565b600160ff1b83900384128116156138f7576138f761369b565b50500190565b600080600080600080600080610100898b03121561391a57600080fd5b6139238961380e565b9750602089015180600f0b811461393957600080fd5b80975050604089015195506060890151945060808901518060060b811461395f57600080fd5b60a08a01519094506139708161336d565b60c08a015190935061398181613621565b60e08a015190925061399281613393565b809150509295985092959890939650565b60006001600160801b038083168185168083038211156136fb576136fb61369b565b600081600f0b6f7fffffffffffffffffffffffffffffff1981036138745761387461369b565b60006001600160801b03838116908316818110156136d1576136d161369b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b81811015613a6f57835183529284019291840191600101613a53565b50909695505050505050565b60006020808385031215613a8e57600080fd5b825167ffffffffffffffff80821115613aa657600080fd5b818501915085601f830112613aba57600080fd5b815181811115613acc57613acc613a0b565b8060051b604051601f19603f83011681018181108582111715613af157613af1613a0b565b604052918252848201925083810185019188831115613b0f57600080fd5b938501935b82851015613b2d57845184529385019392850192613b14565b98975050505050505050565b600062ffffff838116908316818110156136d1576136d161369b565b60006001600160ff1b0381841382841380821686840486111615613b7b57613b7b61369b565b600160ff1b6000871282811687830589121615613b9a57613b9a61369b565b60008712925087820587128484161615613bb657613bb661369b565b87850587128184161615613bcc57613bcc61369b565b505050929093029392505050565b634e487b7160e01b600052601260045260246000fd5b600082613bff57613bff613bda565b600160ff1b821460001984141615613c1957613c1961369b565b500590565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615613c4e57613c4e61369b565b500290565b600082613c6257613c62613bda565b500490565b600062ffffff8083168185168083038211156136fb576136fb61369b565b600082821015613c9757613c9761369b565b500390565b600060208284031215613cae57600080fd5b5051919050565b60008160020b8360020b6000811281627fffff1901831281151615613cdc57613cdc61369b565b81627fffff018313811615613cf357613cf361369b565b5090039392505050565b60008160020b8360020b80613d1457613d14613bda565b627fffff19821460001982141615613d2e57613d2e61369b565b90059392505050565b60008260020b80613d4a57613d4a613bda565b808360020b0791505092915050565b60008160020b627fffff198103613d7257613d7261369b565b6000190192915050565b60008160020b8360020b627fffff600082136000841383830485118282161615613da857613da861369b565b627fffff196000851282811687830587121615613dc757613dc761369b565b60008712925085820587128484161615613de357613de361369b565b85850587128184161615613df957613df961369b565b5050509290910295945050505050565b600060ff821660ff841680821015613e2357613e2361369b565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615613e5257613e5261369b565b82627fffff19038212811615613e6a57613e6a61369b565b5001939250505056fea164736f6c634300080e000a';

type SwapSimulatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapSimulatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapSimulator__factory extends ContractFactory {
  constructor(...args: SwapSimulatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapSimulator> {
    return super.deploy(overrides || {}) as Promise<SwapSimulator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapSimulator {
    return super.attach(address) as SwapSimulator;
  }
  override connect(signer: Signer): SwapSimulator__factory {
    return super.connect(signer) as SwapSimulator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapSimulatorInterface {
    return new utils.Interface(_abi) as SwapSimulatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapSimulator {
    return new Contract(address, _abi, signerOrProvider) as SwapSimulator;
  }
}
