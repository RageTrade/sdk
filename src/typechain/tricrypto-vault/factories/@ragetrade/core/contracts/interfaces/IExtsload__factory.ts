/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, ContractRunner } from 'ethers';
import type {
  IExtsload,
  IExtsloadInterface,
} from '../../../../../@ragetrade/core/contracts/interfaces/IExtsload';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'value',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IExtsload__factory {
  static readonly abi = _abi;
  static createInterface(): IExtsloadInterface {
    return new Interface(_abi) as IExtsloadInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IExtsload {
    return new Contract(address, _abi, runner) as unknown as IExtsload;
  }
}
