/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  InsuranceFund,
  InsuranceFundInterface,
} from '../../../../../../@ragetrade/core/contracts/protocol/insurancefund/InsuranceFund';

const _abi = [
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_settlementToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_clearingHouse',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settlementToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611552806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063379607f5116100a257806395d89b411161007157806395d89b411461023a578063a457c2d714610242578063a9059cbb14610255578063b6b55f2514610268578063dd62ed3e1461027b57600080fd5b8063379607f5146101d857806339509351146101eb57806370a08231146101fe5780637b9e618d1461022757600080fd5b80632016a0d2116100de5780632016a0d21461018e57806323b872dd146101a35780632e1a7d4d146101b6578063313ce567146101c957600080fd5b806306fdde0314610110578063095ea7b31461012e5780630af968001461015157806318160ddd1461017c575b600080fd5b61011861028e565b6040516101259190611193565b60405180910390f35b61014161013c3660046111db565b610320565b6040519015158152602001610125565b606654610164906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b6035545b604051908152602001610125565b6101a161019c366004611250565b610338565b005b6101416101b13660046112e5565b610459565b6101a16101c4366004611326565b61047f565b60405160128152602001610125565b6101a16101e6366004611326565b61053b565b6101416101f93660046111db565b610580565b61018061020c36600461133f565b6001600160a01b031660009081526033602052604090205490565b606554610164906001600160a01b031681565b6101186105a2565b6101416102503660046111db565b6105b1565b6101416102633660046111db565b61063c565b6101a1610276366004611326565b61064a565b61018061028936600461135c565b610719565b60606036805461029d90611395565b80601f01602080910402602001604051908101604052809291908181526020018280546102c990611395565b80156103165780601f106102eb57610100808354040283529160200191610316565b820191906000526020600020905b8154815290600101906020018083116102f957829003601f168201915b5050505050905090565b60003361032e818585610744565b5060019392505050565b60006103446001610869565b9050801561035c576000805461ff0019166101001790555b606580546001600160a01b03808a1673ffffffffffffffffffffffffffffffffffffffff19928316179092556066805492891692909116919091179055604080516020601f870181900481028201810190925285815261040a91879087908190840183828082843760009201919091525050604080516020601f890181900481028201810190925287815292508791508690819084018382808284376000920191909152506108f192505050565b8015610450576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600033610467858285610926565b61047285858561099a565b60019150505b9392505050565b6065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec91906113cf565b905060006104f960355490565b905060008161050884866113fe565b610512919061141d565b905061051e3385610b68565b606554610535906001600160a01b03163383610cb3565b50505050565b6066546001600160a01b0316331461056657604051636bd1573560e11b815260040160405180910390fd5b60655461057d906001600160a01b03163383610cb3565b50565b60003361032e8185856105938383610719565b61059d919061143f565b610744565b60606037805461029d90611395565b600033816105bf8286610719565b9050838110156106245760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6106318286868403610744565b506001949350505050565b60003361032e81858561099a565b6065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b791906113cf565b905060006106c460355490565b905060008115806106d3575082155b156106df5750826106f7565b826106ea83866113fe565b6106f4919061141d565b90505b60655461070f906001600160a01b0316333087610d16565b6105353382610d4e565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166107a65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161061b565b6001600160a01b0382166108075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161061b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60008054610100900460ff16156108b0578160ff16600114801561088c5750303b155b6108a85760405162461bcd60e51b815260040161061b90611457565b506000919050565b60005460ff8084169116106108d75760405162461bcd60e51b815260040161061b90611457565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff166109185760405162461bcd60e51b815260040161061b906114a5565b6109228282610e2d565b5050565b60006109328484610719565b90506000198114610535578181101561098d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161061b565b6105358484848403610744565b6001600160a01b0383166109fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161061b565b6001600160a01b038216610a605760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161061b565b6001600160a01b03831660009081526033602052604090205481811015610ad85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161061b565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610b0f90849061143f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b5b91815260200190565b60405180910390a3610535565b6001600160a01b038216610bc85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161061b565b6001600160a01b03821660009081526033602052604090205481811015610c3c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161061b565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610c6b9084906114f0565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161085c565b505050565b6040516001600160a01b038316602482015260448101829052610cae90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e7b565b6040516001600160a01b03808516602483015283166044820152606481018290526105359085906323b872dd60e01b90608401610cdf565b6001600160a01b038216610da45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161061b565b8060356000828254610db6919061143f565b90915550506001600160a01b03821660009081526033602052604081208054839290610de390849061143f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff16610e545760405162461bcd60e51b815260040161061b906114a5565b8151610e679060369060208501906110ce565b508051610cae9060379060208401906110ce565b6000610ed0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f4d9092919063ffffffff16565b805190915015610cae5780806020019051810190610eee9190611507565b610cae5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161061b565b6060610f5c8484600085610f64565b949350505050565b606082471015610fc55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161061b565b6001600160a01b0385163b61101c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161061b565b600080866001600160a01b031685876040516110389190611529565b60006040518083038185875af1925050503d8060008114611075576040519150601f19603f3d011682016040523d82523d6000602084013e61107a565b606091505b509150915061108a828286611095565b979650505050505050565b606083156110a4575081610478565b8251156110b45782518084602001fd5b8160405162461bcd60e51b815260040161061b9190611193565b8280546110da90611395565b90600052602060002090601f0160209004810192826110fc5760008555611142565b82601f1061111557805160ff1916838001178555611142565b82800160010185558215611142579182015b82811115611142578251825591602001919060010190611127565b5061114e929150611152565b5090565b5b8082111561114e5760008155600101611153565b60005b8381101561118257818101518382015260200161116a565b838111156105355750506000910152565b60208152600082518060208401526111b2816040850160208701611167565b601f01601f19169190910160400192915050565b6001600160a01b038116811461057d57600080fd5b600080604083850312156111ee57600080fd5b82356111f9816111c6565b946020939093013593505050565b60008083601f84011261121957600080fd5b50813567ffffffffffffffff81111561123157600080fd5b60208301915083602082850101111561124957600080fd5b9250929050565b6000806000806000806080878903121561126957600080fd5b8635611274816111c6565b95506020870135611284816111c6565b9450604087013567ffffffffffffffff808211156112a157600080fd5b6112ad8a838b01611207565b909650945060608901359150808211156112c657600080fd5b506112d389828a01611207565b979a9699509497509295939492505050565b6000806000606084860312156112fa57600080fd5b8335611305816111c6565b92506020840135611315816111c6565b929592945050506040919091013590565b60006020828403121561133857600080fd5b5035919050565b60006020828403121561135157600080fd5b8135610478816111c6565b6000806040838503121561136f57600080fd5b823561137a816111c6565b9150602083013561138a816111c6565b809150509250929050565b600181811c908216806113a957607f821691505b6020821081036113c957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156113e157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611418576114186113e8565b500290565b60008261143a57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611452576114526113e8565b500190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082821015611502576115026113e8565b500390565b60006020828403121561151957600080fd5b8151801515811461047857600080fd5b6000825161153b818460208701611167565b919091019291505056fea164736f6c634300080e000a';

type InsuranceFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsuranceFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsuranceFund__factory extends ContractFactory {
  constructor(...args: InsuranceFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InsuranceFund> {
    return super.deploy(overrides || {}) as Promise<InsuranceFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InsuranceFund {
    return super.attach(address) as InsuranceFund;
  }
  override connect(signer: Signer): InsuranceFund__factory {
    return super.connect(signer) as InsuranceFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsuranceFundInterface {
    return new utils.Interface(_abi) as InsuranceFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InsuranceFund {
    return new Contract(address, _abi, signerOrProvider) as InsuranceFund;
  }
}
