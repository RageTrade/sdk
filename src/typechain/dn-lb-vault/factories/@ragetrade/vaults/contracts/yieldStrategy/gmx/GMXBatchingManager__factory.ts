/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../../common';
import type {
  GMXBatchingManager,
  GMXBatchingManagerInterface,
} from '../../../../../../@ragetrade/vaults/contracts/yieldStrategy/gmx/GMXBatchingManager';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotStakingManager',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'currentValue',
        type: 'bool',
      },
    ],
    name: 'InvalidSetDepositPaused',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'InvalidVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultAlreadyAdded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultsLimitExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'VaultAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'VaultDeposit',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'addVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'glpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'glpBalanceAllVaults',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
    ],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_stakingManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'isVaultValid',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalGlp',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IGMXBatchingManager.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'roundGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingManagerGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'glpBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IGMXBatchingManager.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: '',
        type: 'address',
      },
    ],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultCount',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'vaults',
    outputs: [
      {
        internalType: 'contract IERC4626',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611d30806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063a7c6a10011610097578063c5384e6b11610071578063c5384e6b14610516578063da5678bd14610529578063dda07f42146105be578063f2fde38b146105ea57600080fd5b8063a7c6a100146104c8578063aced1661146104f0578063b2a83bd31461050357600080fd5b80638da5cb5b116100d35780638da5cb5b14610467578063996cba681461047857806399c6d2de1461048b578063a7b23fcf1461049e57600080fd5b8063715018a614610439578063748747e6146104415780638c64ea4a1461045457600080fd5b80633ca7de9211610166578063557ab43111610140578063557ab431146103da5780635c975abb146103ed57806369026e88146104045780636b03787c1461040c57600080fd5b80633ca7de92146102ce578063436d8039146103185780635157ced5146103d257600080fd5b806322828cc2116101a257806322828cc21461024a578063256b5a02146102755780632a906a4514610288578063361ed04a1461029157600080fd5b80631459457a146101c9578063180282b3146101de57806320d9caad146101e6575b600080fd5b6101dc6101d73660046119f9565b6105fd565b005b6101dc61072d565b6102376101f4366004611a6a565b6001600160a01b0391821660009081526101016020908152604080832093909416825260029092019091522060010154600160801b90046001600160801b031690565b6040519081526020015b60405180910390f35b60fc5461025d906001600160a01b031681565b6040516001600160a01b039091168152602001610241565b6101dc610283366004611aa3565b610859565b61023760fd5481565b6102b961029f366004611aa3565b610101602052600090815260409020805460019091015482565b60408051928352602083019190915201610241565b6102376102dc366004611a6a565b6001600160a01b03918216600090815261010160209081526040808320939094168252600290920190915220600101546001600160801b031690565b61039f610326366004611a6a565b6040805160608082018352600080835260208084018290529284018190526001600160a01b039586168152610101835283812094909516855260029093018152928190208151928301825280548352600101546001600160801b0380821694840194909452600160801b90049092169181019190915290565b60408051825181526020808401516001600160801b03908116918301919091529282015190921690820152606001610241565b6101dc610a19565b6102376103e8366004611aa3565b610a4c565b60655460ff165b6040519015158152602001610241565b6101dc610ad0565b61023761041a366004611aa3565b6001600160a01b03166000908152610101602052604090206001015490565b6101dc610b03565b6101dc61044f366004611aa3565b610b15565b61025d610462366004611ac0565b610b6b565b6033546001600160a01b031661025d565b6101dc610486366004611ad9565b610b8c565b610237610499366004611b1a565b610dd7565b6102376104ac366004611aa3565b6001600160a01b03166000908152610101602052604090205490565b60fc546104dd90600160a01b900461ffff1681565b60405161ffff9091168152602001610241565b60fb5461025d906001600160a01b031681565b6101dc610511366004611aa3565b610f57565b610237610524366004611b4f565b610fe4565b610597610537366004611ba0565b604080518082018252600080825260209182018190526001600160a01b03949094168452610101815281842092845260039092018252918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b6040805182516001600160801b039081168252602093840151169281019290925201610241565b6103f46105cc366004611aa3565b6001600160a01b031660009081526101016020526040902054151590565b6101dc6105f8366004611aa3565b61129f565b600054610100900460ff161580801561061d5750600054600160ff909116105b806106375750303b158015610637575060005460ff166001145b61069f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156106c2576000805461ff0019166101001790555b6106ca611318565b6106d2611347565b6106df8686868686611376565b8015610725576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60fd54156107ed5760fd8054600090915560fe5460fc5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190611bcc565b506040518181527fabf360404ae6ccd945919fc14edb22686b6941aeee15d786c7047e4a0107eba59060200160405180910390a1505b60005b600a81101561084357600061010282600a811061080f5761080f611bee565b01546001600160a01b03169050806108275750610843565b6108308161142d565b508061083b81611c1a565b9150506107f0565b5060655460ff161561085757610857611596565b565b6108616115e8565b60fc54600160a01b900461ffff1660091901610890576040516309f4d7ab60e21b815260040160405180910390fd5b6001600160a01b03811660009081526101016020526040902054156108c857604051630cb3e97f60e31b815260040160405180910390fd5b6001600160a01b0381166000908152610101602052604090206001905560fc54819061010290600160a01b900461ffff16600a811061090957610909611bee565b0180546001600160a01b0319166001600160a01b039290921691909117905560fc805460149061094390600160a01b900461ffff16611c33565b825461ffff9182166101009390930a928302919092021990911617905560fe5460405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190611bcc565b506040516001600160a01b03821681527f7b7ef7a864d96a85497a1ed846adb39940dd6ccef678ff6ac8d55505e09b8cc4906020015b60405180910390a150565b60fb546001600160a01b03163314610a44576040516304e1fa9f60e01b815260040160405180910390fd5b610857611596565b6000805b600a811015610aca57610aac61010282600a8110610a7057610a70611bee565b01546001600160a01b0390811660009081526101016020908152604080832093881683526002909301905220600101546001600160801b031690565b610ab69083611c54565b915080610ac281611c1a565b915050610a50565b50919050565b60fb546001600160a01b03163314610afb576040516304e1fa9f60e01b815260040160405180910390fd5b610857611642565b610b0b6115e8565b610857600061167f565b610b1d6115e8565b60fb80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e90602001610a0e565b61010281600a8110610b7c57600080fd5b01546001600160a01b0316905081565b6001600160a01b038216610bb65760405163b80480b160e01b815260106004820152602401610696565b80600003610bda5760405163b80480b160e01b815260116004820152602401610696565b6001600160a01b038316600090815261010160209081526040808320338452600281019092529091206001810154815483546001600160801b03600160801b840481169316919081108015610c3857506000826001600160801b0316115b15610ca157600081815260038601602052604090208054610c7890610c73906001600160801b0386811691600160801b8104821691166116d1565b611784565b610c829085611c6c565b6001860180546fffffffffffffffffffffffffffffffff191690559350505b50610cab85611784565b6001600160801b0316826001600160801b03161015610ce8576040516307f885ff60e21b81526001600160801b0383166004820152602401610696565b610cf185611784565b610cfb9083611c97565b6001840180546001600160801b03928316600160801b02921691909117905560405163a9059cbb60e01b81526001600160a01b0387811660048301526024820187905288169063a9059cbb906044016020604051808303816000875af1158015610d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8d9190611bcc565b506040518581526001600160a01b0387169033907f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a9060200160405180910390a350505050505050565b6000610de161179f565b60fc546001600160a01b03163314610e0c57604051635d3958b360e01b815260040160405180910390fd5b6001600160a01b038416610e365760405163b80480b160e01b815260306004820152602401610696565b82600003610e5a5760405163b80480b160e01b815260316004820152602401610696565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed19190611bcc565b50610edd8484846117e5565b9050610ee881611784565b6001600160801b031660fd6000828254610f029190611c54565b9091555050604080518481526020810183905233916001600160a01b038716916000917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a49392505050565b610f5f6115e8565b610f68816118ed565b60fe5460405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610fbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe09190611bcc565b5050565b6000610fee61179f565b6001600160a01b0385166110185760405163b80480b160e01b815260206004820152602401610696565b8360000361103c5760405163b80480b160e01b815260216004820152602401610696565b6001600160a01b0382166110665760405163b80480b160e01b815260226004820152602401610696565b61106f866118ed565b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038616906323b872dd906064016020604051808303816000875af11580156110c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e69190611bcc565b506001600160a01b0380871660009081526101016020908152604080832093861683526002840190915290206001810154815483546001600160801b03909216918110801561113e57506000826001600160801b0316115b156111cc57600081815260038501602052604090208054600185015461117e91610c73916001600160801b0390811691600160801b8104821691166116d1565b6001850180546010906111a2908490600160801b90046001600160801b0316611c6c565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060009250505b6111d78989896117e5565b8454845594506111e685611784565b6111f09083611c6c565b6001840180546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905561122485611784565b6001600160801b03168460010160008282546112409190611c54565b90915550508354604080518a8152602081018890526001600160a01b03808a1693908d169290917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a45050505095945050505050565b6112a76115e8565b6001600160a01b03811661130c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610696565b6113158161167f565b50565b600054610100900460ff1661133f5760405162461bcd60e51b815260040161069690611cbf565b61085761192f565b600054610100900460ff1661136e5760405162461bcd60e51b815260040161069690611cbf565b61085761195f565b600054610100900460ff1661139d5760405162461bcd60e51b815260040161069690611cbf565b60fe80546001600160a01b03199081166001600160a01b03888116919091179092556101008054821687841617905560ff8054821686841617905560fc8054821685841617905560fb805490911691831691821790556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9060200160405180910390a15050505050565b6001600160a01b038116600090815261010160205260409020600181015415610fe0576001810154604051636e553f6560e01b815260048101919091523060248201526000906001600160a01b03841690636e553f65906044016020604051808303816000875af11580156114a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ca9190611d0a565b905060405180604001604052806114e48460010154611784565b6001600160801b031681526020016114fb83611784565b6001600160801b03908116909152835460009081526003850160209081526040918290208451948201518416600160801b029490931693909317909155835460018501548251908152928301849052917f91535f424d5c4759427ba90b0ffa33a39d42edf0a1014fd35ae8b7d5925c984d910160405180910390a2600060018301819055825483919061158d90611c1a565b90915550505050565b61159e611992565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6033546001600160a01b031633146108575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610696565b61164a61179f565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115cb3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080806000198587098587029250828110838203039150508060000361170a57600084116116ff57600080fd5b50829004905061177d565b80841161171657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b806001600160801b038116811461179a57600080fd5b919050565b60655460ff16156108575760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610696565b60ff5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905260009185169063095ea7b3906044016020604051808303816000875af115801561183a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185e9190611bcc565b506101005460405163364e231160e01b81526001600160a01b0386811660048301526024820186905260448201859052600060648301529091169063364e2311906084016020604051808303816000875af11580156118c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e59190611d0a565b949350505050565b6001600160a01b03811660009081526101016020526040902054611315576040516357b980d760e11b81526001600160a01b0382166004820152602401610696565b600054610100900460ff166119565760405162461bcd60e51b815260040161069690611cbf565b6108573361167f565b600054610100900460ff166119865760405162461bcd60e51b815260040161069690611cbf565b6065805460ff19169055565b60655460ff166108575760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610696565b6001600160a01b038116811461131557600080fd5b600080600080600060a08688031215611a1157600080fd5b8535611a1c816119e4565b94506020860135611a2c816119e4565b93506040860135611a3c816119e4565b92506060860135611a4c816119e4565b91506080860135611a5c816119e4565b809150509295509295909350565b60008060408385031215611a7d57600080fd5b8235611a88816119e4565b91506020830135611a98816119e4565b809150509250929050565b600060208284031215611ab557600080fd5b813561177d816119e4565b600060208284031215611ad257600080fd5b5035919050565b600080600060608486031215611aee57600080fd5b8335611af9816119e4565b92506020840135611b09816119e4565b929592945050506040919091013590565b600080600060608486031215611b2f57600080fd5b8335611b3a816119e4565b95602085013595506040909401359392505050565b600080600080600060a08688031215611b6757600080fd5b8535611b72816119e4565b94506020860135611b82816119e4565b935060408601359250606086013591506080860135611a5c816119e4565b60008060408385031215611bb357600080fd5b8235611bbe816119e4565b946020939093013593505050565b600060208284031215611bde57600080fd5b8151801515811461177d57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c2c57611c2c611c04565b5060010190565b600061ffff808316818103611c4a57611c4a611c04565b6001019392505050565b60008219821115611c6757611c67611c04565b500190565b60006001600160801b03808316818516808303821115611c8e57611c8e611c04565b01949350505050565b60006001600160801b0383811690831681811015611cb757611cb7611c04565b039392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611d1c57600080fd5b505191905056fea164736f6c634300080e000a';

type GMXBatchingManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMXBatchingManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMXBatchingManager__factory extends ContractFactory {
  constructor(...args: GMXBatchingManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GMXBatchingManager> {
    return super.deploy(overrides || {}) as Promise<GMXBatchingManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GMXBatchingManager {
    return super.attach(address) as GMXBatchingManager;
  }
  override connect(signer: Signer): GMXBatchingManager__factory {
    return super.connect(signer) as GMXBatchingManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMXBatchingManagerInterface {
    return new utils.Interface(_abi) as GMXBatchingManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GMXBatchingManager {
    return new Contract(address, _abi, signerOrProvider) as GMXBatchingManager;
  }
}
