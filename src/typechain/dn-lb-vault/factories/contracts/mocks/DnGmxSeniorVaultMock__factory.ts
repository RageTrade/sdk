/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxSeniorVaultMock,
  DnGmxSeniorVaultMockInterface,
} from '../../../contracts/mocks/DnGmxSeniorVaultMock';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotBorrower',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositCapExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrowAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrowerAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCapUpdate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxUtilizationBreached',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UsageCapExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'AllowancesGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newCap',
        type: 'uint256',
      },
    ],
    name: 'BorrowCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'DepositCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_afterDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_beforeWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'availableBorrow',
    outputs: [
      {
        internalType: 'uint256',
        name: 'availableAUsdc',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'borrow',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'borrowCaps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeStrategy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'optimalUtilizationRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'baseVariableBorrowRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'variableRateSlope1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'variableRateSlope2',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getEthRewardsSplitRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'feeSplitRate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVaultMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_poolAddressesProvider',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'leveragePool',
    outputs: [
      {
        internalType: 'contract ILeveragePool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxUtilizationBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'repay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'setDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
    ],
    name: 'setDnGmxJuniorVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_maxUtilizationBps',
        type: 'uint16',
      },
    ],
    name: 'setMaxUtilizationBps',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalUsdcBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: 'usdcBorrowed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrowerAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'cap',
        type: 'uint256',
      },
    ],
    name: 'updateBorrowCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'optimalUtilizationRate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'baseVariableBorrowRate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'variableRateSlope1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'variableRateSlope2',
            type: 'uint256',
          },
        ],
        internalType: 'struct FeeSplitStrategy.Info',
        name: '_feeStrategy',
        type: 'tuple',
      },
    ],
    name: 'updateFeeStrategyParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506134e3806100206000396000f3fe608060405234801561001057600080fd5b50600436106103575760003560e01c806386651203116101c8578063ba08765211610104578063d905777e116100a2578063e3696edd1161007c578063e3696edd1461073e578063ef8b30f714610746578063f2fde38b14610759578063fdef50931461076c57600080fd5b8063d905777e146106e9578063dbd5edc7146106fc578063dd62ed3e1461070557600080fd5b8063c63d75b6116100de578063c63d75b614610482578063c6e6f592146106b0578063ce96cb77146106c3578063d026c123146106d657600080fd5b8063ba08765214610682578063bf9571f114610695578063c5ebeaec1461069d57600080fd5b8063a22c75c611610171578063a9059cbb1161014b578063a9059cbb14610636578063aa88fdc314610649578063b3d7f6b91461065c578063b460af941461066f57600080fd5b8063a22c75c6146105fd578063a31e553d14610610578063a457c2d71461062357600080fd5b8063949b22ae116101a2578063949b22ae146105ac57806394bf804d146105e257806395d89b41146105f557600080fd5b806386651203146105805780638d315d7b146105935780638da5cb5b1461059b57600080fd5b8063402d267d116102975780636e553f6511610240578063768e66d31161021a578063768e66d31461053f57806377c718ae146105525780638224f4e81461055a5780638301d55a1461056d57600080fd5b80636e553f65146104fb57806370a082311461050e578063715018a61461053757600080fd5b8063543bc98411610271578063543bc984146104ca5780635c975abb146104dd578063613d25bb146104e857600080fd5b8063402d267d146104825780634a584432146104975780634cdad506146104b757600080fd5b806323b872dd11610304578063371fd8e6116102de578063371fd8e61461042757806338d52e0f1461043c57806339509351146104675780633d672a451461047a57600080fd5b806323b872dd146103dd578063304ea9cb146103f0578063313ce5671461041857600080fd5b8063095ea7b311610335578063095ea7b31461039f5780630a28a477146103c257806318160ddd146103d557600080fd5b806301e1d1141461035c57806306fdde031461037757806307a2d13a1461038c575b600080fd5b61036461077f565b6040519081526020015b60405180910390f35b61037f610805565b60405161036e9190612e83565b61036461039a366004612e96565b610897565b6103b26103ad366004612ec4565b6108cc565b604051901515815260200161036e565b6103646103d0366004612e96565b6108e6565b603554610364565b6103b26103eb366004612ef0565b61090e565b60d35461040590600160a01b900461ffff1681565b60405161ffff909116815260200161036e565b6040516012815260200161036e565b61043a610435366004612e96565b610932565b005b60655461044f906001600160a01b031681565b6040516001600160a01b03909116815260200161036e565b6103b2610475366004612ec4565b610b1d565b610364610b5c565b610364610490366004612f31565b5060001990565b6103646104a5366004612f31565b60d56020526000908152604090205481565b6103646104c5366004612e96565b610bf0565b6103646104d8366004612f31565b610bfb565b60985460ff166103b2565b61043a6104f6366004612f97565b610d0e565b61036461050936600461302c565b611134565b61036461051c366004612f31565b6001600160a01b031660009081526033602052604090205490565b61043a6111b0565b61043a61054d366004612ec4565b6111c4565b61036461136b565b60d25461044f906001600160a01b031681565b61043a61057b36600461305c565b61148e565b61043a61058e366004612e96565b6114b9565b6103646114fc565b6066546001600160a01b031661044f565b60cd5460ce5460cf5460d0546105c29392919084565b60408051948552602085019390935291830152606082015260800161036e565b6103646105f036600461302c565b61158a565b61037f611606565b61043a61060b366004613074565b611615565b61043a61061e3660046130bd565b611620565b6103b2610631366004612ec4565b61164a565b6103b2610644366004612ec4565b6116dc565b60d15461044f906001600160a01b031681565b61036461066a366004612e96565b6116ea565b61036461067d3660046130da565b611711565b6103646106903660046130da565b61178e565b61043a61180b565b61043a6106ab366004612e96565b611937565b6103646106be366004612e96565b611a51565b6103646106d1366004612f31565b611a79565b61043a6106e4366004612f31565b611a9b565b6103646106f7366004612f31565b611ac5565b61036460d45481565b610364610713366004613111565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610364611ae3565b610364610754366004612e96565b611b67565b61043a610767366004612f31565b611b72565b61043a61077a366004613074565b611be8565b60cb546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec919061313f565b90506107f661136b565b610800908261316e565b905090565b60606036805461081490613186565b80601f016020809104026020016040519081016040528092919081815260200182805461084090613186565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b5050505050905090565b6000806108a360355490565b905080156108c3576108be6108b661077f565b849083611bf3565b6108c5565b825b9392505050565b6000336108da818585611c12565b60019150505b92915050565b6000806108f260355490565b905080156108c3576108be8161090661077f565b859190611d36565b60003361091c858285611d64565b610927858585611df6565b506001949350505050565b60d1546001600160a01b03163314801590610958575060d2546001600160a01b03163314155b1561097657604051633c698d7960e01b815260040160405180910390fd5b604080518082018252600e81526d1b5cd9cb9cd95b99195c8818985b60921b602082015260cb5491516370a0823160e01b8152336004820152610a0c926001600160a01b0316906370a0823190602401602060405180830381865afa1580156109e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a07919061313f565b611fc4565b610a3560405180604001604052806007815260200166616d6f756e745f60c81b81525082611fc4565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a8557600080fd5b505af1158015610a99573d6000803e3d6000fd5b505060cb546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b0390911692506323b872dd91506064015b6020604051808303816000875af1158015610af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1991906131bb565b5050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906108da9082908690610b5790879061316e565b611c12565b60d35460655460405163b3596f0760e01b81526001600160a01b0391821660048201526000928392169063b3596f0790602401602060405180830381865afa158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd0919061313f565b9050610bea81600160801b68056bc75e2d63100000612009565b91505090565b60006108e082610897565b600080826001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c60919061313f565b6001600160a01b038416600090815260d56020526040902054610c8391906131dd565b60cb546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf5919061313f565b9050808210610d045780610d06565b815b949350505050565b600054610100900460ff1615808015610d2e5750600054600160ff909116105b80610d485750303b158015610d48575060005460ff166001145b610db05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610dd3576000805461ff0019166101001790555b610ddb6120bc565b610de36120eb565b610e578787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b01819004810282018101909252898152925089915088908190840183828082843760009201919091525061211a92505050565b60cc80546001600160a01b0319166001600160a01b0384169081179091556040805163026b1d5f60e01b8152905163026b1d5f916004808201926020929091908290030181865afa158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed49190613204565b60ca80546001600160a01b0319166001600160a01b039283169081179091556040516335ea6a7560e01b81529189166004830152906335ea6a75906024016101e060405180830381865afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5491906132e9565b610100015160cb80546001600160a01b0319166001600160a01b0392831617905560cc5460408051631f94a27560e31b81529051919092169163fca513a89160048083019260209291908290030181865afa158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb9190613204565b60d380546001600160a01b0319166001600160a01b0392831617905560cb5460ca5460405163095ea7b360e01b81529083166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611045573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106991906131bb565b5060655460ca5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156110c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e491906131bb565b50801561112b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b600061113e612148565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561118e57600080fd5b505af11580156111a2573d6000803e3d6000fd5b505050506108c5838361218e565b6111b8612249565b6111c260006122a3565b565b6111cc612249565b60d1546001600160a01b038381169116148015906111f8575060d2546001600160a01b03838116911614155b15611216576040516348b905b160e01b815260040160405180910390fd5b80826001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611255573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611279919061313f565b1015611352576001600160a01b03828116600081815260d560205260409081902084905560cb54905163095ea7b360e01b81526004810192909252602482018490529091169063095ea7b3906044016020604051808303816000875af11580156112e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130b91906131bb565b50604080516001600160a01b0384168152602081018390527f84d2db42497fc6f1882756be420935d982025ad8a2a903dfb83638a09e49a775910160405180910390a15050565b604051633a020d0160e11b815260040160405180910390fd5b60d1546000906001600160a01b0316156114035760d160009054906101000a90046001600160a01b03166001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f6919061313f565b611400908261316e565b90505b60d2546001600160a01b03161561148b5760d260009054906101000a90046001600160a01b03166001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611467573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f6919061313f565b90565b611496612249565b803560cd55602081013560ce55604081013560cf556060013560d055565b505050565b6114c1612249565b60d48190556040518181527f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f99060200160405180910390a150565b60d35460655460405163b3596f0760e01b81526001600160a01b0391821660048201526000928392169063b3596f0790602401602060405180830381865afa15801561154c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611570919061313f565b9050610bea816305f5e10061158361077f565b9190612009565b6000611594612148565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115e457600080fd5b505af11580156115f8573d6000803e3d6000fd5b505050506108c583836122f5565b60606037805461081490613186565b6114b4838383612376565b611628612249565b60d3805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156116cf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610da7565b6109278286868403611c12565b6000336108da818585611df6565b6000806116f660355490565b905080156108c3576108be61170961077f565b849083611d36565b600061171b612148565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561176b57600080fd5b505af115801561177f573d6000803e3d6000fd5b50505050610d06848484612455565b6000611798612148565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117e857600080fd5b505af11580156117fc573d6000803e3d6000fd5b50505050610d06848484612527565b611813612249565b60ca5460655460405163095ea7b360e01b81526001600160a01b03928316600482018190526000196024830152929091169063095ea7b3906044016020604051808303816000875af115801561186d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189191906131bb565b5060cb5460405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156118e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190a91906131bb565b506040517fba5bb3f899c7a3edcc9ff9d46c4e08449c6a608b6f8254132bc5af4898645cbc90600090a150565b60d1546001600160a01b0316331480159061195d575060d2546001600160a01b03163314155b1561197b57604051633c698d7960e01b815260040160405180910390fd5b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156119cb57600080fd5b505af11580156119df573d6000803e3d6000fd5b5050505080600014806119f957506119f633610bfb565b81115b15611a1757604051630e25379960e21b815260040160405180910390fd5b60cb5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401610ad6565b50565b600080611a5d60355490565b905080156108c3576108be81611a7161077f565b859190611bf3565b6001600160a01b0381166000908152603360205260408120546108e090610897565b611aa3612249565b60d180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152603360205260408120546108e0565b60cb546040516370a0823160e01b8152306004820152600091610800916001600160a01b03909116906370a0823190602401602060405180830381865afa158015611b32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b56919061313f565b611b5e61136b565b60cd9190612634565b60006108e082611a51565b611b7a612249565b6001600160a01b038116611bdf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610da7565b611a4e816122a3565b6114b483838361272a565b828202811515841585830485141716611c0b57600080fd5b0492915050565b6001600160a01b038316611c745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610da7565b6001600160a01b038216611cd55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610da7565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b828202811515841585830485141716611d4e57600080fd5b6001826001830304018115150290509392505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611df05781811015611de35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610da7565b611df08484848403611c12565b50505050565b6001600160a01b038316611e5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610da7565b6001600160a01b038216611ebc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610da7565b6001600160a01b03831660009081526033602052604090205481811015611f345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610da7565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611f6b90849061316e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611fb791815260200190565b60405180910390a3611df0565b610b198282604051602401611fda92919061340c565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526127c9565b600080806000198587098587029250828110838203039150508060001415612043576000841161203857600080fd5b5082900490506108c5565b80841161204f57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600054610100900460ff166120e35760405162461bcd60e51b8152600401610da79061342e565b6111c26127ea565b600054610100900460ff166121125760405162461bcd60e51b8152600401610da79061342e565b6111c261281a565b612124828261284d565b5050606580546001600160a01b0319166001600160a01b0392909216919091179055565b60985460ff16156111c25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610da7565b600061219983611b67565b9050806121d65760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610da7565b6065546121ee906001600160a01b031633308661287e565b6121f88282612901565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108e083828461272a565b6066546001600160a01b031633146111c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610da7565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000612300836116ea565b60655490915061231b906001600160a01b031633308461287e565b6123258284612901565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108e081848461272a565b60d35461271090600160a01b900461ffff168461239161077f565b61239b91906131dd565b6123a59190613479565b6123af9190613498565b6123b761136b565b11156123d657604051635276dbb960e01b815260040160405180910390fd5b60ca54606554604051631a4ca37b60e21b81526001600160a01b039182166004820152602481018690523060448201529116906369328dec906064016020604051808303816000875af1158015612431573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df0919061313f565b6000612460846108e6565b9050336001600160a01b038316146124b0576001600160a01b038216600090815260346020908152604080832033845290915290205460001981146124ae576124ae8333610b5785856131dd565b505b6124bb848285612376565b6124c582826129e0565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46065546108c5906001600160a01b03168486612b2e565b6000336001600160a01b03831614612577576001600160a01b03821660009081526034602090815260408083203384529091529020546000198114612575576125758333610b5788856131dd565b505b61258084610bf0565b9050806125bd5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610da7565b6125c8818585612376565b6125d282856129e0565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46065546108c5906001600160a01b03168483612b2e565b6000808215612665576126606c0c9f2c9cd04674edea40000000612658858761316e565b859190612009565b612668565b60005b8554909150600090612687906c0c9f2c9cd04674edea400000006131dd565b86549091508211156126fd5760006126b76c0c9f2c9cd04674edea400000008389600001548661158391906131dd565b60038801549091506126d790826c0c9f2c9cd04674edea40000000612009565b876002015488600101546126eb919061316e565b6126f5919061316e565b935050612721565b6002860154865461270f918491612009565b866001015461271e919061316e565b92505b50509392505050565b60ca5460655460405163617ba03760e01b81526001600160a01b039182166004820152602481018690523060448201526000606482015291169063617ba03790608401600060405180830381600087803b15801561278757600080fd5b505af115801561279b573d6000803e3d6000fd5b5050505060d4546127aa61077f565b11156114b4576040516324d758c360e21b815260040160405180910390fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600054610100900460ff166128115760405162461bcd60e51b8152600401610da79061342e565b6111c2336122a3565b600054610100900460ff166128415760405162461bcd60e51b8152600401610da79061342e565b6098805460ff19169055565b600054610100900460ff166128745760405162461bcd60e51b8152600401610da79061342e565b610b198282612b5e565b6040516001600160a01b0380851660248301528316604482015260648101829052611df09085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612bac565b6001600160a01b0382166129575760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610da7565b8060356000828254612969919061316e565b90915550506001600160a01b0382166000908152603360205260408120805483929061299690849061316e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216612a405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610da7565b6001600160a01b03821660009081526033602052604090205481811015612ab45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610da7565b6001600160a01b0383166000908152603360205260408120838303905560358054849290612ae39084906131dd565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0383166024820152604481018290526114b490849063a9059cbb60e01b906064016128b2565b600054610100900460ff16612b855760405162461bcd60e51b8152600401610da79061342e565b8151612b98906036906020850190612d92565b5080516114b4906037906020840190612d92565b6000612c01826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c7e9092919063ffffffff16565b8051909150156114b45780806020019051810190612c1f91906131bb565b6114b45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610da7565b6060610d068484600085856001600160a01b0385163b612ce05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610da7565b600080866001600160a01b03168587604051612cfc91906134ba565b60006040518083038185875af1925050503d8060008114612d39576040519150601f19603f3d011682016040523d82523d6000602084013e612d3e565b606091505b5091509150612d4e828286612d59565b979650505050505050565b60608315612d685750816108c5565b825115612d785782518084602001fd5b8160405162461bcd60e51b8152600401610da79190612e83565b828054612d9e90613186565b90600052602060002090601f016020900481019282612dc05760008555612e06565b82601f10612dd957805160ff1916838001178555612e06565b82800160010185558215612e06579182015b82811115612e06578251825591602001919060010190612deb565b50612e12929150612e16565b5090565b5b80821115612e125760008155600101612e17565b60005b83811015612e46578181015183820152602001612e2e565b83811115611df05750506000910152565b60008151808452612e6f816020860160208601612e2b565b601f01601f19169290920160200192915050565b6020815260006108c56020830184612e57565b600060208284031215612ea857600080fd5b5035919050565b6001600160a01b0381168114611a4e57600080fd5b60008060408385031215612ed757600080fd5b8235612ee281612eaf565b946020939093013593505050565b600080600060608486031215612f0557600080fd5b8335612f1081612eaf565b92506020840135612f2081612eaf565b929592945050506040919091013590565b600060208284031215612f4357600080fd5b81356108c581612eaf565b60008083601f840112612f6057600080fd5b50813567ffffffffffffffff811115612f7857600080fd5b602083019150836020828501011115612f9057600080fd5b9250929050565b60008060008060008060808789031215612fb057600080fd5b8635612fbb81612eaf565b9550602087013567ffffffffffffffff80821115612fd857600080fd5b612fe48a838b01612f4e565b90975095506040890135915080821115612ffd57600080fd5b5061300a89828a01612f4e565b909450925050606087013561301e81612eaf565b809150509295509295509295565b6000806040838503121561303f57600080fd5b82359150602083013561305181612eaf565b809150509250929050565b60006080828403121561306e57600080fd5b50919050565b60008060006060848603121561308957600080fd5b833592506020840135915060408401356130a281612eaf565b809150509250925092565b61ffff81168114611a4e57600080fd5b6000602082840312156130cf57600080fd5b81356108c5816130ad565b6000806000606084860312156130ef57600080fd5b83359250602084013561310181612eaf565b915060408401356130a281612eaf565b6000806040838503121561312457600080fd5b823561312f81612eaf565b9150602083013561305181612eaf565b60006020828403121561315157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561318157613181613158565b500190565b600181811c9082168061319a57607f821691505b6020821081141561306e57634e487b7160e01b600052602260045260246000fd5b6000602082840312156131cd57600080fd5b815180151581146108c557600080fd5b6000828210156131ef576131ef613158565b500390565b80516131ff81612eaf565b919050565b60006020828403121561321657600080fd5b81516108c581612eaf565b6040516101e0810167ffffffffffffffff8111828210171561325357634e487b7160e01b600052604160045260246000fd5b60405290565b60006020828403121561326b57600080fd5b6040516020810181811067ffffffffffffffff8211171561329c57634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff811681146131ff57600080fd5b805164ffffffffff811681146131ff57600080fd5b80516131ff816130ad565b60006101e082840312156132fc57600080fd5b613304613221565b61330e8484613259565b815261331c602084016132a9565b602082015261332d604084016132a9565b604082015261333e606084016132a9565b606082015261334f608084016132a9565b608082015261336060a084016132a9565b60a082015261337160c084016132c9565b60c082015261338260e084016132de565b60e08201526101006133958185016131f4565b908201526101206133a78482016131f4565b908201526101406133b98482016131f4565b908201526101606133cb8482016131f4565b908201526101806133dd8482016132a9565b908201526101a06133ef8482016132a9565b908201526101c06134018482016132a9565b908201529392505050565b60408152600061341f6040830185612e57565b90508260208301529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081600019048311821515161561349357613493613158565b500290565b6000826134b557634e487b7160e01b600052601260045260246000fd5b500490565b600082516134cc818460208701612e2b565b919091019291505056fea164736f6c634300080a000a';

type DnGmxSeniorVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxSeniorVaultMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxSeniorVaultMock__factory extends ContractFactory {
  constructor(...args: DnGmxSeniorVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxSeniorVaultMock> {
    return super.deploy(overrides || {}) as Promise<DnGmxSeniorVaultMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxSeniorVaultMock {
    return super.attach(address) as DnGmxSeniorVaultMock;
  }
  override connect(signer: Signer): DnGmxSeniorVaultMock__factory {
    return super.connect(signer) as DnGmxSeniorVaultMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxSeniorVaultMockInterface {
    return new utils.Interface(_abi) as DnGmxSeniorVaultMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxSeniorVaultMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxSeniorVaultMock;
  }
}
