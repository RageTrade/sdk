/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxSeniorVaultMock,
  DnGmxSeniorVaultMockInterface,
} from '../../../contracts/mocks/DnGmxSeniorVaultMock';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotBorrower',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositCapExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrowerAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCapUpdate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxUtilizationBreached',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UsageCapExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'AllowancesGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newCap',
        type: 'uint256',
      },
    ],
    name: 'BorrowCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'DepositCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_afterDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_beforeWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'borrow',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeStrategy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'optimalUtilizationRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'baseVariableBorrowRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'variableRateSlope1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'variableRateSlope2',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getEthRewardsSplitRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'feeSplitRate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVaultMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_poolAddressesProvider',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'leveragePool',
    outputs: [
      {
        internalType: 'contract ILeveragePool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxUtilizationBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'repay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'setDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
    ],
    name: 'setDnGmxJuniorVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_maxUtilizationBps',
        type: 'uint16',
      },
    ],
    name: 'setMaxUtilizationBps',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalUsdcBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: 'usdcBorrowed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrowerAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'cap',
        type: 'uint256',
      },
    ],
    name: 'updateBorrowCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'optimalUtilizationRate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'baseVariableBorrowRate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'variableRateSlope1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'variableRateSlope2',
            type: 'uint256',
          },
        ],
        internalType: 'struct FeeSplitStrategy.Info',
        name: '_feeStrategy',
        type: 'tuple',
      },
    ],
    name: 'updateFeeStrategyParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'vaultCaps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061330b806100206000396000f3fe608060405234801561001057600080fd5b506004361061034c5760003560e01c80638d315d7b116101bd578063bf9571f1116100f9578063d905777e116100a2578063e3696edd1161007c578063e3696edd14610720578063ef8b30f714610728578063f2fde38b1461073b578063fdef50931461074e57600080fd5b8063d905777e146106cb578063dbd5edc7146106de578063dd62ed3e146106e757600080fd5b8063c6e6f592116100d3578063c6e6f59214610692578063ce96cb77146106a5578063d026c123146106b857600080fd5b8063bf9571f114610677578063c5ebeaec1461067f578063c63d75b61461049757600080fd5b8063a31e553d11610166578063aa88fdc311610140578063aa88fdc31461062b578063b3d7f6b91461063e578063b460af9414610651578063ba0876521461066457600080fd5b8063a31e553d146105f2578063a457c2d714610605578063a9059cbb1461061857600080fd5b806394bf804d1161019757806394bf804d146105c457806395d89b41146105d7578063a22c75c6146105df57600080fd5b80638d315d7b146105755780638da5cb5b1461057d578063949b22ae1461058e57600080fd5b80633d672a451161028c57806370a082311161023557806377c718ae1161020f57806377c718ae146105345780638224f4e81461053c5780638301d55a1461054f578063866512031461056257600080fd5b806370a08231146104f0578063715018a614610519578063768e66d31461052157600080fd5b80635c975abb116102665780635c975abb146104bf578063613d25bb146104ca5780636e553f65146104dd57600080fd5b80633d672a451461048f578063402d267d146104975780634cdad506146104ac57600080fd5b806323b872dd116102f9578063313ce567116102d3578063313ce5671461042d578063371fd8e61461043c57806338d52e0f14610451578063395093511461047c57600080fd5b806323b872dd146103d25780632e66de26146103e5578063304ea9cb1461040557600080fd5b8063095ea7b31161032a578063095ea7b3146103945780630a28a477146103b757806318160ddd146103ca57600080fd5b806301e1d1141461035157806306fdde031461036c57806307a2d13a14610381575b600080fd5b610359610761565b6040519081526020015b60405180910390f35b6103746107e7565b6040516103639190612cad565b61035961038f366004612ce0565b610879565b6103a76103a2366004612d0e565b6108ae565b6040519015158152602001610363565b6103596103c5366004612ce0565b6108c8565b603554610359565b6103a76103e0366004612d3a565b6108f0565b6103596103f3366004612d7b565b60d56020526000908152604090205481565b60d35461041a90600160a01b900461ffff1681565b60405161ffff9091168152602001610363565b60405160128152602001610363565b61044f61044a366004612ce0565b610914565b005b606554610464906001600160a01b031681565b6040516001600160a01b039091168152602001610363565b6103a761048a366004612d0e565b610a3f565b610359610a7e565b6103596104a5366004612d7b565b5060001990565b6103596104ba366004612ce0565b610b0d565b60985460ff166103a7565b61044f6104d8366004612de1565b610b18565b6103596104eb366004612e76565b610f3e565b6103596104fe366004612d7b565b6001600160a01b031660009081526033602052604090205490565b61044f610fba565b61044f61052f366004612d0e565b610fce565b610359611175565b60d254610464906001600160a01b031681565b61044f61055d366004612ea6565b611298565b61044f610570366004612ce0565b6112c3565b610359611306565b6066546001600160a01b0316610464565b60cd5460ce5460cf5460d0546105a49392919084565b604080519485526020850193909352918301526060820152608001610363565b6103596105d2366004612e76565b611394565b610374611410565b61044f6105ed366004612ebe565b61141f565b61044f610600366004612f07565b61142a565b6103a7610613366004612d0e565b611454565b6103a7610626366004612d0e565b6114e6565b60d154610464906001600160a01b031681565b61035961064c366004612ce0565b6114f4565b61035961065f366004612f24565b61151b565b610359610672366004612f24565b6115a0565b61044f61161d565b61044f61068d366004612ce0565b611749565b6103596106a0366004612ce0565b61190a565b6103596106b3366004612d7b565b611932565b61044f6106c6366004612d7b565b611954565b6103596106d9366004612d7b565b61197e565b61035960d45481565b6103596106f5366004612f5b565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61035961199c565b610359610736366004612ce0565b611a20565b61044f610749366004612d7b565b611a2b565b61044f61075c366004612ebe565b611aa4565b60cb546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ce9190612f89565b90506107d8611175565b6107e29082612fb8565b905090565b6060603680546107f690612fd0565b80601f016020809104026020016040519081016040528092919081815260200182805461082290612fd0565b801561086f5780601f106108445761010080835404028352916020019161086f565b820191906000526020600020905b81548152906001019060200180831161085257829003601f168201915b5050505050905090565b60008061088560355490565b905080156108a5576108a0610898610761565b849083611aaf565b6108a7565b825b9392505050565b6000336108bc818585611ace565b60019150505b92915050565b6000806108d460355490565b905080156108a5576108a0816108e8610761565b859190611bf2565b6000336108fe858285611c20565b610909858585611cb2565b506001949350505050565b60d1546001600160a01b0316331480159061093a575060d2546001600160a01b03163314155b1561095857604051633c698d7960e01b815260040160405180910390fd5b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156109a857600080fd5b505af11580156109bc573d6000803e3d6000fd5b505060cb546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af1158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190613005565b5050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906108bc9082908690610a79908790612fb8565b611ace565b60d35460655460405163b3596f0760e01b81526001600160a01b0391821660048201526000928392169063b3596f0790602401602060405180830381865afa158015610ace573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af29190612f89565b9050610b0781600160801b6305f5e100611e80565b91505090565b60006108c282610879565b600054610100900460ff1615808015610b385750600054600160ff909116105b80610b525750303b158015610b52575060005460ff166001145b610bba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610bdd576000805461ff0019166101001790555b610be5611f33565b610bed611f62565b610c618787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250611f9192505050565b60cc80546001600160a01b0319166001600160a01b0384169081179091556040805163026b1d5f60e01b8152905163026b1d5f916004808201926020929091908290030181865afa158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde9190613037565b60ca80546001600160a01b0319166001600160a01b039283169081179091556040516335ea6a7560e01b81529189166004830152906335ea6a75906024016101e060405180830381865afa158015610d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5e919061311c565b610100015160cb80546001600160a01b0319166001600160a01b0392831617905560cc5460408051631f94a27560e31b81529051919092169163fca513a89160048083019260209291908290030181865afa158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de59190613037565b60d380546001600160a01b0319166001600160a01b0392831617905560cb5460ca5460405163095ea7b360e01b81529083166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e739190613005565b5060655460ca5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610eca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eee9190613005565b508015610f35576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6000610f48611fbf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b505050506108a78383612005565b610fc26120c0565b610fcc600061211a565b565b610fd66120c0565b60d1546001600160a01b03838116911614801590611002575060d2546001600160a01b03838116911614155b15611020576040516348b905b160e01b815260040160405180910390fd5b80826001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561105f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110839190612f89565b101561115c576001600160a01b03828116600081815260d560205260409081902084905560cb54905163095ea7b360e01b81526004810192909252602482018490529091169063095ea7b3906044016020604051808303816000875af11580156110f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111159190613005565b50604080516001600160a01b0384168152602081018390527f84d2db42497fc6f1882756be420935d982025ad8a2a903dfb83638a09e49a775910160405180910390a15050565b604051633a020d0160e11b815260040160405180910390fd5b60d1546000906001600160a01b03161561120d5760d160009054906101000a90046001600160a01b03166001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112009190612f89565b61120a9082612fb8565b90505b60d2546001600160a01b0316156112955760d260009054906101000a90046001600160a01b03166001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611271573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190612f89565b90565b6112a06120c0565b803560cd55602081013560ce55604081013560cf556060013560d055565b505050565b6112cb6120c0565b60d48190556040518181527f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f99060200160405180910390a150565b60d35460655460405163b3596f0760e01b81526001600160a01b0391821660048201526000928392169063b3596f0790602401602060405180830381865afa158015611356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137a9190612f89565b9050610b07816305f5e10061138d610761565b9190611e80565b600061139e611fbf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156113ee57600080fd5b505af1158015611402573d6000803e3d6000fd5b505050506108a7838361216c565b6060603780546107f690612fd0565b6112be8383836121ed565b6114326120c0565b60d3805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156114d95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610bb1565b6109098286868403611ace565b6000336108bc818585611cb2565b60008061150060355490565b905080156108a5576108a0611513610761565b849083611bf2565b6000611525611fbf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561157557600080fd5b505af1158015611589573d6000803e3d6000fd5b505050506115988484846122cc565b949350505050565b60006115aa611fbf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115fa57600080fd5b505af115801561160e573d6000803e3d6000fd5b5050505061159884848461239e565b6116256120c0565b60ca5460655460405163095ea7b360e01b81526001600160a01b03928316600482018190526000196024830152929091169063095ea7b3906044016020604051808303816000875af115801561167f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a39190613005565b5060cb5460405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190613005565b506040517fba5bb3f899c7a3edcc9ff9d46c4e08449c6a608b6f8254132bc5af4898645cbc90600090a150565b60d1546001600160a01b0316331480159061176f575060d2546001600160a01b03163314155b1561178d57604051633c698d7960e01b815260040160405180910390fd5b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156117dd57600080fd5b505af11580156117f1573d6000803e3d6000fd5b505050506000336001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118599190612f89565b33600090815260d560205260409020549091506118768383612fb8565b10156118f15760cb5460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156118cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be9190613005565b60405163676edded60e01b815260040160405180910390fd5b60008061191660355490565b905080156108a5576108a08161192a610761565b859190611aaf565b6001600160a01b0381166000908152603360205260408120546108c290610879565b61195c6120c0565b60d180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152603360205260408120546108c2565b60cb546040516370a0823160e01b81523060048201526000916107e2916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156119eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0f9190612f89565b611a17611175565b60cd91906124ab565b60006108c28261190a565b611a336120c0565b6001600160a01b038116611a985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610bb1565b611aa18161211a565b50565b6112be8383836125a1565b828202811515841585830485141716611ac757600080fd5b0492915050565b6001600160a01b038316611b305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610bb1565b6001600160a01b038216611b915760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610bb1565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b828202811515841585830485141716611c0a57600080fd5b6001826001830304018115150290509392505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611cac5781811015611c9f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610bb1565b611cac8484848403611ace565b50505050565b6001600160a01b038316611d165760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610bb1565b6001600160a01b038216611d785760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610bb1565b6001600160a01b03831660009081526033602052604090205481811015611df05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610bb1565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611e27908490612fb8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611e7391815260200190565b60405180910390a3611cac565b600080806000198587098587029250828110838203039150508060001415611eba5760008411611eaf57600080fd5b5082900490506108a7565b808411611ec657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600054610100900460ff16611f5a5760405162461bcd60e51b8152600401610bb19061323f565b610fcc612640565b600054610100900460ff16611f895760405162461bcd60e51b8152600401610bb19061323f565b610fcc612670565b611f9b82826126a3565b5050606580546001600160a01b0319166001600160a01b0392909216919091179055565b60985460ff1615610fcc5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bb1565b600061201083611a20565b90508061204d5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610bb1565b606554612065906001600160a01b03163330866126d4565b61206f8282612757565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108c28382846125a1565b6066546001600160a01b03163314610fcc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bb1565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000612177836114f4565b606554909150612192906001600160a01b03163330846126d4565b61219c8284612757565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108c28184846125a1565b60d35461271090600160a01b900461ffff1684612208610761565b612212919061328a565b61221c91906132a1565b61222691906132c0565b61222e611175565b111561224d57604051635276dbb960e01b815260040160405180910390fd5b60ca54606554604051631a4ca37b60e21b81526001600160a01b039182166004820152602481018690523060448201529116906369328dec906064016020604051808303816000875af11580156122a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cac9190612f89565b60006122d7846108c8565b9050336001600160a01b03831614612327576001600160a01b03821660009081526034602090815260408083203384529091529020546000198114612325576123258333610a79858561328a565b505b6123328482856121ed565b61233c8282612836565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46065546108a7906001600160a01b03168486612984565b6000336001600160a01b038316146123ee576001600160a01b038216600090815260346020908152604080832033845290915290205460001981146123ec576123ec8333610a79888561328a565b505b6123f784610b0d565b9050806124345760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610bb1565b61243f8185856121ed565b6124498285612836565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46065546108a7906001600160a01b03168483612984565b60008082156124dc576124d76c0c9f2c9cd04674edea400000006124cf8587612fb8565b859190611e80565b6124df565b60005b85549091506000906124fe906c0c9f2c9cd04674edea4000000061328a565b865490915082111561257457600061252e6c0c9f2c9cd04674edea400000008389600001548661138d919061328a565b600388015490915061254e90826c0c9f2c9cd04674edea40000000611e80565b876002015488600101546125629190612fb8565b61256c9190612fb8565b935050612598565b60028601548654612586918491611e80565b86600101546125959190612fb8565b92505b50509392505050565b60ca5460655460405163617ba03760e01b81526001600160a01b039182166004820152602481018690523060448201526000606482015291169063617ba03790608401600060405180830381600087803b1580156125fe57600080fd5b505af1158015612612573d6000803e3d6000fd5b5050505060d454612621610761565b11156112be576040516324d758c360e21b815260040160405180910390fd5b600054610100900460ff166126675760405162461bcd60e51b8152600401610bb19061323f565b610fcc3361211a565b600054610100900460ff166126975760405162461bcd60e51b8152600401610bb19061323f565b6098805460ff19169055565b600054610100900460ff166126ca5760405162461bcd60e51b8152600401610bb19061323f565b610a3b82826129b4565b6040516001600160a01b0380851660248301528316604482015260648101829052611cac9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152612a02565b6001600160a01b0382166127ad5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610bb1565b80603560008282546127bf9190612fb8565b90915550506001600160a01b038216600090815260336020526040812080548392906127ec908490612fb8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166128965760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610bb1565b6001600160a01b0382166000908152603360205260409020548181101561290a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610bb1565b6001600160a01b038316600090815260336020526040812083830390556035805484929061293990849061328a565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b0383166024820152604481018290526112be90849063a9059cbb60e01b90606401612708565b600054610100900460ff166129db5760405162461bcd60e51b8152600401610bb19061323f565b81516129ee906036906020850190612be8565b5080516112be906037906020840190612be8565b6000612a57826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ad49092919063ffffffff16565b8051909150156112be5780806020019051810190612a759190613005565b6112be5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610bb1565b60606115988484600085856001600160a01b0385163b612b365760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bb1565b600080866001600160a01b03168587604051612b5291906132e2565b60006040518083038185875af1925050503d8060008114612b8f576040519150601f19603f3d011682016040523d82523d6000602084013e612b94565b606091505b5091509150612ba4828286612baf565b979650505050505050565b60608315612bbe5750816108a7565b825115612bce5782518084602001fd5b8160405162461bcd60e51b8152600401610bb19190612cad565b828054612bf490612fd0565b90600052602060002090601f016020900481019282612c165760008555612c5c565b82601f10612c2f57805160ff1916838001178555612c5c565b82800160010185558215612c5c579182015b82811115612c5c578251825591602001919060010190612c41565b50612c68929150612c6c565b5090565b5b80821115612c685760008155600101612c6d565b60005b83811015612c9c578181015183820152602001612c84565b83811115611cac5750506000910152565b6020815260008251806020840152612ccc816040850160208701612c81565b601f01601f19169190910160400192915050565b600060208284031215612cf257600080fd5b5035919050565b6001600160a01b0381168114611aa157600080fd5b60008060408385031215612d2157600080fd5b8235612d2c81612cf9565b946020939093013593505050565b600080600060608486031215612d4f57600080fd5b8335612d5a81612cf9565b92506020840135612d6a81612cf9565b929592945050506040919091013590565b600060208284031215612d8d57600080fd5b81356108a781612cf9565b60008083601f840112612daa57600080fd5b50813567ffffffffffffffff811115612dc257600080fd5b602083019150836020828501011115612dda57600080fd5b9250929050565b60008060008060008060808789031215612dfa57600080fd5b8635612e0581612cf9565b9550602087013567ffffffffffffffff80821115612e2257600080fd5b612e2e8a838b01612d98565b90975095506040890135915080821115612e4757600080fd5b50612e5489828a01612d98565b9094509250506060870135612e6881612cf9565b809150509295509295509295565b60008060408385031215612e8957600080fd5b823591506020830135612e9b81612cf9565b809150509250929050565b600060808284031215612eb857600080fd5b50919050565b600080600060608486031215612ed357600080fd5b83359250602084013591506040840135612eec81612cf9565b809150509250925092565b61ffff81168114611aa157600080fd5b600060208284031215612f1957600080fd5b81356108a781612ef7565b600080600060608486031215612f3957600080fd5b833592506020840135612f4b81612cf9565b91506040840135612eec81612cf9565b60008060408385031215612f6e57600080fd5b8235612f7981612cf9565b91506020830135612e9b81612cf9565b600060208284031215612f9b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612fcb57612fcb612fa2565b500190565b600181811c90821680612fe457607f821691505b60208210811415612eb857634e487b7160e01b600052602260045260246000fd5b60006020828403121561301757600080fd5b815180151581146108a757600080fd5b805161303281612cf9565b919050565b60006020828403121561304957600080fd5b81516108a781612cf9565b6040516101e0810167ffffffffffffffff8111828210171561308657634e487b7160e01b600052604160045260246000fd5b60405290565b60006020828403121561309e57600080fd5b6040516020810181811067ffffffffffffffff821117156130cf57634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff8116811461303257600080fd5b805164ffffffffff8116811461303257600080fd5b805161303281612ef7565b60006101e0828403121561312f57600080fd5b613137613054565b613141848461308c565b815261314f602084016130dc565b6020820152613160604084016130dc565b6040820152613171606084016130dc565b6060820152613182608084016130dc565b608082015261319360a084016130dc565b60a08201526131a460c084016130fc565b60c08201526131b560e08401613111565b60e08201526101006131c8818501613027565b908201526101206131da848201613027565b908201526101406131ec848201613027565b908201526101606131fe848201613027565b908201526101806132108482016130dc565b908201526101a06132228482016130dc565b908201526101c06132348482016130dc565b908201529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008282101561329c5761329c612fa2565b500390565b60008160001904831182151516156132bb576132bb612fa2565b500290565b6000826132dd57634e487b7160e01b600052601260045260246000fd5b500490565b600082516132f4818460208701612c81565b919091019291505056fea164736f6c634300080a000a';

type DnGmxSeniorVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxSeniorVaultMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxSeniorVaultMock__factory extends ContractFactory {
  constructor(...args: DnGmxSeniorVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxSeniorVaultMock> {
    return super.deploy(overrides || {}) as Promise<DnGmxSeniorVaultMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxSeniorVaultMock {
    return super.attach(address) as DnGmxSeniorVaultMock;
  }
  override connect(signer: Signer): DnGmxSeniorVaultMock__factory {
    return super.connect(signer) as DnGmxSeniorVaultMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxSeniorVaultMockInterface {
    return new utils.Interface(_abi) as DnGmxSeniorVaultMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxSeniorVaultMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxSeniorVaultMock;
  }
}
