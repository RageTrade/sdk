/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxSeniorVaultMock,
  DnGmxSeniorVaultMockInterface,
} from '../../../contracts/mocks/DnGmxSeniorVaultMock';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotBorrower',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrowerAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCapUpdate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxUtilizationBreached',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UsageCapExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'AllowancesGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newCap',
        type: 'uint256',
      },
    ],
    name: 'VaultCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_afterDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_beforeWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'borrow',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeStrategy',
    outputs: [
      {
        internalType: 'uint256',
        name: 'optimalUtilizationRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'baseVariableBorrowRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'variableRateSlope1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'variableRateSlope2',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getEthRewardsSplitRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'feeSplitRate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_poolAddressesProvider',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'leveragePool',
    outputs: [
      {
        internalType: 'contract ILeveragePool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxUtilizationBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'repay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
    ],
    name: 'setDnGmxJuniorVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_maxUtilizationBps',
        type: 'uint16',
      },
    ],
    name: 'setMaxUtilizationBps',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalUsdcBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: 'usdcBorrowed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrowerAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'cap',
        type: 'uint256',
      },
    ],
    name: 'updateBorrowCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'optimalUtilizationRate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'baseVariableBorrowRate',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'variableRateSlope1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'variableRateSlope2',
            type: 'uint256',
          },
        ],
        internalType: 'struct FeeSplitStrategy.Info',
        name: '_feeStrategy',
        type: 'tuple',
      },
    ],
    name: 'updateFeeStrategyParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'vaultCaps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506130a7806100206000396000f3fe608060405234801561001057600080fd5b50600436106103205760003560e01c80638da5cb5b116101a7578063bf9571f1116100ee578063d905777e11610097578063ef8b30f711610071578063ef8b30f7146106d0578063f2fde38b146106e3578063fdef5093146106f657600080fd5b8063d905777e1461067c578063dd62ed3e1461068f578063e3696edd146106c857600080fd5b8063c6e6f592116100c8578063c6e6f59214610643578063ce96cb7714610656578063d026c1231461066957600080fd5b8063bf9571f114610628578063c5ebeaec14610630578063c63d75b61461046357600080fd5b8063a457c2d711610150578063b3d7f6b91161012a578063b3d7f6b9146105ef578063b460af9414610602578063ba0876521461061557600080fd5b8063a457c2d7146105b6578063a9059cbb146105c9578063aa88fdc3146105dc57600080fd5b806395d89b411161018157806395d89b4114610588578063a22c75c614610590578063a31e553d146105a357600080fd5b80638da5cb5b1461052e578063949b22ae1461053f57806394bf804d1461057557600080fd5b8063395093511161026b57806370a082311161021457806377c718ae116101ee57806377c718ae146105005780638224f4e8146105085780638301d55a1461051b57600080fd5b806370a08231146104bc578063715018a6146104e5578063768e66d3146104ed57600080fd5b80635c975abb116102455780635c975abb1461048b578063613d25bb146104965780636e553f65146104a957600080fd5b80633950935114610450578063402d267d146104635780634cdad5061461047857600080fd5b806323b872dd116102cd578063313ce567116102a7578063313ce56714610401578063371fd8e61461041057806338d52e0f1461042557600080fd5b806323b872dd146103a65780632e66de26146103b9578063304ea9cb146103d957600080fd5b8063095ea7b3116102fe578063095ea7b3146103685780630a28a4771461038b57806318160ddd1461039e57600080fd5b806301e1d1141461032557806306fdde031461034057806307a2d13a14610355575b600080fd5b61032d610709565b6040519081526020015b60405180910390f35b61034861078f565b6040516103379190612a49565b61032d610363366004612a7c565b610821565b61037b610376366004612aaa565b610856565b6040519015158152602001610337565b61032d610399366004612a7c565b610870565b60355461032d565b61037b6103b4366004612ad6565b610898565b61032d6103c7366004612b17565b60d36020526000908152604090205481565b60d2546103ee90600160a01b900461ffff1681565b60405161ffff9091168152602001610337565b60405160128152602001610337565b61042361041e366004612a7c565b6108bc565b005b606554610438906001600160a01b031681565b6040516001600160a01b039091168152602001610337565b61037b61045e366004612aaa565b6109e7565b61032d610471366004612b17565b5060001990565b61032d610486366004612a7c565b610a26565b60985460ff1661037b565b6104236104a4366004612b7d565b610a31565b61032d6104b7366004612c12565b610dd2565b61032d6104ca366004612b17565b6001600160a01b031660009081526033602052604090205490565b610423610e4e565b6104236104fb366004612aaa565b610e62565b61032d611009565b60d254610438906001600160a01b031681565b610423610529366004612c42565b61112c565b6066546001600160a01b0316610438565b60cd5460ce5460cf5460d0546105559392919084565b604080519485526020850193909352918301526060820152608001610337565b61032d610583366004612c12565b611157565b6103486111d3565b61042361059e366004612c5a565b6111e2565b6104236105b1366004612ca3565b6111ed565b61037b6105c4366004612aaa565b611217565b61037b6105d7366004612aaa565b6112a9565b60d154610438906001600160a01b031681565b61032d6105fd366004612a7c565b6112b7565b61032d610610366004612cc0565b6112de565b61032d610623366004612cc0565b611363565b6104236113e0565b61042361063e366004612a7c565b61150c565b61032d610651366004612a7c565b6116cd565b61032d610664366004612b17565b6116f5565b610423610677366004612b17565b611717565b61032d61068a366004612b17565b611741565b61032d61069d366004612cf7565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61032d61175f565b61032d6106de366004612a7c565b6117e3565b6104236106f1366004612b17565b6117ee565b610423610704366004612c5a565b611867565b60cb546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190612d25565b9050610780611009565b61078a9082612d54565b905090565b60606036805461079e90612d6c565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca90612d6c565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b5050505050905090565b60008061082d60355490565b9050801561084d57610848610840610709565b849083611872565b61084f565b825b9392505050565b600033610864818585611891565b60019150505b92915050565b60008061087c60355490565b9050801561084d5761084881610890610709565b8591906119b5565b6000336108a68582856119e3565b6108b1858585611a75565b506001949350505050565b60d1546001600160a01b031633148015906108e2575060d2546001600160a01b03163314155b1561090057604051633c698d7960e01b815260040160405180910390fd5b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b505060cb546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b0390911692506323b872dd91506064016020604051808303816000875af11580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e39190612da1565b5050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906108649082908690610a21908790612d54565b611891565b600061086a82610821565b600054610100900460ff1615808015610a515750600054600160ff909116105b80610a6b5750303b158015610a6b575060005460ff166001145b610ad35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610af6576000805461ff0019166101001790555b610afe611c43565b610b06611c72565b610b7a8787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250611ca192505050565b60cc80546001600160a01b0319166001600160a01b0384169081179091556040805163026b1d5f60e01b8152905163026b1d5f916004808201926020929091908290030181865afa158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf79190612dd3565b60ca80546001600160a01b0319166001600160a01b039283169081179091556040516335ea6a7560e01b81529189166004830152906335ea6a75906024016101e060405180830381865afa158015610c53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c779190612eb8565b610100015160cb80546001600160a01b0319166001600160a01b0392831690811790915560ca5460405163095ea7b360e01b81529216600483015260001960248301529063095ea7b3906044016020604051808303816000875af1158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190612da1565b5060655460ca5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d829190612da1565b508015610dc9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b6000610ddc611ccf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e2c57600080fd5b505af1158015610e40573d6000803e3d6000fd5b5050505061084f8383611d15565b610e56611dd0565b610e606000611e2a565b565b610e6a611dd0565b60d1546001600160a01b03838116911614801590610e96575060d2546001600160a01b03838116911614155b15610eb4576040516348b905b160e01b815260040160405180910390fd5b80826001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ef3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f179190612d25565b1015610ff0576001600160a01b03828116600081815260d360205260409081902084905560cb54905163095ea7b360e01b81526004810192909252602482018490529091169063095ea7b3906044016020604051808303816000875af1158015610f85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa99190612da1565b50604080516001600160a01b0384168152602081018390527f5426038a9f9a7e7edc0a4cc34b10cd980407d113a1bb50b9a41baf230bfff3bf910160405180910390a15050565b604051633a020d0160e11b815260040160405180910390fd5b60d1546000906001600160a01b0316156110a15760d160009054906101000a90046001600160a01b03166001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611070573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110949190612d25565b61109e9082612d54565b90505b60d2546001600160a01b0316156111295760d260009054906101000a90046001600160a01b03166001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107809190612d25565b90565b611134611dd0565b803560cd55602081013560ce55604081013560cf556060013560d055565b505050565b6000611161611ccf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156111b157600080fd5b505af11580156111c5573d6000803e3d6000fd5b5050505061084f8383611e7c565b60606037805461079e90612d6c565b611152838383611efd565b6111f5611dd0565b60d2805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561129c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610aca565b6108b18286868403611891565b600033610864818585611a75565b6000806112c360355490565b9050801561084d576108486112d6610709565b8490836119b5565b60006112e8611ccf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561133857600080fd5b505af115801561134c573d6000803e3d6000fd5b5050505061135b848484611fdc565b949350505050565b600061136d611ccf565b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156113bd57600080fd5b505af11580156113d1573d6000803e3d6000fd5b5050505061135b8484846120ae565b6113e8611dd0565b60ca5460655460405163095ea7b360e01b81526001600160a01b03928316600482018190526000196024830152929091169063095ea7b3906044016020604051808303816000875af1158015611442573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114669190612da1565b5060cb5460405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af11580156114bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114df9190612da1565b506040517fba5bb3f899c7a3edcc9ff9d46c4e08449c6a608b6f8254132bc5af4898645cbc90600090a150565b60d1546001600160a01b03163314801590611532575060d2546001600160a01b03163314155b1561155057604051633c698d7960e01b815260040160405180910390fd5b60d160009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156115a057600080fd5b505af11580156115b4573d6000803e3d6000fd5b505050506000336001600160a01b03166395e2da7c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161c9190612d25565b33600090815260d360205260409020549091506116398383612d54565b10156116b45760cb5460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015611690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111529190612da1565b60405163676edded60e01b815260040160405180910390fd5b6000806116d960355490565b9050801561084d57610848816116ed610709565b859190611872565b6001600160a01b03811660009081526033602052604081205461086a90610821565b61171f611dd0565b60d180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526033602052604081205461086a565b60cb546040516370a0823160e01b815230600482015260009161078a916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156117ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d29190612d25565b6117da611009565b60cd91906121bb565b600061086a826116cd565b6117f6611dd0565b6001600160a01b03811661185b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610aca565b61186481611e2a565b50565b6111528383836122b8565b82820281151584158583048514171661188a57600080fd5b0492915050565b6001600160a01b0383166118f35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610aca565b6001600160a01b0382166119545760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610aca565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b8282028115158415858304851417166119cd57600080fd5b6001826001830304018115150290509392505050565b6001600160a01b038381166000908152603460209081526040808320938616835292905220546000198114611a6f5781811015611a625760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610aca565b611a6f8484848403611891565b50505050565b6001600160a01b038316611ad95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610aca565b6001600160a01b038216611b3b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610aca565b6001600160a01b03831660009081526033602052604090205481811015611bb35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610aca565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290611bea908490612d54565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c3691815260200190565b60405180910390a3611a6f565b600054610100900460ff16611c6a5760405162461bcd60e51b8152600401610aca90612fdb565b610e60612329565b600054610100900460ff16611c995760405162461bcd60e51b8152600401610aca90612fdb565b610e60612359565b611cab828261238c565b5050606580546001600160a01b0319166001600160a01b0392909216919091179055565b60985460ff1615610e605760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610aca565b6000611d20836117e3565b905080611d5d5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610aca565b606554611d75906001600160a01b03163330866123bd565b611d7f8282612440565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a361086a8382846122b8565b6066546001600160a01b03163314610e605760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610aca565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000611e87836112b7565b606554909150611ea2906001600160a01b03163330846123bd565b611eac8284612440565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a361086a8184846122b8565b60d25461271090600160a01b900461ffff1684611f18610709565b611f229190613026565b611f2c919061303d565b611f36919061305c565b611f3e611009565b1115611f5d57604051635276dbb960e01b815260040160405180910390fd5b60ca54606554604051631a4ca37b60e21b81526001600160a01b039182166004820152602481018690523060448201529116906369328dec906064016020604051808303816000875af1158015611fb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6f9190612d25565b6000611fe784610870565b9050336001600160a01b03831614612037576001600160a01b03821660009081526034602090815260408083203384529091529020546000198114612035576120358333610a218585613026565b505b612042848285611efd565b61204c828261251f565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a460655461084f906001600160a01b0316848661266d565b6000336001600160a01b038316146120fe576001600160a01b038216600090815260346020908152604080832033845290915290205460001981146120fc576120fc8333610a218885613026565b505b61210784610a26565b9050806121445760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610aca565b61214f818585611efd565b612159828561251f565b60408051828152602081018690526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a460655461084f906001600160a01b0316848361266d565b60008082156121ec576121e76c0c9f2c9cd04674edea400000006121df8587612d54565b85919061269d565b6121ef565b60005b855490915060009061220e906c0c9f2c9cd04674edea40000000613026565b865490915082111561228b5760006122456c0c9f2c9cd04674edea400000008389600001548661223e9190613026565b919061269d565b600388015490915061226590826c0c9f2c9cd04674edea4000000061269d565b876002015488600101546122799190612d54565b6122839190612d54565b9350506122af565b6002860154865461229d91849161269d565b86600101546122ac9190612d54565b92505b50509392505050565b60ca5460655460405163617ba03760e01b81526001600160a01b039182166004820152602481018690523060448201526000606482015291169063617ba03790608401600060405180830381600087803b15801561231557600080fd5b505af1158015610dc9573d6000803e3d6000fd5b600054610100900460ff166123505760405162461bcd60e51b8152600401610aca90612fdb565b610e6033611e2a565b600054610100900460ff166123805760405162461bcd60e51b8152600401610aca90612fdb565b6098805460ff19169055565b600054610100900460ff166123b35760405162461bcd60e51b8152600401610aca90612fdb565b6109e38282612750565b6040516001600160a01b0380851660248301528316604482015260648101829052611a6f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261279e565b6001600160a01b0382166124965760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610aca565b80603560008282546124a89190612d54565b90915550506001600160a01b038216600090815260336020526040812080548392906124d5908490612d54565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661257f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610aca565b6001600160a01b038216600090815260336020526040902054818110156125f35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610aca565b6001600160a01b0383166000908152603360205260408120838303905560358054849290612622908490613026565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6040516001600160a01b03831660248201526044810182905261115290849063a9059cbb60e01b906064016123f1565b6000808060001985870985870292508281108382030391505080600014156126d757600084116126cc57600080fd5b50829004905061084f565b8084116126e357600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600054610100900460ff166127775760405162461bcd60e51b8152600401610aca90612fdb565b815161278a906036906020850190612984565b508051611152906037906020840190612984565b60006127f3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128709092919063ffffffff16565b80519091501561115257808060200190518101906128119190612da1565b6111525760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610aca565b606061135b8484600085856001600160a01b0385163b6128d25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610aca565b600080866001600160a01b031685876040516128ee919061307e565b60006040518083038185875af1925050503d806000811461292b576040519150601f19603f3d011682016040523d82523d6000602084013e612930565b606091505b509150915061294082828661294b565b979650505050505050565b6060831561295a57508161084f565b82511561296a5782518084602001fd5b8160405162461bcd60e51b8152600401610aca9190612a49565b82805461299090612d6c565b90600052602060002090601f0160209004810192826129b257600085556129f8565b82601f106129cb57805160ff19168380011785556129f8565b828001600101855582156129f8579182015b828111156129f85782518255916020019190600101906129dd565b50612a04929150612a08565b5090565b5b80821115612a045760008155600101612a09565b60005b83811015612a38578181015183820152602001612a20565b83811115611a6f5750506000910152565b6020815260008251806020840152612a68816040850160208701612a1d565b601f01601f19169190910160400192915050565b600060208284031215612a8e57600080fd5b5035919050565b6001600160a01b038116811461186457600080fd5b60008060408385031215612abd57600080fd5b8235612ac881612a95565b946020939093013593505050565b600080600060608486031215612aeb57600080fd5b8335612af681612a95565b92506020840135612b0681612a95565b929592945050506040919091013590565b600060208284031215612b2957600080fd5b813561084f81612a95565b60008083601f840112612b4657600080fd5b50813567ffffffffffffffff811115612b5e57600080fd5b602083019150836020828501011115612b7657600080fd5b9250929050565b60008060008060008060808789031215612b9657600080fd5b8635612ba181612a95565b9550602087013567ffffffffffffffff80821115612bbe57600080fd5b612bca8a838b01612b34565b90975095506040890135915080821115612be357600080fd5b50612bf089828a01612b34565b9094509250506060870135612c0481612a95565b809150509295509295509295565b60008060408385031215612c2557600080fd5b823591506020830135612c3781612a95565b809150509250929050565b600060808284031215612c5457600080fd5b50919050565b600080600060608486031215612c6f57600080fd5b83359250602084013591506040840135612c8881612a95565b809150509250925092565b61ffff8116811461186457600080fd5b600060208284031215612cb557600080fd5b813561084f81612c93565b600080600060608486031215612cd557600080fd5b833592506020840135612ce781612a95565b91506040840135612c8881612a95565b60008060408385031215612d0a57600080fd5b8235612d1581612a95565b91506020830135612c3781612a95565b600060208284031215612d3757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612d6757612d67612d3e565b500190565b600181811c90821680612d8057607f821691505b60208210811415612c5457634e487b7160e01b600052602260045260246000fd5b600060208284031215612db357600080fd5b8151801515811461084f57600080fd5b8051612dce81612a95565b919050565b600060208284031215612de557600080fd5b815161084f81612a95565b6040516101e0810167ffffffffffffffff81118282101715612e2257634e487b7160e01b600052604160045260246000fd5b60405290565b600060208284031215612e3a57600080fd5b6040516020810181811067ffffffffffffffff82111715612e6b57634e487b7160e01b600052604160045260246000fd5b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff81168114612dce57600080fd5b805164ffffffffff81168114612dce57600080fd5b8051612dce81612c93565b60006101e08284031215612ecb57600080fd5b612ed3612df0565b612edd8484612e28565b8152612eeb60208401612e78565b6020820152612efc60408401612e78565b6040820152612f0d60608401612e78565b6060820152612f1e60808401612e78565b6080820152612f2f60a08401612e78565b60a0820152612f4060c08401612e98565b60c0820152612f5160e08401612ead565b60e0820152610100612f64818501612dc3565b90820152610120612f76848201612dc3565b90820152610140612f88848201612dc3565b90820152610160612f9a848201612dc3565b90820152610180612fac848201612e78565b908201526101a0612fbe848201612e78565b908201526101c0612fd0848201612e78565b908201529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008282101561303857613038612d3e565b500390565b600081600019048311821515161561305757613057612d3e565b500290565b60008261307957634e487b7160e01b600052601260045260246000fd5b500490565b60008251613090818460208701612a1d565b919091019291505056fea164736f6c634300080a000a';

type DnGmxSeniorVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxSeniorVaultMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxSeniorVaultMock__factory extends ContractFactory {
  constructor(...args: DnGmxSeniorVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxSeniorVaultMock> {
    return super.deploy(overrides || {}) as Promise<DnGmxSeniorVaultMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxSeniorVaultMock {
    return super.attach(address) as DnGmxSeniorVaultMock;
  }
  override connect(signer: Signer): DnGmxSeniorVaultMock__factory {
    return super.connect(signer) as DnGmxSeniorVaultMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxSeniorVaultMockInterface {
    return new utils.Interface(_abi) as DnGmxSeniorVaultMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxSeniorVaultMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxSeniorVaultMock;
  }
}
