/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  BalancerVaultMock,
  BalancerVaultMockInterface,
} from '../../../../contracts/mocks/balancer/BalancerVaultMock';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeAmount',
        type: 'uint256',
      },
    ],
    name: 'FlashLoan',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'userData',
        type: 'bytes',
      },
    ],
    name: 'flashLoan',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610bae806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635c38449e14610030575b600080fd5b61004361003e3660046108f9565b610045565b005b6000835167ffffffffffffffff811115610061576100616107b3565b60405190808252806020026020018201604052801561008a578160200160208202803683370190505b5090506000845167ffffffffffffffff8111156100a9576100a96107b3565b6040519080825280602002602001820160405280156100d2578160200160208202803683370190505b5090506000805b865181101561035b57816001600160a01b03168782815181106100fe576100fe6109f0565b60200260200101516001600160a01b0316116101725760405162461bcd60e51b815260206004820152602860248201527f42616c616e6365725661756c744d6f636b3a20746f6b656e73206d757374206260448201526719481cdbdc9d195960c21b60648201526084015b60405180910390fd5b868181518110610184576101846109f0565b602002602001015191508681815181106101a0576101a06109f0565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102149190610a06565b848281518110610226576102266109f0565b602002602001018181525050858181518110610244576102446109f0565b602002602001015184828151811061025e5761025e6109f0565b602002602001015110156102da5760405162461bcd60e51b815260206004820152603460248201527f42616c616e6365725661756c744d6f636b3a20696e73756666696369656e742060448201527f62616c616e636520746f20666c6173686c6f616e0000000000000000000000006064820152608401610169565b61032a888783815181106102f0576102f06109f0565b602002602001015189848151811061030a5761030a6109f0565b60200260200101516001600160a01b03166104eb9092919063ffffffff16565b600083828151811061033e5761033e6109f0565b60209081029190910101528061035381610a1f565b9150506100d9565b5060405163f04f270760e01b81526001600160a01b0388169063f04f27079061038e908990899087908a90600401610ad1565b600060405180830381600087803b1580156103a857600080fd5b505af11580156103bc573d6000803e3d6000fd5b5050505060005b86518110156104e15760008782815181106103e0576103e06109f0565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610a06565b9050848281518110610468576104686109f0565b60200260200101518110156104ce5760405162461bcd60e51b815260206004820152602660248201527f42616c616e6365725661756c744d6f636b3a20616d6f756e74206e6f742072656044820152651d1d5c9b995960d21b6064820152608401610169565b50806104d981610a1f565b9150506103c3565b5050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261053d908490610542565b505050565b6000610597826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106149092919063ffffffff16565b80519091501561053d57808060200190518101906105b59190610b50565b61053d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610169565b6060610623848460008561062d565b90505b9392505050565b60608247101561068e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610169565b6001600160a01b0385163b6106e55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b600080866001600160a01b031685876040516107019190610b72565b60006040518083038185875af1925050503d806000811461073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b509150915061075382828661075e565b979650505050505050565b6060831561076d575081610626565b82511561077d5782518084602001fd5b8160405162461bcd60e51b81526004016101699190610b8e565b80356001600160a01b03811681146107ae57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107f2576107f26107b3565b604052919050565b600067ffffffffffffffff821115610814576108146107b3565b5060051b60200190565b600082601f83011261082f57600080fd5b8135602061084461083f836107fa565b6107c9565b82815260059290921b8401810191818101908684111561086357600080fd5b8286015b8481101561087e5780358352918301918301610867565b509695505050505050565b600082601f83011261089a57600080fd5b813567ffffffffffffffff8111156108b4576108b46107b3565b6108c7601f8201601f19166020016107c9565b8181528460208386010111156108dc57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561090f57600080fd5b61091885610797565b935060208086013567ffffffffffffffff8082111561093657600080fd5b818801915088601f83011261094a57600080fd5b813561095861083f826107fa565b81815260059190911b8301840190848101908b83111561097757600080fd5b938501935b8285101561099c5761098d85610797565b8252938501939085019061097c565b9750505060408801359250808311156109b457600080fd5b6109c089848a0161081e565b945060608801359250808311156109d657600080fd5b50506109e487828801610889565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610a1857600080fd5b5051919050565b600060018201610a3f57634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526020808501945080840160005b83811015610a7657815187529582019590820190600101610a5a565b509495945050505050565b60005b83811015610a9c578181015183820152602001610a84565b50506000910152565b60008151808452610abd816020860160208601610a81565b601f01601f19169290920160200192915050565b6080808252855190820181905260009060209060a0840190828901845b82811015610b135781516001600160a01b031684529284019290840190600101610aee565b50505083810382850152610b278188610a46565b9150508281036040840152610b3c8186610a46565b905082810360608401526107538185610aa5565b600060208284031215610b6257600080fd5b8151801515811461062657600080fd5b60008251610b84818460208701610a81565b9190910192915050565b6020815260006106266020830184610aa556fea164736f6c6343000811000a';

type BalancerVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BalancerVaultMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BalancerVaultMock__factory extends ContractFactory {
  constructor(...args: BalancerVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BalancerVaultMock> {
    return super.deploy(overrides || {}) as Promise<BalancerVaultMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BalancerVaultMock {
    return super.attach(address) as BalancerVaultMock;
  }
  override connect(signer: Signer): BalancerVaultMock__factory {
    return super.connect(signer) as BalancerVaultMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalancerVaultMockInterface {
    return new utils.Interface(_abi) as BalancerVaultMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalancerVaultMock {
    return new Contract(address, _abi, signerOrProvider) as BalancerVaultMock;
  }
}
