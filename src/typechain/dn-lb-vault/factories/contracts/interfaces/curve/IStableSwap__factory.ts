/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IStableSwap,
  IStableSwapInterface,
} from '../../../../contracts/interfaces/curve/IStableSwap';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'i',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'j',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'dx',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'min_dy',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'use_eth',
        type: 'bool',
      },
    ],
    name: 'exchange',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'i',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'j',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'dx',
        type: 'uint256',
      },
    ],
    name: 'get_dy',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class IStableSwap__factory {
  static readonly abi = _abi;
  static createInterface(): IStableSwapInterface {
    return new utils.Interface(_abi) as IStableSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStableSwap {
    return new Contract(address, _abi, signerOrProvider) as IStableSwap;
  }
}
