/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  LeveragePool,
  LeveragePoolInterface,
} from '../../../../contracts/vaults/LeveragePool.sol/LeveragePool';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCollateralFactor',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'InvalidLiquidation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotEnoughMargin',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UsageCapExceeded',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_BPS',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'borrowIndex',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'borrowRateBps',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'shareAmount',
        type: 'uint128',
      },
    ],
    name: 'depositShare',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'shareAmount',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'usdcAmount',
        type: 'uint128',
      },
    ],
    name: 'depositShareAndBorrow',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getUsdcBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialCfBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastUpdateTs',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'liquidate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maintainanceCfBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'repay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdc',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        internalType: 'uint128',
        name: 'glpBalance',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'depositedShares',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'shareAmount',
        type: 'uint128',
      },
    ],
    name: 'withdrawShare',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506116bc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638129fc1c116100ad578063ace69c9211610071578063ace69c92146102d0578063b0b260ab146102e3578063c76b23c61461031f578063f2fde38b14610332578063fd967f471461034557600080fd5b80638129fc1c146102615780638a5e6aca146102695780638da5cb5b1461027e57806395e2da7c1461028f578063aa5af0fd146102a557600080fd5b8063393e5cba116100f4578063393e5cba146101dd5780633e413bee14610205578063415b6b9d146102305780635c975abb14610243578063715018a61461025957600080fd5b806307c70e2b146101265780630ba36dcd146101575780632f865568146101b7578063371fd8e6146101cc575b600080fd5b609c5461013d90600160801b900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b610192610165366004611442565b609d60205260009081526040902080546001909101546001600160801b0380821691600160801b90041683565b604080519384526001600160801b03928316602085015291169082015260600161014e565b6101ca6101c5366004611442565b61034e565b005b6101ca6101da36600461146b565b50565b609c546101f290600160a01b900461ffff1681565b60405161ffff909116815260200161014e565b609754610218906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b6101ca61023e366004611499565b61038c565b60655460ff16604051901515815260200161014e565b6101ca610676565b6101ca61068a565b609c546101f290600160b01b900461ffff1681565b6033546001600160a01b0316610218565b6102976107b5565b60405190815260200161014e565b609c546102b8906001600160801b031681565b6040516001600160801b03909116815260200161014e565b6101ca6102de366004611499565b610828565b609b5461030290600160a01b90046bffffffffffffffffffffffff1681565b6040516bffffffffffffffffffffffff909116815260200161014e565b6101ca61032d3660046114b6565b6109ec565b6101ca610340366004611442565b610d89565b6101f261271081565b610356610dff565b61035f81610e59565b156101da57604051628fcb5d60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b336000908152609d602090815260408083208151606081018352815481526001909101546001600160801b0380821694830194909452600160801b900490921682820152609b54609a54915163a7b23fcf60e01b81526001600160a01b03928316600482015292939291169063a7b23fcf90602401602060405180830381865afa15801561041e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044291906114ef565b905061044e8282610ffa565b9150604051806060016040528082815260200183602001516001600160801b03168152602001848460400151610484919061151e565b6001600160801b03908116909152336000818152609d6020908152604091829020855181559085015194909101518316600160801b0293909216929092176001909101556104d190610e59565b6104ee5760405163866b8cab60e01b815260040160405180910390fd5b609b54609a546040516320d9caad60e01b81526001600160a01b03918216600482018190523060248301819052929093169263996cba6892909184906320d9caad90604401602060405180830381865afa158015610550573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057491906114ef565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b1580156105db57600080fd5b505af11580156105ef573d6000803e3d6000fd5b5050609a5460405163a9059cbb60e01b81523360048201526001600160801b03871660248201526001600160a01b03909116925063a9059cbb91506044016020604051808303816000875af115801561064c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106709190611556565b50505050565b61067e610dff565b6106886000611122565b565b600054610100900460ff16158080156106aa5750600054600160ff909116105b806106c45750303b1580156106c4575060005460ff166001145b6107275760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610383565b6000805460ff19166001179055801561074a576000805461ff0019166101001790555b610752611174565b61075a6111a3565b609c80546001600160a01b031916600117905580156101da576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b609954604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082391906114ef565b905090565b336000908152609d602090815260408083208151606081018352815481526001909101546001600160801b0380821694830194909452600160801b900490921682820152609b54609a54915163a7b23fcf60e01b81526001600160a01b03928316600482015292939291169063a7b23fcf90602401602060405180830381865afa1580156108ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108de91906114ef565b90506108ea8282610ffa565b609a546040516323b872dd60e01b81523360048201523060248201526001600160801b03861660448201529193506001600160a01b0316906323b872dd906064016020604051808303816000875af115801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e9190611556565b50604051806060016040528082815260200183602001516001600160801b031681526020018484604001516109a39190611571565b6001600160801b03908116909152336000908152609d6020908152604091829020845181559084015193909101518216600160801b029290911691909117600190910155505050565b336000908152609d602090815260408083208151606081018352815481526001909101546001600160801b0380821694830194909452600160801b900490921682820152609b54609a54915163a7b23fcf60e01b81526001600160a01b03928316600482015292939291169063a7b23fcf90602401602060405180830381865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa291906114ef565b9050610aae8282610ffa565b609a546040516323b872dd60e01b81523360048201523060248201526001600160801b03871660448201529193506001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190611556565b50610b3b6111d2565b609954609c5460405163b3f1c93d60e01b8152336004820181905260248201526001600160801b03808716604483015290911660648201526001600160a01b039091169063b3f1c93d9060840160408051808303816000875af1158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca919061159c565b505060985460405163317afabb60e21b81526001600160801b03851660048201526001600160a01b039091169063c5ebeaec90602401600060405180830381600087803b158015610c1a57600080fd5b505af1158015610c2e573d6000803e3d6000fd5b5050609b54609a5460975460405163c5384e6b60e01b81526001600160a01b03928316600482015290821660248201526001600160801b03881660448201526000606482018190523060848301529450610cd7935091169063c5384e6b9060a4016020604051808303816000875af1158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd291906114ef565b611310565b90506040518060600160405280838152602001828560200151610cfa9190611571565b6001600160801b03168152602001868560400151610d189190611571565b6001600160801b03908116909152336000818152609d6020908152604091829020855181559085015194909101518316600160801b029390921692909217600190910155610d6590610e59565b610d825760405163866b8cab60e01b815260040160405180910390fd5b5050505050565b610d91610dff565b6001600160a01b038116610df65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610383565b6101da81611122565b6033546001600160a01b031633146106885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610383565b6001600160a01b038181166000908152609d6020526040808220609a54600182015492516303d1689d60e11b81526001600160801b03600160801b850481166004830152949592948694929093169263554070bc92169083906307a2d13a90602401602060405180830381865afa158015610ed8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efc91906114ef565b610f0691906115c8565b6040518263ffffffff1660e01b8152600401610f2491815260200190565b602060405180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6591906114ef565b6099546040516370a0823160e01b81526001600160a01b0387811660048301529293509116906370a0823190602401602060405180830381865afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd591906114ef565b609c54610ff1908390600160b01b900461ffff1661271061132b565b10949350505050565b6040805160608101825260008082526020820181905291015281518290821180156110325750600083602001516001600160801b0316115b1561111c57609b54609a54845160405163da5678bd60e01b81526001600160a01b0392831660048201526024810191909152600092919091169063da5678bd906044016040805180830381865afa158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b591906115e0565b90506110f6610cd282602001516001600160801b031683600001516001600160801b031687602001516001600160801b031661132b9092919063ffffffff16565b826040018181516111079190611571565b6001600160801b031690525050600060208201525b92915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661119b5760405162461bcd60e51b81526004016103839061164d565b6106886113df565b600054610100900460ff166111ca5760405162461bcd60e51b81526004016103839061164d565b61068861140f565b609b546000906111f790600160a01b90046bffffffffffffffffffffffff1642611698565b9050609960009054906101000a90046001600160a01b03166001600160a01b031663b1bf962d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127091906114ef565b156101da57609c546112bf90610cd290600160801b900463ffffffff166127106112b86112a1866301e133806115c8565b609c546001600160801b0316906301e1338061132b565b919061132b565b609c80546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905550609b80546001600160a01b0316600160a01b426bffffffffffffffffffffffff1602179055565b806001600160801b038116811461132657600080fd5b919050565b600080806000198587098587029250828110838203039150508060001415611365576000841161135a57600080fd5b5082900490506113d8565b80841161137157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b600054610100900460ff166114065760405162461bcd60e51b81526004016103839061164d565b61068833611122565b600054610100900460ff166114365760405162461bcd60e51b81526004016103839061164d565b6065805460ff19169055565b60006020828403121561145457600080fd5b81356001600160a01b03811681146113d857600080fd5b60006020828403121561147d57600080fd5b5035919050565b6001600160801b03811681146101da57600080fd5b6000602082840312156114ab57600080fd5b81356113d881611484565b600080604083850312156114c957600080fd5b82356114d481611484565b915060208301356114e481611484565b809150509250929050565b60006020828403121561150157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006001600160801b038381169083168181101561153e5761153e611508565b039392505050565b8051801515811461132657600080fd5b60006020828403121561156857600080fd5b6113d882611546565b60006001600160801b0380831681851680830382111561159357611593611508565b01949350505050565b600080604083850312156115af57600080fd5b6115b883611546565b9150602083015190509250929050565b600082198211156115db576115db611508565b500190565b6000604082840312156115f257600080fd5b6040516040810181811067ffffffffffffffff8211171561162357634e487b7160e01b600052604160045260246000fd5b604052825161163181611484565b8152602083015161164181611484565b60208201529392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000828210156116aa576116aa611508565b50039056fea164736f6c634300080a000a';

type LeveragePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LeveragePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LeveragePool__factory extends ContractFactory {
  constructor(...args: LeveragePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LeveragePool> {
    return super.deploy(overrides || {}) as Promise<LeveragePool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LeveragePool {
    return super.attach(address) as LeveragePool;
  }
  override connect(signer: Signer): LeveragePool__factory {
    return super.connect(signer) as LeveragePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LeveragePoolInterface {
    return new utils.Interface(_abi) as LeveragePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LeveragePool {
    return new Contract(address, _abi, signerOrProvider) as LeveragePool;
  }
}
