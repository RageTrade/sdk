/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  DnGmxJuniorVaultStorage,
  DnGmxJuniorVaultStorageInterface,
} from '../../../../contracts/vaults/DnGmxJuniorVaultStorage.sol/DnGmxJuniorVaultStorage';

const _abi = [
  {
    inputs: [],
    name: 'FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_BPS',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PRICE_PRECISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'USDG_DECIMALS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VARIABLE_INTEREST_MODE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WETH_DECIMALS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxSeniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxSeniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeRecipient',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastRebalanceTS',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalanceDeltaThreshold',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalanceTimeThreshold',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'seniorVaultWethConversionThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'seniorVaultWethRewards',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdcConversionThreshold',
    outputs: [
      {
        internalType: 'uint240',
        name: '',
        type: 'uint240',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdcRedeemSlippage',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wethThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawFeeBps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526103e860005534801561001657600080fd5b50610308806100266000396000f3fe608060405234801561001057600080fd5b50600436106101475760003560e01c806395082d25116100c8578063c57981b51161008c578063dbd5edc711610066578063dbd5edc7146102e0578063e18d1517146102e9578063fd967f47146102f257600080fd5b8063c57981b5146102ce578063d08aef7c1461027c578063d24aeaee146102d757600080fd5b806395082d251461028d578063a10c0250146102a1578063aced1661146102a9578063ad234d14146102bc578063b0e21e8a146102c557600080fd5b806354b633ae1161010f57806354b633ae1461022557806376533b921461023a5780637aca2b5914610265578063870d917c1461027c5780639024350b1461028457600080fd5b80631e35fed11461014c5780631f6804991461017c5780633f6be822146101ae57806346904840146101e05780634afe813e146101f3575b600080fd5b60025461015f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600c5461019b906d0100000000000000000000000000900461ffff1681565b60405161ffff9091168152602001610173565b600c546101c790610100900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610173565b60035461015f906001600160a01b031681565b600c54610210906901000000000000000000900463ffffffff1681565b60405163ffffffff9091168152602001610173565b60165461019b90600160a01b900461ffff1681565b60175461024d906001600160f01b031681565b6040516001600160f01b039091168152602001610173565b61026e60045481565b604051908152602001610173565b61026e601281565b61026e60095481565b61026e6c7e37be2022c0914b268000000081565b61026e600281565b60015461015f906001600160a01b031681565b61026e60065481565b61026e60055481565b61026e60005481565b61026e60085481565b61026e600a5481565b61026e60075481565b61019b6127108156fea164736f6c634300080a000a';

type DnGmxJuniorVaultStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxJuniorVaultStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxJuniorVaultStorage__factory extends ContractFactory {
  constructor(...args: DnGmxJuniorVaultStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxJuniorVaultStorage> {
    return super.deploy(overrides || {}) as Promise<DnGmxJuniorVaultStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxJuniorVaultStorage {
    return super.attach(address) as DnGmxJuniorVaultStorage;
  }
  override connect(signer: Signer): DnGmxJuniorVaultStorage__factory {
    return super.connect(signer) as DnGmxJuniorVaultStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxJuniorVaultStorageInterface {
    return new utils.Interface(_abi) as DnGmxJuniorVaultStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxJuniorVaultStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxJuniorVaultStorage;
  }
}
