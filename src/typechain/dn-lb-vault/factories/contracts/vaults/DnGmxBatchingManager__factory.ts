/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxBatchingManager,
  DnGmxBatchingManagerInterface,
} from '../../../contracts/vaults/DnGmxBatchingManager';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoUsdcBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchStake',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThresholdGmx',
        type: 'uint256',
      },
    ],
    name: 'ThresholdsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'VaultDeposit',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'depositUsdc',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVaultGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchStake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalUsdc',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundUsdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThresholdGmx',
        type: 'uint256',
      },
    ],
    name: 'setThresholds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThresholdGmx',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'usdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'usdcBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpStaked',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundUsdcBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611be2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80638a19c8bc116100f9578063ab504ad511610097578063ca0ede5011610071578063ca0ede5014610406578063cc2a9a5b1461040f578063dae115f614610422578063f2fde38b146104a557600080fd5b8063ab504ad5146103d8578063aced1661146103eb578063bf9571f1146103fe57600080fd5b806395815788116100d3578063958157881461039657806399c6d2de1461039f578063aa88fdc3146103b2578063aad3ec96146103c557600080fd5b80638a19c8bc146103385780638d100017146103415780638da5cb5b1461037157600080fd5b8063584150751161016657806360fecd861161014057806360fecd861461030c57806369026e8814610315578063715018a61461031d578063748747e61461032557600080fd5b806358415075146102e55780635c7f3c71146102ee5780635c975abb146102f657600080fd5b8063180282b311610197578063180282b3146102c05780633f955131146102ca5780635157ced5146102dd57600080fd5b806301df331d146101be5780630ba36dcd146101e4578063106846671461028a575b600080fd5b6101d16101cc366004611930565b6104b8565b6040519081526020015b60405180910390f35b6102576101f2366004611960565b6040805160608082018352600080835260208084018290529284018190526001600160a01b039490941684526101078252928290208251938401835280548452600101546001600160801b0380821692850192909252600160801b9004169082015290565b60408051825181526020808401516001600160801b039081169183019190915292820151909216908201526060016101db565b6101d1610298366004611960565b6001600160a01b0316600090815261010760205260409020600101546001600160801b031690565b6102c8610734565b005b6102c86102d836600461197d565b610811565b6102c8610855565b6101d160fe5481565b6102c8610888565b60655460ff1660405190151581526020016101db565b6101d160fd5481565b6102c8610933565b6102c861095e565b6102c8610333366004611960565b610970565b610104546101d1565b61010454610105546101065461035692919083565b604080519384526020840192909252908201526060016101db565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101db565b610105546101d1565b6101d16103ad366004611996565b6109c6565b60fc5461037e906001600160a01b031681565b6102c86103d33660046119cb565b610b46565b6101d16103e6366004611960565b610d77565b60fb5461037e906001600160a01b031681565b6102c8610e5c565b610106546101d1565b6102c861041d3660046119f7565b610ee1565b61047e61043036600461197d565b604080518082019091526000808252602082015250600090815261010860209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b6040805182516001600160801b0390811682526020938401511692810192909252016101db565b6102c86104b3366004611960565b61100e565b60006104c2611084565b826000036104eb5760405163b80480b160e01b8152602160048201526024015b60405180910390fd5b6001600160a01b0382166105155760405163b80480b160e01b8152602260048201526024016104e2565b610100546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561056d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105919190611a79565b506001600160a01b03821660009081526101076020526040902060018101548154610104546001600160801b0390921691811080156105d957506000826001600160801b0316115b1561066b576000818152610108602052604090208054600185015461061d91610618916001600160801b0390811691600160801b8104821691166110ca565b61117d565b600185018054601090610641908490600160801b90046001600160801b0316611ab1565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060009250505b61010454835561067a8661117d565b6106849083611ab1565b6001840180546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790556106b88661117d565b6001600160801b031661010460020160008282546106d69190611ad8565b9091555050610100546101045460408051898152602081018890526001600160a01b03898116941692917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a450505092915050565b60655460ff161561074757610747611198565b60fe54156108075760fe8054600090915560ff5460fc5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af11580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190611a79565b506040518181527fabf360404ae6ccd945919fc14edb22686b6941aeee15d786c7047e4a0107eba59060200160405180910390a1505b61080f6111ea565b565b610819611353565b60fd8190556040518181527fe926d7299feb4b516b5458f5eb2f94d6af102302a936cb45f0b8d287b502a21b906020015b60405180910390a150565b60fb546001600160a01b03163314610880576040516304e1fa9f60e01b815260040160405180910390fd5b61080f611198565b610890611084565b60fb546001600160a01b031633146108bb576040516304e1fa9f60e01b815260040160405180910390fd5b60fc60009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561090b57600080fd5b505af115801561091f573d6000803e3d6000fd5b5050505061092b6113ad565b61080f61151f565b60fb546001600160a01b0316331461092b576040516304e1fa9f60e01b815260040160405180910390fd5b610966611353565b61080f600061155c565b610978611353565b60fb80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9060200161084a565b60006109d0611084565b60fc546001600160a01b031633146109fb5760405163edd7338f60e01b815260040160405180910390fd5b6001600160a01b038416610a255760405163b80480b160e01b8152603060048201526024016104e2565b82600003610a495760405163b80480b160e01b8152603160048201526024016104e2565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac09190611a79565b50610acc8484846115ae565b9050610ad78161117d565b6001600160801b031660fe6000828254610af19190611ad8565b9091555050604080518481526020810183905233916001600160a01b038716916000917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a49392505050565b6001600160a01b038216610b705760405163b80480b160e01b8152601060048201526024016104e2565b80600003610b945760405163b80480b160e01b8152601160048201526024016104e2565b3360009081526101076020526040902060018101548154610104546001600160801b0380841693600160801b900416919081108015610bdc57506000836001600160801b0316115b15610c3f576000818152610108602052604090208054610c1690610618906001600160801b0387811691600160801b8104821691166110ca565b610c209084611ab1565b6001860180546fffffffffffffffffffffffffffffffff191690559250505b50610c498461117d565b6001600160801b0316816001600160801b03161015610c86576040516307f885ff60e21b81526001600160801b03821660048201526024016104e2565b610c8f8461117d565b610c999082611af1565b6001840180546001600160801b03928316600160801b02921691909117905560fc5460405163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015610d0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2f9190611a79565b506040518481526001600160a01b0386169033907f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a9060200160405180910390a35050505050565b6001600160a01b03811660009081526101076020908152604091829020825160608101845281548082526001909201546001600160801b0380821694830194909452600160801b900490921692820183905261010454118015610de75750600081602001516001600160801b0316115b15610e56578051600090815261010860209081526040918290208251808401909352546001600160801b03808216808552600160801b909204811684840181905292850151610e3f93610618939190921691906110ca565b610e52906001600160801b031684611ad8565b9250505b50919050565b610e64611353565b60ff5460fc5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede9190611a79565b50565b600054610100900460ff1615808015610f015750600054600160ff909116105b80610f1b5750303b158015610f1b575060005460ff166001145b610f7e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104e2565b6000805460ff191660011790558015610fa1576000805461ff0019166101001790555b610fa96116b7565b610fb16116e6565b610fbf878787878787611715565b8015611005576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b611016611353565b6001600160a01b03811661107b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e2565b610ede8161155c565b60655460ff161561080f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e2565b600080806000198587098587029250828110838203039150508060000361110357600084116110f857600080fd5b508290049050611176565b80841161110f57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b806001600160801b038116811461119357600080fd5b919050565b6111a0611866565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610105546000036111f757565b60fc5461010554604051636e553f6560e01b815260048101919091523060248201526000916001600160a01b031690636e553f65906044016020604051808303816000875af115801561124e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112729190611b11565b9050604051806040016040528061128e6101046002015461117d565b6001600160801b031681526020016112a58361117d565b6001600160801b039081169091526101048054600090815261010860209081526040918290208551958201518516600160801b029590941694909417909255546101065461010554835191825293810193909352908201839052907fc69cec55f6364843f1bd00b1f28399f11345b53d1f2577e1048d34d216932c279060600160405180910390a26000610106819055610105819055610104805490919061134c90611b2a565b9091555050565b6033546001600160a01b0316331461080f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e2565b6101065460008190036113ec576040517fff57c67200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61010254610100546040516340d3096b60e11b81526001600160a01b03918216600482015260009291909116906381a612d690602401602060405180830381865afa15801561143f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114639190611b11565b905060006114b460fd5461271061147a9190611b43565b6114898464e8d4a51000611b56565b6114939190611b56565b6114ac6127106c0c9f2c9cd04674edea40000000611b56565b8591906110ca565b610100549091506114cf906001600160a01b031684836115ae565b6101058190556101045460405190917f48c3ff184c57818bf226589be0a871b387827c42b767756992efc70db2cd0edb9161151291878252602082015260400190565b60405180910390a2505050565b611527611084565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111cd3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6101015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905260009185169063095ea7b3906044016020604051808303816000875af1158015611604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116289190611a79565b506101035460405163364e231160e01b81526001600160a01b0386811660048301526024820186905260448201859052600060648301529091169063364e2311906084016020604051808303816000875af115801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190611b11565b949350505050565b600054610100900460ff166116de5760405162461bcd60e51b81526004016104e290611b6d565b61080f6118b8565b600054610100900460ff1661170d5760405162461bcd60e51b81526004016104e290611b6d565b61080f6118e8565b600054610100900460ff1661173c5760405162461bcd60e51b81526004016104e290611b6d565b60ff80546001600160a01b038089166001600160a01b0319928316179092556101008054888416908316179055610101805486841690831681179091556101038054938816939092169290921790556040805163fbfa77cf60e01b8152905163fbfa77cf916004808201926020929091908290030181865afa1580156117c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ea9190611bb8565b61010280546001600160a01b03199081166001600160a01b039384161790915560fc8054821685841617905560fb805490911691831691821790556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9060200160405180910390a1505060016101045550505050565b60655460ff1661080f5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104e2565b600054610100900460ff166118df5760405162461bcd60e51b81526004016104e290611b6d565b61080f3361155c565b600054610100900460ff1661190f5760405162461bcd60e51b81526004016104e290611b6d565b6065805460ff19169055565b6001600160a01b0381168114610ede57600080fd5b6000806040838503121561194357600080fd5b8235915060208301356119558161191b565b809150509250929050565b60006020828403121561197257600080fd5b81356111768161191b565b60006020828403121561198f57600080fd5b5035919050565b6000806000606084860312156119ab57600080fd5b83356119b68161191b565b95602085013595506040909401359392505050565b600080604083850312156119de57600080fd5b82356119e98161191b565b946020939093013593505050565b60008060008060008060c08789031215611a1057600080fd5b8635611a1b8161191b565b95506020870135611a2b8161191b565b94506040870135611a3b8161191b565b93506060870135611a4b8161191b565b92506080870135611a5b8161191b565b915060a0870135611a6b8161191b565b809150509295509295509295565b600060208284031215611a8b57600080fd5b8151801515811461117657600080fd5b634e487b7160e01b600052601160045260246000fd5b6001600160801b03818116838216019080821115611ad157611ad1611a9b565b5092915050565b80820180821115611aeb57611aeb611a9b565b92915050565b6001600160801b03828116828216039080821115611ad157611ad1611a9b565b600060208284031215611b2357600080fd5b5051919050565b600060018201611b3c57611b3c611a9b565b5060010190565b81810381811115611aeb57611aeb611a9b565b8082028115828204841417611aeb57611aeb611a9b565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611bca57600080fd5b81516111768161191b56fea164736f6c6343000811000a';

type DnGmxBatchingManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxBatchingManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxBatchingManager__factory extends ContractFactory {
  constructor(...args: DnGmxBatchingManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxBatchingManager> {
    return super.deploy(overrides || {}) as Promise<DnGmxBatchingManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxBatchingManager {
    return super.attach(address) as DnGmxBatchingManager;
  }
  override connect(signer: Signer): DnGmxBatchingManager__factory {
    return super.connect(signer) as DnGmxBatchingManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxBatchingManagerInterface {
    return new utils.Interface(_abi) as DnGmxBatchingManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxBatchingManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxBatchingManager;
  }
}
