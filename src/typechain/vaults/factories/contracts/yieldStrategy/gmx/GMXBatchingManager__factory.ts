/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  GMXBatchingManager,
  GMXBatchingManagerInterface,
} from '../../../../contracts/yieldStrategy/gmx/GMXBatchingManager';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotStakingManager',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'currentValue',
        type: 'bool',
      },
    ],
    name: 'InvalidSetDepositPaused',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'InvalidVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultAlreadyAdded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultsLimitExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'VaultAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'VaultDeposit',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'addVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'glpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'glpBalanceAllVaults',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
    ],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_stakingManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'isVaultValid',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalGlp',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IGMXBatchingManager.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
    ],
    name: 'roundGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingManagerGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'gmxVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: 'vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'glpBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IGMXBatchingManager.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC4626',
        name: '',
        type: 'address',
      },
    ],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultCount',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'vaults',
    outputs: [
      {
        internalType: 'contract IERC4626',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611e2a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063a7c6a10011610097578063c5384e6b11610071578063c5384e6b146104df578063da5678bd146104f2578063dda07f4214610587578063f2fde38b146105b357600080fd5b8063a7c6a10014610491578063aced1661146104b9578063b2a83bd3146104cc57600080fd5b80638da5cb5b116100d35780638da5cb5b14610430578063996cba681461044157806399c6d2de14610454578063a7b23fcf1461046757600080fd5b8063715018a614610402578063748747e61461040a5780638c64ea4a1461041d57600080fd5b80633ca7de9211610166578063557ab43111610140578063557ab431146103a35780635c975abb146103b657806369026e88146103cd5780636b03787c146103d557600080fd5b80633ca7de92146102ce578063436d8039146102e15780635157ced51461039b57600080fd5b806322828cc2116101a257806322828cc21461024a578063256b5a02146102755780632a906a4514610288578063361ed04a1461029157600080fd5b80631459457a146101c9578063180282b3146101de57806320d9caad146101e6575b600080fd5b6101dc6101d7366004611a70565b6105c6565b005b6101dc610655565b6102376101f4366004611ae1565b6001600160a01b0391821660009081526101016020908152604080832093909416825260029092019091522060010154600160801b90046001600160801b031690565b6040519081526020015b60405180910390f35b60fc5461025d906001600160a01b031681565b6040516001600160a01b039091168152602001610241565b6101dc610283366004611b1a565b610781565b61023760fd5481565b6102b961029f366004611b1a565b610101602052600090815260409020805460019091015482565b60408051928352602083019190915201610241565b6102376102dc366004611ae1565b61096c565b6103686102ef366004611ae1565b6040805160608082018352600080835260208084018290529284018190526001600160a01b039586168152610101835283812094909516855260029093018152928190208151928301825280548352600101546001600160801b0380821694840194909452600160801b90049092169181019190915290565b60408051825181526020808401516001600160801b03908116918301919091529282015190921690820152606001610241565b6101dc6109a8565b6102376103b1366004611b1a565b6109db565b60655460ff165b6040519015158152602001610241565b6101dc610a34565b6102376103e3366004611b1a565b6001600160a01b03166000908152610101602052604090206001015490565b6101dc610a67565b6101dc610418366004611b1a565b610a9b565b61025d61042b366004611b37565b610b13565b6033546001600160a01b031661025d565b6101dc61044f366004611b50565b610b34565b610237610462366004611b91565b610d76565b610237610475366004611b1a565b6001600160a01b03166000908152610101602052604090205490565b60fc546104a690600160a01b900461ffff1681565b60405161ffff9091168152602001610241565b60fb5461025d906001600160a01b031681565b6101dc6104da366004611b1a565b610f3a565b6102376104ed366004611bc6565b610fe9565b610560610500366004611c17565b604080518082018252600080825260209182018190526001600160a01b03949094168452610101815281842092845260039092018252918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b6040805182516001600160801b039081168252602093840151169281019290925201610241565b6103bd610595366004611b1a565b6001600160a01b031660009081526101016020526040902054151590565b6101dc6105c1366004611b1a565b6112df565b60006105d2600161137a565b905080156105ea576000805461ff0019166101001790555b6105f2611407565b6105fa611436565b6106078686868686611465565b801561064d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60fd54156107155760fd8054600090915560fe5460fc5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af11580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df9190611c43565b506040518181527fabf360404ae6ccd945919fc14edb22686b6941aeee15d786c7047e4a0107eba59060200160405180910390a1505b60005b600a81101561076b57600061010282600a811061073757610737611c65565b01546001600160a01b031690508061074f575061076b565b6107588161151c565b508061076381611c91565b915050610718565b5060655460ff161561077f5761077f611685565b565b6033546001600160a01b031633146107b45760405162461bcd60e51b81526004016107ab90611caa565b60405180910390fd5b60fc54600160a01b900461ffff16600919016107e3576040516309f4d7ab60e21b815260040160405180910390fd5b6001600160a01b038116600090815261010160205260409020541561081b57604051630cb3e97f60e31b815260040160405180910390fd5b6001600160a01b0381166000908152610101602052604090206001905560fc54819061010290600160a01b900461ffff16600a811061085c5761085c611c65565b0180546001600160a01b0319166001600160a01b039290921691909117905560fc805460149061089690600160a01b900461ffff16611cdf565b825461ffff9182166101009390930a928302919092021990911617905560fe5460405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190611c43565b506040516001600160a01b03821681527f7b7ef7a864d96a85497a1ed846adb39940dd6ccef678ff6ac8d55505e09b8cc4906020015b60405180910390a150565b6001600160a01b03918216600090815261010160209081526040808320939094168252600290920190915220600101546001600160801b031690565b60fb546001600160a01b031633146109d3576040516304e1fa9f60e01b815260040160405180910390fd5b61077f611685565b6000805b600a811015610a2e57610a1061010282600a81106109ff576109ff611c65565b01546001600160a01b03168461096c565b610a1a9083611d00565b915080610a2681611c91565b9150506109df565b50919050565b60fb546001600160a01b03163314610a5f576040516304e1fa9f60e01b815260040160405180910390fd5b61077f611718565b6033546001600160a01b03163314610a915760405162461bcd60e51b81526004016107ab90611caa565b61077f6000611793565b6033546001600160a01b03163314610ac55760405162461bcd60e51b81526004016107ab90611caa565b60fb80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e90602001610961565b61010281600a8110610b2457600080fd5b01546001600160a01b0316905081565b6001600160a01b038216610b5e5760405163b80480b160e01b8152601060048201526024016107ab565b80600003610b825760405163b80480b160e01b8152601160048201526024016107ab565b6001600160a01b038316600090815261010160209081526040808320338452600281019092529091206001810154815483546001600160801b03600160801b840481169316919081108015610be057506000826001600160801b0316115b15610c4057600081815260038601602052604090208054610c2090610c1b906001600160801b0386811691600160801b8104821691166117e5565b611898565b610c2a9085611d18565b6001860180546001600160801b03191690559350505b50610c4a85611898565b6001600160801b0316826001600160801b03161015610c87576040516307f885ff60e21b81526001600160801b03831660048201526024016107ab565b610c9085611898565b610c9a9083611d43565b6001840180546001600160801b03928316600160801b02921691909117905560405163a9059cbb60e01b81526001600160a01b0387811660048301526024820187905288169063a9059cbb906044016020604051808303816000875af1158015610d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2c9190611c43565b506040518581526001600160a01b0387169033907f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a9060200160405180910390a350505050505050565b6000610d8460655460ff1690565b15610dc45760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ab565b60fc546001600160a01b03163314610def57604051635d3958b360e01b815260040160405180910390fd5b6001600160a01b038416610e195760405163b80480b160e01b8152603060048201526024016107ab565b82600003610e3d5760405163b80480b160e01b8152603160048201526024016107ab565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190611c43565b50610ec08484846118ae565b9050610ecb81611898565b6001600160801b031660fd6000828254610ee59190611d00565b9091555050604080518481526020810183905233916001600160a01b038716916000917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a49392505050565b6033546001600160a01b03163314610f645760405162461bcd60e51b81526004016107ab90611caa565b610f6d816119b6565b60fe5460405163095ea7b360e01b81526001600160a01b03838116600483015260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe59190611c43565b5050565b6000610ff760655460ff1690565b156110375760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ab565b6001600160a01b0385166110615760405163b80480b160e01b8152602060048201526024016107ab565b836000036110855760405163b80480b160e01b8152602160048201526024016107ab565b6001600160a01b0382166110af5760405163b80480b160e01b8152602260048201526024016107ab565b6110b8866119b6565b6040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b038616906323b872dd906064016020604051808303816000875af115801561110b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112f9190611c43565b506001600160a01b0380871660009081526101016020908152604080832093861683526002840190915290206001810154815483546001600160801b03909216918110801561118757506000826001600160801b0316115b156112155760008181526003850160205260409020805460018501546111c791610c1b916001600160801b0390811691600160801b8104821691166117e5565b6001850180546010906111eb908490600160801b90046001600160801b0316611d18565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060009250505b6112208989896118ae565b84548455945061122f85611898565b6112399083611d18565b6001840180546001600160801b0319166001600160801b039290921691909117905561126485611898565b6001600160801b03168460010160008282546112809190611d00565b90915550508354604080518a8152602081018890526001600160a01b03808a1693908d169290917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a45050505095945050505050565b6033546001600160a01b031633146113095760405162461bcd60e51b81526004016107ab90611caa565b6001600160a01b03811661136e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ab565b61137781611793565b50565b60008054610100900460ff16156113c1578160ff16600114801561139d5750303b155b6113b95760405162461bcd60e51b81526004016107ab90611d6b565b506000919050565b60005460ff8084169116106113e85760405162461bcd60e51b81526004016107ab90611d6b565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661142e5760405162461bcd60e51b81526004016107ab90611db9565b61077f6119f8565b600054610100900460ff1661145d5760405162461bcd60e51b81526004016107ab90611db9565b61077f611a28565b600054610100900460ff1661148c5760405162461bcd60e51b81526004016107ab90611db9565b60fe80546001600160a01b03199081166001600160a01b03888116919091179092556101008054821687841617905560ff8054821686841617905560fc8054821685841617905560fb805490911691831691821790556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9060200160405180910390a15050505050565b6001600160a01b038116600090815261010160205260409020600181015415610fe5576001810154604051636e553f6560e01b815260048101919091523060248201526000906001600160a01b03841690636e553f65906044016020604051808303816000875af1158015611595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b99190611e04565b905060405180604001604052806115d38460010154611898565b6001600160801b031681526020016115ea83611898565b6001600160801b03908116909152835460009081526003850160209081526040918290208451948201518416600160801b029490931693909317909155835460018501548251908152928301849052917f91535f424d5c4759427ba90b0ffa33a39d42edf0a1014fd35ae8b7d5925c984d910160405180910390a2600060018301819055825483919061167c90611c91565b90915550505050565b60655460ff166116ce5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107ab565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60655460ff161561175e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ab565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116fb3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080806000198587098587029250828110838203039150508060000361181e576000841161181357600080fd5b508290049050611891565b80841161182a57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b806001600160801b038116811461140257600080fd5b60ff5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905260009185169063095ea7b3906044016020604051808303816000875af1158015611903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119279190611c43565b506101005460405163364e231160e01b81526001600160a01b0386811660048301526024820186905260448201859052600060648301529091169063364e2311906084016020604051808303816000875af115801561198a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ae9190611e04565b949350505050565b6001600160a01b03811660009081526101016020526040902054611377576040516357b980d760e11b81526001600160a01b03821660048201526024016107ab565b600054610100900460ff16611a1f5760405162461bcd60e51b81526004016107ab90611db9565b61077f33611793565b600054610100900460ff16611a4f5760405162461bcd60e51b81526004016107ab90611db9565b6065805460ff19169055565b6001600160a01b038116811461137757600080fd5b600080600080600060a08688031215611a8857600080fd5b8535611a9381611a5b565b94506020860135611aa381611a5b565b93506040860135611ab381611a5b565b92506060860135611ac381611a5b565b91506080860135611ad381611a5b565b809150509295509295909350565b60008060408385031215611af457600080fd5b8235611aff81611a5b565b91506020830135611b0f81611a5b565b809150509250929050565b600060208284031215611b2c57600080fd5b813561189181611a5b565b600060208284031215611b4957600080fd5b5035919050565b600080600060608486031215611b6557600080fd5b8335611b7081611a5b565b92506020840135611b8081611a5b565b929592945050506040919091013590565b600080600060608486031215611ba657600080fd5b8335611bb181611a5b565b95602085013595506040909401359392505050565b600080600080600060a08688031215611bde57600080fd5b8535611be981611a5b565b94506020860135611bf981611a5b565b935060408601359250606086013591506080860135611ad381611a5b565b60008060408385031215611c2a57600080fd5b8235611c3581611a5b565b946020939093013593505050565b600060208284031215611c5557600080fd5b8151801515811461189157600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ca357611ca3611c7b565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600061ffff808316818103611cf657611cf6611c7b565b6001019392505050565b60008219821115611d1357611d13611c7b565b500190565b60006001600160801b03808316818516808303821115611d3a57611d3a611c7b565b01949350505050565b60006001600160801b0383811690831681811015611d6357611d63611c7b565b039392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611e1657600080fd5b505191905056fea164736f6c634300080e000a';

type GMXBatchingManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GMXBatchingManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GMXBatchingManager__factory extends ContractFactory {
  constructor(...args: GMXBatchingManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GMXBatchingManager> {
    return super.deploy(overrides || {}) as Promise<GMXBatchingManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GMXBatchingManager {
    return super.attach(address) as GMXBatchingManager;
  }
  override connect(signer: Signer): GMXBatchingManager__factory {
    return super.connect(signer) as GMXBatchingManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GMXBatchingManagerInterface {
    return new utils.Interface(_abi) as GMXBatchingManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GMXBatchingManager {
    return new Contract(address, _abi, signerOrProvider) as GMXBatchingManager;
  }
}
