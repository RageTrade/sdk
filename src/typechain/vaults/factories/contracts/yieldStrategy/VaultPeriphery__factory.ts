/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VaultPeriphery,
  VaultPeripheryInterface,
} from '../../../contracts/yieldStrategy/VaultPeriphery';

const _abi = [
  {
    inputs: [],
    name: 'NegativePrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageToleranceBreached',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroValue',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'breforeSwapLpPrice',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'MAX_BPS',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'MAX_TOLERANCE',
        type: 'uint256',
      },
    ],
    name: 'SlippageToleranceBreachedEvent',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'depositUsdc',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesMinted',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'depositWeth',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesMinted',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_usdt',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_weth',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_lpToken',
        type: 'address',
      },
      {
        internalType: 'contract IERC4626',
        name: '_vault',
        type: 'address',
      },
      {
        internalType: 'contract ISwapRouter',
        name: '_swapRouter',
        type: 'address',
      },
      {
        internalType: 'contract ILPPriceGetter',
        name: '_lpOracle',
        type: 'address',
      },
      {
        internalType: 'contract ICurveStableSwap',
        name: '_stableSwap',
        type: 'address',
      },
      {
        internalType: 'contract AggregatorV3Interface',
        name: '_ethOracle',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lpOracle',
    outputs: [
      {
        internalType: 'contract ILPPriceGetter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lpToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stableSwap',
    outputs: [
      {
        internalType: 'contract ICurveStableSwap',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'swapRouter',
    outputs: [
      {
        internalType: 'contract ISwapRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOracle',
        type: 'address',
      },
    ],
    name: 'updateEthOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newRouter',
        type: 'address',
      },
    ],
    name: 'updateSwapRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newTolerance',
        type: 'uint256',
      },
    ],
    name: 'updateTolerance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdc',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdt',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vault',
    outputs: [
      {
        internalType: 'contract IERC4626',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'weth',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526032606e55612710606f5534801561001b57600080fd5b506114cf8061002b6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b98b677f11610071578063b98b677f14610214578063c31c9c0714610227578063f2fde38b1461023a578063f5e95acb1461024d578063fbfa77cf1461026057600080fd5b8063715018a6146101d55780638da5cb5b146101dd57806398733df0146101ee5780639e548b7f1461020157600080fd5b80633fc8cef3116100de5780633fc8cef3146101875780635fcbd2851461019a578063690e0dda146101ad5780636c13f8d7146101c057600080fd5b8063062b032f146101105780632357928e146101405780632f48ab7d146101615780633e413bee14610174575b600080fd5b606b54610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e366004611158565b610273565b604051908152602001610137565b606654610123906001600160a01b031681565b606554610123906001600160a01b031681565b606754610123906001600160a01b031681565b606854610123906001600160a01b031681565b6101536101bb366004611158565b610684565b6101d36101ce366004611158565b610a21565b005b6101d3610a7c565b6033546001600160a01b0316610123565b6101d36101fc366004611186565b610ab2565b606c54610123906001600160a01b031681565b6101d3610222366004611186565b610b25565b606a54610123906001600160a01b031681565b6101d3610248366004611186565b610b98565b6101d361025b3660046111a3565b610c33565b606954610123906001600160a01b031681565b60008160000361029657604051637c946ed760e01b815260040160405180910390fd5b6065546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610311919061125f565b506065546066546040516bffffffffffffffffffffffff19606093841b81166020830152607d60ea1b60348301529190921b166037820152600090604b0160408051601f1981840301815260a083018252808352306020840152428383015260608301869052600060808401819052606a54925163c04b8d5960e01b8152919450916001600160a01b03169063c04b8d59906103b1908590600401611281565b6020604051808303816000875af11580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190611314565b90506000606b60009054906101000a90046001600160a01b03166001600160a01b03166354f0f7d56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190611314565b606c54604080516060810182528581526000602082018190528183018190529151634515cef360e01b81529394506001600160a01b0390921692634515cef3926104bd92909160040161132d565b600060405180830381600087803b1580156104d757600080fd5b505af11580156104eb573d6000803e3d6000fd5b50506068546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190611314565b9050606f54606e54606f54610573919061137b565b61057d9089611392565b61058c9064e8d4a51000611392565b61059691906113b1565b6105a98284670de0b6b3a7640000610f66565b101561060457606f54606e5460408051848152602081018690529081018a9052606081019290925260808201527f31eff883f84456179a3ff3133408f0908c5ebcae4219c9c47ce66670051f46129060a00160405180910390a15b606954604051636e553f6560e01b8152600481018390523360248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af1158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190611314565b979650505050505050565b6000816000036106a757604051637c946ed760e01b815260040160405180910390fd5b6067546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610722919061125f565b50606b54604080516354f0f7d560e01b815290516000926001600160a01b0316916354f0f7d59160048083019260209291908290030181865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190611314565b606c54604080516060810182526000808252602082018190528183018890529151634515cef360e01b81529394506001600160a01b0390921692634515cef3926107df92909160040161132d565b600060405180830381600087803b1580156107f957600080fd5b505af115801561080d573d6000803e3d6000fd5b50506068546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108809190611314565b90506108cc606e54606f54610895919061137b565b61089f9086611392565b606f546108b0906305f5e100611392565b606d546108c5906001600160a01b0316611019565b9190610f66565b6108df8284670de0b6b3a7640000610f66565b101561093a57606f54606e546040805184815260208101869052908101879052606081019290925260808201527f31eff883f84456179a3ff3133408f0908c5ebcae4219c9c47ce66670051f46129060a00160405180910390a15b6069546068546040516370a0823160e01b81523060048201526001600160a01b0392831692636e553f659216906370a0823190602401602060405180830381865afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190611314565b6040516001600160e01b031960e084901b16815260048101919091523360248201526044016020604051808303816000875af11580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a199190611314565b949350505050565b6033546001600160a01b03163314610a545760405162461bcd60e51b8152600401610a4b906113d3565b60405180910390fd5b606f54811115610a7757604051632d0483c560e21b815260040160405180910390fd5b606e55565b6033546001600160a01b03163314610aa65760405162461bcd60e51b8152600401610a4b906113d3565b610ab060006110ac565b565b6033546001600160a01b03163314610adc5760405162461bcd60e51b8152600401610a4b906113d3565b6001600160a01b038116610b0357604051637c946ed760e01b815260040160405180910390fd5b606d80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314610b4f5760405162461bcd60e51b8152600401610a4b906113d3565b6001600160a01b038116610b7657604051637c946ed760e01b815260040160405180910390fd5b606a80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314610bc25760405162461bcd60e51b8152600401610a4b906113d3565b6001600160a01b038116610c275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a4b565b610c30816110ac565b50565b600054610100900460ff16610c4e5760005460ff1615610c52565b303b155b610cb55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610a4b565b600054610100900460ff16158015610cd7576000805461ffff19166101011790555b610cdf6110fe565b606580546001600160a01b03199081166001600160a01b038d8116919091179092556066805482168c84161790556067805482168b84169081179091556069805483168a85161790556068805483168b8516179055606b80548316888516179055606c80548316878516908117909155606a805484168a8616179055606d80549093169386169390931790915560405163095ea7b360e01b8152600481019290925260001960248301529063095ea7b3906044016020604051808303816000875af1158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd6919061125f565b50606654606c5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610e2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e51919061125f565b50606554606a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc919061125f565b5060685460695460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f47919061125f565b508015610f5a576000805461ff00191690555b50505050505050505050565b6000808060001985870985870292508281108382030391505080600003610f9f5760008411610f9457600080fd5b508290049050611012565b808411610fab57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561105a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107e9190611427565b50505091505060008112156110a6576040516330e53b6960e11b815260040160405180910390fd5b92915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166111255760405162461bcd60e51b8152600401610a4b90611477565b610ab0600054610100900460ff1661114f5760405162461bcd60e51b8152600401610a4b90611477565b610ab0336110ac565b60006020828403121561116a57600080fd5b5035919050565b6001600160a01b0381168114610c3057600080fd5b60006020828403121561119857600080fd5b813561101281611171565b60008060008060008060008060006101208a8c0312156111c257600080fd5b89356111cd81611171565b985060208a01356111dd81611171565b975060408a01356111ed81611171565b965060608a01356111fd81611171565b955060808a013561120d81611171565b945060a08a013561121d81611171565b935060c08a013561122d81611171565b925060e08a013561123d81611171565b91506101008a013561124e81611171565b809150509295985092959850929598565b60006020828403121561127157600080fd5b8151801515811461101257600080fd5b60006020808352835160a08285015280518060c086015260005b818110156112b75782810184015186820160e00152830161129b565b818111156112c957600060e083880101525b50918501516001600160a01b0381166040860152916040860151606086015260608601516080860152608086015160a086015260e0601f19601f830116860101935050505092915050565b60006020828403121561132657600080fd5b5051919050565b60808101818460005b6003811015611355578151835260209283019290910190600101611336565b5050508260608301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561138d5761138d611365565b500390565b60008160001904831182151516156113ac576113ac611365565b500290565b6000826113ce57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b805169ffffffffffffffffffff8116811461142257600080fd5b919050565b600080600080600060a0868803121561143f57600080fd5b61144886611408565b945060208601519350604086015192506060860151915061146b60808701611408565b90509295509295909350565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c634300080d000a';

type VaultPeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultPeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultPeriphery__factory extends ContractFactory {
  constructor(...args: VaultPeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultPeriphery> {
    return super.deploy(overrides || {}) as Promise<VaultPeriphery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultPeriphery {
    return super.attach(address) as VaultPeriphery;
  }
  override connect(signer: Signer): VaultPeriphery__factory {
    return super.connect(signer) as VaultPeriphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultPeripheryInterface {
    return new utils.Interface(_abi) as VaultPeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultPeriphery {
    return new Contract(address, _abi, signerOrProvider) as VaultPeriphery;
  }
}
