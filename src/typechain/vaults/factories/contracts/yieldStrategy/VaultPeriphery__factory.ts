/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VaultPeriphery,
  VaultPeripheryInterface,
} from '../../../contracts/yieldStrategy/VaultPeriphery';

const _abi = [
  {
    inputs: [],
    name: 'NegativePrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageToleranceBreached',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroValue',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'breforeSwapLpPrice',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'MAX_BPS',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'MAX_TOLERANCE',
        type: 'uint256',
      },
    ],
    name: 'SlippageToleranceBreachedEvent',
    type: 'event',
  },
  {
    inputs: [],
    name: 'depositEth',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesMinted',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'depositUsdc',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesMinted',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'depositWeth',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesMinted',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_usdt',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_weth',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_lpToken',
        type: 'address',
      },
      {
        internalType: 'contract IERC4626',
        name: '_vault',
        type: 'address',
      },
      {
        internalType: 'contract ISwapRouter',
        name: '_swapRouter',
        type: 'address',
      },
      {
        internalType: 'contract ILPPriceGetter',
        name: '_lpOracle',
        type: 'address',
      },
      {
        internalType: 'contract ICurveStableSwap',
        name: '_stableSwap',
        type: 'address',
      },
      {
        internalType: 'contract AggregatorV3Interface',
        name: '_ethOracle',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lpOracle',
    outputs: [
      {
        internalType: 'contract ILPPriceGetter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lpToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stableSwap',
    outputs: [
      {
        internalType: 'contract ICurveStableSwap',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'swapRouter',
    outputs: [
      {
        internalType: 'contract ISwapRouter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOracle',
        type: 'address',
      },
    ],
    name: 'updateEthOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newRouter',
        type: 'address',
      },
    ],
    name: 'updateSwapRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newTolerance',
        type: 'uint256',
      },
    ],
    name: 'updateTolerance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdc',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'usdt',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vault',
    outputs: [
      {
        internalType: 'contract IERC4626',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'weth',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526032606e55612710606f5534801561001b57600080fd5b506118a68061002b6000396000f3fe6080604052600436106101095760003560e01c8063715018a611610095578063b98b677f11610064578063b98b677f146102b6578063c31c9c07146102d6578063f2fde38b146102f6578063f5e95acb14610316578063fbfa77cf1461033657600080fd5b8063715018a6146102435780638da5cb5b1461025857806398733df0146102765780639e548b7f1461029657600080fd5b80633fc8cef3116100dc5780633fc8cef3146101b9578063439370b1146101d95780635fcbd285146101e1578063690e0dda146102015780636c13f8d71461022157600080fd5b8063062b032f1461010e5780632357928e1461014b5780632f48ab7d146101795780633e413bee14610199575b600080fd5b34801561011a57600080fd5b50606b5461012e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015757600080fd5b5061016b61016636600461152f565b610356565b604051908152602001610142565b34801561018557600080fd5b5060665461012e906001600160a01b031681565b3480156101a557600080fd5b5060655461012e906001600160a01b031681565b3480156101c557600080fd5b5060675461012e906001600160a01b031681565b61016b610767565b3480156101ed57600080fd5b5060685461012e906001600160a01b031681565b34801561020d57600080fd5b5061016b61021c36600461152f565b610a88565b34801561022d57600080fd5b5061024161023c36600461152f565b610df8565b005b34801561024f57600080fd5b50610241610e53565b34801561026457600080fd5b506033546001600160a01b031661012e565b34801561028257600080fd5b5061024161029136600461155d565b610e89565b3480156102a257600080fd5b50606c5461012e906001600160a01b031681565b3480156102c257600080fd5b506102416102d136600461155d565b610efc565b3480156102e257600080fd5b50606a5461012e906001600160a01b031681565b34801561030257600080fd5b5061024161031136600461155d565b610f6f565b34801561032257600080fd5b5061024161033136600461157a565b61100a565b34801561034257600080fd5b5060695461012e906001600160a01b031681565b60008160000361037957604051637c946ed760e01b815260040160405180910390fd5b6065546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f49190611636565b506065546066546040516bffffffffffffffffffffffff19606093841b81166020830152607d60ea1b60348301529190921b166037820152600090604b0160408051601f1981840301815260a083018252808352306020840152428383015260608301869052600060808401819052606a54925163c04b8d5960e01b8152919450916001600160a01b03169063c04b8d5990610494908590600401611658565b6020604051808303816000875af11580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d791906116eb565b90506000606b60009054906101000a90046001600160a01b03166001600160a01b03166354f0f7d56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561052e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055291906116eb565b606c54604080516060810182528581526000602082018190528183018190529151634515cef360e01b81529394506001600160a01b0390921692634515cef3926105a0929091600401611704565b600060405180830381600087803b1580156105ba57600080fd5b505af11580156105ce573d6000803e3d6000fd5b50506068546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064191906116eb565b9050606f54606e54606f546106569190611752565b6106609089611769565b61066f9064e8d4a51000611769565b6106799190611788565b61068c8284670de0b6b3a764000061133d565b10156106e757606f54606e5460408051848152602081018690529081018a9052606081019290925260808201527f31eff883f84456179a3ff3133408f0908c5ebcae4219c9c47ce66670051f46129060a00160405180910390a15b606954604051636e553f6560e01b8152600481018390523360248201526001600160a01b0390911690636e553f65906044016020604051808303816000875af1158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c91906116eb565b979650505050505050565b60003480820361078a57604051637c946ed760e01b815260040160405180910390fd5b606b54604080516354f0f7d560e01b815290516000926001600160a01b0316916354f0f7d59160048083019260209291908290030181865afa1580156107d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f891906116eb565b606c54604080516060810182526000808252602082018190528183018790529151634515cef360e01b81529394506001600160a01b0390921692634515cef392610846929091600401611704565b600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b50506068546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156108c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e791906116eb565b9050610933606e54606f546108fc9190611752565b6109069085611769565b606f54610917906305f5e100611769565b606d5461092c906001600160a01b03166113f0565b919061133d565b6109468284670de0b6b3a764000061133d565b10156109a157606f54606e546040805184815260208101869052908101869052606081019290925260808201527f31eff883f84456179a3ff3133408f0908c5ebcae4219c9c47ce66670051f46129060a00160405180910390a15b6069546068546040516370a0823160e01b81523060048201526001600160a01b0392831692636e553f659216906370a0823190602401602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1891906116eb565b6040516001600160e01b031960e084901b16815260048101919091523360248201526044016020604051808303816000875af1158015610a5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8091906116eb565b935050505090565b600081600003610aab57604051637c946ed760e01b815260040160405180910390fd5b6067546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190611636565b50606b54604080516354f0f7d560e01b815290516000926001600160a01b0316916354f0f7d59160048083019260209291908290030181865afa158015610b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9591906116eb565b606c54604080516060810182526000808252602082018190528183018890529151634515cef360e01b81529394506001600160a01b0390921692634515cef392610be3929091600401611704565b600060405180830381600087803b158015610bfd57600080fd5b505af1158015610c11573d6000803e3d6000fd5b50506068546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8491906116eb565b9050610ca3606e54606f54610c999190611752565b6109069086611769565b610cb68284670de0b6b3a764000061133d565b1015610d1157606f54606e546040805184815260208101869052908101879052606081019290925260808201527f31eff883f84456179a3ff3133408f0908c5ebcae4219c9c47ce66670051f46129060a00160405180910390a15b6069546068546040516370a0823160e01b81523060048201526001600160a01b0392831692636e553f659216906370a0823190602401602060405180830381865afa158015610d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8891906116eb565b6040516001600160e01b031960e084901b16815260048101919091523360248201526044016020604051808303816000875af1158015610dcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df091906116eb565b949350505050565b6033546001600160a01b03163314610e2b5760405162461bcd60e51b8152600401610e22906117aa565b60405180910390fd5b606f54811115610e4e57604051632d0483c560e21b815260040160405180910390fd5b606e55565b6033546001600160a01b03163314610e7d5760405162461bcd60e51b8152600401610e22906117aa565b610e876000611483565b565b6033546001600160a01b03163314610eb35760405162461bcd60e51b8152600401610e22906117aa565b6001600160a01b038116610eda57604051637c946ed760e01b815260040160405180910390fd5b606d80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314610f265760405162461bcd60e51b8152600401610e22906117aa565b6001600160a01b038116610f4d57604051637c946ed760e01b815260040160405180910390fd5b606a80546001600160a01b0319166001600160a01b0392909216919091179055565b6033546001600160a01b03163314610f995760405162461bcd60e51b8152600401610e22906117aa565b6001600160a01b038116610ffe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e22565b61100781611483565b50565b600054610100900460ff166110255760005460ff1615611029565b303b155b61108c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e22565b600054610100900460ff161580156110ae576000805461ffff19166101011790555b6110b66114d5565b606580546001600160a01b03199081166001600160a01b038d8116919091179092556066805482168c84161790556067805482168b84169081179091556069805483168a85161790556068805483168b8516179055606b80548316888516179055606c80548316878516908117909155606a805484168a8616179055606d80549093169386169390931790915560405163095ea7b360e01b8152600481019290925260001960248301529063095ea7b3906044016020604051808303816000875af1158015611189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ad9190611636565b50606654606c5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112289190611636565b50606554606a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801561127f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a39190611636565b5060685460695460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e9190611636565b508015611331576000805461ff00191690555b50505050505050505050565b6000808060001985870985870292508281108382030391505080600003611376576000841161136b57600080fd5b5082900490506113e9565b80841161138257600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611431573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145591906117fe565b505050915050600081121561147d576040516330e53b6960e11b815260040160405180910390fd5b92915050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166114fc5760405162461bcd60e51b8152600401610e229061184e565b610e87600054610100900460ff166115265760405162461bcd60e51b8152600401610e229061184e565b610e8733611483565b60006020828403121561154157600080fd5b5035919050565b6001600160a01b038116811461100757600080fd5b60006020828403121561156f57600080fd5b81356113e981611548565b60008060008060008060008060006101208a8c03121561159957600080fd5b89356115a481611548565b985060208a01356115b481611548565b975060408a01356115c481611548565b965060608a01356115d481611548565b955060808a01356115e481611548565b945060a08a01356115f481611548565b935060c08a013561160481611548565b925060e08a013561161481611548565b91506101008a013561162581611548565b809150509295985092959850929598565b60006020828403121561164857600080fd5b815180151581146113e957600080fd5b60006020808352835160a08285015280518060c086015260005b8181101561168e5782810184015186820160e001528301611672565b818111156116a057600060e083880101525b50918501516001600160a01b0381166040860152916040860151606086015260608601516080860152608086015160a086015260e0601f19601f830116860101935050505092915050565b6000602082840312156116fd57600080fd5b5051919050565b60808101818460005b600381101561172c57815183526020928301929091019060010161170d565b5050508260608301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156117645761176461173c565b500390565b60008160001904831182151516156117835761178361173c565b500290565b6000826117a557634e487b7160e01b600052601260045260246000fd5b500490565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b805169ffffffffffffffffffff811681146117f957600080fd5b919050565b600080600080600060a0868803121561181657600080fd5b61181f866117df565b9450602086015193506040860151925060608601519150611842608087016117df565b90509295509295909350565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea164736f6c634300080d000a';

type VaultPeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultPeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultPeriphery__factory extends ContractFactory {
  constructor(...args: VaultPeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultPeriphery> {
    return super.deploy(overrides || {}) as Promise<VaultPeriphery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VaultPeriphery {
    return super.attach(address) as VaultPeriphery;
  }
  override connect(signer: Signer): VaultPeriphery__factory {
    return super.connect(signer) as VaultPeriphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultPeripheryInterface {
    return new utils.Interface(_abi) as VaultPeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultPeriphery {
    return new Contract(address, _abi, signerOrProvider) as VaultPeriphery;
  }
}
