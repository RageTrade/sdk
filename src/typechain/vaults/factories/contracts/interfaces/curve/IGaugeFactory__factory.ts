/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IGaugeFactory,
  IGaugeFactoryInterface,
} from '../../../../contracts/interfaces/curve/IGaugeFactory';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lpToken',
        type: 'address',
      },
    ],
    name: 'get_gauge_from_lp_token',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'gauge',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class IGaugeFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IGaugeFactoryInterface {
    return new utils.Interface(_abi) as IGaugeFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IGaugeFactory {
    return new Contract(address, _abi, signerOrProvider) as IGaugeFactory;
  }
}
