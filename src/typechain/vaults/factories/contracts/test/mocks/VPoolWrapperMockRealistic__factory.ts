/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../../../../contracts/test/mocks/VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'oracle',
        type: 'address',
      },
    ],
    name: 'InvalidFundingRateOracle',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    name: 'InvalidFundingRateValueX128',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidSetting',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernanceOrTeamMultisig',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'value',
        type: 'uint128',
      },
    ],
    name: 'SafeCast_Int128Overflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCast_Int256Overflow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AccruedProtocolFeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
    ],
    name: 'LiquidityFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        indexed: false,
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFundingRateAndVirtualPrice',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFundingRateOverride',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVQuote',
            name: 'vQuote',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract AggregatorV3Interface',
        name: 'chainlinkOracle',
        type: 'address',
      },
    ],
    name: 'setFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'fundingRateOverrideX128',
        type: 'int256',
      },
    ],
    name: 'setFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuoteAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unsetFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'useZeroFundingRate',
        type: 'bool',
      },
    ],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vQuote',
    outputs: [
      {
        internalType: 'contract IVQuote',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506008805465ffffffffffff191690556153fb8061002f6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80637c93746b1161011a578063a3c35e2c116100ad578063d34879971161007c578063d34879971461051a578063dbd035ff1461052d578063fa461e331461054d578063fb7e3e2414610560578063fca6fbf21461057d57600080fd5b8063a3c35e2c146104cc578063acfd7928146104df578063adb61832146104e8578063c04b98c41461051157600080fd5b80639bb1a99c116100e95780639bb1a99c1461048b5780639f883c121461049e578063a34123a7146104b1578063a3a1e7e9146104c457600080fd5b80637c93746b146104335780637feedaa11461043b57806386c8e9a71461044e5780638b1e97811461047857600080fd5b8063466c88271161019d57806356d15a881161016c57806356d15a88146103b75780635e622abc146103ca5780636719578c146103d25780636c544335146103e55780637779815c1461042b57600080fd5b8063466c88271461032957806348aaa8c01461033c5780634bc36bd61461039157806351240336146103a457600080fd5b80631e2eaeaf116101d95780631e2eaeaf146102b35780632a99a792146102d35780632ad4f84b146102f35780633464c4ca1461032157600080fd5b806309e54e311461020b5780630af968001461023b578063195cd92c146102715780631dce5fcf14610291575b600080fd5b61023961021936600461485d565b6008805465ffffffffffff191665ffffffffffff92909216919091179055565b005b600054610254906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61028461027f3660046148a8565b610593565b60405161026891906148ea565b6102a461029f36600461496b565b6108e4565b604051610268939291906149ab565b6102c56102c13660046149e7565b5490565b604051908152602001610268565b6102e66102e1366004614a00565b610acb565b6040516102689190614a39565b61023961030136600461485d565b600c805465ffffffffffff191665ffffffffffff92909216919091179055565b600a546102c5565b610239610337366004614a64565b610bf7565b61037161034a366004614a81565b600b6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610268565b600254610254906001600160a01b031681565b6102396103b2366004614a9e565b610d4d565b6102396103c5366004614abb565b610d87565b6102c5610f5a565b600354610254906001600160a01b031681565b6005546006546007546008546104039392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff166060820152608001610268565b6005546102c5565b610239610fe1565b610239610449366004614ae4565b611135565b60035461046490600160a01b900462ffffff1681565b60405162ffffff9091168152602001610268565b610239610486366004614ae4565b611262565b600154610254906001600160a01b031681565b6102396104ac3660046149e7565b611388565b6102a46104bf36600461496b565b6114db565b6102c56116a7565b6102e66104da366004614a00565b6116eb565b6102c560045481565b600c546104fa9065ffffffffffff1681565b60405165ffffffffffff9091168152602001610268565b6102c560095481565b610239610528366004614b43565b611888565b61054061053b366004614bac565b611990565b6040516102689190614c6a565b61023961055b366004614b43565b6119be565b610568611b87565b60408051928352602083019190915201610268565b60035461046490600160b81b900462ffffff1681565b6105e56040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6000546201000090046001600160a01b0316331461061657604051638597d08b60e01b815260040160405180910390fd5b600080841215906001600160a01b0384169003610669578461065657610651600173fffd8963efd1fc6a506488495d951d5263988d26614cc4565b610666565b6106666401000276a36001614cec565b92505b83825260035461069790829087906101f49062ffffff600160a01b8204811691600160b81b90041687611ce8565b60408051610100810182526000808252602082018190529181018290526060810182905260c0810182905260e08101829052600a60808201526101f460a082015290806106e2611b87565b60c0850181905260e08501829052909250905084516003546000918291829161071b916001600160a01b0316908d908c8a611d8f611f18565b92509250925085600001518860a001906001600160a01b031690816001600160a01b03168152505080604001518860c001906001600160a01b031690816001600160a01b031681525050600360009054906101000a90046001600160a01b03166001600160a01b031663128acb08308d8b600001518d6040518563ffffffff1660e01b81526004016107e594939291906001600160a01b03948516815292151560208401526040830191909152909116606082015260a06080820181905260009082015260c00190565b60408051808303816000875af1158015610803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108279190614d17565b60408a015260208901819052831480156108445750876040015182145b61085057610850614d3b565b505060035461088194508593508992506101f4915062ffffff600160a01b8204811691600160b81b900416876126cb565b8160800151600460008282546108979190614d51565b909155506108a590506127db565b7f374e2c00db0195ec47718dc83fbed946c07c24c240e8332e547d9b4ac086fd47826040516108d491906148ea565b60405180910390a1509392505050565b6000806109126040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b0316331461094357604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806109615750620d89e719600283900b125b8061097d5750610974620d89e719614d69565b60020b8160020b135b80610994575061098e600a83614da1565b60020b15155b806109ab57506109a5600a82614da1565b60020b15155b156109dc5760405163957b5ed560e01b8152600283810b600483015282900b60248201526044015b60405180910390fd5b6109e6600061297e565b610a1788886109fd896001600160801b03166129c4565b600354610a12906001600160a01b0316612a02565b612a73565b600354604051633c8a7d8d60e01b815230600482015260028b810b60248301528a900b60448201526001600160801b038916606482015260a06084820152600060a4820181905292955082916001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab89190614d17565b909b909a50949850939650505050505050565b610af66040518060800160405280600081526020016000815260200160008152602001600081525090565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b649190614de0565b505060408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152939550929350610baa92506116a7915050565b808252600554600654600754610bbf93612bc4565b604082015280518352600954610bdf90600b908790879086908690612bf4565b60608601526040850152602084015250909392505050565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6e9190614e78565b6001600160a01b0316336001600160a01b031614158015610d175750600060029054906101000a90046001600160a01b03166001600160a01b031663dbc0c0856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cdd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d019190614e78565b6001600160a01b0316336001600160a01b031614155b15610d35576040516352d335a760e01b815260040160405180910390fd5b610d3f600161297e565b610d4a600a82612d4c565b50565b6000546201000090046001600160a01b03163314610d7e57604051638597d08b60e01b815260040160405180910390fd5b610d4a8161297e565b6000610d936001612d5f565b90508015610dab576000805461ff0019166101001790555b610db86020830183614a64565b600080546001600160a01b0392909216620100000275ffffffffffffffffffffffffffffffffffffffff000019909216919091179055610dfe6040830160208401614a64565b600180546001600160a01b0319166001600160a01b0392909216919091179055610e2e6060830160408401614a64565b600280546001600160a01b0319166001600160a01b0392909216919091179055610e5e6080830160608401614a64565b600380546001600160a01b0319166001600160a01b0392909216919091179055610e8e60a0830160808401614ae4565b6003805462ffffff92909216600160a01b0262ffffff60a01b19909216919091179055610ec160c0830160a08401614ae4565b600360176101000a81548162ffffff021916908362ffffff160217905550610ee9600a612e7a565b610f0f60006001610f01600c5465ffffffffffff1690565b600592919060006001612e8b565b8015610f56576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15b5050565b600080546201000090046001600160a01b03163314610f8c57604051638597d08b60e01b815260040160405180910390fd5b60045415610fab576001600454610fa39190614e95565b600160045590505b6040518181527f889bbef14ccbbb6f97773359c9c09396f67ed97695236771816a304ec5d886119060200160405180910390a190565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015611034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110589190614e78565b6001600160a01b0316336001600160a01b0316141580156111015750600060029054906101000a90046001600160a01b03166001600160a01b031663dbc0c0856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb9190614e78565b6001600160a01b0316336001600160a01b031614155b1561111f576040516352d335a760e01b815260040160405180910390fd5b611129600161297e565b611133600a612e7a565b565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015611188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ac9190614e78565b6001600160a01b0316336001600160a01b0316146111dd57604051632d5be4cb60e21b815260040160405180910390fd5b620186a062ffffff8216111561120957604051636a098dd160e11b8152602060048201526024016109d3565b6003805462ffffff60b81b1916600160b81b62ffffff8416908102919091179091556040519081527f2edf7eef14cb246dab2aac555e300928981632918159d9e33fcaa24dcd38cb40906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d99190614e78565b6001600160a01b0316336001600160a01b03161461130a57604051632d5be4cb60e21b815260040160405180910390fd5b620186a062ffffff8216111561133657604051636a098dd160e11b8152601060048201526024016109d3565b6003805462ffffff60a01b1916600160a01b62ffffff8416908102919091179091556040519081527f5e286c9a939d59334080ddf15517957037c2228384e26bb92a368ce44c531edd90602001611257565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ff9190614e78565b6001600160a01b0316336001600160a01b0316141580156114a85750600060029054906101000a90046001600160a01b03166001600160a01b031663dbc0c0856040518163ffffffff1660e01b8152600401602060405180830381865afa15801561146e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114929190614e78565b6001600160a01b0316336001600160a01b031614155b156114c6576040516352d335a760e01b815260040160405180910390fd5b6114d0600161297e565b610d4a600a82612f9c565b6000806115096040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b0316331461153a57604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806115585750620d89e719600283900b125b80611574575061156b620d89e719614d69565b60020b8160020b135b8061158b5750611585600a83614da1565b60020b15155b806115a2575061159c600a82614da1565b60020b15155b156115ce5760405163957b5ed560e01b8152600283810b600483015282900b60248201526044016109d3565b6115d8600061297e565b6115f888886115ef896001600160801b03166129c4565b6109fd90614eac565b60035460405163a34123a760e01b815260028b810b60048301528a900b60248201526001600160801b038916604482015291945060009182916001600160a01b03169063a34123a79060640160408051808303816000875af1158015611662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116869190614d17565b9150915081965080955061169a8a8a612fa8565b5050505093509350939050565b60008060006116b4611b87565b6005546008549294509092506116e49165ffffffffffff166116dd600c5465ffffffffffff1690565b8585613045565b9250505090565b6117166040518060800160405280600081526020016000815260200160008152602001600081525090565b82828060020b8260020b1215806117345750620d89e719600283900b125b806117505750611747620d89e719614d69565b60020b8160020b135b806117675750611761600a83614da1565b60020b15155b8061177e5750611778600a82614da1565b60020b15155b156117aa5760405163957b5ed560e01b8152600283810b600483015282900b60248201526044016109d3565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa1580156117f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118189190614de0565b50506040805160808101825260055480825260065460208301526007549282019290925260085465ffffffffffff166060820152908a52600954949650945061186e93600b93508b92508a915086908690612bf4565b606088015260408701526020860152509295945050505050565b6003546001600160a01b031633146118b3576040516308458b2b60e21b815260040160405180910390fd5b821561191e576002546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561190557600080fd5b505af1158015611919573d6000803e3d6000fd5b505050505b831561198a576001546040516340c10f1960e01b8152336004820152602481018690526001600160a01b03909116906340c10f19906044015b600060405180830381600087803b15801561197157600080fd5b505af1158015611985573d6000803e3d6000fd5b505050505b50505050565b606060208251028201602001602083015b818110156119b65780515481526020016119a1565b509192915050565b6003546001600160a01b031633146119e9576040516308458b2b60e21b815260040160405180910390fd5b6000841315611acf57600360009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a699190614e78565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018790529116906340c10f1990604401600060405180830381600087803b158015611ab657600080fd5b505af1158015611aca573d6000803e3d6000fd5b505050505b600083131561198a57600360009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b4f9190614e78565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018690529116906340c10f1990604401611957565b60015460009081908190611ba3906001600160a01b0316613067565b600080546040516367260c6f60e11b815263ffffffff841660048201529293509091620100009091046001600160a01b03169063ce4c18de90602401602060405180830381865afa158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c209190614ed2565b9050600080611c2f600a613077565b9150915081611cc0576000805460405163706bdd2560e01b815263ffffffff87166004820152620100009091046001600160a01b03169063706bdd2590602401602060405180830381865afa158015611c8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb09190614ed2565b9050611cbc81856130d0565b9150505b611cdc611cd56301e13380600160801b614eeb565b829061310e565b96929550919350505050565b8515611d49578415611d07578051611d00908561313a565b8152611d87565b8051611d16906002858561317d565b60808301819052606083018290528251611d3c929091611d3591614d51565b60016132a8565b808252611d00908561313a565b8415611d87578051611d5e906001858561317d565b60808301819052606083018290528251611d84929091611d7d91614d51565b60006132a8565b81525b505050505050565b60008085611da6578260a001518360800151611db1565b82608001518360a001515b915091506000611de4611dc3836132ec565b60035460009062ffffff600160a01b8204811691600160b81b90041661317d565b50905060008560c001516001600160801b0316118015611e045750600083115b15611e9e5760c086015160e0870151611e6689611e3257611e24866132ec565b611e2d90614eff565b611e3b565b611e3b866132ec565b8860c001516001600160801b0316611e5a600c5465ffffffffffff1690565b60059291908587612e8b565b60c0870151611e85908490600160801b906001600160801b0316613315565b60096000828254611e969190614d51565b909155505050505b83606001516001600160a01b031685604001516001600160a01b031603611f0f57836040015115611f0f57602080850151604080516080810182526005548152600654938101939093526007549083015260085465ffffffffffff166060830152600954611f0f92600b92916133c7565b50505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086600003611f7357604051631f2a200560e01b815260040160405180910390fd5b84516001600160a01b031660000361200757886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe79190614de0565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b031660000361208d57886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561205a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207e9190614f1b565b6001600160801b031660608601525b846080015160020b60000361217a57886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fe9190614f38565b62ffffff1660a0860152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa15801561214d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121719190614f55565b60020b60808601525b876121c45784600001516001600160a01b0316866001600160a01b031610806121bf575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b6121f5565b84600001516001600160a01b0316866001600160a01b031611806121f557506401000276a36001600160a01b038716105b1561221e576040516328da8b5760e11b81526001600160a01b03871660048201526024016109d3565b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b8151158015906122ae5750866001600160a01b031682604001516001600160a01b031614155b15612685576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b0390811682526060840151608089015161231b928e1691635339c296918e613448565b1515604083015260020b60208201819052620d89e719131561234657620d89e719602082015261237a565b612353620d89e719614d69565b60020b816020015160020b131561237a57612371620d89e719614d69565b60020b60208201525b61238781602001516136b4565b6001600160a01b0316606082015260408301516123fc908b6123c157896001600160a01b031683606001516001600160a01b0316116123db565b896001600160a01b031683606001516001600160a01b0316105b6123e95782606001516123eb565b895b60c0860151865160a08c01516139d7565b60c085015260a084015260808301526001600160a01b0316604084015281156124745761243b8160c0015182608001516124369190614d51565b613bc9565b8351849061244a908390614f72565b90525060a081015161245b90613bc9565b836020015161246a9190614f72565b60208401526124bf565b6124818160a00151613bc9565b83518490612490908390614fb1565b90525060c081015160808201516124aa9161243691614d51565b83602001516124b99190614fb1565b60208401525b60c08301516001600160801b031615612507576124f28160c00151600160801b8560c001516001600160801b0316613315565b836080018181516125039190614d51565b9052505b6125178a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b0316036126485780604001511561261b57602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa158015612594573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b89190614ff2565b5050505050509150508a156125d3576125d081614eac565b90505b600081600f0b126125f357808460c001516125ee91906150a0565b61260b565b6125fc81614eac565b8460c0015161260b91906150c2565b6001600160801b031660c0850152505b8961262a57806020015161263b565b6001816020015161263b91906150e2565b60020b606084015261267f565b80600001516001600160a01b031683604001516001600160a01b03161461267f576126768360400151613bdb565b60020b60608401525b50612288565b801515891515146126a657602082015182516126a1908a614f72565b6126b8565b81516126b29089614f72565b82602001515b909b909a50919850909650505050505050565b8515612755578415612728576126e5816020015185613eee565b602082015260408101516126fc906000858561317d565b6080830181905260608301829052604083015161271e929091611d3591614d51565b6040820152611d87565b612736816040015185613eee565b604082018190526080820151606083015161271e9291611d7d91614d51565b8461279e57612768816040015185613eee565b6040820181905261277c906000858561317d565b6080830181905260608301829052604083015161271e929091611d7d91614d51565b6127ac816020015185613eee565b60208201526040810151608082015160608301516127ce9291611d3591614d51565b6040820152505050505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128489190614ed2565b905080156128af57600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561289657600080fd5b505af11580156128aa573d6000803e3d6000fd5b505050505b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156128f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291c9190614ed2565b90508015610f5657600154604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561296a57600080fd5b505af1158015611d87573d6000803e3d6000fd5b600080612989611b87565b915091506129bf600060016129a5600c5465ffffffffffff1690565b866129b057856129b3565b60005b60059392919086612e8b565b505050565b60006001607f1b826001600160801b0316106129fe5760405163832da39d60e01b81526001600160801b03831660048201526024016109d3565b5090565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a669190614de0565b5093979650505050505050565b612a9e6040518060800160405280600081526020016000815260200160008152602001600081525090565b60408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152600954600080600f87900b15612b4057835160208501516040860151600354612b0e93600b938e938c938e939291908b906001600160a01b0316613f15565b845160208601516040870151600354939550612b3d93600b938d938c938e938b906001600160a01b0316613f15565b90505b612b4a89896116eb565b9450600087600f0b1215612bb8578115612b8857600289810b6000908152600b60205260408120818155600181018290559182018190556003909101555b8015612bb857600288810b6000908152600b60205260408120818155600181018290559182018190556003909101555b50505050949350505050565b6000612bdf612bd38684614f72565b8590600160801b614026565b612be99084614fb1565b90505b949350505050565b600285810b60009081526020889052604080822087840b8352908220600182015482549483015487519495869586959493928692612c359290918591612bc4565b90506000846003015490508a60020b8d60020b1315612c7f57828a60200151612c5e9190614f72565b9250818a60400151612c709190614f72565b9150612c7c818a614e95565b90505b6001840154845460028601548c51600092612c9e929091859190612bc4565b90506000866003015490508d60020b8f60020b13612ce757828d60200151612cc69190614f72565b9250818d60400151612cd89190614f72565b9150612ce4818d614e95565b90505b82868e60200151612cf89190614f72565b612d029190614f72565b9a5081858e60400151612d159190614f72565b612d1f9190614f72565b995080612d2c858e614e95565b612d369190614e95565b9850505050505050505096509650969350505050565b610f56612d5882614083565b83906140cc565b60008054610100900460ff1615612ded578160ff166001148015612d825750303b155b612de55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109d3565b506000919050565b60005460ff808416911610612e5b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016109d3565b506000805460ff191660ff92909216919091179055600190565b919050565b610d4a816001600160ff1b036140cc565b6003860154600090612ea79065ffffffffffff168585856140ff565b6001880154909150612ebf908290600160801b614127565b876002016000828254612ed29190614fb1565b9091555050865481908890600090612eeb908490614fb1565b90915550612f00905086600160801b87614026565b876001016000828254612f139190614fb1565b909155505060038701805465ffffffffffff861665ffffffffffff199091168117909155604080518954815260018a0154602082015260028a01548183015260608101929092526080820185905260a08201849052517f62187ed3f133848cd15541a988e634a4c2e6a75750e025c69ea914b1ea2263cc9181900360c00190a150505050505050565b610f56612d5882614175565b6003546040516309e3d67b60e31b8152306004820152600284810b602483015283900b60448201526001600160801b036064820181905260848201526001600160a01b0390911690634f1eb3d89060a40160408051808303816000875af1158015613017573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303b919061512a565b5050610f566127db565b6000613053858585856140ff565b61305d9087614fb1565b9695505050505050565b600063ffffffff82165b92915050565b805460009081906001600160ff1b0181016130985750600093849350915050565b60006130a3826141be565b90506001600160a01b038116156130c8576130bd816141db565b935093505050915091565b6001826130bd565b6000806130dc846132ec565b6130e5846132ec565b6130ef9190614f72565b90506201518061310482600160801b87614214565b612bec9190615159565b60008180841315613120579050613071565b61312981614eff565b9050808412156119b6579050613071565b60008061314a83620f4240615187565b60020b61315c62ffffff8516866151a3565b6131669190615159565b613171906001614fb1565b9050612bec8185614fb1565b600080600061318b87614251565b905060018660028111156131a1576131a1615228565b036131e157836131b486620f4240615187565b6131be9190615187565b62ffffff166131d082620f424061523e565b6131da9190614eeb565b9050613231565b60028660028111156131f5576131f5615228565b03613231578361320886620f424061525d565b613212919061525d565b62ffffff1661322482620f424061523e565b61322e9190614eeb565b90505b6000620f4240613241868861525d565b6132509062ffffff168461523e565b61325a9190614eeb565b613265906001614d51565b9050620f424061327a62ffffff88168461523e565b6132849190614eeb565b61328f906001614d51565b935061329b8482614e95565b9250505094509492505050565b6000808260018111156132bd576132bd615228565b1460008513036132d8576132d18385614fb1565b90506132e5565b6132e28385614f72565b90505b9392505050565b6000600160ff1b82106129fe576040516320c82def60e21b8152600481018390526024016109d3565b600080806000198587098587029250828110838203039150508060000361334e576000841161334357600080fd5b5082900490506132e5565b80841161335a57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600283810b60009081526020869052604081208054600182015493820154865192946133f593909190612bc4565b845183556001830154602086015191925061340f91614f72565b60018301556040840151613424908290614f72565b600283015560038201546134389084614e95565b8260030181905550505050505050565b60008080613456858761527b565b905060008660020b12801561347657506134708587614da1565b60020b15155b156134895780613485816152b5565b9150505b831561358e5760008061349b83614268565b90925090506000600160ff831681901b906134b69082614e95565b6134c09190614d51565b90506000818c8c866040518263ffffffff1660e01b81526004016134ed919060019190910b815260200190565b602060405180830381865afa15801561350a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061352e9190614ed2565b168015159650905085613558578861354960ff8516876150e2565b61355391906152d8565b613583565b8861356282614285565b61356c9085615365565b6135799060ff16876150e2565b61358391906152d8565b9650505050506136a9565b6000806135a461359f846001615388565b614268565b909250905060006135bc600160ff841681901b614e95565b1990506000818c8c866040518263ffffffff1660e01b81526004016135ea919060019190910b815260200190565b602060405180830381865afa158015613607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061362b9190614ed2565b16801515965090508561366b57886136448460ff615365565b60ff16613652876001615388565b61365c9190615388565b61366691906152d8565b6136a2565b888361367683614325565b6136809190615365565b60ff1661368e876001615388565b6136989190615388565b6136a291906152d8565b9650505050505b509550959350505050565b60008060008360020b126136cb578260020b6136d3565b8260020b6000035b9050620d89e88111156136f9576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361371057600160801b613722565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613756576ffff97272373d413259a46990580e213a0260801c5b6004821615613775576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613794576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156137b3576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156137d2576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156137f1576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613810576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613830576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613850576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613870576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613890576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156138b0576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156138d0576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156138f0576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613910576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613931576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613951576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613970576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561398d576b048a170391f7dc42444e8fa20260801c5b60008460020b13156139ae5780600019816139aa576139aa614d8b565b0490505b6401000000008106156139c25760016139c5565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590613a5c576000613a108989620f42400362ffffff16620f4240613315565b905082613a2957613a248c8c8c600161440f565b613a36565b613a368b8d8c600161447f565b9550858110613a47578a9650613a56565b613a538c8b838661453f565b96505b50613aa6565b81613a7357613a6e8b8b8b600061447f565b613a80565b613a808a8c8b600061440f565b9350838860000310613a9457899550613aa6565b613aa38b8a8a6000038561458b565b95505b6001600160a01b038a8116908716148215613b0957808015613ac55750815b613adb57613ad6878d8c600161447f565b613add565b855b9550808015613aea575081155b613b0057613afb878d8c600061440f565b613b02565b845b9450613b53565b808015613b135750815b613b2957613b248c888c600161440f565b613b2b565b855b9550808015613b38575081155b613b4e57613b498c888c600061447f565b613b50565b845b94505b81158015613b6357508860000385115b15613b6f578860000394505b818015613b8e57508a6001600160a01b0316876001600160a01b031614155b15613b9d578589039350613bba565b613bb7868962ffffff168a620f42400362ffffff166145d7565b93505b50505095509550955095915050565b6000600160ff1b82106129fe57600080fd5b60006401000276a36001600160a01b03831610801590613c17575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613c34576040516324c070df60e11b815260040160405180910390fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110613cd557607f810383901c9150613cdf565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14613edf57886001600160a01b0316613ec4826136b4565b6001600160a01b03161115613ed95781613ee1565b80613ee1565b815b9998505050505050505050565b6000620f4240613efe8382615187565b613f0b9060020b856151a3565b6132e59190615159565b600288900b600081815260208b90526040808220905163f30dba9360e01b81526004810193909352909182906001600160a01b0385169063f30dba939060240161010060405180830381865afa158015613f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f979190614ff2565b5050505050505090506000808a600f0b12613fbb57613fb68a836150a0565b613fce565b613fc48a614eac565b613fce90836150c2565b6001600160801b0380821615908416801591909114159550909150600003614016578a60020b8c60020b13614016578883556001830188905560028301879055600383018690555b5050509998505050505050505050565b600060018180806140378885614617565b945092506140458785614617565b945091506140538685614617565b94509050614065612436848484613315565b9450836140785761407585614eff565b94505b505050509392505050565b60006001600160a01b0382166140b7576040516324a84bcb60e11b81526001600160a01b03831660048201526024016109d3565b5060601b6b4144445245535300000000001790565b8082556040518181527fd2d06ee736d3d6ea4ad579594bdfae87317018c75692e5a82d77fdc85fc389f390602001610f4d565b600061410b85856153cf565b60050b61411d8484600160801b614214565b612be991906151a3565b6000614134848484614026565b9050600081128015614164575061416461414d85614644565b61415685614644565b61415f85614644565b61464f565b156132e5576132e260001982614fb1565b806001600160ff1b0381148061419d57506000614191826141be565b6001600160a01b031614155b15612e75576040516383119a2f60e01b8152600481018390526024016109d3565b60008160a01b664144445245535360c81b03612e75575060601c90565b633fabe5a360e21b6000818152908190604082600481875afa9250821561420e576020516453d1ac10008160801b059250505b50915091565b600061423d6124366000861261422a5785614236565b614236866000196151a3565b8585613315565b905060008412156132e5576132e281614eff565b60008082136129fe5761426382614eff565b613071565b600281900b60081d600061427e61010084614da1565b9050915091565b600080821161429357600080fd5b600160801b82106142a657608091821c91015b6801000000000000000082106142be57604091821c91015b64010000000082106142d257602091821c91015b6201000082106142e457601091821c91015b61010082106142f557600891821c91015b6010821061430557600491821c91015b6004821061431557600291821c91015b60028210612e7557600101919050565b600080821161433357600080fd5b5060ff6001600160801b0382161561434e57607f1901614356565b608082901c91505b67ffffffffffffffff82161561436f57603f1901614377565b604082901c91505b63ffffffff82161561438c57601f1901614394565b602082901c91505b61ffff8216156143a757600f19016143af565b601082901c91505b60ff8216156143c157600719016143c9565b600882901c91505b600f8216156143db57600319016143e3565b600482901c91505b60038216156143f557600119016143fd565b600282901c91505b6001821615612e755760001901919050565b6000836001600160a01b0316856001600160a01b0316111561442f579293925b8161445c57614457836001600160801b03168686036001600160a01b0316600160601b613315565b612be9565b612be9836001600160801b03168686036001600160a01b0316600160601b6145d7565b6000836001600160a01b0316856001600160a01b0316111561449f579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b0386860381169087166144d257600080fd5b8361450857866001600160a01b03166144f58383896001600160a01b0316613315565b8161450257614502614d8b565b04614534565b61453461451f8383896001600160a01b03166145d7565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b03161161455657600080fd5b6000846001600160801b03161161456c57600080fd5b8161457e576144578585856001614668565b612be9858585600161474e565b600080856001600160a01b0316116145a257600080fd5b6000846001600160801b0316116145b857600080fd5b816145ca57614457858585600061474e565b612be98585856000614668565b60006145e4848484613315565b9050600082806145f6576145f6614d8b565b84860911156132e557600019811061460d57600080fd5b6001019392505050565b60008060008412156146365791159161462f84614eff565b915061463a565b8391505b50815b9250929050565b600061307182614251565b600081838509801561466057600191505b509392505050565b600081156146da5760006001600160a01b0384111561469e5761469984600160601b876001600160801b0316613315565b6146b5565b6146b56001600160801b038616606086901b614eeb565b90506146d26146cd826001600160a01b038916614d51565b614847565b915050612bec565b60006001600160a01b038411156147085761470384600160601b876001600160801b03166145d7565b614725565b614725606085901b6001600160801b038716808204910615150190565b905080866001600160a01b03161161473c57600080fd5b6001600160a01b038616039050612bec565b60008260000361475f575083612bec565b6fffffffffffffffffffffffffffffffff60601b606085901b1682156147fa576001600160a01b0386168481029085828161479c5761479c614d8b565b04036147cc578181018281106147ca576147c083896001600160a01b0316836145d7565b9350505050612bec565b505b506146d281856147e56001600160a01b038a1683614eeb565b6147ef9190614d51565b808204910615150190565b6001600160a01b0386168481029085828161481757614817614d8b565b0414801561482457508082115b61482d57600080fd5b8082036147c06146cd846001600160a01b038b16846145d7565b806001600160a01b0381168114612e7557600080fd5b60006020828403121561486f57600080fd5b813565ffffffffffff811681146132e557600080fd5b8015158114610d4a57600080fd5b6001600160a01b0381168114610d4a57600080fd5b6000806000606084860312156148bd57600080fd5b83356148c881614885565b92506020840135915060408401356148df81614893565b809150509250925092565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b8060020b8114610d4a57600080fd5b6001600160801b0381168114610d4a57600080fd5b60008060006060848603121561498057600080fd5b833561498b81614947565b9250602084013561499b81614947565b915060408401356148df81614956565b8381526020810183905260c08101612bec6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b6000602082840312156149f957600080fd5b5035919050565b60008060408385031215614a1357600080fd5b8235614a1e81614947565b91506020830135614a2e81614947565b809150509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101613071565b600060208284031215614a7657600080fd5b81356132e581614893565b600060208284031215614a9357600080fd5b81356132e581614947565b600060208284031215614ab057600080fd5b81356132e581614885565b600060c08284031215614acd57600080fd5b50919050565b62ffffff81168114610d4a57600080fd5b600060208284031215614af657600080fd5b81356132e581614ad3565b60008083601f840112614b1357600080fd5b50813567ffffffffffffffff811115614b2b57600080fd5b60208301915083602082850101111561463d57600080fd5b60008060008060608587031215614b5957600080fd5b8435935060208501359250604085013567ffffffffffffffff811115614b7e57600080fd5b614b8a87828801614b01565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215614bbf57600080fd5b823567ffffffffffffffff80821115614bd757600080fd5b818501915085601f830112614beb57600080fd5b813581811115614bfd57614bfd614b96565b8060051b604051601f19603f83011681018181108582111715614c2257614c22614b96565b604052918252848201925083810185019188831115614c4057600080fd5b938501935b82851015614c5e57843584529385019392850192614c45565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015614ca257835183529284019291840191600101614c86565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015614ce457614ce4614cae565b039392505050565b60006001600160a01b03808316818516808303821115614d0e57614d0e614cae565b01949350505050565b60008060408385031215614d2a57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b60008219821115614d6457614d64614cae565b500190565b60008160020b627fffff198103614d8257614d82614cae565b60000392915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b80614db457614db4614d8b565b808360020b0791505092915050565b805161ffff81168114612e7557600080fd5b8051612e7581614885565b600080600080600080600060e0888a031215614dfb57600080fd5b8751614e0681614893565b6020890151909750614e1781614947565b9550614e2560408901614dc3565b9450614e3360608901614dc3565b9350614e4160808901614dc3565b925060a088015160ff81168114614e5757600080fd5b60c0890151909250614e6881614885565b8091505092959891949750929550565b600060208284031215614e8a57600080fd5b81516132e581614893565b600082821015614ea757614ea7614cae565b500390565b600081600f0b6f7fffffffffffffffffffffffffffffff198103614d8257614d82614cae565b600060208284031215614ee457600080fd5b5051919050565b600082614efa57614efa614d8b565b500490565b6000600160ff1b8201614f1457614f14614cae565b5060000390565b600060208284031215614f2d57600080fd5b81516132e581614956565b600060208284031215614f4a57600080fd5b81516132e581614ad3565b600060208284031215614f6757600080fd5b81516132e581614947565b60008083128015600160ff1b850184121615614f9057614f90614cae565b6001600160ff1b0384018313811615614fab57614fab614cae565b50500390565b600080821280156001600160ff1b0384900385131615614fd357614fd3614cae565b600160ff1b8390038412811615614fec57614fec614cae565b50500190565b600080600080600080600080610100898b03121561500f57600080fd5b885161501a81614956565b80985050602089015180600f0b811461503257600080fd5b80975050604089015195506060890151945060808901518060060b811461505857600080fd5b60a08a015190945061506981614893565b60c08a015190935063ffffffff8116811461508357600080fd5b915061509160e08a01614dd5565b90509295985092959890939650565b60006001600160801b03808316818516808303821115614d0e57614d0e614cae565b60006001600160801b0383811690831681811015614ce457614ce4614cae565b60008160020b8360020b6000811281627fffff190183128115161561510957615109614cae565b81627fffff01831381161561512057615120614cae565b5090039392505050565b6000806040838503121561513d57600080fd5b825161514881614956565b6020840151909250614a2e81614956565b60008261516857615168614d8b565b600160ff1b82146000198414161561518257615182614cae565b500590565b600062ffffff83811690831681811015614ce457614ce4614cae565b60006001600160ff1b03818413828413808216868404861116156151c9576151c9614cae565b600160ff1b60008712828116878305891216156151e8576151e8614cae565b6000871292508782058712848416161561520457615204614cae565b8785058712818416161561521a5761521a614cae565b505050929093029392505050565b634e487b7160e01b600052602160045260246000fd5b600081600019048311821515161561525857615258614cae565b500290565b600062ffffff808316818516808303821115614d0e57614d0e614cae565b60008160020b8360020b8061529257615292614d8b565b627fffff198214600019821416156152ac576152ac614cae565b90059392505050565b60008160020b627fffff1981036152ce576152ce614cae565b6000190192915050565b60008160020b8360020b627fffff60008213600084138383048511828216161561530457615304614cae565b627fffff19600085128281168783058712161561532357615323614cae565b6000871292508582058712848416161561533f5761533f614cae565b8585058712818416161561535557615355614cae565b5050509290910295945050505050565b600060ff821660ff84168082101561537f5761537f614cae565b90039392505050565b60008160020b8360020b6000821282627fffff038213811516156153ae576153ae614cae565b82627fffff190382128116156153c6576153c6614cae565b50019392505050565b600065ffffffffffff83811690831681811015614ce457614ce4614cae56fea164736f6c634300080e000a';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  override connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
