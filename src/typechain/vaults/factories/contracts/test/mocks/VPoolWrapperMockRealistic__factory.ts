/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../../../../contracts/test/mocks/VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'value',
        type: 'uint128',
      },
    ],
    name: 'SafeCast_Int128Overflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCast_Int256Overflow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AccruedProtocolFeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int256',
        name: 'fundingRateOverrideX128',
        type: 'int256',
      },
    ],
    name: 'FundingRateOverrideUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
    ],
    name: 'LiquidityFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        indexed: false,
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fundingRateOverrideX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFundingRateAndVirtualPrice',
    outputs: [
      {
        internalType: 'int256',
        name: 'fundingRateX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVQuote',
            name: 'vQuote',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'fundingRateOverrideX128_',
        type: 'int256',
      },
    ],
    name: 'setFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuoteAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'useZeroFundingRate',
        type: 'bool',
      },
    ],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vQuote',
    outputs: [
      {
        internalType: 'contract IVQuote',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506008805465ffffffffffff19169055614c448061002f6000396000f3fe608060405234801561001057600080fd5b50600436106101b05760003560e01c80637feedaa1116100ef578063acfd792811610092578063acfd792814610468578063adb6183214610471578063c04b98c41461049a578063d3487997146104a3578063dbd035ff146104b6578063fa461e33146104d6578063fb7e3e24146104e9578063fca6fbf21461050657600080fd5b80637feedaa1146103c457806386c8e9a7146103d75780638b1e9781146104015780639bb1a99c146104145780639f883c1214610427578063a34123a71461043a578063a3a1e7e91461044d578063a3c35e2c1461045557600080fd5b806348aaa8c01161015757806348aaa8c0146102cd5780634bc36bd614610322578063512403361461033557806356d15a88146103485780635e622abc1461035b5780636719578c146103635780636c544335146103765780637779815c146103bc57600080fd5b806309e54e31146101b55780630af96800146101e5578063195cd92c146102145780631dce5fcf146102345780631e2eaeaf146102565780632a99a792146102765780632ad4f84b146102965780633b231e01146102c4575b600080fd5b6101e36101c33660046140a2565b6008805465ffffffffffff191665ffffffffffff92909216919091179055565b005b6000546101fe906201000090046001600160a01b031681565b60405161020b91906140ca565b60405180910390f35b610227610222366004614104565b61051c565b60405161020b9190614146565b6102476102423660046141c2565b61086d565b60405161020b93929190614228565b610268610264366004614243565b5490565b60405190815260200161020b565b61028961028436600461425c565b610a2f565b60405161020b9190614295565b6101e36102a43660046140a2565b600c805465ffffffffffff191665ffffffffffff92909216919091179055565b610268600a5481565b6103026102db3660046142a3565b600b6020526000908152604090208054600182015460028301546003909301549192909184565b60408051948552602085019390935291830152606082015260800161020b565b6002546101fe906001600160a01b031681565b6101e36103433660046142c0565b610b38565b6101e36103563660046142dd565b610baf565b610268610dc6565b6003546101fe906001600160a01b031681565b6005546006546007546008546103949392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff16606082015260800161020b565b600554610268565b6101e36103d2366004614306565b610e45565b6003546103ed90600160a01b900462ffffff1681565b60405162ffffff909116815260200161020b565b6101e361040f366004614306565b610f46565b6001546101fe906001600160a01b031681565b6101e3610435366004614243565b611040565b6102476104483660046141c2565b61111d565b6102686112c4565b61028961046336600461425c565b611308565b61026860045481565b600c546104839065ffffffffffff1681565b60405165ffffffffffff909116815260200161020b565b61026860095481565b6101e36104b1366004614364565b611482565b6104c96104c43660046143cc565b611589565b60405161020b9190614489565b6101e36104e4366004614364565b6115b7565b6104f161177b565b6040805192835260208301919091520161020b565b6003546103ed90600160b81b900462ffffff1681565b61056e6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6000546201000090046001600160a01b0316331461059f57604051638597d08b60e01b815260040160405180910390fd5b600080841215906001600160a01b03841690036105f257846105df576105da600173fffd8963efd1fc6a506488495d951d5263988d266144e3565b6105ef565b6105ef6401000276a3600161450b565b92505b83825260035461062090829087906101f49062ffffff600160a01b8204811691600160b81b900416876118bd565b60408051610100810182526000808252602082018190529181018290526060810182905260c0810182905260e08101829052600a60808201526101f460a0820152908061066b61177b565b60c0850181905260e0850182905290925090508451600354600091829182916106a4916001600160a01b0316908d908c8a611964611aed565b92509250925085600001518860a001906001600160a01b031690816001600160a01b03168152505080604001518860c001906001600160a01b031690816001600160a01b031681525050600360009054906101000a90046001600160a01b03166001600160a01b031663128acb08308d8b600001518d6040518563ffffffff1660e01b815260040161076e94939291906001600160a01b03948516815292151560208401526040830191909152909116606082015260a06080820181905260009082015260c00190565b60408051808303816000875af115801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190614536565b60408a015260208901819052831480156107cd5750876040015182145b6107d9576107d961455a565b505060035461080a94508593508992506101f4915062ffffff600160a01b8204811691600160b81b90041687612297565b8160800151600460008282546108209190614570565b9091555061082e90506123a7565b7f374e2c00db0195ec47718dc83fbed946c07c24c240e8332e547d9b4ac086fd478260405161085d9190614146565b60405180910390a1509392505050565b60008061087861407a565b6000546201000090046001600160a01b031633146108a957604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806108c75750620d89e719600283900b125b806108e357506108da620d89e719614588565b60020b8160020b135b806108fa57506108f4600a836145c0565b60020b15155b80610911575061090b600a826145c0565b60020b15155b156109425760405163957b5ed560e01b8152600283810b600483015282900b60248201526044015b60405180910390fd5b61094a612554565b61097b8888610961896001600160801b0316612587565b600354610976906001600160a01b03166125c5565b612636565b600354604051633c8a7d8d60e01b815230600482015260028b810b60248301528a900b60448201526001600160801b038916606482015260a06084820152600060a4820181905292955082916001600160a01b031690633c8a7d8d9060c40160408051808303816000875af11580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c9190614536565b909b909a50949850939650505050505050565b610a3761407a565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa591906145ff565b505060408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152939550929350610aeb92506112c4915050565b808252600554600654600754610b0093612726565b604082015280518352600954610b2090600b908790879086908690612756565b60608601526040850152602084015250909392505050565b6000546201000090046001600160a01b03163314610b6957604051638597d08b60e01b815260040160405180910390fd5b600080610b7461177b565b91509150610baa60006001610b90600c5465ffffffffffff1690565b86610b9b5785610b9e565b60005b600593929190866128ae565b505050565b600054610100900460ff16610bca5760005460ff1615610bce565b303b155b610c315760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610939565b600054610100900460ff16158015610c53576000805461ffff19166101011790555b610c606020830183614697565b600080546001600160a01b0392909216620100000262010000600160b01b0319909216919091179055610c996040830160208401614697565b600180546001600160a01b0319166001600160a01b0392909216919091179055610cc96060830160408401614697565b600280546001600160a01b0319166001600160a01b0392909216919091179055610cf96080830160608401614697565b600380546001600160a01b0319166001600160a01b0392909216919091179055610d2960a0830160808401614306565b6003805462ffffff92909216600160a01b0262ffffff60a01b19909216919091179055610d5c60c0830160a08401614306565b6003805462ffffff92909216600160b81b0262ffffff60b81b199092169190911790556001600160ff1b03600a55610db060006001610da2600c5465ffffffffffff1690565b6005929190600060016128ae565b8015610dc2576000805461ff00191690555b5050565b600080546201000090046001600160a01b03163314610df857604051638597d08b60e01b815260040160405180910390fd5b6001600454610e0791906146b4565b60016004556040518181529091507f889bbef14ccbbb6f97773359c9c09396f67ed97695236771816a304ec5d886119060200160405180910390a190565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc91906146cb565b6001600160a01b0316336001600160a01b031614610eed57604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60b81b1916600160b81b62ffffff8416908102919091179091556040519081527f2edf7eef14cb246dab2aac555e300928981632918159d9e33fcaa24dcd38cb40906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbd91906146cb565b6001600160a01b0316336001600160a01b031614610fee57604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60a01b1916600160a01b62ffffff8416908102919091179091556040519081527f5e286c9a939d59334080ddf15517957037c2228384e26bb92a368ce44c531edd90602001610f3b565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015611093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b791906146cb565b6001600160a01b0316336001600160a01b0316146110e857604051632d5be4cb60e21b815260040160405180910390fd5b600a8190556040518181527fe71127eab59a3a0c0415330d6b03fb027923dc6710978f16940a31355cbf83e890602001610f3b565b60008061112861407a565b6000546201000090046001600160a01b0316331461115957604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806111775750620d89e719600283900b125b80611193575061118a620d89e719614588565b60020b8160020b135b806111aa57506111a4600a836145c0565b60020b15155b806111c157506111bb600a826145c0565b60020b15155b156111ed5760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610939565b6111f5612554565b611215888861120c896001600160801b0316612587565b610961906146e8565b60035460405163a34123a760e01b815260028b810b60048301528a900b60248201526001600160801b038916604482015291945060009182916001600160a01b03169063a34123a79060640160408051808303816000875af115801561127f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a39190614536565b915091508196508095506112b78a8a6129bf565b5050505093509350939050565b60008060006112d161177b565b6005546008549294509092506113019165ffffffffffff166112fa600c5465ffffffffffff1690565b8585612a5c565b9250505090565b61131061407a565b82828060020b8260020b12158061132e5750620d89e719600283900b125b8061134a5750611341620d89e719614588565b60020b8160020b135b80611361575061135b600a836145c0565b60020b15155b806113785750611372600a826145c0565b60020b15155b156113a45760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610939565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa1580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141291906145ff565b50506040805160808101825260055480825260065460208301526007549282019290925260085465ffffffffffff166060820152908a52600954949650945061146893600b93508b92508a915086908690612756565b606088015260408701526020860152509295945050505050565b6003546001600160a01b031633146114ad576040516308458b2b60e21b815260040160405180910390fd5b8215611518576002546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906114e59033908790600401614702565b600060405180830381600087803b1580156114ff57600080fd5b505af1158015611513573d6000803e3d6000fd5b505050505b8315611583576001546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906115509033908890600401614702565b600060405180830381600087803b15801561156a57600080fd5b505af115801561157e573d6000803e3d6000fd5b505050505b50505050565b606060208251028201602001602083015b818110156115af57805154815260200161159a565b509192915050565b6003546001600160a01b031633146115e2576040516308458b2b60e21b815260040160405180910390fd5b60008413156116c857600360009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561163e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166291906146cb565b6003546040516340c10f1960e01b81526001600160a01b03928316926340c10f1992611695929116908890600401614702565b600060405180830381600087803b1580156116af57600080fd5b505af11580156116c3573d6000803e3d6000fd5b505050505b600083131561158357600360009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611724573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174891906146cb565b6003546040516340c10f1960e01b81526001600160a01b03928316926340c10f1992611550929116908790600401614702565b600a5460015460009182916001600160ff1b0382149083906117a5906001600160a01b0316612a7e565b6000546040516367260c6f60e11b815263ffffffff831660048201529192506201000090046001600160a01b03169063ce4c18de90602401602060405180830381865afa1580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e919061471b565b935081156118b2576000805460405163706bdd2560e01b815263ffffffff84166004820152620100009091046001600160a01b03169063706bdd2590602401602060405180830381865afa15801561187a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189e919061471b565b90506118aa8186612a8e565b9550506118b6565b8294505b5050509091565b851561191e5784156118dc5780516118d59085612abf565b815261195c565b80516118eb9060028585612b02565b6080830181905260608301829052825161191192909161190a91614570565b6001612c2d565b8082526118d59085612abf565b841561195c5780516119339060018585612b02565b6080830181905260608301829052825161195992909161195291614570565b6000612c2d565b81525b505050505050565b6000808561197b578260a001518360800151611986565b82608001518360a001515b9150915060006119b961199883612c67565b60035460009062ffffff600160a01b8204811691600160b81b900416612b02565b50905060008560c001516001600160801b03161180156119d95750600083115b15611a735760c086015160e0870151611a3b89611a07576119f986612c67565b611a0290614734565b611a10565b611a1086612c67565b8860c001516001600160801b0316611a2f600c5465ffffffffffff1690565b600592919085876128ae565b60c0870151611a5a908490600160801b906001600160801b0316612c90565b60096000828254611a6b9190614570565b909155505050505b83606001516001600160a01b031685604001516001600160a01b031603611ae457836040015115611ae457602080850151604080516080810182526005548152600654938101939093526007549083015260085465ffffffffffff166060830152600954611ae492600b9291612d42565b50505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086600003611b4857604051631f2a200560e01b815260040160405180910390fd5b84516001600160a01b0316600003611bdc57886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611b98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbc91906145ff565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b0316600003611c6257886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c539190614750565b6001600160801b031660608601525b846080015160020b600003611d4f57886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd3919061476d565b62ffffff1660a0860152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015611d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d46919061478a565b60020b60808601525b87611d995784600001516001600160a01b0316866001600160a01b03161080611d94575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b611dca565b84600001516001600160a01b0316866001600160a01b03161180611dca57506401000276a36001600160a01b038716105b15611dea57856040516328da8b5760e11b815260040161093991906140ca565b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b815115801590611e7a5750866001600160a01b031682604001516001600160a01b031614155b15612251576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b03908116825260608401516080890151611ee7928e1691635339c296918e612dc3565b1515604083015260020b60208201819052620d89e7191315611f1257620d89e7196020820152611f46565b611f1f620d89e719614588565b60020b816020015160020b1315611f4657611f3d620d89e719614588565b60020b60208201525b611f53816020015161302f565b6001600160a01b031660608201526040830151611fc8908b611f8d57896001600160a01b031683606001516001600160a01b031611611fa7565b896001600160a01b031683606001516001600160a01b0316105b611fb5578260600151611fb7565b895b60c0860151865160a08c0151613347565b60c085015260a084015260808301526001600160a01b031660408401528115612040576120078160c0015182608001516120029190614570565b613539565b835184906120169083906147a7565b90525060a081015161202790613539565b836020015161203691906147a7565b602084015261208b565b61204d8160a00151613539565b8351849061205c9083906147e6565b90525060c081015160808201516120769161200291614570565b836020015161208591906147e6565b60208401525b60c08301516001600160801b0316156120d3576120be8160c00151600160801b8560c001516001600160801b0316612c90565b836080018181516120cf9190614570565b9052505b6120e38a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b031603612214578060400151156121e757602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa158015612160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121849190614827565b5050505050509150508a1561219f5761219c816146e8565b90505b600081600f0b126121bf57808460c001516121ba91906148d5565b6121d7565b6121c8816146e8565b8460c001516121d791906148f7565b6001600160801b031660c0850152505b896121f6578060200151612207565b600181602001516122079190614917565b60020b606084015261224b565b80600001516001600160a01b031683604001516001600160a01b03161461224b57612242836040015161354b565b60020b60608401525b50611e54565b80151589151514612272576020820151825161226d908a6147a7565b612284565b815161227e90896147a7565b82602001515b909b909a50919850909650505050505050565b85156123215784156122f4576122b181602001518561381e565b602082015260408101516122c89060008585612b02565b608083018190526060830182905260408301516122ea92909161190a91614570565b604082015261195c565b61230281604001518561381e565b60408201819052608082015160608301516122ea929161195291614570565b8461236a5761233481604001518561381e565b604082018190526123489060008585612b02565b608083018190526060830182905260408301516122ea92909161195291614570565b61237881602001518561381e565b602082015260408101516080820151606083015161239a929161190a91614570565b6040820152505050505050565b6002546040516370a0823160e01b81526000916001600160a01b0316906370a08231906123d89030906004016140ca565b602060405180830381865afa1580156123f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612419919061471b565b9050801561248057600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561246757600080fd5b505af115801561247b573d6000803e3d6000fd5b505050505b6001546040516370a0823160e01b81526000916001600160a01b0316906370a08231906124b19030906004016140ca565b602060405180830381865afa1580156124ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f2919061471b565b90508015610dc257600154604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561254057600080fd5b505af115801561195c573d6000803e3d6000fd5b60008061255f61177b565b91509150610dc26000600161257b600c5465ffffffffffff1690565b600592919086866128ae565b60006001607f1b826001600160801b0316106125c15760405163832da39d60e01b81526001600160801b0383166004820152602401610939565b5090565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612605573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061262991906145ff565b5093979650505050505050565b61263e61407a565b60408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152600954600080600f87900b156126e0578351602085015160408601516003546126ae93600b938e938c938e939291908b906001600160a01b031661383b565b8451602086015160408701516003549395506126dd93600b938d938c938e938b906001600160a01b031661383b565b90505b6126ea8989611308565b9450600087600f0b121561271a57811561270957612709600b8a61394c565b801561271a5761271a600b8961394c565b50505050949350505050565b600061274161273586846147a7565b8590600160801b613976565b61274b90846147e6565b90505b949350505050565b600285810b60009081526020889052604080822087840b83529082206001820154825494830154875194958695869594939286926127979290918591612726565b90506000846003015490508a60020b8d60020b13156127e157828a602001516127c091906147a7565b9250818a604001516127d291906147a7565b91506127de818a6146b4565b90505b6001840154845460028601548c51600092612800929091859190612726565b90506000866003015490508d60020b8f60020b1361284957828d6020015161282891906147a7565b9250818d6040015161283a91906147a7565b9150612846818d6146b4565b90505b82868e6020015161285a91906147a7565b61286491906147a7565b9a5081858e6040015161287791906147a7565b61288191906147a7565b99508061288e858e6146b4565b61289891906146b4565b9850505050505050505096509650969350505050565b60038601546000906128ca9065ffffffffffff168585856139d3565b60018801549091506128e2908290600160801b6139fb565b8760020160008282546128f591906147e6565b909155505086548190889060009061290e9084906147e6565b90915550612923905086600160801b87613976565b87600101600082825461293691906147e6565b909155505060038701805465ffffffffffff861665ffffffffffff199091168117909155604080518954815260018a0154602082015260028a01548183015260608101929092526080820185905260a08201849052517f62187ed3f133848cd15541a988e634a4c2e6a75750e025c69ea914b1ea2263cc9181900360c00190a150505050505050565b6003546040516309e3d67b60e31b8152306004820152600284810b602483015283900b60448201526001600160801b036064820181905260848201526001600160a01b0390911690634f1eb3d89060a40160408051808303816000875af1158015612a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a52919061495f565b5050610dc26123a7565b6000612a6a858585856139d3565b612a7490876147e6565b9695505050505050565b600063ffffffff82165b92915050565b600062015180612aae600160801b85612aa786826147a7565b9190613a49565b612ab8919061498e565b9392505050565b600080612acf83620f42406149bc565b60020b612ae162ffffff8516866149d8565b612aeb919061498e565b612af69060016147e6565b905061274e81856147e6565b6000806000612b1087613a86565b90506001866002811115612b2657612b26614a5d565b03612b665783612b3986620f42406149bc565b612b4391906149bc565b62ffffff16612b5582620f4240614a73565b612b5f9190614a92565b9050612bb6565b6002866002811115612b7a57612b7a614a5d565b03612bb65783612b8d86620f4240614aa6565b612b979190614aa6565b62ffffff16612ba982620f4240614a73565b612bb39190614a92565b90505b6000620f4240612bc68688614aa6565b612bd59062ffffff1684614a73565b612bdf9190614a92565b612bea906001614570565b9050620f4240612bff62ffffff881684614a73565b612c099190614a92565b612c14906001614570565b9350612c2084826146b4565b9250505094509492505050565b600080826001811115612c4257612c42614a5d565b146000851303612c5d57612c5683856147e6565b9050612ab8565b61274e83856147a7565b6000600160ff1b82106125c1576040516320c82def60e21b815260048101839052602401610939565b6000808060001985870985870292508281108382030391505080600003612cc95760008411612cbe57600080fd5b508290049050612ab8565b808411612cd557600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600283810b6000908152602086905260408120805460018201549382015486519294612d7093909190612726565b8451835560018301546020860151919250612d8a916147a7565b60018301556040840151612d9f9082906147a7565b60028301556003820154612db390846146b4565b8260030181905550505050505050565b60008080612dd18587614ac4565b905060008660020b128015612df15750612deb85876145c0565b60020b15155b15612e045780612e0081614afe565b9150505b8315612f0957600080612e1683613a9d565b90925090506000600160ff831681901b90612e3190826146b4565b612e3b9190614570565b90506000818c8c866040518263ffffffff1660e01b8152600401612e68919060019190910b815260200190565b602060405180830381865afa158015612e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ea9919061471b565b168015159650905085612ed35788612ec460ff851687614917565b612ece9190614b21565b612efe565b88612edd82613aba565b612ee79085614bae565b612ef49060ff1687614917565b612efe9190614b21565b965050505050613024565b600080612f1f612f1a846001614bd1565b613a9d565b90925090506000612f37600160ff841681901b6146b4565b1990506000818c8c866040518263ffffffff1660e01b8152600401612f65919060019190910b815260200190565b602060405180830381865afa158015612f82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fa6919061471b565b168015159650905085612fe65788612fbf8460ff614bae565b60ff16612fcd876001614bd1565b612fd79190614bd1565b612fe19190614b21565b61301d565b8883612ff183613b55565b612ffb9190614bae565b60ff16613009876001614bd1565b6130139190614bd1565b61301d9190614b21565b9650505050505b509550959350505050565b60008060008360020b12613046578260020b61304e565b8260020b6000035b9050620d89e8811115613074576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361308b57600160801b61309d565b6ffffcb933bd6fad37aa2d162d1a5940015b6001600160881b0316905060028216156130c7576ffff97272373d413259a46990580e213a0260801c5b60048216156130e6576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613105576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613124576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613143576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613162576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613181576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156131a1576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156131c1576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156131e1576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613201576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613221576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613241576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613261576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613281576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156132a2576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156132c2576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156132e1576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156132fe576b048a170391f7dc42444e8fa20260801c5b60008460020b131561331f57806000198161331b5761331b6145aa565b0490505b600160201b810615613332576001613335565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906133cc5760006133808989620f42400362ffffff16620f4240612c90565b905082613399576133948c8c8c6001613c3e565b6133a6565b6133a68b8d8c6001613cae565b95508581106133b7578a96506133c6565b6133c38c8b8386613d65565b96505b50613416565b816133e3576133de8b8b8b6000613cae565b6133f0565b6133f08a8c8b6000613c3e565b935083886000031061340457899550613416565b6134138b8a8a60000385613db1565b95505b6001600160a01b038a8116908716148215613479578080156134355750815b61344b57613446878d8c6001613cae565b61344d565b855b955080801561345a575081155b6134705761346b878d8c6000613c3e565b613472565b845b94506134c3565b8080156134835750815b613499576134948c888c6001613c3e565b61349b565b855b95508080156134a8575081155b6134be576134b98c888c6000613cae565b6134c0565b845b94505b811580156134d357508860000385115b156134df578860000394505b8180156134fe57508a6001600160a01b0316876001600160a01b031614155b1561350d57858903935061352a565b613527868962ffffff168a620f42400362ffffff16613dfd565b93505b50505095509550955095915050565b6000600160ff1b82106125c157600080fd5b60006401000276a36001600160a01b03831610801590613587575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b6135a4576040516324c070df60e11b815260040160405180910390fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c6001600160401b03811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061363757607f810383901c9150613641565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c6001603f1b161760c19b909b1c6001603e1b169a909a1760c29990991c6001603d1b169890981760c39790971c6001603c1b169690961760c49590951c6001603b1b169490941760c59390931c6001603a1b169290921760c69190911c600160391b161760c79190911c600160381b161760c89190911c600160371b161760c99190911c600160361b161760ca9190911c600160351b161760cb9190911c600160341b161760cc9190911c600160331b161760cd9190911c600160321b1617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461380f57886001600160a01b03166137f48261302f565b6001600160a01b031611156138095781613811565b80613811565b815b9998505050505050505050565b6000620f424061382e83826149bc565b612aae9060020b856149d8565b600288900b600081815260208b90526040808220905163f30dba9360e01b81526004810193909352909182906001600160a01b0385169063f30dba939060240161010060405180830381865afa158015613899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138bd9190614827565b5050505050505090506000808a600f0b126138e1576138dc8a836148d5565b6138f4565b6138ea8a6146e8565b6138f490836148f7565b6001600160801b038082161590841680159190911415955090915060000361393c578a60020b8c60020b1361393c578883556001830188905560028301879055600383018690555b5050509998505050505050505050565b600290810b6000908152602092909252604082208281556001810183905590810182905560030155565b600060018180806139878885613e3d565b945092506139958785613e3d565b945091506139a38685613e3d565b945090506139b5612002848484612c90565b9450836139c8576139c585614734565b94505b505050509392505050565b60006139df8585614c18565b60050b6139f18484600160801b613a49565b61274b91906149d8565b6000613a08848484613976565b9050600081128015613a385750613a38613a2185613e6a565b613a2a85613e6a565b613a3385613e6a565b613e75565b15612ab85761274e600019826147e6565b6000613a7261200260008612613a5f5785613a6b565b613a6b866000196149d8565b8585612c90565b90506000841215612ab85761274e81614734565b60008082136125c157613a9882614734565b612a88565b600281900b60081d6000613ab3610100846145c0565b9050915091565b6000808211613ac857600080fd5b600160801b8210613adb57608091821c91015b600160401b8210613aee57604091821c91015b600160201b8210613b0157602091821c91015b620100008210613b1357601091821c91015b6101008210613b2457600891821c91015b60108210613b3457600491821c91015b60048210613b4457600291821c91015b60028210613b50576001015b919050565b6000808211613b6357600080fd5b5060ff6001600160801b03821615613b7e57607f1901613b86565b608082901c91505b6001600160401b03821615613b9e57603f1901613ba6565b604082901c91505b63ffffffff821615613bbb57601f1901613bc3565b602082901c91505b61ffff821615613bd657600f1901613bde565b601082901c91505b60ff821615613bf05760071901613bf8565b600882901c91505b600f821615613c0a5760031901613c12565b600482901c91505b6003821615613c245760011901613c2c565b600282901c91505b6001821615613b505760001901919050565b6000836001600160a01b0316856001600160a01b03161115613c5e579293925b81613c8b57613c86836001600160801b03168686036001600160a01b0316600160601b612c90565b61274b565b61274b836001600160801b03168686036001600160a01b0316600160601b613dfd565b6000836001600160a01b0316856001600160a01b03161115613cce579293925b600160601b600160e01b03606084901b166001600160a01b038686038116908716613cf857600080fd5b83613d2e57866001600160a01b0316613d1b8383896001600160a01b0316612c90565b81613d2857613d286145aa565b04613d5a565b613d5a613d458383896001600160a01b0316613dfd565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b031611613d7c57600080fd5b6000846001600160801b031611613d9257600080fd5b81613da457613c868585856001613e8e565b61274b8585856001613f74565b600080856001600160a01b031611613dc857600080fd5b6000846001600160801b031611613dde57600080fd5b81613df057613c868585856000613f74565b61274b8585856000613e8e565b6000613e0a848484612c90565b905060008280613e1c57613e1c6145aa565b8486091115612ab8576000198110613e3357600080fd5b6001019392505050565b6000806000841215613e5c57911591613e5584614734565b9150613e60565b8391505b50815b9250929050565b6000612a8882613a86565b6000818385098015613e8657600191505b509392505050565b60008115613f005760006001600160a01b03841115613ec457613ebf84600160601b876001600160801b0316612c90565b613edb565b613edb6001600160801b038616606086901b614a92565b9050613ef8613ef3826001600160a01b038916614570565b614064565b91505061274e565b60006001600160a01b03841115613f2e57613f2984600160601b876001600160801b0316613dfd565b613f4b565b613f4b606085901b6001600160801b038716808204910615150190565b905080866001600160a01b031611613f6257600080fd5b6001600160a01b03861603905061274e565b600082600003613f8557508361274e565b600160601b600160e01b03606085901b168215614017576001600160a01b03861684810290858281613fb957613fb96145aa565b0403613fe957818101828110613fe757613fdd83896001600160a01b031683613dfd565b935050505061274e565b505b50613ef881856140026001600160a01b038a1683614a92565b61400c9190614570565b808204910615150190565b6001600160a01b03861684810290858281614034576140346145aa565b0414801561404157508082115b61404a57600080fd5b808203613fdd613ef3846001600160a01b038b1684613dfd565b806001600160a01b0381168114613b5057600080fd5b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000602082840312156140b457600080fd5b813565ffffffffffff81168114612ab857600080fd5b6001600160a01b0391909116815260200190565b80151581146140ec57600080fd5b50565b6001600160a01b03811681146140ec57600080fd5b60008060006060848603121561411957600080fd5b8335614124816140de565b925060208401359150604084013561413b816140ef565b809150509250925092565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301516001600160a01b039081169183019190915260c092830151169181019190915260e00190565b8060020b81146140ec57600080fd5b6001600160801b03811681146140ec57600080fd5b6000806000606084860312156141d757600080fd5b83356141e28161419e565b925060208401356141f28161419e565b9150604084013561413b816141ad565b805182526020810151602083015260408101516040830152606081015160608301525050565b8381526020810183905260c0810161274e6040830184614202565b60006020828403121561425557600080fd5b5035919050565b6000806040838503121561426f57600080fd5b823561427a8161419e565b9150602083013561428a8161419e565b809150509250929050565b60808101612a888284614202565b6000602082840312156142b557600080fd5b8135612ab88161419e565b6000602082840312156142d257600080fd5b8135612ab8816140de565b600060c082840312156142ef57600080fd5b50919050565b62ffffff811681146140ec57600080fd5b60006020828403121561431857600080fd5b8135612ab8816142f5565b60008083601f84011261433557600080fd5b5081356001600160401b0381111561434c57600080fd5b602083019150836020828501011115613e6357600080fd5b6000806000806060858703121561437a57600080fd5b843593506020850135925060408501356001600160401b0381111561439e57600080fd5b6143aa87828801614323565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156143df57600080fd5b82356001600160401b03808211156143f657600080fd5b818501915085601f83011261440a57600080fd5b81358181111561441c5761441c6143b6565b8060051b604051601f19603f83011681018181108582111715614441576144416143b6565b60405291825284820192508381018501918883111561445f57600080fd5b938501935b8285101561447d57843584529385019392850192614464565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156144c1578351835292840192918401916001016144a5565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015614503576145036144cd565b039392505050565b60006001600160a01b0382811684821680830382111561452d5761452d6144cd565b01949350505050565b6000806040838503121561454957600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b60008219821115614583576145836144cd565b500190565b60008160020b627fffff1981036145a1576145a16144cd565b60000392915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b806145d3576145d36145aa565b808360020b0791505092915050565b805161ffff81168114613b5057600080fd5b8051613b50816140de565b600080600080600080600060e0888a03121561461a57600080fd5b8751614625816140ef565b60208901519097506146368161419e565b9550614644604089016145e2565b9450614652606089016145e2565b9350614660608089016145e2565b925060a088015160ff8116811461467657600080fd5b60c0890151909250614687816140de565b8091505092959891949750929550565b6000602082840312156146a957600080fd5b8135612ab8816140ef565b6000828210156146c6576146c66144cd565b500390565b6000602082840312156146dd57600080fd5b8151612ab8816140ef565b6000600f82900b6001607f1b81016145a1576145a16144cd565b6001600160a01b03929092168252602082015260400190565b60006020828403121561472d57600080fd5b5051919050565b6000600160ff1b8201614749576147496144cd565b5060000390565b60006020828403121561476257600080fd5b8151612ab8816141ad565b60006020828403121561477f57600080fd5b8151612ab8816142f5565b60006020828403121561479c57600080fd5b8151612ab88161419e565b60008083128015600160ff1b8501841216156147c5576147c56144cd565b6001600160ff1b03840183138116156147e0576147e06144cd565b50500390565b600080821280156001600160ff1b0384900385131615614808576148086144cd565b600160ff1b8390038412811615614821576148216144cd565b50500190565b600080600080600080600080610100898b03121561484457600080fd5b885161484f816141ad565b80985050602089015180600f0b811461486757600080fd5b80975050604089015195506060890151945060808901518060060b811461488d57600080fd5b60a08a015190945061489e816140ef565b60c08a015190935063ffffffff811681146148b857600080fd5b91506148c660e08a016145f4565b90509295985092959890939650565b60006001600160801b0382811684821680830382111561452d5761452d6144cd565b60006001600160801b0383811690831681811015614503576145036144cd565b60008160020b8360020b6000811281627fffff190183128115161561493e5761493e6144cd565b81627fffff018313811615614955576149556144cd565b5090039392505050565b6000806040838503121561497257600080fd5b825161497d816141ad565b602084015190925061428a816141ad565b60008261499d5761499d6145aa565b600160ff1b8214600019841416156149b7576149b76144cd565b500590565b600062ffffff83811690831681811015614503576145036144cd565b60006001600160ff1b03818413828413808216868404861116156149fe576149fe6144cd565b600160ff1b6000871282811687830589121615614a1d57614a1d6144cd565b60008712925087820587128484161615614a3957614a396144cd565b87850587128184161615614a4f57614a4f6144cd565b505050929093029392505050565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615614a8d57614a8d6144cd565b500290565b600082614aa157614aa16145aa565b500490565b600062ffffff80831681851680830382111561452d5761452d6144cd565b60008160020b8360020b80614adb57614adb6145aa565b627fffff19821460001982141615614af557614af56144cd565b90059392505050565b60008160020b627fffff198103614b1757614b176144cd565b6000190192915050565b60008160020b8360020b627fffff600082136000841383830485118282161615614b4d57614b4d6144cd565b627fffff196000851282811687830587121615614b6c57614b6c6144cd565b60008712925085820587128484161615614b8857614b886144cd565b85850587128184161615614b9e57614b9e6144cd565b5050509290910295945050505050565b600060ff821660ff841680821015614bc857614bc86144cd565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615614bf757614bf76144cd565b82627fffff19038212811615614c0f57614c0f6144cd565b50019392505050565b600065ffffffffffff83811690831681811015614503576145036144cd56fea164736f6c634300080d000a';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  override connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
