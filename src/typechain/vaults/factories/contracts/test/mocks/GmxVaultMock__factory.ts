/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  GmxVaultMock,
  GmxVaultMockInterface,
} from '../../../../contracts/test/mocks/GmxVaultMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IGMXBatchingManager',
        name: '_batchingManager',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MINTER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PAUSER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burnFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getRoleMember',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleMemberCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001fa738038062001fa7833981016040819052620000349162000366565b604080518082018252600980825268474d5853686172657360b81b602080840182815285518087019096529285528401528151919291839183916200007c91600591620002a7565b50805162000092906006906020840190620002a7565b50506007805460ff1916905550620000ac60003362000142565b620000d87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63362000142565b620001047f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3362000142565b505060078054610100600160a81b0319166101006001600160a01b0394851602179055600880546001600160a01b03191691909216179055620003e1565b6200014e828262000152565b5050565b6200016982826200019560201b62000bc51760201c565b60008281526001602090815260409091206200019091839062000c4962000235821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200014e576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001f13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200024c836001600160a01b03841662000255565b90505b92915050565b60008181526001830160205260408120546200029e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200024f565b5060006200024f565b828054620002b590620003a5565b90600052602060002090601f016020900481019282620002d9576000855562000324565b82601f10620002f457805160ff191683800117855562000324565b8280016001018555821562000324579182015b828111156200032457825182559160200191906001019062000307565b506200033292915062000336565b5090565b5b8082111562000332576000815560010162000337565b6001600160a01b03811681146200036357600080fd5b50565b600080604083850312156200037a57600080fd5b825162000387816200034d565b60208401519092506200039a816200034d565b809150509250929050565b600181811c90821680620003ba57607f821691505b602082108103620003db57634e487b7160e01b600052602260045260246000fd5b50919050565b611bb680620003f16000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f578063a457c2d7116100a2578063d539139311610071578063d539139314610422578063d547741f14610449578063dd62ed3e1461045c578063e63ab1e91461046f57600080fd5b8063a457c2d7146103e1578063a9059cbb146103f4578063bf9571f114610407578063ca15c8731461040f57600080fd5b806391d14854116100de57806391d148541461038757806395d89b41146103be57806399c6d2de146103c6578063a217fddf146103d957600080fd5b806370a082311461031857806379cc6790146103415780638456cb59146103545780639010d07c1461035c57600080fd5b8063313ce5671161018757806340c10f191161015657806340c10f19146102d457806342966c68146102e75780635c975abb146102fa5780636e553f651461030557600080fd5b8063313ce5671461029757806336568abe146102a657806339509351146102b95780633f4ba83a146102cc57600080fd5b806318160ddd116101c357806318160ddd1461023a57806323b872dd1461024c578063248a9ca31461025f5780632f2ff15d1461028257600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063095ea7b314610227575b600080fd5b6101fd6101f8366004611818565b610496565b60405190151581526020015b60405180910390f35b61021a6104c1565b604051610209919061186e565b6101fd6102353660046118bd565b610553565b6004545b604051908152602001610209565b6101fd61025a3660046118e7565b61056b565b61023e61026d366004611923565b60009081526020819052604090206001015490565b61029561029036600461193c565b61058f565b005b60405160128152602001610209565b6102956102b436600461193c565b6105b9565b6101fd6102c73660046118bd565b61063c565b61029561065e565b6102956102e23660046118bd565b610704565b6102956102f5366004611923565b6107aa565b60075460ff166101fd565b61023e61031336600461193c565b6107b7565b61023e610326366004611968565b6001600160a01b031660009081526002602052604090205490565b61029561034f3660046118bd565b610845565b61029561085a565b61036f61036a366004611983565b6108fe565b6040516001600160a01b039091168152602001610209565b6101fd61039536600461193c565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61021a61091d565b61023e6103d43660046119a5565b61092c565b61023e600081565b6101fd6103ef3660046118bd565b6109b8565b6101fd6104023660046118bd565b610a33565b610295610a41565b61023e61041d366004611923565b610b5e565b61023e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61029561045736600461193c565b610b75565b61023e61046a3660046119d8565b610b9a565b61023e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b14806104bb57506104bb82610c5e565b92915050565b6060600580546104d090611a02565b80601f01602080910402602001604051908101604052809291908181526020018280546104fc90611a02565b80156105495780601f1061051e57610100808354040283529160200191610549565b820191906000526020600020905b81548152906001019060200180831161052c57829003601f168201915b5050505050905090565b600033610561818585610c93565b5060019392505050565b600033610579858285610db7565b610584858585610e31565b506001949350505050565b6000828152602081905260409020600101546105aa8161100a565b6105b48383611014565b505050565b6001600160a01b038116331461062e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106388282611036565b5050565b60003361056181858561064f8383610b9a565b6106599190611a52565b610c93565b6106887f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610395565b6106fa5760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e7061757365000000000000006064820152608401610625565b610702611058565b565b61072e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610395565b6107a05760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f7665206d696e74657220726f6c6520746f206d696e74000000000000000000006064820152608401610625565b61063882826110eb565b6107b433826111d6565b50565b6008546040516323b872dd60e01b8152336004820152306024820152604481018490526000916001600160a01b0316906323b872dd906064016020604051808303816000875af115801561080f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190611a6a565b5061083e82846110eb565b5090919050565b610850823383610db7565b61063882826111d6565b6108847f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610395565b6108f65760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f2070617573650000000000000000006064820152608401610625565b610702611330565b600082815260016020526040812061091690836113ab565b9392505050565b6060600680546104d090611a02565b600754604051634ce3696f60e11b81526001600160a01b0385811660048301526024820185905260448201849052600092610100900416906399c6d2de906064016020604051808303816000875af115801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190611a8c565b949350505050565b600033816109c68286610b9a565b905083811015610a265760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610625565b6105848286868403610c93565b600033610561818585610e31565b60075460405163095ea7b360e01b81526101009091046001600160a01b0316600482015260001960248201527382af49447d8a07e3bd95bd0d56f35241523fbab19063095ea7b3906044016020604051808303816000875af1158015610aab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf9190611a6a565b5060075460405163095ea7b360e01b81526101009091046001600160a01b03166004820152600019602482015273ff970a61a04b1ca14834a43f5de4533ebddb5cc89063095ea7b3906044016020604051808303816000875af1158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b49190611a6a565b60008181526001602052604081206104bb906113b7565b600082815260208190526040902060010154610b908161100a565b6105b48383611036565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b610bcf8282610395565b610638576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610c053390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610916836001600160a01b0384166113c1565b60006001600160e01b03198216637965db0b60e01b14806104bb57506301ffc9a760e01b6001600160e01b03198316146104bb565b6001600160a01b038316610cf55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610625565b6001600160a01b038216610d565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610625565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610dc38484610b9a565b90506000198114610e2b5781811015610e1e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610625565b610e2b8484848403610c93565b50505050565b6001600160a01b038316610e955760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610625565b6001600160a01b038216610ef75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610625565b610f02838383611410565b6001600160a01b03831660009081526002602052604090205481811015610f7a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610625565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610fb1908490611a52565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ffd91815260200190565b60405180910390a3610e2b565b6107b4813361141b565b61101e8282610bc5565b60008281526001602052604090206105b49082610c49565b611040828261147f565b60008281526001602052604090206105b490826114e4565b60075460ff166110a15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610625565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166111415760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610625565b61114d60008383611410565b806004600082825461115f9190611a52565b90915550506001600160a01b0382166000908152600260205260408120805483929061118c908490611a52565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166112365760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610625565b61124282600083611410565b6001600160a01b038216600090815260026020526040902054818110156112b65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610625565b6001600160a01b03831660009081526002602052604081208383039055600480548492906112e5908490611aa5565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60075460ff16156113765760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610625565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110ce3390565b600061091683836114f9565b60006104bb825490565b6000818152600183016020526040812054611408575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104bb565b5060006104bb565b6105b4838383611523565b6114258282610395565b6106385761143d816001600160a01b03166014611589565b611448836020611589565b604051602001611459929190611abc565b60408051601f198184030181529082905262461bcd60e51b82526106259160040161186e565b6114898282610395565b15610638576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610916836001600160a01b038416611725565b600082600001828154811061151057611510611b31565b9060005260206000200154905092915050565b60075460ff16156105b45760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610625565b60606000611598836002611b47565b6115a3906002611a52565b67ffffffffffffffff8111156115bb576115bb611b66565b6040519080825280601f01601f1916602001820160405280156115e5576020820181803683370190505b509050600360fc1b8160008151811061160057611600611b31565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061162f5761162f611b31565b60200101906001600160f81b031916908160001a9053506000611653846002611b47565b61165e906001611a52565b90505b60018111156116d6576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061169257611692611b31565b1a60f81b8282815181106116a8576116a8611b31565b60200101906001600160f81b031916908160001a90535060049490941c936116cf81611b7c565b9050611661565b5083156109165760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610625565b6000818152600183016020526040812054801561180e576000611749600183611aa5565b855490915060009061175d90600190611aa5565b90508181146117c257600086600001828154811061177d5761177d611b31565b90600052602060002001549050808760000184815481106117a0576117a0611b31565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806117d3576117d3611b93565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104bb565b60009150506104bb565b60006020828403121561182a57600080fd5b81356001600160e01b03198116811461091657600080fd5b60005b8381101561185d578181015183820152602001611845565b83811115610e2b5750506000910152565b602081526000825180602084015261188d816040850160208701611842565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146118b857600080fd5b919050565b600080604083850312156118d057600080fd5b6118d9836118a1565b946020939093013593505050565b6000806000606084860312156118fc57600080fd5b611905846118a1565b9250611913602085016118a1565b9150604084013590509250925092565b60006020828403121561193557600080fd5b5035919050565b6000806040838503121561194f57600080fd5b8235915061195f602084016118a1565b90509250929050565b60006020828403121561197a57600080fd5b610916826118a1565b6000806040838503121561199657600080fd5b50508035926020909101359150565b6000806000606084860312156119ba57600080fd5b6119c3846118a1565b95602085013595506040909401359392505050565b600080604083850312156119eb57600080fd5b6119f4836118a1565b915061195f602084016118a1565b600181811c90821680611a1657607f821691505b602082108103611a3657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a6557611a65611a3c565b500190565b600060208284031215611a7c57600080fd5b8151801515811461091657600080fd5b600060208284031215611a9e57600080fd5b5051919050565b600082821015611ab757611ab7611a3c565b500390565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611af4816017850160208801611842565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611b25816028840160208801611842565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615611b6157611b61611a3c565b500290565b634e487b7160e01b600052604160045260246000fd5b600081611b8b57611b8b611a3c565b506000190190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080e000a';

type GmxVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GmxVaultMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GmxVaultMock__factory extends ContractFactory {
  constructor(...args: GmxVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _batchingManager: string,
    _sGlp: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GmxVaultMock> {
    return super.deploy(
      _batchingManager,
      _sGlp,
      overrides || {}
    ) as Promise<GmxVaultMock>;
  }
  override getDeployTransaction(
    _batchingManager: string,
    _sGlp: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_batchingManager, _sGlp, overrides || {});
  }
  override attach(address: string): GmxVaultMock {
    return super.attach(address) as GmxVaultMock;
  }
  override connect(signer: Signer): GmxVaultMock__factory {
    return super.connect(signer) as GmxVaultMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GmxVaultMockInterface {
    return new utils.Interface(_abi) as GmxVaultMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GmxVaultMock {
    return new Contract(address, _abi, signerOrProvider) as GmxVaultMock;
  }
}
