/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  TokenMock,
  TokenMockInterface,
} from '../../../../contracts/test/mocks/TokenMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
      {
        internalType: 'uint8',
        name: 'decimals_',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'initialSupply_',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MINTER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PAUSER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burnFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getRoleMember',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleMemberCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162001f5338038062001f53833981016040819052620000349162000565565b83838181816005908051906020019062000050929190620003f2565b50805162000066906006906020840190620003f2565b50506007805460ff191690555062000080600033620000fe565b620000ac7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000fe565b620000d87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000fe565b505060ff82166080528015620000f457620000f433826200010e565b5050505062000653565b6200010a828262000205565b5050565b6001600160a01b0382166200016a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001786000838362000248565b80600460008282546200018c9190620005f0565b90915550506001600160a01b03821660009081526002602052604081208054839290620001bb908490620005f0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200021c82826200026060201b620009611760201c565b600082815260016020908152604090912062000243918390620009e562000300821b17901c565b505050565b620002438383836200032060201b620009fa1760201c565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200010a576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002bc3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000317836001600160a01b038416620003a0565b90505b92915050565b620003388383836200024360201b620005871760201c565b60075460ff1615620002435760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840162000161565b6000818152600183016020526040812054620003e9575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200031a565b5060006200031a565b828054620004009062000617565b90600052602060002090601f0160209004810192826200042457600085556200046f565b82601f106200043f57805160ff19168380011785556200046f565b828001600101855582156200046f579182015b828111156200046f57825182559160200191906001019062000452565b506200047d92915062000481565b5090565b5b808211156200047d576000815560010162000482565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c057600080fd5b81516001600160401b0380821115620004dd57620004dd62000498565b604051601f8301601f19908116603f0116810190828211818310171562000508576200050862000498565b816040528381526020925086838588010111156200052557600080fd5b600091505b838210156200054957858201830151818301840152908201906200052a565b838211156200055b5760008385830101525b9695505050505050565b600080600080608085870312156200057c57600080fd5b84516001600160401b03808211156200059457600080fd5b620005a288838901620004ae565b95506020870151915080821115620005b957600080fd5b50620005c887828801620004ae565b935050604085015160ff81168114620005e057600080fd5b6060959095015193969295505050565b600082198211156200061257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200062c57607f821691505b6020821081036200064d57634e487b7160e01b600052602260045260246000fd5b50919050565b6080516118e46200066f600039600061027d01526118e46000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d5391393146103f5578063d547741f1461041c578063dd62ed3e1461042f578063e63ab1e91461044257600080fd5b8063a457c2d7146103bc578063a9059cbb146103cf578063ca15c873146103e257600080fd5b80639010d07c116100d35780639010d07c1461034a57806391d148541461037557806395d89b41146103ac578063a217fddf146103b457600080fd5b806370a082311461030657806379cc67901461032f5780638456cb591461034257600080fd5b8063313ce567116101665780633f4ba83a116101405780633f4ba83a146102cd57806340c10f19146102d557806342966c68146102e85780635c975abb146102fb57600080fd5b8063313ce5671461027657806336568abe146102a757806339509351146102ba57600080fd5b806318160ddd116101a257806318160ddd1461021957806323b872dd1461022b578063248a9ca31461023e5780632f2ff15d1461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063095ea7b314610206575b600080fd5b6101dc6101d73660046115b4565b610469565b60405190151581526020015b60405180910390f35b6101f9610494565b6040516101e8919061160a565b6101dc610214366004611659565b610526565b6004545b6040519081526020016101e8565b6101dc610239366004611683565b61053e565b61021d61024c3660046116bf565b60009081526020819052604090206001015490565b61027461026f3660046116d8565b610562565b005b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101e8565b6102746102b53660046116d8565b61058c565b6101dc6102c8366004611659565b61060f565b610274610631565b6102746102e3366004611659565b6106d7565b6102746102f63660046116bf565b61077d565b60075460ff166101dc565b61021d610314366004611704565b6001600160a01b031660009081526002602052604090205490565b61027461033d366004611659565b61078a565b61027461079f565b61035d61035836600461171f565b610843565b6040516001600160a01b0390911681526020016101e8565b6101dc6103833660046116d8565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6101f9610862565b61021d600081565b6101dc6103ca366004611659565b610871565b6101dc6103dd366004611659565b6108ec565b61021d6103f03660046116bf565b6108fa565b61021d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61027461042a3660046116d8565b610911565b61021d61043d366004611741565b610936565b61021d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216635a05180f60e01b148061048e575061048e82610a60565b92915050565b6060600580546104a39061176b565b80601f01602080910402602001604051908101604052809291908181526020018280546104cf9061176b565b801561051c5780601f106104f15761010080835404028352916020019161051c565b820191906000526020600020905b8154815290600101906020018083116104ff57829003601f168201915b5050505050905090565b600033610534818585610a95565b5060019392505050565b60003361054c858285610bb9565b610557858585610c33565b506001949350505050565b60008281526020819052604090206001015461057d81610e0c565b6105878383610e16565b505050565b6001600160a01b03811633146106015760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61060b8282610e38565b5050565b6000336105348185856106228383610936565b61062c91906117bb565b610a95565b61065b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610383565b6106cd5760405162461bcd60e51b815260206004820152603960248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20756e70617573650000000000000060648201526084016105f8565b6106d5610e5a565b565b6107017f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610383565b6107735760405162461bcd60e51b815260206004820152603660248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f7665206d696e74657220726f6c6520746f206d696e740000000000000000000060648201526084016105f8565b61060b8282610eed565b6107873382610fd8565b50565b610795823383610bb9565b61060b8282610fd8565b6107c97f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610383565b61083b5760405162461bcd60e51b815260206004820152603760248201527f45524332305072657365744d696e7465725061757365723a206d75737420686160448201527f76652070617573657220726f6c6520746f20706175736500000000000000000060648201526084016105f8565b6106d5611132565b600082815260016020526040812061085b90836111ad565b9392505050565b6060600680546104a39061176b565b6000338161087f8286610936565b9050838110156108df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105f8565b6105578286868403610a95565b600033610534818585610c33565b600081815260016020526040812061048e906111b9565b60008281526020819052604090206001015461092c81610e0c565b6105878383610e38565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b61096b8282610383565b61060b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556109a13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061085b836001600160a01b0384166111c3565b60075460ff16156105875760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016105f8565b60006001600160e01b03198216637965db0b60e01b148061048e57506301ffc9a760e01b6001600160e01b031983161461048e565b6001600160a01b038316610af75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105f8565b6001600160a01b038216610b585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105f8565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610bc58484610936565b90506000198114610c2d5781811015610c205760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105f8565b610c2d8484848403610a95565b50505050565b6001600160a01b038316610c975760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105f8565b6001600160a01b038216610cf95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105f8565b610d04838383611212565b6001600160a01b03831660009081526002602052604090205481811015610d7c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105f8565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610db39084906117bb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dff91815260200190565b60405180910390a3610c2d565b610787813361121d565b610e208282610961565b600082815260016020526040902061058790826109e5565b610e428282611281565b600082815260016020526040902061058790826112e6565b60075460ff16610ea35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105f8565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610f435760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105f8565b610f4f60008383611212565b8060046000828254610f6191906117bb565b90915550506001600160a01b03821660009081526002602052604081208054839290610f8e9084906117bb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166110385760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105f8565b61104482600083611212565b6001600160a01b038216600090815260026020526040902054818110156110b85760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105f8565b6001600160a01b03831660009081526002602052604081208383039055600480548492906110e79084906117d3565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60075460ff16156111785760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105f8565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ed03390565b600061085b83836112fb565b600061048e825490565b600081815260018301602052604081205461120a5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561048e565b50600061048e565b6105878383836109fa565b6112278282610383565b61060b5761123f816001600160a01b03166014611325565b61124a836020611325565b60405160200161125b9291906117ea565b60408051601f198184030181529082905262461bcd60e51b82526105f89160040161160a565b61128b8282610383565b1561060b576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061085b836001600160a01b0384166114c1565b60008260000182815481106113125761131261185f565b9060005260206000200154905092915050565b60606000611334836002611875565b61133f9060026117bb565b67ffffffffffffffff81111561135757611357611894565b6040519080825280601f01601f191660200182016040528015611381576020820181803683370190505b509050600360fc1b8160008151811061139c5761139c61185f565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106113cb576113cb61185f565b60200101906001600160f81b031916908160001a90535060006113ef846002611875565b6113fa9060016117bb565b90505b6001811115611472576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061142e5761142e61185f565b1a60f81b8282815181106114445761144461185f565b60200101906001600160f81b031916908160001a90535060049490941c9361146b816118aa565b90506113fd565b50831561085b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105f8565b600081815260018301602052604081205480156115aa5760006114e56001836117d3565b85549091506000906114f9906001906117d3565b905081811461155e5760008660000182815481106115195761151961185f565b906000526020600020015490508087600001848154811061153c5761153c61185f565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061156f5761156f6118c1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061048e565b600091505061048e565b6000602082840312156115c657600080fd5b81356001600160e01b03198116811461085b57600080fd5b60005b838110156115f95781810151838201526020016115e1565b83811115610c2d5750506000910152565b60208152600082518060208401526116298160408501602087016115de565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461165457600080fd5b919050565b6000806040838503121561166c57600080fd5b6116758361163d565b946020939093013593505050565b60008060006060848603121561169857600080fd5b6116a18461163d565b92506116af6020850161163d565b9150604084013590509250925092565b6000602082840312156116d157600080fd5b5035919050565b600080604083850312156116eb57600080fd5b823591506116fb6020840161163d565b90509250929050565b60006020828403121561171657600080fd5b61085b8261163d565b6000806040838503121561173257600080fd5b50508035926020909101359150565b6000806040838503121561175457600080fd5b61175d8361163d565b91506116fb6020840161163d565b600181811c9082168061177f57607f821691505b60208210810361179f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156117ce576117ce6117a5565b500190565b6000828210156117e5576117e56117a5565b500390565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516118228160178501602088016115de565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516118538160288401602088016115de565b01602801949350505050565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561188f5761188f6117a5565b500290565b634e487b7160e01b600052604160045260246000fd5b6000816118b9576118b96117a5565b506000190190565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080e000a';

type TokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMock__factory extends ContractFactory {
  constructor(...args: TokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenMock> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      overrides || {}
    ) as Promise<TokenMock>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      overrides || {}
    );
  }
  override attach(address: string): TokenMock {
    return super.attach(address) as TokenMock;
  }
  override connect(signer: Signer): TokenMock__factory {
    return super.connect(signer) as TokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMockInterface {
    return new utils.Interface(_abi) as TokenMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMock {
    return new Contract(address, _abi, signerOrProvider) as TokenMock;
  }
}
