/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  TokenMock,
  TokenMockInterface,
} from '../../../../contracts/test/mocks/TokenMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'name_',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol_',
        type: 'string',
      },
      {
        internalType: 'uint8',
        name: 'decimals_',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'initialSupply_',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MINTER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PAUSER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burnFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getRoleMember',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleMemberCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162001ece38038062001ece833981016040819052620000349162000565565b83838181816005908051906020019062000050929190620003f2565b50805162000066906006906020840190620003f2565b50506007805460ff191690555062000080600033620000fe565b620000ac7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620000fe565b620000d87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33620000fe565b505060ff82166080528015620000f457620000f433826200010e565b5050505062000653565b6200010a828262000205565b5050565b6001600160a01b0382166200016a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001786000838362000248565b80600460008282546200018c9190620005f0565b90915550506001600160a01b03821660009081526002602052604081208054839290620001bb908490620005f0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200021c82826200026060201b620008b41760201c565b6000828152600160209081526040909120620002439183906200093862000300821b17901c565b505050565b620002438383836200032060201b6200094d1760201c565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200010a576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002bc3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000317836001600160a01b038416620003a0565b90505b92915050565b620003388383836200024360201b620004e71760201c565b60075460ff1615620002435760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b606482015260840162000161565b6000818152600183016020526040812054620003e9575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200031a565b5060006200031a565b828054620004009062000617565b90600052602060002090601f0160209004810192826200042457600085556200046f565b82601f106200043f57805160ff19168380011785556200046f565b828001600101855582156200046f579182015b828111156200046f57825182559160200191906001019062000452565b506200047d92915062000481565b5090565b5b808211156200047d576000815560010162000482565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004c057600080fd5b81516001600160401b0380821115620004dd57620004dd62000498565b604051601f8301601f19908116603f0116810190828211818310171562000508576200050862000498565b816040528381526020925086838588010111156200052557600080fd5b600091505b838210156200054957858201830151818301840152908201906200052a565b838211156200055b5760008385830101525b9695505050505050565b600080600080608085870312156200057c57600080fd5b84516001600160401b03808211156200059457600080fd5b620005a288838901620004ae565b95506020870151915080821115620005b957600080fd5b50620005c887828801620004ae565b935050604085015160ff81168114620005e057600080fd5b6060959095015193969295505050565b600082198211156200061257634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200062c57607f821691505b6020821081036200064d57634e487b7160e01b600052602260045260246000fd5b50919050565b60805161185f6200066f600039600061021d015261185f6000f3fe608060405234801561001057600080fd5b50600436106101645760003560e01c806370a08231116100c957806370a08231146102a657806379cc6790146102cf5780638456cb59146102e25780639010d07c146102ea57806391d148541461030a57806395d89b411461031d578063a217fddf14610325578063a457c2d71461032d578063a9059cbb14610340578063ca15c87314610353578063d539139314610366578063d547741f1461038d578063dd62ed3e146103a0578063e63ab1e9146103b357600080fd5b806301ffc9a71461016957806306fdde0314610191578063095ea7b3146101a657806318160ddd146101b957806323b872dd146101cb578063248a9ca3146101de5780632f2ff15d14610201578063313ce5671461021657806336568abe14610247578063395093511461025a5780633f4ba83a1461026d57806340c10f191461027557806342966c68146102885780635c975abb1461029b575b600080fd5b61017c6101773660046114c1565b6103c8565b60405190151581526020015b60405180910390f35b6101996103f3565b6040516101889190611517565b61017c6101b4366004611566565b610485565b6004545b604051908152602001610188565b61017c6101d9366004611590565b61049d565b6101bd6101ec3660046115cc565b60009081526020819052604090206001015490565b61021461020f3660046115e5565b6104c1565b005b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610188565b6102146102553660046115e5565b6104ec565b61017c610268366004611566565b61056f565b6102146105ae565b610214610283366004611566565b61062c565b6102146102963660046115cc565b6106b9565b60075460ff1661017c565b6101bd6102b4366004611611565b6001600160a01b031660009081526002602052604090205490565b6102146102dd366004611566565b6106c6565b6102146106db565b6102fd6102f836600461162c565b610755565b604051610188919061164e565b61017c6103183660046115e5565b610774565b61019961079d565b6101bd600081565b61017c61033b366004611566565b6107ac565b61017c61034e366004611566565b61083e565b6101bd6103613660046115cc565b61084c565b6101bd7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61021461039b3660046115e5565b610863565b6101bd6103ae366004611662565b610889565b6101bd60008051602061181383398151915281565b60006001600160e01b03198216635a05180f60e01b14806103ed57506103ed826109b3565b92915050565b6060600580546104029061168c565b80601f016020809104026020016040519081016040528092919081815260200182805461042e9061168c565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b5050505050905090565b6000336104938185856109e8565b5060019392505050565b6000336104ab858285610b0c565b6104b6858585610b86565b506001949350505050565b6000828152602081905260409020600101546104dd8133610d4d565b6104e78383610db1565b505050565b6001600160a01b03811633146105615760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61056b8282610dd3565b5050565b3360008181526003602090815260408083206001600160a01b038716845290915281205490919061049390829086906105a99087906116dc565b6109e8565b6105c660008051602061181383398151915233610774565b6106225760405162461bcd60e51b815260206004820152603960248201526000805160206117f383398151915260448201527876652070617573657220726f6c6520746f20756e706175736560381b6064820152608401610558565b61062a610df5565b565b6106567f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633610774565b6106af5760405162461bcd60e51b815260206004820152603660248201526000805160206117f38339815191526044820152751d99481b5a5b9d195c881c9bdb19481d1bc81b5a5b9d60521b6064820152608401610558565b61056b8282610e82565b6106c33382610f5b565b50565b6106d1823383610b0c565b61056b8282610f5b565b6106f360008051602061181383398151915233610774565b61074d5760405162461bcd60e51b815260206004820152603760248201526000805160206117f383398151915260448201527676652070617573657220726f6c6520746f20706175736560481b6064820152608401610558565b61062a6110a3565b600082815260016020526040812061076d908361111e565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6060600680546104029061168c565b3360008181526003602090815260408083206001600160a01b0387168452909152812054909190838110156108315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610558565b6104b682868684036109e8565b600033610493818585610b86565b60008181526001602052604081206103ed9061112a565b60008281526020819052604090206001015461087f8133610d4d565b6104e78383610dd3565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b6108be8282610774565b61056b576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108f43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061076d836001600160a01b038416611134565b60075460ff16156104e75760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610558565b60006001600160e01b03198216637965db0b60e01b14806103ed57506301ffc9a760e01b6001600160e01b03198316146103ed565b6001600160a01b038316610a4a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610558565b6001600160a01b038216610aab5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610558565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610b188484610889565b90506000198114610b805781811015610b735760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610558565b610b8084848484036109e8565b50505050565b6001600160a01b038316610bea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610558565b6001600160a01b038216610c4c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610558565b610c57838383611183565b6001600160a01b03831660009081526002602052604090205481811015610ccf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610558565b6001600160a01b03808516600090815260026020526040808220858503905591851681529081208054849290610d069084906116dc565b92505081905550826001600160a01b0316846001600160a01b031660008051602061183383398151915284604051610d4091815260200190565b60405180910390a3610b80565b610d578282610774565b61056b57610d6f816001600160a01b0316601461118e565b610d7a83602061118e565b604051602001610d8b9291906116f4565b60408051601f198184030181529082905262461bcd60e51b825261055891600401611517565b610dbb82826108b4565b60008281526001602052604090206104e79082610938565b610ddd828261132a565b60008281526001602052604090206104e7908261138f565b60075460ff16610e3e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610558565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610e78919061164e565b60405180910390a1565b6001600160a01b038216610ed85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610558565b610ee460008383611183565b8060046000828254610ef691906116dc565b90915550506001600160a01b03821660009081526002602052604081208054839290610f239084906116dc565b90915550506040518181526001600160a01b038316906000906000805160206118338339815191529060200160405180910390a35050565b6001600160a01b038216610fbb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610558565b610fc782600083611183565b6001600160a01b0382166000908152600260205260409020548181101561103b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610558565b6001600160a01b038316600090815260026020526040812083830390556004805484929061106a908490611763565b90915550506040518281526000906001600160a01b038516906000805160206118338339815191529060200160405180910390a3505050565b60075460ff16156110e95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610558565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e6b3390565b600061076d83836113a4565b60006103ed825490565b600081815260018301602052604081205461117b575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103ed565b5060006103ed565b6104e783838361094d565b6060600061119d83600261177a565b6111a89060026116dc565b67ffffffffffffffff8111156111c0576111c0611799565b6040519080825280601f01601f1916602001820160405280156111ea576020820181803683370190505b509050600360fc1b81600081518110611205576112056117af565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611234576112346117af565b60200101906001600160f81b031916908160001a905350600061125884600261177a565b6112639060016116dc565b90505b60018111156112db576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611297576112976117af565b1a60f81b8282815181106112ad576112ad6117af565b60200101906001600160f81b031916908160001a90535060049490941c936112d4816117c5565b9050611266565b50831561076d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610558565b6113348282610774565b1561056b576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061076d836001600160a01b0384166113ce565b60008260000182815481106113bb576113bb6117af565b9060005260206000200154905092915050565b600081815260018301602052604081205480156114b75760006113f2600183611763565b855490915060009061140690600190611763565b905081811461146b576000866000018281548110611426576114266117af565b9060005260206000200154905080876000018481548110611449576114496117af565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061147c5761147c6117dc565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506103ed565b60009150506103ed565b6000602082840312156114d357600080fd5b81356001600160e01b03198116811461076d57600080fd5b60005b838110156115065781810151838201526020016114ee565b83811115610b805750506000910152565b60208152600082518060208401526115368160408501602087016114eb565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461156157600080fd5b919050565b6000806040838503121561157957600080fd5b6115828361154a565b946020939093013593505050565b6000806000606084860312156115a557600080fd5b6115ae8461154a565b92506115bc6020850161154a565b9150604084013590509250925092565b6000602082840312156115de57600080fd5b5035919050565b600080604083850312156115f857600080fd5b823591506116086020840161154a565b90509250929050565b60006020828403121561162357600080fd5b61076d8261154a565b6000806040838503121561163f57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6000806040838503121561167557600080fd5b61167e8361154a565b91506116086020840161154a565b600181811c908216806116a057607f821691505b6020821081036116c057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156116ef576116ef6116c6565b500190565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8152600083516117268160178501602088016114eb565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117578160288401602088016114eb565b01602801949350505050565b600082821015611775576117756116c6565b500390565b6000816000190483118215151615611794576117946116c6565b500290565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000816117d4576117d46116c6565b506000190190565b634e487b7160e01b600052603160045260246000fdfe45524332305072657365744d696e7465725061757365723a206d75737420686165d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862addf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080d000a';

type TokenMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenMock__factory extends ContractFactory {
  constructor(...args: TokenMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenMock> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      overrides || {}
    ) as Promise<TokenMock>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialSupply_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialSupply_,
      overrides || {}
    );
  }
  override attach(address: string): TokenMock {
    return super.attach(address) as TokenMock;
  }
  override connect(signer: Signer): TokenMock__factory {
    return super.connect(signer) as TokenMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenMockInterface {
    return new utils.Interface(_abi) as TokenMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenMock {
    return new Contract(address, _abi, signerOrProvider) as TokenMock;
  }
}
