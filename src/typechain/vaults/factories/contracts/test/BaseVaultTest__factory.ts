/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  BaseVaultTest,
  BaseVaultTestInterface,
} from '../../../contracts/test/BaseVaultTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'rageClearingHouse',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'depositCap',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
    ],
    name: 'BV_DepositCap',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BV_InvalidRebalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BV_NoPositionToRebalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'msgSender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'authorisedKeeperAddress',
        type: 'address',
      },
    ],
    name: 'BV_OnlyKeeperAllowed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'closeTokenPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'getMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'marketValue',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVaultMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
    ],
    name: 'isValidRebalance',
    outputs: [
      {
        internalType: 'bool',
        name: 'isValid',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isValidRebalanceTime',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastRebalanceTS',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageAccountNo',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalancePriceThresholdBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalanceTimeThreshold',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'bt',
        type: 'uint64',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newKeeperAddress',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rebalanceTimeThreshold',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: '_rebalancePriceThresholdBps',
        type: 'uint16',
      },
    ],
    name: 'setRebalanceThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'updateDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052609f8054600160a01b600160e01b031916600160a01b426001600160401b0316021790553480156200003557600080fd5b50604051620039503803806200395083398101604081905262000058916200081c565b600054610100900460ff16620000755760005460ff16156200007f565b6200007f620001b3565b620000e85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156200010b576000805461ffff19166101011790555b60408051610100810182526001600160a01b0380861660a083018181528451808601865260048152636e616d6560e01b60208281019190915260c08601919091528551808701875260068152651cde5b589bdb60d21b8183015260e0860152908452600090840152908516928201929092526060810182905260808101919091526200019790620001d1565b8015620001aa576000805461ff00191690555b505050620008b1565b6000620001cb30620003f360201b6200106b1760201c565b15905090565b600054610100900460ff166200022d5760405162461bcd60e51b815260206004820152602b60248201526000805160206200393083398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b6200023762000402565b805162000244906200046a565b602081810151609c805463ffffffff191663ffffffff909216919091179055604080830151609980546001600160a01b0319166001600160a01b0390921691821790558151639dca362f60e01b815291519092639dca362f926004808201939182900301816000875af1158015620002c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e691906200085b565b609b556060810151609a80546001600160a01b03199081166001600160a01b0393841617909155608083015160988054909216908316179055609c546099546200034492169063ffffffff1662000486602090811b6200107a17901c565b609c80546001600160a01b039290921664010000000002600160201b600160c01b0319909216919091179055609e80546c01518001f4000000000000000065ffffffffffff60401b199091161790819055604080516a0100000000000000000000830463ffffffff1681526801000000000000000090920461ffff1660208301527f9af00b5d3a5006b7a36e8fe4a8f67a155aa897efbee30711b474e18eed221555910160405180910390a150565b6001600160a01b03163b151590565b600054610100900460ff166200045e5760405162461bcd60e51b815260206004820152602b60248201526000805160206200393083398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620004686200050e565b565b8051602082015160408301516200048392919062000575565b50565b6000806001600160a01b038416631e2eaeaf620004a385620005a5565b6040518263ffffffff1660e01b8152600401620004c291815260200190565b602060405180830381865afa158015620004e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050691906200085b565b949350505050565b600054610100900460ff166200056a5760405162461bcd60e51b815260206004820152602b60248201526000805160206200393083398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620004683362000600565b62000581828262000652565b5050606580546001600160a01b0319166001600160a01b0392909216919091179055565b6000620005fa6001620005e6606460001b620005d28663ffffffff16620006be60201b620011141760201c565b620006c160201b620011171790919060201c565b620006d060201b620011261790919060201c565b92915050565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620006ae5760405162461bcd60e51b815260206004820152602b60248201526000805160206200393083398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620006ba8282620006d4565b5050565b90565b60009182526020526040902090565b0190565b600054610100900460ff16620007305760405162461bcd60e51b815260206004820152602b60248201526000805160206200393083398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b81516200074590603690602085019062000760565b5080516200075b90603790602084019062000760565b505050565b8280546200076e9062000875565b90600052602060002090601f016020900481019282620007925760008555620007dd565b82601f10620007ad57805160ff1916838001178555620007dd565b82800160010185558215620007dd579182015b82811115620007dd578251825591602001919060010190620007c0565b50620007eb929150620007ef565b5090565b5b80821115620007eb5760008155600101620007f0565b6001600160a01b03811681146200048357600080fd5b600080604083850312156200083057600080fd5b82516200083d8162000806565b6020840151909250620008508162000806565b809150509250929050565b6000602082840312156200086e57600080fd5b5051919050565b600181811c908216806200088a57607f821691505b602082108103620008ab57634e487b7160e01b600052602260045260246000fd5b50919050565b61306f80620008c16000396000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c80637d7c2a1c11610182578063ba087652116100e9578063dbd035ff116100a2578063e66488531161007c578063e664885314610690578063ef8b30f714610699578063f2fde38b146106ac578063fed03f3a146106bf57600080fd5b8063dbd035ff14610654578063dbd5edc714610674578063dd62ed3e1461067d57600080fd5b8063ba08765214610600578063bf9571f114610613578063c63d75b614610415578063c6e6f5921461061b578063ce96cb771461062e578063d905777e1461064157600080fd5b8063a457c2d71161013b578063a457c2d71461058e578063a9059cbb146105a1578063aced1661146105b4578063b3d7f6b9146105c7578063b460af94146105da578063b81aecd9146105ed57600080fd5b80637d7c2a1c1461053f5780638d315d7b146105475780638da5cb5b1461054f5780638fcda03e1461056057806394bf804d1461057357806395d89b411461058657600080fd5b80633d672a4511610241578063620bc225116101fa57806370a08231116101d457806370a08231146104f3578063715018a61461051c578063748747e6146105245780637999e84e1461053757600080fd5b8063620bc2251461047d57806367c45759146104a55780636e553f65146104e057600080fd5b80633d672a45146103e35780633f6be822146103ea578063402d267d146104155780634afe813e1461042a5780634cdad50614610456578063554070bc1461046957600080fd5b806318160ddd1161029357806318160ddd146103695780631e2eaeaf1461037157806323b872dd14610383578063313ce5671461039657806338d52e0f146103a557806339509351146103d057600080fd5b806301e1d114146102db57806306fdde03146102f657806307a2d13a1461030b578063095ea7b31461031e5780630a28a47714610341578063171e5e8814610354575b600080fd5b6102e36106c7565b6040519081526020015b60405180910390f35b6102fe610745565b6040516102ed919061264e565b6102e3610319366004612681565b6107d7565b61033161032c3660046126af565b61080c565b60405190151581526020016102ed565b6102e361034f366004612681565b610826565b610367610362366004612681565b61084e565b005b6035546102e3565b6102e361037f366004612681565b5490565b6103316103913660046126db565b6108bd565b604051601281526020016102ed565b6065546103b8906001600160a01b031681565b6040516001600160a01b0390911681526020016102ed565b6103316103de3660046126af565b6108e1565b60006102e3565b609e546103fd906001600160401b031681565b6040516001600160401b0390911681526020016102ed565b6102e361042336600461271c565b5060001990565b609e5461044190600160501b900463ffffffff1681565b60405163ffffffff90911681526020016102ed565b6102e3610464366004612681565b610920565b6102e3610477366004612681565b50600090565b609e5461049290600160401b900461ffff1681565b60405161ffff90911681526020016102ed565b6103676104b3366004612739565b609f80546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b6102e36104ee366004612762565b61092b565b6102e361050136600461271c565b6001600160a01b031660009081526033602052604090205490565b61036761093f565b61036761053236600461271c565b610975565b6103676109ed565b610367610ac7565b6102e3610b5b565b6066546001600160a01b03166103b8565b61036761056e3660046127a4565b610bec565b6102e3610581366004612762565b610c9d565b6102fe610cb1565b61033161059c3660046126af565b610cc0565b6103316105af3660046126af565b610d52565b609f546103b8906001600160a01b031681565b6102e36105d5366004612681565b610d60565b6102e36105e83660046127d9565b610d87565b6103316105fb366004612681565b610db2565b6102e361060e3660046127d9565b610dc9565b610367610ef5565b6102e3610629366004612681565b610efd565b6102e361063c36600461271c565b610f25565b6102e361064f36600461271c565b610f47565b6106676106623660046128f1565b610f65565b6040516102ed919061297b565b6102e3609d5481565b6102e361068b3660046129bf565b610f93565b6102e3609b5481565b6102e36106a7366004612681565b610fbe565b6103676106ba36600461271c565b610fc9565b610331611061565b6000806065546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073691906129ed565b6107409190612a1c565b905090565b60606036805461075490612a34565b80601f016020809104026020016040519081016040528092919081815260200182805461078090612a34565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b5050505050905090565b6000806107e360355490565b90508015610803576107fe6107f66106c7565b84908361112a565b610805565b825b9392505050565b60003361081a818585611149565b60019150505b92915050565b60008061083260355490565b90508015610803576107fe816108466106c7565b85919061126e565b6066546001600160a01b031633146108815760405162461bcd60e51b815260040161087890612a6e565b60405180910390fd5b609d8190556040518181527f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f9906020015b60405180910390a150565b6000336108cb85828561129c565b6108d6858585611316565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061081a908290869061091b908790612a1c565b611149565b6000610820826107d7565b60006109356114e4565b61080583836114ec565b6066546001600160a01b031633146109695760405162461bcd60e51b815260040161087890612a6e565b61097360006115a9565b565b6066546001600160a01b0316331461099f5760405162461bcd60e51b815260040161087890612a6e565b609f80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e906020016108b2565b609f546001600160a01b03163314610a2d57609f546040516369958c7360e01b81523360048201526001600160a01b039091166024820152604401610878565b609954609b54604051630ed586bf60e21b815260048101919091526060916001600160a01b031690633b561afc90602401600060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa39190810190612cba565b8051909450610ac4935084925060009150610ac057610ac0612dc0565b5050565b50565b609f546001600160a01b03163314610b0757609f546040516369958c7360e01b81523360048201526001600160a01b039091166024820152604401610878565b610b116000610db2565b610b2e57604051636fa1adc360e01b815260040160405180910390fd5b609f54609e8054600160a01b9092046001600160401b031667ffffffffffffffff19909216919091179055565b609954609b54604051631c7a838360e31b815260048101919091526000916001600160a01b03169063e3d41c1890602401602060405180830381865afa158015610ba9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcd91906129ed565b9050610be2610bdd6104776106c7565b6115fb565b6107409082612dd6565b6066546001600160a01b03163314610c165760405162461bcd60e51b815260040161087890612a6e565b609e80546dffffffffffff00000000000000001916600160501b63ffffffff851690810269ffff0000000000000000191691909117600160401b61ffff8516908102919091179092556040805191825260208201929092527f9af00b5d3a5006b7a36e8fe4a8f67a155aa897efbee30711b474e18eed221555910160405180910390a15050565b6000610ca76114e4565b610805838361163f565b60606037805461075490612a34565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919083811015610d455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610878565b6108d68286868403611149565b60003361081a818585611316565b600080610d6c60355490565b90508015610803576107fe610d7f6106c7565b84908361126e565b6000610d916114e4565b6000610d9c856116bf565b9050610da98185856116cc565b95945050505050565b6000610dbc611787565b8061082057506000610820565b6000610dd36114e4565b336001600160a01b03831614610e0b576000610def8333610f93565b90506000198114610e0957610e09833361091b8885612e17565b505b610e1484610920565b905080600003610e545760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610878565b6000610e5f826116bf565b9050818114610e7757809150610e7481610826565b94505b610e8182866117ce565b610e8b83866117d9565b60408051838152602081018790526001600160a01b03808616929087169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4606554610eed906001600160a01b03168584611924565b509392505050565b610973611987565b600080610f0960355490565b90508015610803576107fe81610f1d6106c7565b85919061112a565b6001600160a01b038116600090815260336020526040812054610820906107d7565b6001600160a01b038116600090815260336020526040812054610820565b606060208251028201602001602083015b81811015610f8b578051548152602001610f76565b509192915050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600061082082610efd565b6066546001600160a01b03163314610ff35760405162461bcd60e51b815260040161087890612a6e565b6001600160a01b0381166110585760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610878565b610ac4816115a9565b6000610740611787565b6001600160a01b03163b151590565b600080836001600160a01b0316631e2eaeaf6110ad8563ffffffff81166000908152606460205260408120600101610820565b6040518263ffffffff1660e01b81526004016110cb91815260200190565b602060405180830381865afa1580156110e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110c91906129ed565b949350505050565b90565b60009182526020526040902090565b0190565b82820281151584158583048514171661114257600080fd5b0492915050565b6001600160a01b0383166111ab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610878565b6001600160a01b03821661120c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610878565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b82820281151584158583048514171661128657600080fd5b6001826001830304018115150290509392505050565b60006112a88484610f93565b9050600019811461131057818110156113035760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610878565b6113108484848403611149565b50505050565b6001600160a01b03831661137a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610878565b6001600160a01b0382166113dc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610878565b6001600160a01b038316600090815260336020526040902054818110156114545760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610878565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061148b908490612a1c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114d791815260200190565b60405180910390a3611310565b610ac0611a7c565b60006114f783610fbe565b9050806000036115375760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610878565b60655461154f906001600160a01b0316333086611b8d565b6115598282611bc5565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108208382611ca4565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600160ff1b821061163b5760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b6044820152606401610878565b5090565b600061164a83610d60565b606554909150611665906001600160a01b0316333084611b8d565b61166f8284611bc5565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108208184611ca4565b60006108206104776106c7565b60006116d784610826565b9050336001600160a01b038316146117115760006116f58333610f93565b9050600019811461170f5761170f833361091b8585612e17565b505b61171b84826117ce565b61172582826117d9565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4606554610805906001600160a01b03168486611924565b609e5460009063ffffffff600160501b820416906001600160401b03166117be609f546001600160401b03600160a01b9091041690565b6117c89190612e17565b11905090565b610ac0610ac46106c7565b6001600160a01b0382166118395760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610878565b6001600160a01b038216600090815260336020526040902054818110156118ad5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610878565b6001600160a01b03831660009081526033602052604081208383039055603580548492906118dc908490612e17565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611261565b505050565b6040516001600160a01b03831660248201526044810182905261191f90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611ce2565b609a5460995460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156119dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a019190612e2e565b5060985460995460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611a58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac49190612e2e565b609954609b54604051630ed586bf60e21b815260609283926001600160a01b0390911691633b561afc91611ab69160040190815260200190565b600060405180830381865afa158015611ad3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611afb9190810190612cba565b909450925060009150611b0e9050610b5b565b9050611b1a8382611db4565b6065546040516370a0823160e01b8152306004820152611b88916001600160a01b0316906370a0823190602401602060405180830381865afa158015611b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac491906129ed565b509091565b6040516001600160a01b03808516602483015283166044820152606481018290526113109085906323b872dd60e01b90608401611950565b6001600160a01b038216611c1b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610878565b8060356000828254611c2d9190612a1c565b90915550506001600160a01b03821660009081526033602052604081208054839290611c5a908490612a1c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b609d54611caf6106c7565b11156117ce57609d54611cc06106c7565b6040516301b25d0360e41b815260048101929092526024820152604401610878565b6000611d37826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120ae9092919063ffffffff16565b80519091501561191f5780806020019051810190611d559190612e2e565b61191f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610878565b609954609b54604051631c7a838360e31b815260048101919091526000916001600160a01b03169063e3d41c1890602401602060405180830381865afa158015611e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2691906129ed565b90506000811315611eb057609954609b546001600160a01b0390911690639cd1be5890611e5584600019612e50565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015611e9357600080fd5b505af1158015611ea7573d6000803e3d6000fd5b50505050611f4c565b6000811215611f4c576000611eca61047783600019612e50565b90508015611f4a57609954609b546001600160a01b0390911690639cd1be5890611ef3846115fb565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015611f3157600080fd5b505af1158015611f45573d6000803e3d6000fd5b505050505b505b8251600090156120a257600084600081518110611f6b57611f6b612dc0565b60200260200101519050612090609860009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fef9190612ed5565b611ffa90600a612fdc565b609a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561204d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120719190612ed5565b61207c90600a612fdc565b61208984602001516115fb565b91906120bd565b61209a9085612feb565b9150506120a5565b50815b611310816120ff565b606061110c84846000856123d2565b60006120eb6120e6600086126120d357856120df565b6120df86600019612e50565b8585612503565b6125b5565b905060008412156108055761110c8161302a565b6000612210609a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217b9190612ed5565b61218690600a612fdc565b609860009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121fd9190612ed5565b61220890600a612fdc565b8491906120bd565b9050600061221d826125c7565b9050600082131561230957609a546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561227457600080fd5b505af1158015612288573d6000803e3d6000fd5b5050609954609b54609a54604051637d2efe0760e01b8152600481019290925263ffffffff166024820152604481018590526001600160a01b039091169250637d2efe0791506064015b600060405180830381600087803b1580156122ec57600080fd5b505af1158015612300573d6000803e3d6000fd5b50505050505050565b600082121561191f57609954609b54609a546001600160a01b0390921691637d2efe07919063ffffffff1661233d8561302a565b6040516001600160e01b031960e086901b168152600481019390935263ffffffff9190911660248301526044820152606401600060405180830381600087803b15801561238957600080fd5b505af115801561239d573d6000803e3d6000fd5b5050609a54604051630852cd8d60e31b8152600481018590526001600160a01b0390911692506342966c6891506024016122d2565b6060824710156124335760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610878565b6001600160a01b0385163b61248a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610878565b600080866001600160a01b031685876040516124a69190613046565b60006040518083038185875af1925050503d80600081146124e3576040519150601f19603f3d011682016040523d82523d6000602084013e6124e8565b606091505b50915091506124f88282866125d2565b979650505050505050565b600080806000198587098587029250828110838203039150508060000361253c576000841161253157600080fd5b508290049050610805565b80841161254857600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000600160ff1b821061163b57600080fd5b60006108208261260b565b606083156125e1575081610805565b8251156125f15782518084602001fd5b8160405162461bcd60e51b8152600401610878919061264e565b600080821361163b5761261d8261302a565b610820565b60005b8381101561263d578181015183820152602001612625565b838111156113105750506000910152565b602081526000825180602084015261266d816040850160208701612622565b601f01601f19169190910160400192915050565b60006020828403121561269357600080fd5b5035919050565b6001600160a01b0381168114610ac457600080fd5b600080604083850312156126c257600080fd5b82356126cd8161269a565b946020939093013593505050565b6000806000606084860312156126f057600080fd5b83356126fb8161269a565b9250602084013561270b8161269a565b929592945050506040919091013590565b60006020828403121561272e57600080fd5b81356108058161269a565b60006020828403121561274b57600080fd5b81356001600160401b038116811461080557600080fd5b6000806040838503121561277557600080fd5b8235915060208301356127878161269a565b809150509250929050565b63ffffffff81168114610ac457600080fd5b600080604083850312156127b757600080fd5b82356127c281612792565b9150602083013561ffff8116811461278757600080fd5b6000806000606084860312156127ee57600080fd5b8335925060208401356128008161269a565b915060408401356128108161269a565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156128535761285361281b565b60405290565b60405161012081016001600160401b03811182821017156128535761285361281b565b604080519081016001600160401b03811182821017156128535761285361281b565b604051601f8201601f191681016001600160401b03811182821017156128c6576128c661281b565b604052919050565b60006001600160401b038211156128e7576128e761281b565b5060051b60200190565b6000602080838503121561290457600080fd5b82356001600160401b0381111561291a57600080fd5b8301601f8101851361292b57600080fd5b803561293e612939826128ce565b61289e565b81815260059190911b8201830190838101908783111561295d57600080fd5b928401925b828410156124f857833582529284019290840190612962565b6020808252825182820181905260009190848201906040850190845b818110156129b357835183529284019291840191600101612997565b50909695505050505050565b600080604083850312156129d257600080fd5b82356129dd8161269a565b915060208301356127878161269a565b6000602082840312156129ff57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a2f57612a2f612a06565b500190565b600181811c90821680612a4857607f821691505b602082108103612a6857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8051600281900b8114612ab557600080fd5b919050565b80516fffffffffffffffffffffffffffffffff81168114612ab557600080fd5b805160038110612ab557600080fd5b600082601f830112612afa57600080fd5b81516020612b0a612939836128ce565b82815260059290921b84018101918181019086841115612b2957600080fd5b8286015b84811015612caf5780516001600160401b0380821115612b4c57600080fd5b9088019060a0828b03601f19011215612b6457600080fd5b612b6c612831565b86830151612b7981612792565b80825250604083015187820152606083015160408201526080830151606082015260a083015182811115612bac57600080fd5b8084019350508a603f840112612bc157600080fd5b868301519150612bd3612939836128ce565b82815261012092830284016040019288820191908d851115612bf457600080fd5b6040860195505b84861015612c995780868f031215612c1257600080fd5b612c1a612859565b612c2387612aa3565b8152612c308b8801612aa3565b8b820152612c4060408801612aba565b6040820152606087015160608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e0820152612c846101008801612ada565b61010082015283529485019491890191612bfb565b5060808301525085525050918301918301612b2d565b509695505050505050565b60008060008060808587031215612cd057600080fd5b8451612cdb8161269a565b8094505060208086015193506040808701516001600160401b0380821115612d0257600080fd5b818901915089601f830112612d1657600080fd5b8151612d24612939826128ce565b81815260069190911b8301850190858101908c831115612d4357600080fd5b938601935b82851015612d8c5785858e031215612d605760008081fd5b612d6861287c565b8551612d738161269a565b8152858801518882015282529385019390860190612d48565b60608c01519098509550505080841115612da557600080fd5b505050612db487828801612ae9565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600080821280156001600160ff1b0384900385131615612df857612df8612a06565b600160ff1b8390038412811615612e1157612e11612a06565b50500190565b600082821015612e2957612e29612a06565b500390565b600060208284031215612e4057600080fd5b8151801515811461080557600080fd5b60006001600160ff1b0381841382841380821686840486111615612e7657612e76612a06565b600160ff1b6000871282811687830589121615612e9557612e95612a06565b60008712925087820587128484161615612eb157612eb1612a06565b87850587128184161615612ec757612ec7612a06565b505050929093029392505050565b600060208284031215612ee757600080fd5b815160ff8116811461080557600080fd5b600181815b80851115612f33578160001904821115612f1957612f19612a06565b80851615612f2657918102915b93841c9390800290612efd565b509250929050565b600082612f4a57506001610820565b81612f5757506000610820565b8160018114612f6d5760028114612f7757612f93565b6001915050610820565b60ff841115612f8857612f88612a06565b50506001821b610820565b5060208310610133831016604e8410600b8410161715612fb6575081810a610820565b612fc08383612ef8565b8060001904821115612fd457612fd4612a06565b029392505050565b600061080560ff841683612f3b565b60008083128015600160ff1b85018412161561300957613009612a06565b6001600160ff1b038401831381161561302457613024612a06565b50500390565b6000600160ff1b820161303f5761303f612a06565b5060000390565b60008251613058818460208701612622565b919091019291505056fea164736f6c634300080d000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069';

type BaseVaultTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseVaultTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseVaultTest__factory extends ContractFactory {
  constructor(...args: BaseVaultTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: string,
    rageClearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseVaultTest> {
    return super.deploy(
      token,
      rageClearingHouse,
      overrides || {}
    ) as Promise<BaseVaultTest>;
  }
  override getDeployTransaction(
    token: string,
    rageClearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      rageClearingHouse,
      overrides || {}
    );
  }
  override attach(address: string): BaseVaultTest {
    return super.attach(address) as BaseVaultTest;
  }
  override connect(signer: Signer): BaseVaultTest__factory {
    return super.connect(signer) as BaseVaultTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseVaultTestInterface {
    return new utils.Interface(_abi) as BaseVaultTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseVaultTest {
    return new Contract(address, _abi, signerOrProvider) as BaseVaultTest;
  }
}
