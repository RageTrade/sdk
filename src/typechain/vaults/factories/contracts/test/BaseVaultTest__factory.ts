/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  BaseVaultTest,
  BaseVaultTestInterface,
} from '../../../contracts/test/BaseVaultTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'rageClearingHouse',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'depositCap',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
    ],
    name: 'BV_DepositCap',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BV_InvalidRebalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BV_NoPositionToRebalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'msgSender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'authorisedKeeperAddress',
        type: 'address',
      },
    ],
    name: 'BV_OnlyKeeperAllowed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'closeTokenPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'getMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'marketValue',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVaultMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
    ],
    name: 'isValidRebalance',
    outputs: [
      {
        internalType: 'bool',
        name: 'isValid',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isValidRebalanceTime',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastRebalanceTS',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageAccountNo',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalancePriceThresholdBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalanceTimeThreshold',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'bt',
        type: 'uint64',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newKeeperAddress',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rebalanceTimeThreshold',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: '_rebalancePriceThresholdBps',
        type: 'uint16',
      },
    ],
    name: 'setRebalanceThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'updateDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052609f8054600160a01b600160e01b031916600160a01b426001600160401b0316021790553480156200003557600080fd5b506040516200397c3803806200397c83398101604081905262000058916200081c565b600054610100900460ff16620000755760005460ff16156200007f565b6200007f620001b3565b620000e85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156200010b576000805461ffff19166101011790555b60408051610100810182526001600160a01b0380861660a083018181528451808601865260048152636e616d6560e01b60208281019190915260c08601919091528551808701875260068152651cde5b589bdb60d21b8183015260e0860152908452600090840152908516928201929092526060810182905260808101919091526200019790620001d1565b8015620001aa576000805461ff00191690555b505050620008b1565b6000620001cb30620003f360201b620010971760201c565b15905090565b600054610100900460ff166200022d5760405162461bcd60e51b815260206004820152602b60248201526000805160206200395c83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b6200023762000402565b805162000244906200046a565b602081810151609c805463ffffffff191663ffffffff909216919091179055604080830151609980546001600160a01b0319166001600160a01b0390921691821790558151639dca362f60e01b815291519092639dca362f926004808201939182900301816000875af1158015620002c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e691906200085b565b609b556060810151609a80546001600160a01b03199081166001600160a01b0393841617909155608083015160988054909216908316179055609c546099546200034492169063ffffffff1662000486602090811b620010a617901c565b609c80546001600160a01b039290921664010000000002600160201b600160c01b0319909216919091179055609e80546c01518001f4000000000000000065ffffffffffff60401b199091161790819055604080516a0100000000000000000000830463ffffffff1681526801000000000000000090920461ffff1660208301527f9af00b5d3a5006b7a36e8fe4a8f67a155aa897efbee30711b474e18eed221555910160405180910390a150565b6001600160a01b03163b151590565b600054610100900460ff166200045e5760405162461bcd60e51b815260206004820152602b60248201526000805160206200395c83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620004686200050e565b565b8051602082015160408301516200048392919062000575565b50565b6000806001600160a01b038416631e2eaeaf620004a385620005a5565b6040518263ffffffff1660e01b8152600401620004c291815260200190565b602060405180830381865afa158015620004e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050691906200085b565b949350505050565b600054610100900460ff166200056a5760405162461bcd60e51b815260206004820152602b60248201526000805160206200395c83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620004683362000600565b62000581828262000652565b5050606580546001600160a01b0319166001600160a01b0392909216919091179055565b6000620005fa6001620005e6606460001b620005d28663ffffffff16620006be60201b620011401760201c565b620006c160201b620011431790919060201c565b620006d060201b620011521790919060201c565b92915050565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620006ae5760405162461bcd60e51b815260206004820152602b60248201526000805160206200395c83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620006ba8282620006d4565b5050565b90565b60009182526020526040902090565b0190565b600054610100900460ff16620007305760405162461bcd60e51b815260206004820152602b60248201526000805160206200395c83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b81516200074590603690602085019062000760565b5080516200075b90603790602084019062000760565b505050565b8280546200076e9062000875565b90600052602060002090601f016020900481019282620007925760008555620007dd565b82601f10620007ad57805160ff1916838001178555620007dd565b82800160010185558215620007dd579182015b82811115620007dd578251825591602001919060010190620007c0565b50620007eb929150620007ef565b5090565b5b80821115620007eb5760008155600101620007f0565b6001600160a01b03811681146200048357600080fd5b600080604083850312156200083057600080fd5b82516200083d8162000806565b6020840151909250620008508162000806565b809150509250929050565b6000602082840312156200086e57600080fd5b5051919050565b600181811c908216806200088a57607f821691505b602082108103620008ab57634e487b7160e01b600052602260045260246000fd5b50919050565b61309b80620008c16000396000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c80637d7c2a1c11610182578063ba087652116100e9578063dbd035ff116100a2578063e66488531161007c578063e664885314610690578063ef8b30f714610699578063f2fde38b146106ac578063fed03f3a146106bf57600080fd5b8063dbd035ff14610654578063dbd5edc714610674578063dd62ed3e1461067d57600080fd5b8063ba08765214610600578063bf9571f114610613578063c63d75b614610415578063c6e6f5921461061b578063ce96cb771461062e578063d905777e1461064157600080fd5b8063a457c2d71161013b578063a457c2d71461058e578063a9059cbb146105a1578063aced1661146105b4578063b3d7f6b9146105c7578063b460af94146105da578063b81aecd9146105ed57600080fd5b80637d7c2a1c1461053f5780638d315d7b146105475780638da5cb5b1461054f5780638fcda03e1461056057806394bf804d1461057357806395d89b411461058657600080fd5b80633d672a4511610241578063620bc225116101fa57806370a08231116101d457806370a08231146104f3578063715018a61461051c578063748747e6146105245780637999e84e1461053757600080fd5b8063620bc2251461047d57806367c45759146104a55780636e553f65146104e057600080fd5b80633d672a45146103e35780633f6be822146103ea578063402d267d146104155780634afe813e1461042a5780634cdad50614610456578063554070bc1461046957600080fd5b806318160ddd1161029357806318160ddd146103695780631e2eaeaf1461037157806323b872dd14610383578063313ce5671461039657806338d52e0f146103a557806339509351146103d057600080fd5b806301e1d114146102db57806306fdde03146102f657806307a2d13a1461030b578063095ea7b31461031e5780630a28a47714610341578063171e5e8814610354575b600080fd5b6102e36106c7565b6040519081526020015b60405180910390f35b6102fe610745565b6040516102ed919061267a565b6102e36103193660046126ad565b6107d7565b61033161032c3660046126db565b61080c565b60405190151581526020016102ed565b6102e361034f3660046126ad565b610826565b6103676103623660046126ad565b61084e565b005b6035546102e3565b6102e361037f3660046126ad565b5490565b610331610391366004612707565b6108bd565b604051601281526020016102ed565b6065546103b8906001600160a01b031681565b6040516001600160a01b0390911681526020016102ed565b6103316103de3660046126db565b6108e1565b60006102e3565b609e546103fd906001600160401b031681565b6040516001600160401b0390911681526020016102ed565b6102e3610423366004612748565b5060001990565b609e5461044190600160501b900463ffffffff1681565b60405163ffffffff90911681526020016102ed565b6102e36104643660046126ad565b610920565b6102e36104773660046126ad565b50600090565b609e5461049290600160401b900461ffff1681565b60405161ffff90911681526020016102ed565b6103676104b3366004612765565b609f80546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b6102e36104ee36600461278e565b61092b565b6102e3610501366004612748565b6001600160a01b031660009081526033602052604090205490565b61036761093f565b610367610532366004612748565b610975565b6103676109ed565b610367610af0565b6102e3610b84565b6066546001600160a01b03166103b8565b61036761056e3660046127d0565b610c15565b6102e361058136600461278e565b610cc6565b6102fe610cda565b61033161059c3660046126db565b610ce9565b6103316105af3660046126db565b610d7b565b609f546103b8906001600160a01b031681565b6102e36105d53660046126ad565b610d89565b6102e36105e8366004612805565b610db0565b6103316105fb3660046126ad565b610ddb565b6102e361060e366004612805565b610df2565b610367610f1e565b6102e36106293660046126ad565b610f26565b6102e361063c366004612748565b610f4e565b6102e361064f366004612748565b610f70565b61066761066236600461291d565b610f8e565b6040516102ed91906129a7565b6102e3609d5481565b6102e361068b3660046129eb565b610fbc565b6102e3609b5481565b6102e36106a73660046126ad565b610fe7565b6103676106ba366004612748565b610ff2565b61033161108d565b6000806065546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107369190612a19565b6107409190612a48565b905090565b60606036805461075490612a60565b80601f016020809104026020016040519081016040528092919081815260200182805461078090612a60565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b5050505050905090565b6000806107e360355490565b90508015610803576107fe6107f66106c7565b849083611156565b610805565b825b9392505050565b60003361081a818585611175565b60019150505b92915050565b60008061083260355490565b90508015610803576107fe816108466106c7565b85919061129a565b6066546001600160a01b031633146108815760405162461bcd60e51b815260040161087890612a9a565b60405180910390fd5b609d8190556040518181527f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f9906020015b60405180910390a150565b6000336108cb8582856112c8565b6108d6858585611342565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061081a908290869061091b908790612a48565b611175565b6000610820826107d7565b6000610935611510565b6108058383611518565b6066546001600160a01b031633146109695760405162461bcd60e51b815260040161087890612a9a565b61097360006115d5565b565b6066546001600160a01b0316331461099f5760405162461bcd60e51b815260040161087890612a9a565b609f80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e906020016108b2565b609f546001600160a01b03163314610a2d57609f546040516369958c7360e01b81523360048201526001600160a01b039091166024820152604401610878565b609954609b54604051630ed586bf60e21b815260048101919091526060916001600160a01b031690633b561afc90602401600060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610aa39190810190612ce6565b8051909450610ac4935084925060009150610ac057610ac0612dec565b5050565b6040517f9a94a63b02012d6753ed863b962aceb756429b4265fc327391dd05fb24d4502b90600090a150565b609f546001600160a01b03163314610b3057609f546040516369958c7360e01b81523360048201526001600160a01b039091166024820152604401610878565b610b3a6000610ddb565b610b5757604051636fa1adc360e01b815260040160405180910390fd5b609f54609e8054600160a01b9092046001600160401b031667ffffffffffffffff19909216919091179055565b609954609b54604051631c7a838360e31b815260048101919091526000916001600160a01b03169063e3d41c1890602401602060405180830381865afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190612a19565b9050610c0b610c066104776106c7565b611627565b6107409082612e02565b6066546001600160a01b03163314610c3f5760405162461bcd60e51b815260040161087890612a9a565b609e80546dffffffffffff00000000000000001916600160501b63ffffffff851690810269ffff0000000000000000191691909117600160401b61ffff8516908102919091179092556040805191825260208201929092527f9af00b5d3a5006b7a36e8fe4a8f67a155aa897efbee30711b474e18eed221555910160405180910390a15050565b6000610cd0611510565b610805838361166b565b60606037805461075490612a60565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919083811015610d6e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610878565b6108d68286868403611175565b60003361081a818585611342565b600080610d9560355490565b90508015610803576107fe610da86106c7565b84908361129a565b6000610dba611510565b6000610dc5856116eb565b9050610dd28185856116f8565b95945050505050565b6000610de56117b3565b8061082057506000610820565b6000610dfc611510565b336001600160a01b03831614610e34576000610e188333610fbc565b90506000198114610e3257610e32833361091b8885612e43565b505b610e3d84610920565b905080600003610e7d5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610878565b6000610e88826116eb565b9050818114610ea057809150610e9d81610826565b94505b610eaa82866117fa565b610eb48386611805565b60408051838152602081018790526001600160a01b03808616929087169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4606554610f16906001600160a01b03168584611950565b509392505050565b6109736119b3565b600080610f3260355490565b90508015610803576107fe81610f466106c7565b859190611156565b6001600160a01b038116600090815260336020526040812054610820906107d7565b6001600160a01b038116600090815260336020526040812054610820565b606060208251028201602001602083015b81811015610fb4578051548152602001610f9f565b509192915050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b600061082082610f26565b6066546001600160a01b0316331461101c5760405162461bcd60e51b815260040161087890612a9a565b6001600160a01b0381166110815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610878565b61108a816115d5565b50565b60006107406117b3565b6001600160a01b03163b151590565b600080836001600160a01b0316631e2eaeaf6110d98563ffffffff81166000908152606460205260408120600101610820565b6040518263ffffffff1660e01b81526004016110f791815260200190565b602060405180830381865afa158015611114573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111389190612a19565b949350505050565b90565b60009182526020526040902090565b0190565b82820281151584158583048514171661116e57600080fd5b0492915050565b6001600160a01b0383166111d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610878565b6001600160a01b0382166112385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610878565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b8282028115158415858304851417166112b257600080fd5b6001826001830304018115150290509392505050565b60006112d48484610fbc565b9050600019811461133c578181101561132f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610878565b61133c8484848403611175565b50505050565b6001600160a01b0383166113a65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610878565b6001600160a01b0382166114085760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610878565b6001600160a01b038316600090815260336020526040902054818110156114805760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610878565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906114b7908490612a48565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161150391815260200190565b60405180910390a361133c565b610ac0611aa8565b600061152383610fe7565b9050806000036115635760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610878565b60655461157b906001600160a01b0316333086611bb9565b6115858282611bf1565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108208382611cd0565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600160ff1b82106116675760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b6044820152606401610878565b5090565b600061167683610d89565b606554909150611691906001600160a01b0316333084611bb9565b61169b8284611bf1565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36108208184611cd0565b60006108206104776106c7565b600061170384610826565b9050336001600160a01b0383161461173d5760006117218333610fbc565b9050600019811461173b5761173b833361091b8585612e43565b505b61174784826117fa565b6117518282611805565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4606554610805906001600160a01b03168486611950565b609e5460009063ffffffff600160501b820416906001600160401b03166117ea609f546001600160401b03600160a01b9091041690565b6117f49190612e43565b11905090565b610ac061108a6106c7565b6001600160a01b0382166118655760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610878565b6001600160a01b038216600090815260336020526040902054818110156118d95760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610878565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611908908490612e43565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161128d565b505050565b6040516001600160a01b03831660248201526044810182905261194b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d0e565b609a5460995460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2d9190612e5a565b5060985460995460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015611a84573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108a9190612e5a565b609954609b54604051630ed586bf60e21b815260609283926001600160a01b0390911691633b561afc91611ae29160040190815260200190565b600060405180830381865afa158015611aff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b279190810190612ce6565b909450925060009150611b3a9050610b84565b9050611b468382611de0565b6065546040516370a0823160e01b8152306004820152611bb4916001600160a01b0316906370a0823190602401602060405180830381865afa158015611b90573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108a9190612a19565b509091565b6040516001600160a01b038085166024830152831660448201526064810182905261133c9085906323b872dd60e01b9060840161197c565b6001600160a01b038216611c475760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610878565b8060356000828254611c599190612a48565b90915550506001600160a01b03821660009081526033602052604081208054839290611c86908490612a48565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b609d54611cdb6106c7565b11156117fa57609d54611cec6106c7565b6040516301b25d0360e41b815260048101929092526024820152604401610878565b6000611d63826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120da9092919063ffffffff16565b80519091501561194b5780806020019051810190611d819190612e5a565b61194b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610878565b609954609b54604051631c7a838360e31b815260048101919091526000916001600160a01b03169063e3d41c1890602401602060405180830381865afa158015611e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e529190612a19565b90506000811315611edc57609954609b546001600160a01b0390911690639cd1be5890611e8184600019612e7c565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015611ebf57600080fd5b505af1158015611ed3573d6000803e3d6000fd5b50505050611f78565b6000811215611f78576000611ef661047783600019612e7c565b90508015611f7657609954609b546001600160a01b0390911690639cd1be5890611f1f84611627565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015611f5d57600080fd5b505af1158015611f71573d6000803e3d6000fd5b505050505b505b8251600090156120ce57600084600081518110611f9757611f97612dec565b602002602001015190506120bc609860009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201b9190612f01565b61202690600a613008565b609a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061209d9190612f01565b6120a890600a613008565b6120b58460200151611627565b91906120e9565b6120c69085613017565b9150506120d1565b50815b61133c8161212b565b606061113884846000856123fe565b6000612117612112600086126120ff578561210b565b61210b86600019612e7c565b858561252f565b6125e1565b905060008412156108055761113881613056565b600061223c609a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121a79190612f01565b6121b290600a613008565b609860009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612205573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122299190612f01565b61223490600a613008565b8491906120e9565b90506000612249826125f3565b9050600082131561233557609a546040516340c10f1960e01b8152306004820152602481018390526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156122a057600080fd5b505af11580156122b4573d6000803e3d6000fd5b5050609954609b54609a54604051637d2efe0760e01b8152600481019290925263ffffffff166024820152604481018590526001600160a01b039091169250637d2efe0791506064015b600060405180830381600087803b15801561231857600080fd5b505af115801561232c573d6000803e3d6000fd5b50505050505050565b600082121561194b57609954609b54609a546001600160a01b0390921691637d2efe07919063ffffffff1661236985613056565b6040516001600160e01b031960e086901b168152600481019390935263ffffffff9190911660248301526044820152606401600060405180830381600087803b1580156123b557600080fd5b505af11580156123c9573d6000803e3d6000fd5b5050609a54604051630852cd8d60e31b8152600481018590526001600160a01b0390911692506342966c6891506024016122fe565b60608247101561245f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610878565b6001600160a01b0385163b6124b65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610878565b600080866001600160a01b031685876040516124d29190613072565b60006040518083038185875af1925050503d806000811461250f576040519150601f19603f3d011682016040523d82523d6000602084013e612514565b606091505b50915091506125248282866125fe565b979650505050505050565b6000808060001985870985870292508281108382030391505080600003612568576000841161255d57600080fd5b508290049050610805565b80841161257457600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000600160ff1b821061166757600080fd5b600061082082612637565b6060831561260d575081610805565b82511561261d5782518084602001fd5b8160405162461bcd60e51b8152600401610878919061267a565b60008082136116675761264982613056565b610820565b60005b83811015612669578181015183820152602001612651565b8381111561133c5750506000910152565b602081526000825180602084015261269981604085016020870161264e565b601f01601f19169190910160400192915050565b6000602082840312156126bf57600080fd5b5035919050565b6001600160a01b038116811461108a57600080fd5b600080604083850312156126ee57600080fd5b82356126f9816126c6565b946020939093013593505050565b60008060006060848603121561271c57600080fd5b8335612727816126c6565b92506020840135612737816126c6565b929592945050506040919091013590565b60006020828403121561275a57600080fd5b8135610805816126c6565b60006020828403121561277757600080fd5b81356001600160401b038116811461080557600080fd5b600080604083850312156127a157600080fd5b8235915060208301356127b3816126c6565b809150509250929050565b63ffffffff8116811461108a57600080fd5b600080604083850312156127e357600080fd5b82356127ee816127be565b9150602083013561ffff811681146127b357600080fd5b60008060006060848603121561281a57600080fd5b83359250602084013561282c816126c6565b9150604084013561283c816126c6565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561287f5761287f612847565b60405290565b60405161012081016001600160401b038111828210171561287f5761287f612847565b604080519081016001600160401b038111828210171561287f5761287f612847565b604051601f8201601f191681016001600160401b03811182821017156128f2576128f2612847565b604052919050565b60006001600160401b0382111561291357612913612847565b5060051b60200190565b6000602080838503121561293057600080fd5b82356001600160401b0381111561294657600080fd5b8301601f8101851361295757600080fd5b803561296a612965826128fa565b6128ca565b81815260059190911b8201830190838101908783111561298957600080fd5b928401925b828410156125245783358252928401929084019061298e565b6020808252825182820181905260009190848201906040850190845b818110156129df578351835292840192918401916001016129c3565b50909695505050505050565b600080604083850312156129fe57600080fd5b8235612a09816126c6565b915060208301356127b3816126c6565b600060208284031215612a2b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a5b57612a5b612a32565b500190565b600181811c90821680612a7457607f821691505b602082108103612a9457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8051600281900b8114612ae157600080fd5b919050565b80516fffffffffffffffffffffffffffffffff81168114612ae157600080fd5b805160038110612ae157600080fd5b600082601f830112612b2657600080fd5b81516020612b36612965836128fa565b82815260059290921b84018101918181019086841115612b5557600080fd5b8286015b84811015612cdb5780516001600160401b0380821115612b7857600080fd5b9088019060a0828b03601f19011215612b9057600080fd5b612b9861285d565b86830151612ba5816127be565b80825250604083015187820152606083015160408201526080830151606082015260a083015182811115612bd857600080fd5b8084019350508a603f840112612bed57600080fd5b868301519150612bff612965836128fa565b82815261012092830284016040019288820191908d851115612c2057600080fd5b6040860195505b84861015612cc55780868f031215612c3e57600080fd5b612c46612885565b612c4f87612acf565b8152612c5c8b8801612acf565b8b820152612c6c60408801612ae6565b6040820152606087015160608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e0820152612cb06101008801612b06565b61010082015283529485019491890191612c27565b5060808301525085525050918301918301612b59565b509695505050505050565b60008060008060808587031215612cfc57600080fd5b8451612d07816126c6565b8094505060208086015193506040808701516001600160401b0380821115612d2e57600080fd5b818901915089601f830112612d4257600080fd5b8151612d50612965826128fa565b81815260069190911b8301850190858101908c831115612d6f57600080fd5b938601935b82851015612db85785858e031215612d8c5760008081fd5b612d946128a8565b8551612d9f816126c6565b8152858801518882015282529385019390860190612d74565b60608c01519098509550505080841115612dd157600080fd5b505050612de087828801612b15565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600080821280156001600160ff1b0384900385131615612e2457612e24612a32565b600160ff1b8390038412811615612e3d57612e3d612a32565b50500190565b600082821015612e5557612e55612a32565b500390565b600060208284031215612e6c57600080fd5b8151801515811461080557600080fd5b60006001600160ff1b0381841382841380821686840486111615612ea257612ea2612a32565b600160ff1b6000871282811687830589121615612ec157612ec1612a32565b60008712925087820587128484161615612edd57612edd612a32565b87850587128184161615612ef357612ef3612a32565b505050929093029392505050565b600060208284031215612f1357600080fd5b815160ff8116811461080557600080fd5b600181815b80851115612f5f578160001904821115612f4557612f45612a32565b80851615612f5257918102915b93841c9390800290612f29565b509250929050565b600082612f7657506001610820565b81612f8357506000610820565b8160018114612f995760028114612fa357612fbf565b6001915050610820565b60ff841115612fb457612fb4612a32565b50506001821b610820565b5060208310610133831016604e8410600b8410161715612fe2575081810a610820565b612fec8383612f24565b806000190482111561300057613000612a32565b029392505050565b600061080560ff841683612f67565b60008083128015600160ff1b85018412161561303557613035612a32565b6001600160ff1b038401831381161561305057613050612a32565b50500390565b6000600160ff1b820161306b5761306b612a32565b5060000390565b6000825161308481846020870161264e565b919091019291505056fea164736f6c634300080d000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069';

type BaseVaultTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseVaultTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseVaultTest__factory extends ContractFactory {
  constructor(...args: BaseVaultTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: string,
    rageClearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseVaultTest> {
    return super.deploy(
      token,
      rageClearingHouse,
      overrides || {}
    ) as Promise<BaseVaultTest>;
  }
  override getDeployTransaction(
    token: string,
    rageClearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      rageClearingHouse,
      overrides || {}
    );
  }
  override attach(address: string): BaseVaultTest {
    return super.attach(address) as BaseVaultTest;
  }
  override connect(signer: Signer): BaseVaultTest__factory {
    return super.connect(signer) as BaseVaultTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseVaultTestInterface {
    return new utils.Interface(_abi) as BaseVaultTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseVaultTest {
    return new Contract(address, _abi, signerOrProvider) as BaseVaultTest;
  }
}
