/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  BaseVaultTest,
  BaseVaultTestInterface,
} from '../../../contracts/test/BaseVaultTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'rageClearingHouse',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'depositCap',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
    ],
    name: 'BV_DepositCap',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BV_InvalidRebalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BV_NoPositionToRebalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'msgSender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'authorisedKeeperAddress',
        type: 'address',
      },
    ],
    name: 'BV_OnlyKeeperAllowed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'closeTokenPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'getMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'marketValue',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVaultMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
    ],
    name: 'isValidRebalance',
    outputs: [
      {
        internalType: 'bool',
        name: 'isValid',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isValidRebalanceTime',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastRebalanceTS',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '_maxAssets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAssetsAlwaysReverts',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageAccountNo',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalancePriceThresholdBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rebalanceTimeThreshold',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'bt',
        type: 'uint64',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newKeeperAddress',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rebalanceTimeThreshold',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: '_rebalancePriceThresholdBps',
        type: 'uint16',
      },
    ],
    name: 'setRebalanceThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'updateDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052609f8054600160a01b600160e01b031916600160a01b426001600160401b0316021790553480156200003557600080fd5b5060405162003a0838038062003a0883398101604081905262000058916200081c565b600054610100900460ff16620000755760005460ff16156200007f565b6200007f620001b3565b620000e85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156200010b576000805461ffff19166101011790555b60408051610100810182526001600160a01b0380861660a083018181528451808601865260048152636e616d6560e01b60208281019190915260c08601919091528551808701875260068152651cde5b589bdb60d21b8183015260e0860152908452600090840152908516928201929092526060810182905260808101919091526200019790620001d1565b8015620001aa576000805461ff00191690555b505050620008b1565b6000620001cb30620003f360201b620010ff1760201c565b15905090565b600054610100900460ff166200022d5760405162461bcd60e51b815260206004820152602b6024820152600080516020620039e883398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b6200023762000402565b805162000244906200046a565b602081810151609c805463ffffffff191663ffffffff909216919091179055604080830151609980546001600160a01b0319166001600160a01b0390921691821790558151639dca362f60e01b815291519092639dca362f926004808201939182900301816000875af1158015620002c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e691906200085b565b609b556060810151609a80546001600160a01b03199081166001600160a01b0393841617909155608083015160988054909216908316179055609c546099546200034492169063ffffffff1662000486602090811b6200110e17901c565b609c80546001600160a01b039290921664010000000002600160201b600160c01b0319909216919091179055609e80546c01518001f4000000000000000065ffffffffffff60401b199091161790819055604080516a0100000000000000000000830463ffffffff1681526801000000000000000090920461ffff1660208301527f9af00b5d3a5006b7a36e8fe4a8f67a155aa897efbee30711b474e18eed221555910160405180910390a150565b6001600160a01b03163b151590565b600054610100900460ff166200045e5760405162461bcd60e51b815260206004820152602b6024820152600080516020620039e883398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620004686200050e565b565b8051602082015160408301516200048392919062000575565b50565b6000806001600160a01b038416631e2eaeaf620004a385620005a5565b6040518263ffffffff1660e01b8152600401620004c291815260200190565b602060405180830381865afa158015620004e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050691906200085b565b949350505050565b600054610100900460ff166200056a5760405162461bcd60e51b815260206004820152602b6024820152600080516020620039e883398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620004683362000600565b62000581828262000652565b5050606580546001600160a01b0319166001600160a01b0392909216919091179055565b6000620005fa6001620005e6606460001b620005d28663ffffffff16620006be60201b620011a81760201c565b620006c160201b620011ab1790919060201c565b620006d060201b620011ba1790919060201c565b92915050565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620006ae5760405162461bcd60e51b815260206004820152602b6024820152600080516020620039e883398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b620006ba8282620006d4565b5050565b90565b60009182526020526040902090565b0190565b600054610100900460ff16620007305760405162461bcd60e51b815260206004820152602b6024820152600080516020620039e883398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000df565b81516200074590603690602085019062000760565b5080516200075b90603790602084019062000760565b505050565b8280546200076e9062000875565b90600052602060002090601f016020900481019282620007925760008555620007dd565b82601f10620007ad57805160ff1916838001178555620007dd565b82800160010185558215620007dd579182015b82811115620007dd578251825591602001919060010190620007c0565b50620007eb929150620007ef565b5090565b5b80821115620007eb5760008155600101620007f0565b6001600160a01b03811681146200048357600080fd5b600080604083850312156200083057600080fd5b82516200083d8162000806565b6020840151909250620008508162000806565b809150509250929050565b6000602082840312156200086e57600080fd5b5051919050565b600181811c908216806200088a57607f821691505b602082108103620008ab57634e487b7160e01b600052602260045260246000fd5b50919050565b61312780620008c16000396000f3fe608060405234801561001057600080fd5b50600436106102975760003560e01c806383f3777611610168578063ba087652116100d4578063ba087652146105a7578063bf9571f1146105ba578063c63d75b6146103cb578063c65b61ca146105c2578063c6e6f592146105ca578063ce96cb77146105dd578063d905777e146105f0578063dbd035ff14610603578063dbd5edc714610623578063dd62ed3e1461062c578063e66488531461063f578063ef8b30f714610648578063f2fde38b1461065b578063fed03f3a1461066e57600080fd5b806383f37776146104e75780638d315d7b146104ef5780638da5cb5b146104f75780638fcda03e146104ff57806394b2294b1461051257806394bf804d1461051a57806395d89b411461052d578063a457c2d714610535578063a9059cbb14610548578063aced16611461055b578063b3d7f6b91461056e578063b460af9414610581578063b81aecd91461059457600080fd5b80633f6be822116102075780633f6be822146103a0578063402d267d146103cb5780634afe813e146103e05780634cdad5061461040c578063554070bc1461041f578063620bc2251461043357806367c457591461045b5780636e553f651461049657806370a08231146104a9578063715018a6146104bc578063748747e6146104c45780637999e84e146104d75780637d7c2a1c146104df57600080fd5b806301e1d1141461029c57806306fdde03146102b757806307a2d13a146102cc578063095ea7b3146102df5780630a28a47714610302578063171e5e881461031557806318160ddd1461032a5780631e2eaeaf1461033257806323b872dd14610344578063313ce5671461035757806338d52e0f1461036657806339509351146103865780633d672a4514610399575b600080fd5b6102a4610676565b6040519081526020015b60405180910390f35b6102bf6106f9565b6040516102ae91906126a8565b6102a46102da3660046126db565b61078b565b6102f26102ed366004612709565b6107c0565b60405190151581526020016102ae565b6102a46103103660046126db565b6107da565b6103286103233660046126db565b610802565b005b6035546102a4565b6102a46103403660046126db565b5490565b6102f2610352366004612735565b610876565b604051601281526020016102ae565b606554610379906001600160a01b031681565b6040516102ae9190612776565b6102f2610394366004612709565b61089a565b60006102a4565b609e546103b3906001600160401b031681565b6040516001600160401b0390911681526020016102ae565b6102a46103d936600461278a565b5060001990565b609e546103f790600160501b900463ffffffff1681565b60405163ffffffff90911681526020016102ae565b6102a461041a3660046126db565b6108d9565b6102a461042d3660046126db565b50600090565b609e5461044890600160401b900461ffff1681565b60405161ffff90911681526020016102ae565b6103286104693660046127a7565b609f80546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b6102a46104a43660046127d0565b6108e4565b6102a46104b736600461278a565b6108f8565b610328610913565b6103286104d236600461278a565b61094e565b6103286109c8565b610328610a9e565b610328610b2c565b6102a4610b5e565b610379610bef565b61032861050d366004612812565b610bfe565b6102a4610caa565b6102a46105283660046127d0565b610d46565b6102bf610d5a565b6102f2610543366004612709565b610d69565b6102f2610556366004612709565b610dfb565b609f54610379906001600160a01b031681565b6102a461057c3660046126db565b610e09565b6102a461058f366004612847565b610e30565b6102f26105a23660046126db565b610e5b565b6102a46105b5366004612847565b610e72565b610328610f9e565b6102a4610fa6565b6102a46105d83660046126db565b610fb3565b6102a46105eb36600461278a565b610fdb565b6102a46105fe36600461278a565b610fe9565b61061661061136600461295f565b610ff4565b6040516102ae91906129e9565b6102a4609d5481565b6102a461063a366004612a2d565b611022565b6102a4609b5481565b6102a46106563660046126db565b61104d565b61032861066936600461278a565b611058565b6102f26110f5565b6000806065546040516370a0823160e01b81526001600160a01b03909116906370a08231906106a9903090600401612776565b602060405180830381865afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190612a5b565b6106f49190612a8a565b905090565b60606036805461070890612aa2565b80601f016020809104026020016040519081016040528092919081815260200182805461073490612aa2565b80156107815780601f1061075657610100808354040283529160200191610781565b820191906000526020600020905b81548152906001019060200180831161076457829003601f168201915b5050505050905090565b60008061079760355490565b905080156107b7576107b26107aa610676565b8490836111be565b6107b9565b825b9392505050565b6000336107ce8185856111dd565b60019150505b92915050565b6000806107e660355490565b905080156107b7576107b2816107fa610676565b859190611302565b3361080b610bef565b6001600160a01b03161461083a5760405162461bcd60e51b815260040161083190612adc565b60405180910390fd5b609d8190556040518181527f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f9906020015b60405180910390a150565b600033610884858285611330565b61088f8585856113aa565b506001949350505050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091906107ce90829086906108d4908790612a8a565b6111dd565b60006107d48261078b565b60006108ee611566565b6107b9838361156e565b6001600160a01b031660009081526033602052604090205490565b3361091c610bef565b6001600160a01b0316146109425760405162461bcd60e51b815260040161083190612adc565b61094c600061162b565b565b33610957610bef565b6001600160a01b03161461097d5760405162461bcd60e51b815260040161083190612adc565b609f80546001600160a01b0319166001600160a01b0383161790556040517f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9061086b908390612776565b609f546001600160a01b03163314610a0457609f546040516369958c7360e01b81526108319133916001600160a01b0390911690600401612b11565b609954609b54604051630ed586bf60e21b815260048101919091526060916001600160a01b031690633b561afc90602401600060405180830381865afa158015610a52573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a7a9190810190612d39565b8051909450610a9b935084925060009150610a9757610a97612e3f565b5050565b50565b609f546001600160a01b03163314610ada57609f546040516369958c7360e01b81526108319133916001600160a01b0390911690600401612b11565b610ae46000610e5b565b610b0157604051636fa1adc360e01b815260040160405180910390fd5b610b0961167d565b609e805467ffffffffffffffff19166001600160401b0392909216919091179055565b333014610b3857600080fd5b610b40611566565b6000610b52610b4d610676565b611693565b90508060005260206000fd5b609954609b54604051631c7a838360e31b815260048101919091526000916001600160a01b03169063e3d41c1890602401602060405180830381865afa158015610bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd09190612a5b565b9050610be5610be061042d610676565b6116a0565b6106f49082612e55565b6066546001600160a01b031690565b33610c07610bef565b6001600160a01b031614610c2d5760405162461bcd60e51b815260040161083190612adc565b609e805465ffffffffffff60401b1916600160501b63ffffffff851690810261ffff60401b191691909117600160401b61ffff8516908102919091179092556040805191825260208201929092527f9af00b5d3a5006b7a36e8fe4a8f67a155aa897efbee30711b474e18eed221555910160405180910390a15050565b6000306001600160a01b03166383f377766040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ce757600080fd5b505af1925050508015610cf8575060015b610297573d808015610d26576040519150601f19603f3d011682016040523d82523d6000602084013e610d2b565b606091505b5080806020019051810190610d409190612a5b565b91505090565b6000610d50611566565b6107b983836116e4565b60606037805461070890612aa2565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919083811015610dee5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610831565b61088f82868684036111dd565b6000336107ce8185856113aa565b600080610e1560355490565b905080156107b7576107b2610e28610676565b849083611302565b6000610e3a611566565b6000610e4585611693565b9050610e52818585611764565b95945050505050565b6000610e6561181f565b806107d4575060006107d4565b6000610e7c611566565b336001600160a01b03831614610eb4576000610e988333611022565b90506000198114610eb257610eb283336108d48885612e96565b505b610ebd846108d9565b905080600003610efd5760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606401610831565b6000610f0882611693565b9050818114610f2057809150610f1d816107da565b94505b610f2a8286611854565b610f34838661185f565b60408051838152602081018790526001600160a01b03808616929087169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a4606554610f96906001600160a01b03168584611998565b509392505050565b61094c6119ee565b60006106f46105d8610caa565b600080610fbf60355490565b905080156107b7576107b281610fd3610676565b8591906111be565b60006107d46102da836108f8565b60006107d4826108f8565b606060208251028201602001602083015b8181101561101a578051548152602001611005565b509192915050565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60006107d482610fb3565b33611061610bef565b6001600160a01b0316146110875760405162461bcd60e51b815260040161083190612adc565b6001600160a01b0381166110ec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610831565b610a9b8161162b565b60006106f461181f565b6001600160a01b03163b151590565b600080836001600160a01b0316631e2eaeaf6111418563ffffffff811660009081526064602052604081206001016107d4565b6040518263ffffffff1660e01b815260040161115f91815260200190565b602060405180830381865afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a09190612a5b565b949350505050565b90565b60009182526020526040902090565b0190565b8282028115158415858304851417166111d657600080fd5b0492915050565b6001600160a01b03831661123f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610831565b6001600160a01b0382166112a05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610831565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b82820281151584158583048514171661131a57600080fd5b6001826001830304018115150290509392505050565b600061133c8484611022565b905060001981146113a457818110156113975760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610831565b6113a484848484036111dd565b50505050565b6001600160a01b03831661140e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610831565b6001600160a01b0382166114705760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610831565b6001600160a01b038316600090815260336020526040902054818110156114e85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610831565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061151f908490612a8a565b92505081905550826001600160a01b0316846001600160a01b03166000805160206130fb8339815191528460405161155991815260200190565b60405180910390a36113a4565b610a97611ae5565b60006115798361104d565b9050806000036115b95760405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606401610831565b6065546115d1906001600160a01b0316333086611bfb565b6115db8282611c33565b60408051848152602081018390526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36107d48382611d00565b606680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b609f54600160a01b90046001600160401b031690565b60006107d461042d610676565b6000600160ff1b82106116e05760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b6044820152606401610831565b5090565b60006116ef83610e09565b60655490915061170a906001600160a01b0316333084611bfb565b6117148284611c33565b60408051828152602081018590526001600160a01b0384169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7910160405180910390a36107d48184611d00565b600061176f846107da565b9050336001600160a01b038316146117a957600061178d8333611022565b905060001981146117a7576117a783336108d48585612e96565b505b6117b38482611854565b6117bd828261185f565b60408051858152602081018390526001600160a01b03808516929086169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db910160405180910390a46065546107b9906001600160a01b03168486611998565b609e5460009063ffffffff600160501b820416906001600160401b031661184461167d565b61184e9190612e96565b11905090565b610a97610a9b610676565b6001600160a01b0382166118bf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610831565b6001600160a01b038216600090815260336020526040902054818110156119335760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610831565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611962908490612e96565b90915550506040518281526000906001600160a01b038516906000805160206130fb833981519152906020016112f5565b505050565b6119938363a9059cbb60e01b84846040516024016119b7929190612ead565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d3e565b609a5460995460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392611a269291169060001990600401612ead565b6020604051808303816000875af1158015611a45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a699190612ec6565b5060985460995460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392611aa29291169060001990600401612ead565b6020604051808303816000875af1158015611ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190612ec6565b609954609b54604051630ed586bf60e21b815260609283926001600160a01b0390911691633b561afc91611b1f9160040190815260200190565b600060405180830381865afa158015611b3c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b649190810190612d39565b909450925060009150611b779050610b5e565b9050611b838382611e10565b6065546040516370a0823160e01b8152611bf6916001600160a01b0316906370a0823190611bb5903090600401612776565b602060405180830381865afa158015611bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190612a5b565b509091565b6040516001600160a01b03808516602483015283166044820152606481018290526113a49085906323b872dd60e01b906084016119b7565b6001600160a01b038216611c895760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610831565b8060356000828254611c9b9190612a8a565b90915550506001600160a01b03821660009081526033602052604081208054839290611cc8908490612a8a565b90915550506040518181526001600160a01b038316906000906000805160206130fb8339815191529060200160405180910390a35050565b609d54611d0b610676565b111561185457609d54611d1c610676565b6040516301b25d0360e41b815260048101929092526024820152604401610831565b6000611d93826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661210a9092919063ffffffff16565b8051909150156119935780806020019051810190611db19190612ec6565b6119935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610831565b609954609b54604051631c7a838360e31b815260048101919091526000916001600160a01b03169063e3d41c1890602401602060405180830381865afa158015611e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e829190612a5b565b90506000811315611f0c57609954609b546001600160a01b0390911690639cd1be5890611eb184600019612ee8565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015611eef57600080fd5b505af1158015611f03573d6000803e3d6000fd5b50505050611fa8565b6000811215611fa8576000611f2661042d83600019612ee8565b90508015611fa657609954609b546001600160a01b0390911690639cd1be5890611f4f846116a0565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015611f8d57600080fd5b505af1158015611fa1573d6000803e3d6000fd5b505050505b505b8251600090156120fe57600084600081518110611fc757611fc7612e3f565b602002602001015190506120ec609860009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204b9190612f6d565b61205690600a613074565b609a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120cd9190612f6d565b6120d890600a613074565b6120e584602001516116a0565b9190612119565b6120f69085613083565b915050612101565b50815b6113a48161215b565b60606111a0848460008561242e565b60006121476121426000861261212f578561213b565b61213b86600019612ee8565b858561255d565b61260f565b905060008412156107b9576111a0816130c2565b600061226c609a60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121d79190612f6d565b6121e290600a613074565b609860009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122599190612f6d565b61226490600a613074565b849190612119565b9050600061227982612621565b9050600082131561236557609a546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906122b69030908590600401612ead565b600060405180830381600087803b1580156122d057600080fd5b505af11580156122e4573d6000803e3d6000fd5b5050609954609b54609a54604051637d2efe0760e01b8152600481019290925263ffffffff166024820152604481018590526001600160a01b039091169250637d2efe0791506064015b600060405180830381600087803b15801561234857600080fd5b505af115801561235c573d6000803e3d6000fd5b50505050505050565b600082121561199357609954609b54609a546001600160a01b0390921691637d2efe07919063ffffffff16612399856130c2565b6040516001600160e01b031960e086901b168152600481019390935263ffffffff9190911660248301526044820152606401600060405180830381600087803b1580156123e557600080fd5b505af11580156123f9573d6000803e3d6000fd5b5050609a54604051630852cd8d60e31b8152600481018590526001600160a01b0390911692506342966c68915060240161232e565b60608247101561248f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610831565b612498856110ff565b6124e45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610831565b600080866001600160a01b0316858760405161250091906130de565b60006040518083038185875af1925050503d806000811461253d576040519150601f19603f3d011682016040523d82523d6000602084013e612542565b606091505b509150915061255282828661262c565b979650505050505050565b6000808060001985870985870292508281108382030391505080600003612596576000841161258b57600080fd5b5082900490506107b9565b8084116125a257600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000600160ff1b82106116e057600080fd5b60006107d482612665565b6060831561263b5750816107b9565b82511561264b5782518084602001fd5b8160405162461bcd60e51b815260040161083191906126a8565b60008082136116e057612677826130c2565b6107d4565b60005b8381101561269757818101518382015260200161267f565b838111156113a45750506000910152565b60208152600082518060208401526126c781604085016020870161267c565b601f01601f19169190910160400192915050565b6000602082840312156126ed57600080fd5b5035919050565b6001600160a01b0381168114610a9b57600080fd5b6000806040838503121561271c57600080fd5b8235612727816126f4565b946020939093013593505050565b60008060006060848603121561274a57600080fd5b8335612755816126f4565b92506020840135612765816126f4565b929592945050506040919091013590565b6001600160a01b0391909116815260200190565b60006020828403121561279c57600080fd5b81356107b9816126f4565b6000602082840312156127b957600080fd5b81356001600160401b03811681146107b957600080fd5b600080604083850312156127e357600080fd5b8235915060208301356127f5816126f4565b809150509250929050565b63ffffffff81168114610a9b57600080fd5b6000806040838503121561282557600080fd5b823561283081612800565b9150602083013561ffff811681146127f557600080fd5b60008060006060848603121561285c57600080fd5b83359250602084013561286e816126f4565b9150604084013561287e816126f4565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156128c1576128c1612889565b60405290565b60405161012081016001600160401b03811182821017156128c1576128c1612889565b604080519081016001600160401b03811182821017156128c1576128c1612889565b604051601f8201601f191681016001600160401b038111828210171561293457612934612889565b604052919050565b60006001600160401b0382111561295557612955612889565b5060051b60200190565b6000602080838503121561297257600080fd5b82356001600160401b0381111561298857600080fd5b8301601f8101851361299957600080fd5b80356129ac6129a78261293c565b61290c565b81815260059190911b820183019083810190878311156129cb57600080fd5b928401925b82841015612552578335825292840192908401906129d0565b6020808252825182820181905260009190848201906040850190845b81811015612a2157835183529284019291840191600101612a05565b50909695505050505050565b60008060408385031215612a4057600080fd5b8235612a4b816126f4565b915060208301356127f5816126f4565b600060208284031215612a6d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612a9d57612a9d612a74565b500190565b600181811c90821680612ab657607f821691505b602082108103612ad657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b0392831681529116602082015260400190565b8051600281900b8114612b3d57600080fd5b919050565b80516001600160801b0381168114612b3d57600080fd5b805160038110612b3d57600080fd5b600082601f830112612b7957600080fd5b81516020612b896129a78361293c565b82815260059290921b84018101918181019086841115612ba857600080fd5b8286015b84811015612d2e5780516001600160401b0380821115612bcb57600080fd5b9088019060a0828b03601f19011215612be357600080fd5b612beb61289f565b86830151612bf881612800565b80825250604083015187820152606083015160408201526080830151606082015260a083015182811115612c2b57600080fd5b8084019350508a603f840112612c4057600080fd5b868301519150612c526129a78361293c565b82815261012092830284016040019288820191908d851115612c7357600080fd5b6040860195505b84861015612d185780868f031215612c9157600080fd5b612c996128c7565b612ca287612b2b565b8152612caf8b8801612b2b565b8b820152612cbf60408801612b42565b6040820152606087015160608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e0820152612d036101008801612b59565b61010082015283529485019491890191612c7a565b5060808301525085525050918301918301612bac565b509695505050505050565b60008060008060808587031215612d4f57600080fd5b8451612d5a816126f4565b8094505060208086015193506040808701516001600160401b0380821115612d8157600080fd5b818901915089601f830112612d9557600080fd5b8151612da36129a78261293c565b81815260069190911b8301850190858101908c831115612dc257600080fd5b938601935b82851015612e0b5785858e031215612ddf5760008081fd5b612de76128ea565b8551612df2816126f4565b8152858801518882015282529385019390860190612dc7565b60608c01519098509550505080841115612e2457600080fd5b505050612e3387828801612b68565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600080821280156001600160ff1b0384900385131615612e7757612e77612a74565b600160ff1b8390038412811615612e9057612e90612a74565b50500190565b600082821015612ea857612ea8612a74565b500390565b6001600160a01b03929092168252602082015260400190565b600060208284031215612ed857600080fd5b815180151581146107b957600080fd5b60006001600160ff1b0381841382841380821686840486111615612f0e57612f0e612a74565b600160ff1b6000871282811687830589121615612f2d57612f2d612a74565b60008712925087820587128484161615612f4957612f49612a74565b87850587128184161615612f5f57612f5f612a74565b505050929093029392505050565b600060208284031215612f7f57600080fd5b815160ff811681146107b957600080fd5b600181815b80851115612fcb578160001904821115612fb157612fb1612a74565b80851615612fbe57918102915b93841c9390800290612f95565b509250929050565b600082612fe2575060016107d4565b81612fef575060006107d4565b8160018114613005576002811461300f5761302b565b60019150506107d4565b60ff84111561302057613020612a74565b50506001821b6107d4565b5060208310610133831016604e8410600b841016171561304e575081810a6107d4565b6130588383612f90565b806000190482111561306c5761306c612a74565b029392505050565b60006107b960ff841683612fd3565b60008083128015600160ff1b8501841216156130a1576130a1612a74565b6001600160ff1b03840183138116156130bc576130bc612a74565b50500390565b6000600160ff1b82016130d7576130d7612a74565b5060000390565b600082516130f081846020870161267c565b919091019291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080d000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069';

type BaseVaultTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseVaultTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseVaultTest__factory extends ContractFactory {
  constructor(...args: BaseVaultTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: string,
    rageClearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseVaultTest> {
    return super.deploy(
      token,
      rageClearingHouse,
      overrides || {}
    ) as Promise<BaseVaultTest>;
  }
  override getDeployTransaction(
    token: string,
    rageClearingHouse: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      token,
      rageClearingHouse,
      overrides || {}
    );
  }
  override attach(address: string): BaseVaultTest {
    return super.attach(address) as BaseVaultTest;
  }
  override connect(signer: Signer): BaseVaultTest__factory {
    return super.connect(signer) as BaseVaultTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseVaultTestInterface {
    return new utils.Interface(_abi) as BaseVaultTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseVaultTest {
    return new Contract(address, _abi, signerOrProvider) as BaseVaultTest;
  }
}
