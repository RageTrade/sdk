/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Logic, LogicInterface } from '../../../contracts/libraries/Logic';

const _abi = [
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'threshold',
        type: 'uint256',
      },
    ],
    name: 'CrvHarvestThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oracle',
        type: 'address',
      },
    ],
    name: 'CrvOracleUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'crvSlippageTolerance',
        type: 'uint256',
      },
    ],
    name: 'CrvSwapFailedDueToSlippage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tolerance',
        type: 'uint256',
      },
    ],
    name: 'CrvSwapSlippageToleranceUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'depositCap',
        type: 'uint256',
      },
    ],
    name: 'DepositCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint16',
        name: 'closePositionSlippageSqrtToleranceBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'resetPositionThresholdBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'minNotionalPositionToCloseThreshold',
        type: 'uint64',
      },
    ],
    name: 'EightyTwentyParamsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'fee',
        type: 'uint256',
      },
    ],
    name: 'FeesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'total',
        type: 'uint256',
      },
    ],
    name: 'FeesWithdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'crvAmount',
        type: 'uint256',
      },
    ],
    name: 'Harvested',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'keeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'Rebalance',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'rebalanceTimeThreshold',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'rebalancePriceThresholdBps',
        type: 'uint16',
      },
    ],
    name: 'RebalanceThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'depositor',
        type: 'address',
      },
    ],
    name: 'Staked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lpPrice',
        type: 'uint256',
      },
    ],
    name: 'StateInfo',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'TokenPositionClosed',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'contract ILPPriceGetter',
        name: 'lpPriceHolder',
        type: 'ILPPriceGetter',
      },
    ],
    name: 'getMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: 'marketValue',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ILPPriceGetter',
        name: 'lpPriceHolder',
        type: 'ILPPriceGetter',
      },
    ],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'rageVPool',
        type: 'IUniswapV3Pool',
      },
      {
        internalType: 'uint32',
        name: 'rageTwapDuration',
        type: 'uint32',
      },
    ],
    name: 'getTwapSqrtPriceX96',
    outputs: [
      {
        internalType: 'uint160',
        name: 'twapSqrtPriceX96',
        type: 'uint160',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
      {
        internalType: 'int256',
        name: 'vaultMarketValue',
        type: 'int256',
      },
      {
        internalType: 'uint64',
        name: 'SQRT_PRICE_FACTOR_PIPS',
        type: 'uint64',
      },
    ],
    name: 'getUpdatedBaseRangeParams',
    outputs: [
      {
        internalType: 'int24',
        name: 'baseTickLowerUpdate',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'baseTickUpperUpdate',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'baseLiquidityUpdate',
        type: 'uint128',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'rageVPool',
        type: 'IUniswapV3Pool',
      },
      {
        internalType: 'uint32',
        name: 'rageTwapDuration',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'rebalancePriceThresholdBps',
        type: 'uint16',
      },
      {
        internalType: 'int24',
        name: 'baseTickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'baseTickUpper',
        type: 'int24',
      },
    ],
    name: 'isValidRebalanceRangeWithoutCheckReset',
    outputs: [
      {
        internalType: 'bool',
        name: 'isValid',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isTickUpper',
        type: 'bool',
      },
    ],
    name: 'sqrtPriceX96ToValidTick',
    outputs: [
      {
        internalType: 'int24',
        name: 'roundedTick',
        type: 'int24',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x61180961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100775760003560e01c80631e876a281461007c578063757d5fd6146100af5780637a5fda79146100d2578063854292c7146100e5578063ad6ed5b01461010b578063e54c8fd81461014a578063ffe2e69a1461016a575b600080fd5b81801561008857600080fd5b5061009c61009736600461105c565b61017d565b6040519081526020015b60405180910390f35b6100c26100bd36600461111c565b610417565b60405190151581526020016100a6565b61009c6100e036600461118b565b61049c565b6100f86100f33660046111c9565b6104bd565b60405160029190910b81526020016100a6565b61011e6101193660046111f7565b610531565b60408051600294850b81529290930b60208301526001600160801b0316918101919091526060016100a6565b61015d610158366004611245565b6105ec565b6040516100a6919061127a565b61009c61017836600461128e565b610601565b600080876001600160a01b03166354f0f7d56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e291906112ab565b90506000816101f68b64e8d4a510006112da565b61020890670de0b6b3a76400006112da565b610212919061130f565b604051632e1a7d4d60e01b8152600481018290529091506001600160a01b03891690632e1a7d4d90602401600060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b505060405163f1dc3cc960e01b81526004810184905260006024820181905260448201526001600160a01b038a16925063f1dc3cc99150606401600060405180830381600087803b1580156102bf57600080fd5b505af11580156102d3573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03891691506370a082319061030690309060040161127a565b602060405180830381865afa158015610323573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034791906112ab565b6040516001600160601b031960608a811b82166020840152607d60ea1b603484015288901b166037820152909150600090604b0160408051601f198184030181529082905263585f5c6960e01b8252915073__$f09208ef53137b379b85ea4a8d399069d8$';

type LogicConstructorParams =
  | [linkLibraryAddresses: LogicLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class Logic__factory extends ContractFactory {
  constructor(...args: LogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Logic__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: LogicLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$f09208ef53137b379b85ea4a8d399069d8\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/SwapManager.sol:SwapManager']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Logic> {
    return super.deploy(overrides || {}) as Promise<Logic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Logic {
    return super.attach(address) as Logic;
  }
  override connect(signer: Signer): Logic__factory {
    return super.connect(signer) as Logic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogicInterface {
    return new utils.Interface(_abi) as LogicInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Logic {
    return new Contract(address, _abi, signerOrProvider) as Logic;
  }
}

export interface LogicLibraryAddresses {
  ['contracts/libraries/SwapManager.sol:SwapManager']: string;
}
