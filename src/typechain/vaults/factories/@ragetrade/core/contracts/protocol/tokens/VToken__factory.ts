/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VToken,
  VTokenInterface,
} from '../../../../../../@ragetrade/core/contracts/protocol/tokens/VToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'vTokenName',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'vTokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint8',
        name: 'cTokenDecimals',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vPoolWrapper',
        type: 'address',
      },
    ],
    name: 'setVPoolWrapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPoolWrapper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162000f4a38038062000f4a8339810160408190526200003491620001e8565b8251839083906200004d90600390602085019062000075565b5080516200006390600490602084019062000075565b50505060ff1660805250620002a99050565b82805462000083906200026d565b90600052602060002090601f016020900481019282620000a75760008555620000f2565b82601f10620000c257805160ff1916838001178555620000f2565b82800160010185558215620000f2579182015b82811115620000f2578251825591602001919060010190620000d5565b506200010092915062000104565b5090565b5b8082111562000100576000815560010162000105565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014357600080fd5b81516001600160401b03808211156200016057620001606200011b565b604051601f8301601f19908116603f011681019082821181831017156200018b576200018b6200011b565b81604052838152602092508683858801011115620001a857600080fd5b600091505b83821015620001cc5785820183015181830184015290820190620001ad565b83821115620001de5760008385830101525b9695505050505050565b600080600060608486031215620001fe57600080fd5b83516001600160401b03808211156200021657600080fd5b620002248783880162000131565b945060208601519150808211156200023b57600080fd5b506200024a8682870162000131565b925050604084015160ff811681146200026257600080fd5b809150509250925092565b600181811c908216806200028257607f821691505b602082108103620002a357634e487b7160e01b600052602260045260246000fd5b50919050565b608051610c85620002c560003960006101370152610c856000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c806306fdde03146100ca578063095ea7b3146100e857806318160ddd1461010b57806323b872dd1461011d578063313ce56714610130578063395093511461016157806340c10f191461017457806342966c681461018957806370a082311461019c57806395d89b41146101c5578063a457c2d7146101cd578063a9059cbb146101e0578063d7adb4fe146101f3578063dd62ed3e14610206578063df8685d214610219575b600080fd5b6100d2610244565b6040516100df9190610a94565b60405180910390f35b6100fb6100f6366004610b05565b6102d6565b60405190151581526020016100df565b6002545b6040519081526020016100df565b6100fb61012b366004610b2f565b6102ee565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100df565b6100fb61016f366004610b05565b610312565b610187610182366004610b05565b610351565b005b610187610197366004610b6b565b61038a565b61010f6101aa366004610b84565b6001600160a01b031660009081526020819052604090205490565b6100d2610397565b6100fb6101db366004610b05565b6103a6565b6100fb6101ee366004610b05565b61043d565b610187610201366004610b84565b61044b565b61010f610214366004610ba6565b61047b565b60055461022c906001600160a01b031681565b6040516001600160a01b0390911681526020016100df565b60606003805461025390610bd9565b80601f016020809104026020016040519081016040528092919081815260200182805461027f90610bd9565b80156102cc5780601f106102a1576101008083540402835291602001916102cc565b820191906000526020600020905b8154815290600101906020018083116102af57829003601f168201915b5050505050905090565b6000336102e48185856104a6565b5060019392505050565b6000336102fc8582856105cb565b610307858585610645565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102e4908290869061034c908790610c29565b6104a6565b6005546001600160a01b0316331461037c57604051636bd1573560e11b815260040160405180910390fd5b610386828261080c565b5050565b61039433826108e5565b50565b60606004805461025390610bd9565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104305760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61030782868684036104a6565b6000336102e4818585610645565b6005546001600160a01b031661039457600580546001600160a01b0383166001600160a01b031990911617905550565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105085760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610427565b6001600160a01b0382166105695760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610427565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105d7848461047b565b9050600019811461063f57818110156106325760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610427565b61063f84848484036104a6565b50505050565b6001600160a01b0383166106a95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610427565b6001600160a01b03821661070b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610427565b610716838383610a2a565b6001600160a01b0383166000908152602081905260409020548181101561078e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610427565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107c5908490610c29565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610c59833981519152846040516107ff91815260200190565b60405180910390a361063f565b6001600160a01b0382166108625760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610427565b61086e60008383610a2a565b80600260008282546108809190610c29565b90915550506001600160a01b038216600090815260208190526040812080548392906108ad908490610c29565b90915550506040518181526001600160a01b03831690600090600080516020610c598339815191529060200160405180910390a35050565b6001600160a01b0382166109455760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610427565b61095182600083610a2a565b6001600160a01b038216600090815260208190526040902054818110156109c55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610427565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109f4908490610c41565b90915550506040518281526000906001600160a01b03851690600080516020610c59833981519152906020016105be565b505050565b6001600160a01b0383161580610a4757506001600160a01b038216155b80610a5f57506005546001600160a01b038481169116145b80610a7757506005546001600160a01b038381169116145b610a2557604051636bd1573560e11b815260040160405180910390fd5b600060208083528351808285015260005b81811015610ac157858101830151858201604001528201610aa5565b81811115610ad3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b0057600080fd5b919050565b60008060408385031215610b1857600080fd5b610b2183610ae9565b946020939093013593505050565b600080600060608486031215610b4457600080fd5b610b4d84610ae9565b9250610b5b60208501610ae9565b9150604084013590509250925092565b600060208284031215610b7d57600080fd5b5035919050565b600060208284031215610b9657600080fd5b610b9f82610ae9565b9392505050565b60008060408385031215610bb957600080fd5b610bc283610ae9565b9150610bd060208401610ae9565b90509250929050565b600181811c90821680610bed57607f821691505b602082108103610c0d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c3c57610c3c610c13565b500190565b600082821015610c5357610c53610c13565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080d000a';

type VTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VToken__factory extends ContractFactory {
  constructor(...args: VTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vTokenName: string,
    vTokenSymbol: string,
    cTokenDecimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VToken> {
    return super.deploy(
      vTokenName,
      vTokenSymbol,
      cTokenDecimals,
      overrides || {}
    ) as Promise<VToken>;
  }
  override getDeployTransaction(
    vTokenName: string,
    vTokenSymbol: string,
    cTokenDecimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vTokenName,
      vTokenSymbol,
      cTokenDecimals,
      overrides || {}
    );
  }
  override attach(address: string): VToken {
    return super.attach(address) as VToken;
  }
  override connect(signer: Signer): VToken__factory {
    return super.connect(signer) as VToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenInterface {
    return new utils.Interface(_abi) as VTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VToken {
    return new Contract(address, _abi, signerOrProvider) as VToken;
  }
}
