/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  InsuranceFund,
  InsuranceFundInterface,
} from '../../../../../../@ragetrade/core/contracts/protocol/insurancefund/InsuranceFund';

const _abi = [
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_settlementToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_clearingHouse',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settlementToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061162e806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063379607f5116100a257806395d89b411161007157806395d89b411461023a578063a457c2d714610242578063a9059cbb14610255578063b6b55f2514610268578063dd62ed3e1461027b57600080fd5b8063379607f5146101d857806339509351146101eb57806370a08231146101fe5780637b9e618d1461022757600080fd5b80632016a0d2116100de5780632016a0d21461018e57806323b872dd146101a35780632e1a7d4d146101b6578063313ce567146101c957600080fd5b806306fdde0314610110578063095ea7b31461012e5780630af968001461015157806318160ddd1461017c575b600080fd5b6101186102b4565b6040516101259190611308565b60405180910390f35b61014161013c366004611350565b610346565b6040519015158152602001610125565b606654610164906001600160a01b031681565b6040516001600160a01b039091168152602001610125565b6035545b604051908152602001610125565b6101a161019c3660046113c5565b61035e565b005b6101416101b136600461145a565b61047f565b6101a16101c436600461149b565b6104a5565b60405160128152602001610125565b6101a16101e636600461149b565b610561565b6101416101f9366004611350565b6105a6565b61018061020c3660046114b4565b6001600160a01b031660009081526033602052604090205490565b606554610164906001600160a01b031681565b6101186105e5565b610141610250366004611350565b6105f4565b610141610263366004611350565b610696565b6101a161027636600461149b565b6106a4565b6101806102893660046114d1565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546102c39061150a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ef9061150a565b801561033c5780601f106103115761010080835404028352916020019161033c565b820191906000526020600020905b81548152906001019060200180831161031f57829003601f168201915b5050505050905090565b600033610354818585610773565b5060019392505050565b600061036a6001610898565b90508015610382576000805461ff0019166101001790555b606580546001600160a01b03808a1673ffffffffffffffffffffffffffffffffffffffff19928316179092556066805492891692909116919091179055604080516020601f870181900481028201810190925285815261043091879087908190840183828082843760009201919091525050604080516020601f890181900481028201810190925287815292508791508690819084018382808284376000920191909152506109ae92505050565b8015610476576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b60003361048d858285610a27565b610498858585610ab3565b60019150505b9392505050565b6065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190611544565b9050600061051f60355490565b905060008161052e8486611573565b6105389190611592565b90506105443385610c81565b60655461055b906001600160a01b03163383610dcc565b50505050565b6066546001600160a01b0316331461058c57604051636bd1573560e11b815260040160405180910390fd5b6065546105a3906001600160a01b03163383610dcc565b50565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061035490829086906105e09087906115b4565b610773565b6060603780546102c39061150a565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091908381101561067e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61068b8286868403610773565b506001949350505050565b600033610354818585610ab3565b6065546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107119190611544565b9050600061071e60355490565b9050600081158061072d575082155b15610739575082610751565b826107448386611573565b61074e9190611592565b90505b606554610769906001600160a01b0316333087610e47565b61055b3382610e7f565b6001600160a01b0383166107d55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610675565b6001600160a01b0382166108365760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610675565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60008054610100900460ff1615610926578160ff1660011480156108bb5750303b155b61091e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610675565b506000919050565b60005460ff8084169116106109945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610675565b506000805460ff191660ff92909216919091179055600190565b600054610100900460ff16610a195760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610675565b610a238282610f5e565b5050565b6001600160a01b03838116600090815260346020908152604080832093861683529290522054600019811461055b5781811015610aa65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610675565b61055b8484848403610773565b6001600160a01b038316610b175760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610675565b6001600160a01b038216610b795760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610675565b6001600160a01b03831660009081526033602052604090205481811015610bf15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610675565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610c289084906115b4565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c7491815260200190565b60405180910390a361055b565b6001600160a01b038216610ce15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610675565b6001600160a01b03821660009081526033602052604090205481811015610d555760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610675565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610d849084906115cc565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161088b565b505050565b6040516001600160a01b038316602482015260448101829052610dc790849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610ff0565b6040516001600160a01b038085166024830152831660448201526064810182905261055b9085906323b872dd60e01b90608401610df8565b6001600160a01b038216610ed55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610675565b8060356000828254610ee791906115b4565b90915550506001600160a01b03821660009081526033602052604081208054839290610f149084906115b4565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff16610fc95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610675565b8151610fdc906036906020850190611243565b508051610dc7906037906020840190611243565b6000611045826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110c29092919063ffffffff16565b805190915015610dc7578080602001905181019061106391906115e3565b610dc75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610675565b60606110d184846000856110d9565b949350505050565b60608247101561113a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610675565b6001600160a01b0385163b6111915760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610675565b600080866001600160a01b031685876040516111ad9190611605565b60006040518083038185875af1925050503d80600081146111ea576040519150601f19603f3d011682016040523d82523d6000602084013e6111ef565b606091505b50915091506111ff82828661120a565b979650505050505050565b6060831561121957508161049e565b8251156112295782518084602001fd5b8160405162461bcd60e51b81526004016106759190611308565b82805461124f9061150a565b90600052602060002090601f01602090048101928261127157600085556112b7565b82601f1061128a57805160ff19168380011785556112b7565b828001600101855582156112b7579182015b828111156112b757825182559160200191906001019061129c565b506112c39291506112c7565b5090565b5b808211156112c357600081556001016112c8565b60005b838110156112f75781810151838201526020016112df565b8381111561055b5750506000910152565b60208152600082518060208401526113278160408501602087016112dc565b601f01601f19169190910160400192915050565b6001600160a01b03811681146105a357600080fd5b6000806040838503121561136357600080fd5b823561136e8161133b565b946020939093013593505050565b60008083601f84011261138e57600080fd5b50813567ffffffffffffffff8111156113a657600080fd5b6020830191508360208285010111156113be57600080fd5b9250929050565b600080600080600080608087890312156113de57600080fd5b86356113e98161133b565b955060208701356113f98161133b565b9450604087013567ffffffffffffffff8082111561141657600080fd5b6114228a838b0161137c565b9096509450606089013591508082111561143b57600080fd5b5061144889828a0161137c565b979a9699509497509295939492505050565b60008060006060848603121561146f57600080fd5b833561147a8161133b565b9250602084013561148a8161133b565b929592945050506040919091013590565b6000602082840312156114ad57600080fd5b5035919050565b6000602082840312156114c657600080fd5b813561049e8161133b565b600080604083850312156114e457600080fd5b82356114ef8161133b565b915060208301356114ff8161133b565b809150509250929050565b600181811c9082168061151e57607f821691505b60208210810361153e57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561155657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561158d5761158d61155d565b500290565b6000826115af57634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156115c7576115c761155d565b500190565b6000828210156115de576115de61155d565b500390565b6000602082840312156115f557600080fd5b8151801515811461049e57600080fd5b600082516116178184602087016112dc565b919091019291505056fea164736f6c634300080e000a';

type InsuranceFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsuranceFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsuranceFund__factory extends ContractFactory {
  constructor(...args: InsuranceFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InsuranceFund> {
    return super.deploy(overrides || {}) as Promise<InsuranceFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InsuranceFund {
    return super.attach(address) as InsuranceFund;
  }
  override connect(signer: Signer): InsuranceFund__factory {
    return super.connect(signer) as InsuranceFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsuranceFundInterface {
    return new utils.Interface(_abi) as InsuranceFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InsuranceFund {
    return new Contract(address, _abi, signerOrProvider) as InsuranceFund;
  }
}
