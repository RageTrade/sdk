/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  InsuranceFund,
  InsuranceFundInterface,
} from '../../../../../../@ragetrade/core/contracts/protocol/insurancefund/InsuranceFund';

const _abi = [
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_settlementToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_clearingHouse',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settlementToken',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506114cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100eb5760003560e01c8063379607f511610092578063379607f5146101ad57806339509351146101c057806370a08231146101d35780637b9e618d146101fc57806395d89b411461020f578063a457c2d714610217578063a9059cbb1461022a578063b6b55f251461023d578063dd62ed3e1461025057600080fd5b806306fdde03146100f0578063095ea7b31461010e5780630af968001461013157806318160ddd146101515780632016a0d21461016357806323b872dd146101785780632e1a7d4d1461018b578063313ce5671461019e575b600080fd5b6100f8610263565b6040516101059190611127565b60405180910390f35b61012161011c36600461116f565b6102f5565b6040519015158152602001610105565b606654610144906001600160a01b031681565b604051610105919061119b565b6035545b604051908152602001610105565b6101766101713660046111f8565b61030d565b005b61012161018636600461128d565b610472565b6101766101993660046112ce565b610498565b60405160128152602001610105565b6101766101bb3660046112ce565b610559565b6101216101ce36600461116f565b61059e565b6101556101e13660046112e7565b6001600160a01b031660009081526033602052604090205490565b606554610144906001600160a01b031681565b6100f86105dd565b61012161022536600461116f565b6105ec565b61012161023836600461116f565b610689565b61017661024b3660046112ce565b610697565b61015561025e366004611304565b61076b565b6060603680546102729061133d565b80601f016020809104026020016040519081016040528092919081815260200182805461029e9061133d565b80156102eb5780601f106102c0576101008083540402835291602001916102eb565b820191906000526020600020905b8154815290600101906020018083116102ce57829003601f168201915b5050505050905090565b600033610303818585610796565b5060019392505050565b600054610100900460ff166103285760005460ff161561032c565b303b155b6103945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156103b6576000805461ffff19166101011790555b606580546001600160a01b03808a166001600160a01b0319928316179092556066805492891692909116919091179055604080516020601f870181900481028201810190925285815261045791879087908190840183828082843760009201919091525050604080516020601f890181900481028201810190925287815292508791508690819084018382808284376000920191909152506108bb92505050565b8015610469576000805461ff00191690555b50505050505050565b6000336104808582856108f0565b61048b858585610964565b60019150505b9392505050565b6065546040516370a0823160e01b81526000916001600160a01b0316906370a08231906104c990309060040161119b565b602060405180830381865afa1580156104e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050a9190611377565b9050600061051760355490565b905060008161052684866113a6565b61053091906113c5565b905061053c3385610b20565b606554610553906001600160a01b03163383610c59565b50505050565b6066546001600160a01b0316331461058457604051636bd1573560e11b815260040160405180910390fd5b60655461059b906001600160a01b03163383610c59565b50565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061030390829086906105d89087906113e7565b610796565b6060603780546102729061133d565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156106715760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161038b565b61067e8286868403610796565b506001949350505050565b600033610303818585610964565b6065546040516370a0823160e01b81526000916001600160a01b0316906370a08231906106c890309060040161119b565b602060405180830381865afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190611377565b9050600061071660355490565b90506000811580610725575082155b15610731575082610749565b8261073c83866113a6565b61074691906113c5565b90505b606554610761906001600160a01b0316333087610cbc565b6105533382610cf4565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166107f85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161038b565b6001600160a01b0382166108595760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161038b565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600054610100900460ff166108e25760405162461bcd60e51b815260040161038b906113ff565b6108ec8282610dc1565b5050565b60006108fc848461076b565b9050600019811461055357818110156109575760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161038b565b6105538484848403610796565b6001600160a01b0383166109c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161038b565b6001600160a01b038216610a2a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161038b565b6001600160a01b03831660009081526033602052604090205481811015610aa25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161038b565b6001600160a01b03808516600090815260336020526040808220858503905591851681529081208054849290610ad99084906113e7565b92505081905550826001600160a01b0316846001600160a01b03166000805160206114a083398151915284604051610b1391815260200190565b60405180910390a3610553565b6001600160a01b038216610b805760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161038b565b6001600160a01b03821660009081526033602052604090205481811015610bf45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161038b565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610c2390849061144a565b90915550506040518281526000906001600160a01b038516906000805160206114a0833981519152906020016108ae565b505050565b6040516001600160a01b038316602482015260448101829052610c5490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e0f565b6040516001600160a01b03808516602483015283166044820152606481018290526105539085906323b872dd60e01b90608401610c85565b6001600160a01b038216610d4a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161038b565b8060356000828254610d5c91906113e7565b90915550506001600160a01b03821660009081526033602052604081208054839290610d899084906113e7565b90915550506040518181526001600160a01b038316906000906000805160206114a08339815191529060200160405180910390a35050565b600054610100900460ff16610de85760405162461bcd60e51b815260040161038b906113ff565b8151610dfb906036906020850190611062565b508051610c54906037906020840190611062565b6000610e64826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ee19092919063ffffffff16565b805190915015610c545780806020019051810190610e829190611461565b610c545760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038b565b6060610ef08484600085610ef8565b949350505050565b606082471015610f595760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161038b565b6001600160a01b0385163b610fb05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038b565b600080866001600160a01b03168587604051610fcc9190611483565b60006040518083038185875af1925050503d8060008114611009576040519150601f19603f3d011682016040523d82523d6000602084013e61100e565b606091505b509150915061101e828286611029565b979650505050505050565b60608315611038575081610491565b8251156110485782518084602001fd5b8160405162461bcd60e51b815260040161038b9190611127565b82805461106e9061133d565b90600052602060002090601f01602090048101928261109057600085556110d6565b82601f106110a957805160ff19168380011785556110d6565b828001600101855582156110d6579182015b828111156110d65782518255916020019190600101906110bb565b506110e29291506110e6565b5090565b5b808211156110e257600081556001016110e7565b60005b838110156111165781810151838201526020016110fe565b838111156105535750506000910152565b60208152600082518060208401526111468160408501602087016110fb565b601f01601f19169190910160400192915050565b6001600160a01b038116811461059b57600080fd5b6000806040838503121561118257600080fd5b823561118d8161115a565b946020939093013593505050565b6001600160a01b0391909116815260200190565b60008083601f8401126111c157600080fd5b50813567ffffffffffffffff8111156111d957600080fd5b6020830191508360208285010111156111f157600080fd5b9250929050565b6000806000806000806080878903121561121157600080fd5b863561121c8161115a565b9550602087013561122c8161115a565b9450604087013567ffffffffffffffff8082111561124957600080fd5b6112558a838b016111af565b9096509450606089013591508082111561126e57600080fd5b5061127b89828a016111af565b979a9699509497509295939492505050565b6000806000606084860312156112a257600080fd5b83356112ad8161115a565b925060208401356112bd8161115a565b929592945050506040919091013590565b6000602082840312156112e057600080fd5b5035919050565b6000602082840312156112f957600080fd5b81356104918161115a565b6000806040838503121561131757600080fd5b82356113228161115a565b915060208301356113328161115a565b809150509250929050565b600181811c9082168061135157607f821691505b60208210810361137157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561138957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156113c0576113c0611390565b500290565b6000826113e257634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156113fa576113fa611390565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008282101561145c5761145c611390565b500390565b60006020828403121561147357600080fd5b8151801515811461049157600080fd5b600082516114958184602087016110fb565b919091019291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300080d000a';

type InsuranceFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsuranceFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsuranceFund__factory extends ContractFactory {
  constructor(...args: InsuranceFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InsuranceFund> {
    return super.deploy(overrides || {}) as Promise<InsuranceFund>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InsuranceFund {
    return super.attach(address) as InsuranceFund;
  }
  override connect(signer: Signer): InsuranceFund__factory {
    return super.connect(signer) as InsuranceFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsuranceFundInterface {
    return new utils.Interface(_abi) as InsuranceFundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InsuranceFund {
    return new Contract(address, _abi, signerOrProvider) as InsuranceFund;
  }
}
