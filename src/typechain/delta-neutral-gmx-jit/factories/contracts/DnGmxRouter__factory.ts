/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type {
  DnGmxRouter,
  DnGmxRouterInterface,
} from '../../contracts/DnGmxRouter';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxBatchingManager',
    outputs: [
      {
        internalType: 'contract IDnGmxBatchingManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJIT',
    outputs: [
      {
        internalType: 'contract IDnGmxJIT',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'contract IDnGmxBatchingManager',
        name: '_dnGmxBatchingManager',
        type: 'address',
      },
      {
        internalType: 'contract IDnGmxJIT',
        name: '_dnGmxJIT',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_sGLP',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sGLP',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061144a806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461010f578063a8d774121461012d578063aa88fdc31461014b578063f2fde38b14610169578063f8c8765e146101855761009e565b8063180282b3146100a3578063506f255c146100ad5780636e553f65146100cb578063715018a6146100e757806380ccad80146100f1575b600080fd5b6100ab6101a1565b005b6100b5610329565b6040516100c29190610d01565b60405180910390f35b6100e560048036038101906100e09190610d95565b61034f565b005b6100ef61059b565b005b6100f96105af565b6040516101069190610df6565b60405180910390f35b6101176105d5565b6040516101249190610e20565b60405180910390f35b6101356105ff565b6040516101429190610e5c565b60405180910390f35b610153610625565b6040516101609190610e98565b60405180910390f35b610183600480360381019061017e9190610eb3565b61064b565b005b61019f600480360381019061019a9190610fd8565b6106cf565b005b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8078d946040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561020b57600080fd5b505af115801561021f573d6000803e3d6000fd5b50505050606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663180282b36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b50505050606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367b9a2866040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561030f57600080fd5b505af1158015610323573d6000803e3d6000fd5b50505050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e8078d946040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156103b957600080fd5b505af11580156103cd573d6000803e3d6000fd5b50505050606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104309392919061104e565b6020604051808303816000875af115801561044f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047391906110bd565b50606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e553f6583836040518363ffffffff1660e01b81526004016104d19291906110ea565b6020604051808303816000875af11580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105149190611128565b50606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367b9a2866040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b505050505050565b6105a361081d565b6105ad600061089b565b565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61065361081d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ba906111d8565b60405180910390fd5b6106cc8161089b565b50565b60008060019054906101000a900460ff161590508080156107005750600160008054906101000a900460ff1660ff16105b8061072d575061070f30610961565b15801561072c5750600160008054906101000a900460ff1660ff16145b5b61076c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107639061126a565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156107a9576001600060016101000a81548160ff0219169083151502179055505b6107b1610984565b6107bd858585856109dd565b80156108165760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161080d91906112d2565b60405180910390a15b5050505050565b610825610c19565b73ffffffffffffffffffffffffffffffffffffffff166108436105d5565b73ffffffffffffffffffffffffffffffffffffffff1614610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611339565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca906113cb565b60405180910390fd5b6109db610c21565b565b600060019054906101000a900460ff16610a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a23906113cb565b60405180910390fd5b83606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610bcf9291906113eb565b6020604051808303816000875af1158015610bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1291906110bd565b5050505050565b600033905090565b600060019054906101000a900460ff16610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c67906113cb565b60405180910390fd5b610c80610c7b610c19565b61089b565b565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610cc7610cc2610cbd84610c82565b610ca2565b610c82565b9050919050565b6000610cd982610cac565b9050919050565b6000610ceb82610cce565b9050919050565b610cfb81610ce0565b82525050565b6000602082019050610d166000830184610cf2565b92915050565b600080fd5b6000819050919050565b610d3481610d21565b8114610d3f57600080fd5b50565b600081359050610d5181610d2b565b92915050565b6000610d6282610c82565b9050919050565b610d7281610d57565b8114610d7d57600080fd5b50565b600081359050610d8f81610d69565b92915050565b60008060408385031215610dac57610dab610d1c565b5b6000610dba85828601610d42565b9250506020610dcb85828601610d80565b9150509250929050565b6000610de082610cce565b9050919050565b610df081610dd5565b82525050565b6000602082019050610e0b6000830184610de7565b92915050565b610e1a81610d57565b82525050565b6000602082019050610e356000830184610e11565b92915050565b6000610e4682610cce565b9050919050565b610e5681610e3b565b82525050565b6000602082019050610e716000830184610e4d565b92915050565b6000610e8282610cce565b9050919050565b610e9281610e77565b82525050565b6000602082019050610ead6000830184610e89565b92915050565b600060208284031215610ec957610ec8610d1c565b5b6000610ed784828501610d80565b91505092915050565b6000610eeb82610d57565b9050919050565b610efb81610ee0565b8114610f0657600080fd5b50565b600081359050610f1881610ef2565b92915050565b6000610f2982610d57565b9050919050565b610f3981610f1e565b8114610f4457600080fd5b50565b600081359050610f5681610f30565b92915050565b6000610f6782610d57565b9050919050565b610f7781610f5c565b8114610f8257600080fd5b50565b600081359050610f9481610f6e565b92915050565b6000610fa582610d57565b9050919050565b610fb581610f9a565b8114610fc057600080fd5b50565b600081359050610fd281610fac565b92915050565b60008060008060808587031215610ff257610ff1610d1c565b5b600061100087828801610f09565b945050602061101187828801610f47565b935050604061102287828801610f85565b925050606061103387828801610fc3565b91505092959194509250565b61104881610d21565b82525050565b60006060820190506110636000830186610e11565b6110706020830185610e11565b61107d604083018461103f565b949350505050565b60008115159050919050565b61109a81611085565b81146110a557600080fd5b50565b6000815190506110b781611091565b92915050565b6000602082840312156110d3576110d2610d1c565b5b60006110e1848285016110a8565b91505092915050565b60006040820190506110ff600083018561103f565b61110c6020830184610e11565b9392505050565b60008151905061112281610d2b565b92915050565b60006020828403121561113e5761113d610d1c565b5b600061114c84828501611113565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006111c2602683611155565b91506111cd82611166565b604082019050919050565b600060208201905081810360008301526111f1816111b5565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611254602e83611155565b915061125f826111f8565b604082019050919050565b6000602082019050818103600083015261128381611247565b9050919050565b6000819050919050565b600060ff82169050919050565b60006112bc6112b76112b28461128a565b610ca2565b611294565b9050919050565b6112cc816112a1565b82525050565b60006020820190506112e760008301846112c3565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611323602083611155565b915061132e826112ed565b602082019050919050565b6000602082019050818103600083015261135281611316565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006113b5602b83611155565b91506113c082611359565b604082019050919050565b600060208201905081810360008301526113e4816113a8565b9050919050565b60006040820190506114006000830185610e11565b61140d602083018461103f565b939250505056fea264697066735822122043415f21646a827b8a0c0f1f26ece6f5e0edd7bb0cbc9178acccf8d170c7602e64736f6c634300080a0033';

type DnGmxRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxRouter__factory extends ContractFactory {
  constructor(...args: DnGmxRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxRouter> {
    return super.deploy(overrides || {}) as Promise<DnGmxRouter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxRouter {
    return super.attach(address) as DnGmxRouter;
  }
  override connect(signer: Signer): DnGmxRouter__factory {
    return super.connect(signer) as DnGmxRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxRouterInterface {
    return new utils.Interface(_abi) as DnGmxRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxRouter {
    return new Contract(address, _abi, signerOrProvider) as DnGmxRouter;
  }
}
