/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../common';
import type {
  DepositPeriphery,
  DepositPeripheryInterface,
} from '../../../../../@ragetrade/delta-neutral-gmx-vaults/contracts/periphery/DepositPeriphery';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'juniorVault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'rewardRouter',
        type: 'address',
      },
    ],
    name: 'AddressesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'SlippageThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokensSpent',
        type: 'uint256',
      },
    ],
    name: 'TokenDeposited',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenAmount',
        type: 'uint256',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sharesReceived',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
    ],
    name: 'setAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'setSlippageThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6115d18061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806390107afe1161005b57806390107afe146100c65780639024350b146100e2578063f2fde38b14610100578063fb0f97a81461011c5761007d565b80634146043614610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c60048036038101906100979190610d32565b61014c565b005b6100a6610195565b005b6100b06101a9565b6040516100bd9190610da0565b60405180910390f35b6100e060048036038101906100db9190610e37565b6101d2565b005b6100ea6105cd565b6040516100f79190610e86565b60405180910390f35b61011a60048036038101906101159190610ecd565b6105d3565b005b61013660048036038101906101319190610efa565b610657565b6040516101439190610e86565b60405180910390f35b6101546107fd565b806001819055507fad3d2e36d644de683c6608bea35a9e25bef4ded83b5939c6d8f9c5ab390d89fc8160405161018a9190610e86565b60405180910390a150565b61019d6107fd565b6101a7600061087b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101da6107fd565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610f62565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa6db1bc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be9190610f62565b600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fbfa77cf6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f9190610f62565b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040161054c929190610f8f565b6020604051808303816000875af115801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190610ff0565b507fc651c70f44278e4b6b346230d2fcc09308ad801d6dc8b9c055f45581b360907582826040516105c192919061101d565b60405180910390a15050565b60015481565b6105db6107fd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561064b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610642906110c9565b60405180910390fd5b6106548161087b565b50565b60008373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610696939291906110e9565b6020604051808303816000875af11580156106b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d99190610ff0565b5060006106e6858461093f565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e553f6582866040518363ffffffff1660e01b8152600401610745929190611120565b6020604051808303816000875af1158015610764573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610788919061115e565b91508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fcd7273033338c741bc7651b85c11e4eaf8d79f9839640944d59ce1e49bebaffc878486886040516107ed949392919061118b565b60405180910390a3509392505050565b610805610c15565b73ffffffffffffffffffffffffffffffffffffffff166108236101a9565b73ffffffffffffffffffffffffffffffffffffffff1614610879576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108709061121c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161099e929190610f8f565b6020604051808303816000875af11580156109bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e19190610ff0565b5060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190611275565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166381a612d6866040518263ffffffff1660e01b8152600401610ab29190610da0565b602060405180830381865afa158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af3919061115e565b90506000610b63836012610b0791906112d1565b600a610b139190611438565b600154612710610b239190611483565b84610b2e91906114b7565b610b3891906114b7565b6127106c0c9f2c9cd04674edea40000000610b5391906114b7565b87610c1d9092919063ffffffff16565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663364e231187878460006040518563ffffffff1660e01b8152600401610bc79493929190611556565b6020604051808303816000875af1158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a919061115e565b935050505092915050565b600033905090565b600080600080198587098587029250828110838203039150506000811415610c585760008411610c4c57600080fd5b83820492505050610cf0565b808411610c6457600080fd5b600084868809905082811182039150808303925060008586600003169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b600080fd5b6000819050919050565b610d0f81610cfc565b8114610d1a57600080fd5b50565b600081359050610d2c81610d06565b92915050565b600060208284031215610d4857610d47610cf7565b5b6000610d5684828501610d1d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d8a82610d5f565b9050919050565b610d9a81610d7f565b82525050565b6000602082019050610db56000830184610d91565b92915050565b6000610dc682610d7f565b9050919050565b610dd681610dbb565b8114610de157600080fd5b50565b600081359050610df381610dcd565b92915050565b6000610e0482610d7f565b9050919050565b610e1481610df9565b8114610e1f57600080fd5b50565b600081359050610e3181610e0b565b92915050565b60008060408385031215610e4e57610e4d610cf7565b5b6000610e5c85828601610de4565b9250506020610e6d85828601610e22565b9150509250929050565b610e8081610cfc565b82525050565b6000602082019050610e9b6000830184610e77565b92915050565b610eaa81610d7f565b8114610eb557600080fd5b50565b600081359050610ec781610ea1565b92915050565b600060208284031215610ee357610ee2610cf7565b5b6000610ef184828501610eb8565b91505092915050565b600080600060608486031215610f1357610f12610cf7565b5b6000610f2186828701610eb8565b9350506020610f3286828701610eb8565b9250506040610f4386828701610d1d565b9150509250925092565b600081519050610f5c81610ea1565b92915050565b600060208284031215610f7857610f77610cf7565b5b6000610f8684828501610f4d565b91505092915050565b6000604082019050610fa46000830185610d91565b610fb16020830184610e77565b9392505050565b60008115159050919050565b610fcd81610fb8565b8114610fd857600080fd5b50565b600081519050610fea81610fc4565b92915050565b60006020828403121561100657611005610cf7565b5b600061101484828501610fdb565b91505092915050565b60006040820190506110326000830185610d91565b61103f6020830184610d91565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006110b3602683611046565b91506110be82611057565b604082019050919050565b600060208201905081810360008301526110e2816110a6565b9050919050565b60006060820190506110fe6000830186610d91565b61110b6020830185610d91565b6111186040830184610e77565b949350505050565b60006040820190506111356000830185610e77565b6111426020830184610d91565b9392505050565b60008151905061115881610d06565b92915050565b60006020828403121561117457611173610cf7565b5b600061118284828501611149565b91505092915050565b60006080820190506111a06000830187610d91565b6111ad6020830186610e77565b6111ba6040830185610e77565b6111c76060830184610e77565b95945050505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611206602083611046565b9150611211826111d0565b602082019050919050565b60006020820190508181036000830152611235816111f9565b9050919050565b600060ff82169050919050565b6112528161123c565b811461125d57600080fd5b50565b60008151905061126f81611249565b92915050565b60006020828403121561128b5761128a610cf7565b5b600061129984828501611260565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112dc8261123c565b91506112e78361123c565b9250828210156112fa576112f96112a2565b5b828203905092915050565b60008160011c9050919050565b6000808291508390505b600185111561135c57808604811115611338576113376112a2565b5b60018516156113475780820291505b808102905061135585611305565b945061131c565b94509492505050565b6000826113755760019050611431565b816113835760009050611431565b816001811461139957600281146113a3576113d2565b6001915050611431565b60ff8411156113b5576113b46112a2565b5b8360020a9150848211156113cc576113cb6112a2565b5b50611431565b5060208310610133831016604e8410600b84101617156114075782820a905083811115611402576114016112a2565b5b611431565b6114148484846001611312565b9250905081840481111561142b5761142a6112a2565b5b81810290505b9392505050565b600061144382610cfc565b915061144e8361123c565b925061147b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611365565b905092915050565b600061148e82610cfc565b915061149983610cfc565b9250828210156114ac576114ab6112a2565b5b828203905092915050565b60006114c282610cfc565b91506114cd83610cfc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611506576115056112a2565b5b828202905092915050565b6000819050919050565b6000819050919050565b600061154061153b61153684611511565b61151b565b610cfc565b9050919050565b61155081611525565b82525050565b600060808201905061156b6000830187610d91565b6115786020830186610e77565b6115856040830185610e77565b6115926060830184611547565b9594505050505056fea26469706673582212209e6fd891db3b720a636cdc76d19b6ab03ac28e4d4a5265e62c6a88367b2698f164736f6c634300080a0033';

type DepositPeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositPeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositPeriphery__factory extends ContractFactory {
  constructor(...args: DepositPeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositPeriphery> {
    return super.deploy(overrides || {}) as Promise<DepositPeriphery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DepositPeriphery {
    return super.attach(address) as DepositPeriphery;
  }
  override connect(signer: Signer): DepositPeriphery__factory {
    return super.connect(signer) as DepositPeriphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositPeripheryInterface {
    return new utils.Interface(_abi) as DepositPeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositPeriphery {
    return new Contract(address, _abi, signerOrProvider) as DepositPeriphery;
  }
}
