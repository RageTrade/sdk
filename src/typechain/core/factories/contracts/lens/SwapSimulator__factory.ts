/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  SwapSimulator,
  SwapSimulatorInterface,
} from '../../../contracts/lens/SwapSimulator';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'simulateSwap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'value1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value2',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
        ],
        internalType: 'struct SwapSimulator.SwapStepAndState[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwapOnVPool',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'value1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value2',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
        ],
        internalType: 'struct SwapSimulator.SwapStepAndState[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwapOnVPoolView',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'simulateSwapView',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60808060405234610016576146b9908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b6000803560e01c91826304c4183d146102245782634aed8e0c146101f5578263e6ea15971461005657505063fbdeddde1461004e575b600080fd5b61004961059d565b346101f15761015e6004610086610169946100703661055a565b936100809793919796929661082d565b50610af6565b92602092838961009f828801516001600160a01b031690565b9601816100c26100b683516001600160a01b031690565b6001600160a01b031690565b8c51968780927f86c8e9a70000000000000000000000000000000000000000000000000000000082525afa9485156101e4575b84956101b8575b50906101146100b6600493516001600160a01b031690565b8b51928380927ffca6fbf20000000000000000000000000000000000000000000000000000000082525afa9485156101ab575b839561017c575b50501561016d57845b12926110fa565b905191829182610315565b0390f35b61017685610915565b94610157565b61019c929550803d106101a4575b61019481836107d2565b8101906108c3565b928a8061014e565b503d61018a565b6101b36108d8565b610147565b829195506100b66101da610114926004953d86116101a45761019481836107d2565b96929350506100fc565b6101ec6108d8565b6100f5565b5080fd5b346101f1576101699061021661020a366102c2565b94939093929192610f9b565b909391925193849384610467565b346101f15760e09061029861024761023b366102c2565b949390939291926110fa565b9151809260c0908051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565bf35b6001600160a01b0381160361004957565b62ffffff81160361004957565b8015150361004957565b60031960c0910112610049576004356102da8161029a565b906024356102e7816102ab565b906044356102f4816102ab565b90606435610301816102b8565b906084359060a4356103128161029a565b90565b61036e9092919260e081019360c0908051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565b565b90815180825260208080930193019160005b828110610390575050505090565b90919293826101c060019261045b83895180516001600160a01b038082511686528382015160020b848701526040808301511515908701526060908183015116908601526080808201519086015260a0808201519086015260c08091015190850152015160e083019060c09080518352602081015160208401526001600160a01b036040820151166040840152606081015160020b606084015260808101516080840152816fffffffffffffffffffffffffffffffff918260a08201511660a0860152015116910152565b01950193929101610382565b9061031293926104c18360e09360c0908051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565b80516001600160a01b031683830152602081015160020b610100840152604081015160ff1661012084015260608101516fffffffffffffffffffffffffffffffff16610140840152608081015160020b61016084015260a081015162ffffff1661018084015260c08101516101a084015201516101c082015261020090816101e08201520190610370565b63ffffffff81160361004957565b60031960a0910112610049576004356105728161029a565b9060243561057f8161054c565b90604435906064356105908161029a565b90608435610312816102b8565b5034610049576101696106a06105cb6105b53661055a565b92909491936105c261082d565b50610080610865565b9060046020918260406105e7828701516001600160a01b031690565b9501816105fe6100b683516001600160a01b031690565b604051958680927f86c8e9a70000000000000000000000000000000000000000000000000000000082525afa938415610718575b6000946106ec575b50906106526100b6600493516001600160a01b031690565b604051928380927ffca6fbf20000000000000000000000000000000000000000000000000000000082525afa9384156106df575b6000946106c0575b5050156106af576000845b1292610f9b565b60409391935193849384610467565b60006106ba85610915565b94610699565b6106d7929450803d106101a45761019481836107d2565b91388061068e565b6106e76108d8565b610686565b829194506100b661070e610652926004953d86116101a45761019481836107d2565b959293505061063a565b6107206108d8565b610632565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761077157604052565b610779610725565b604052565b6020810190811067ffffffffffffffff82111761077157604052565b6040810190811067ffffffffffffffff82111761077157604052565b60a0810190811067ffffffffffffffff82111761077157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761077157604052565b6040519061036e826107b6565b6040519061036e82610755565b6040519061083a82610755565b8160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b60405190610100820182811067ffffffffffffffff8211176108b6575b6040528160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b6108be610725565b610882565b908160209103126100495751610312816102ab565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600160ff1b8114610927575b60000390565b61092f6108e5565b610921565b604051906080820182811067ffffffffffffffff821117610975575b60405281600081526000602082015260006040820152606061097061082d565b910152565b61097d610725565b610950565b60209067ffffffffffffffff811161099c575b60051b0190565b6109a4610725565b610995565b604051906109b6826107b6565b600482526080366020840137565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090805115610a02570190565b610a0a6109c4565b0190565b604090805160011015610a02570190565b606090805160021015610a02570190565b608090805160031015610a02570190565b60209081818403126100495780519067ffffffffffffffff821161004957019180601f84011215610049578251610a7781610982565b93610a8560405195866107d2565b818552838086019260051b820101928311610049578301905b828210610aac575050505090565b81518152908301908301610a9e565b6020908160408183019282815285518094520193019160005b828110610ae2575050505090565b835185529381019392810192600101610ad4565b610c2c6001600160a01b036000610ba1610c3294969596610b2f610b18610934565b9863ffffffff166000526064602052604060002090565b6003610b396109a9565b9180610b44846109f4565b5260018101610b5284610a0e565b5260028101610b6084610a1f565b5201610b6b82610a30565b526040519485809481937fdbd035ff00000000000000000000000000000000000000000000000000000000835260048301610abb565b0392165afa908115610c5a575b600091610c39575b50610be3610bd66100b6610bc9846109f4565b516001600160a01b031690565b6001600160a01b03168652565b610c05610bf56100b6610bc984610a0e565b6001600160a01b03166020870152565b610c27610c176100b6610bc984610a1f565b6001600160a01b03166040870152565b610a30565b51610c67565b6060830152565b610c54913d8091833e610c4c81836107d2565b810190610a41565b38610bb6565b610c626108d8565b610bae565b9061036e610d176100b6610c7961082d565b946000604051610c888161077e565b5260405190610c968261077e565b601081811c835261ffff9182168852825180821c845282166020808a019190915283519182901c84529116604088015281519081901c825263ffffffff1660608701528051600881811c835260ff9182161515608089015282519081901c835216151560a08088019190915281519081901c9091526001600160a01b031690565b6001600160a01b031660c0840152565b620f4240908060001904821181151516610d3f570290565b610d476108e5565b0290565b8060001904821181151516610d3f570290565b6000805481805580610d6e575050565b6001917f199999999999999999999999999999999999999999999999999999999999999982118316610e17575b808052600a927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639284028301925b838110610dd7575050505050565b8083869255838382015583600282015583600382015583600482015583600582015583600682015583600782015583600882015583600982015501610dc9565b610e1f6108e5565b610d9b565b90604051610e3181610755565b60c060048294805484526001810154602085015260028101546001600160a01b038116604086015260a01c60020b60608501526003810154608085015201546fffffffffffffffffffffffffffffffff811660a084015260801c910152565b60005490610e9d82610982565b916040610eac815194856107d2565b8184526000808052906020907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563908287015b858510610eed57505050505050565b600a846001928451610efe8161079a565b8551610f0981610755565b87546001600160a01b038116825260a081811c600290810b878501529091610f3a9060ff9060b81c161515848b0152565b610f60610f50898c01546001600160a01b031690565b6001600160a01b03166060850152565b8901546080830152600389015490820152600488015460c08201528152610f8960058801610e24565b83820152815201930194019391610ede565b95936004959192610faa61082d565b978892610fb5610865565b50610fbe610d5e565b6001600160a01b03808616156110c5575b6020908286526040519a8b80927fddca3f4300000000000000000000000000000000000000000000000000000000825286165afa9889156110b8575b600099611095575b5060001315936110278484888c8b8a613b92565b61102f61082d565b508684519061103d93613279565b9692879a929a9891989a6040870152602086015261105a95613cb9565b516001600160a01b03166001600160a01b031660a0850152604001516001600160a01b03166001600160a01b031660c0840152610312610e90565b60009199506110b19060203d81116101a45761019481836107d2565b9890611013565b6110c06108d8565b61100b565b945086156110de5760206401000276a45b959050610fcf565b602073fffd8963efd1fc6a506488495d951d5263988d256110d6565b9260049061036e9597969761110d61082d565b9889966001600160a01b0392838316156111ca575b6000816020928b52121593604051968780927fddca3f4300000000000000000000000000000000000000000000000000000000825285165afa9485156111bd575b600095611197575b50906111889161117f898989898989613b92565b8489519161156b565b60408801526020870152613cb9565b611188929195506111b59060203d81116101a45761019481836107d2565b94909161116b565b6111c56108d8565b611163565b915083156111e657602060006401000276a45b93915050611122565b6020600073fffd8963efd1fc6a506488495d951d5263988d256111dd565b1561120b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f41530000000000000000000000000000000000000000000000000000000000006044820152fd5b51908160020b820361004957565b519061ffff8216820361004957565b908160e091031261004957805161129c8161029a565b916112a960208301611269565b916112b660408201611277565b916112c360608301611277565b916112d060808201611277565b9160a082015160ff811681036100495760c090920151610312816102b8565b156112f657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f53504c00000000000000000000000000000000000000000000000000000000006044820152fd5b51906fffffffffffffffffffffffffffffffff8216820361004957565b908160209103126100495761031290611354565b908160209103126100495761031290611269565b6001907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81116113c7570190565b610a0a6108e5565b811981116113c7570190565b60008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831381151661141e575b81600160ff1b038312166113c7570190565b6114266108e5565b61140c565b6000821282600160ff1b01821281151661147a575b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182131661146e570390565b6114766108e5565b0390565b6114826108e5565b611440565b9190826101009103126100495761149d82611354565b91602081015180600f0b8103610049579160408201519160608101519160808201518060060b8103610049579160a08101516114d88161029a565b9160e060c08301516114e98161054c565b920151610312816102b8565b906fffffffffffffffffffffffffffffffff80809316911680920381116113c7570190565b600f0b7fffffffffffffffffffffffffffffffff8000000000000000000000000000000081146109275760000390565b6fffffffffffffffffffffffffffffffff918216911681811061146e570390565b9091939261157a851515611204565b604051907f3850c7bd00000000000000000000000000000000000000000000000000000000825260e0826004816001600160a01b0387165afa8015611d83575b6000928391611d48575b50611730908515611d05576115f56001600160a01b0384166001600160a01b03861681109081611cf6575b506112ef565b6040517f1a6865020000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b038a165afa908115611ce9575b600091611cba575b506040517fddca3f430000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b038b165afa908115611cad575b600091611c8e575b50604051917fd0c93a7c0000000000000000000000000000000000000000000000000000000083526020836004816001600160a01b038c165afa928315611c81575b600093611c44575b5061171a9061170161172694956116f76116e8610813565b6001600160a01b03909b168b52565b60020b60208a0152565b6fffffffffffffffffffffffffffffffff166040880152565b62ffffff166060860152565b60020b6080840152565b81516001600160a01b0316946117b861174d602085015160020b90565b61179f61176d60408701516fffffffffffffffffffffffffffffffff1690565b91611795611779610813565b8c8152600060208201526001600160a01b03909b1660408c0152565b60020b60608a0152565b6fffffffffffffffffffffffffffffffff166080880152565b8551151580611c2a575b15611bee576117cf61082d565b6117f36117e660408901516001600160a01b031690565b6001600160a01b03168252565b61183761182d6118238861180b60608c015160020b90565b608089015160020b906001600160a01b038b16611e25565b1515604085015290565b60020b6020830152565b602081015160020b620d89e719811215611bd65750620d89e71960208201525b61186d611868602083015160020b90565b612aa7565b6001600160a01b0316606082019081529061190e6118e661189860408b01516001600160a01b031690565b8915611bc15784516001600160a01b038881169116105b15611bb157865b60808c01516fffffffffffffffffffffffffffffffff168c51916118e060608c015162ffffff1690565b9361231d565b60c0860190815260a08601918252608086019283526001600160a01b0390931660408d015292565b60008c1315611b75579161192c611937926119419451905101611d97565b8b51038b5251611d97565b60208a015161142b565b60208901525b61196f6100b661196160408b01516001600160a01b031690565b93516001600160a01b031690565b6001600160a01b038316908103611b43575060408101516119b092506119c1575b86156119b557602001516000199060020b0160020b5b60020b6060880152565b6117b8565b6020015160020b6119a6565b611ab08888611a236119d7602086015160020b90565b604051907ff30dba93000000000000000000000000000000000000000000000000000000008252818c816001600160a01b038161010097889660048301919091602081019260020b9052565b0392165afa918215611b36575b600092611b01575b50508091611af3575b50600081600f0b12600014611ab557611a91611a7c611a766080611a979501516fffffffffffffffffffffffffffffffff1690565b9261151a565b6fffffffffffffffffffffffffffffffff1690565b9061154a565b6fffffffffffffffffffffffffffffffff1660808a0152565b611990565b611ad56080611aee9301516fffffffffffffffffffffffffffffffff1690565b906fffffffffffffffffffffffffffffffff16906114f5565b611a97565b9050600003600f0b38611a41565b611b209250803d10611b2f575b611b1881836107d2565b810190611487565b50505050505090503880611a38565b503d611b0e565b611b3e6108d8565b611a30565b9051611b57906001600160a01b03166100b6565b03611b63575b506117b8565b6119a6611b6f91612e4e565b38611b5d565b611b9d91611b9891611b8a611ba79551611d97565b8d51018d52519051906113cf565b611d97565b60208a01516113db565b6020890152611947565b84516001600160a01b03166118b6565b84516001600160a01b038881169116116118af565b620d89e8121561185757620d89e86020820152611857565b959315156000851314159250611c1691505057611c0f60209183519061142b565b9101519091565b60208201519151611c269161142b565b9091565b5060408601516001600160a01b03838116911614156117c2565b611726935090611701611c7161171a9360203d602011611c7a575b611c6981836107d2565b810190611385565b945050906116d0565b503d611c5f565b611c896108d8565b6116c8565b611ca7915060203d6020116101a45761019481836107d2565b38611686565b611cb56108d8565b61167e565b611cdc915060203d602011611ce2575b611cd481836107d2565b810190611371565b3861163d565b503d611cca565b611cf16108d8565b611635565b6401000276a3915011386115ef565b6115f56001600160a01b0384166001600160a01b03861681119081611d2a57506112ef565b73fffd8963efd1fc6a506488495d951d5263988d26915010386115ef565b6117309350611d6e915060e03d8111611d7c575b611d6681836107d2565b810190611286565b5050505050929092906115c4565b503d611d5c565b611d8b6108d8565b6115ba565b1561004957565b600160ff1b8110156100495790565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9060020b908115611de9575b60020b0590565b611df1611da6565b611de2565b9060020b908115611e09575b60020b0790565b611e11611da6565b611e02565b90816020910312610049575190565b919092611e328285611dd6565b9060029483600082880b129182612081575b5050612074575b15611f7e57611ebc9293611e6f8260020b906101008260081d60010b920760ff1690565b949095602060ff8716976001891b9260405180809681947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa918215611f71575b600092611f3d575b508060001991010116908115159586600014611f2d57505090611f1b611f10611f0a611f2a96611f02611f239661209f565b60ff91031690565b60ff1690565b62ffffff1660020b90565b900360020b90565b0260020b90565b91565b91508094500b9003820b02900b91565b600019919250611f639060203d8111611f6a575b611f5b81836107d2565b810190611e16565b9190611ed0565b503d611f51565b611f796108d8565b611ec8565b600101830b611fe16020611fa28360020b906101008260081d60010b920760ff1690565b9560405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa908115612067575b600091612049575b50600160ff85161b60001901191680158015959061203657509061202f611f10611f0a611f2a96612028611f239661218d565b0360ff1690565b0160020b90565b9360ff8092500316830b01820b02900b91565b612061915060203d8111611f6a57611f5b81836107d2565b38611ff5565b61206f6108d8565b611fed565b9060001901840b90611e4b565b61209692509061209091611df6565b60020b90565b15158338611e44565b906000916120ae811515611d90565b700100000000000000000000000000000000811015612182575b80680100000000000000006002921015612173575b640100000000811015612164575b62010000811015612155575b610100811015612146575b6010811015612137575b6004811015612129575b101561211e57565b90600160ff91011690565b92810160ff1692811c612116565b600493840160ff16931c61210c565b600893840160ff16931c612102565b601093840160ff16931c6120f7565b602093840160ff16931c6120eb565b604093840160ff16931c6120dd565b60809250821c6120c8565b90612199821515611d90565b60ff6fffffffffffffffffffffffffffffffff8316156123135750607f5b67ffffffffffffffff831615612309577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00160ff165b63ffffffff8316156122ff577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160ff165b61ffff8316156122f5577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00160ff165b60ff8316156122eb577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80160ff165b600f8316156122e1576003190160ff165b60038316156122d55760ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6001920116925b166122c957565b9060001960ff91011690565b9160019060021c6122c2565b9160041c9161228f565b9160081c9161227e565b9160101c9161224f565b9160201c9161221f565b9160401c916121ed565b9160801c916121b7565b949190928594600080806001600160a01b03908189169283838c161015978b8389129b898d15988c8a6000146124be5790508492915061236762ffffff8c620f424003168d61250f565b81156124ac57836123798187866129a1565b955b86831061249a57505050509e8f965b8716968789149c600014612442578c8061243b575b1561242c575050505b9b8c9980612425575b156124155750505b985b8061240a575b6123ff575b50826123f4575b5050156123d957500390565b9050610312915062ffffff8082620f424003169116856126ca565b1415905038806123cd565b8590039750386123c6565b5085810389116123c1565b61242092508d612a08565b6123b9565b508b6123b1565b61243693506129a1565b6123a8565b508961239f565b809392918d80612493575b15612484575050505b9c8d9a8061247d575b1561246e575050505b986123bb565b6124789350612946565b612468565b508c61245f565b61248e9350612a43565b612456565b508a61244d565b6124a49450612705565b9e8f9661238a565b836124b8818588612a43565b9561237b565b90938593929650816000146124fd57836124d9818386612a08565b915b91978903918883106124f357505050509e8f9661238a565b6124a4945061289a565b83612509818584612946565b916124db565b906000198183098183029182808310920391808303921461256d57620f42409082821115610049577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c26139940990828211900360fa1b910360061c170290565b5050620f424091500490565b6c0100000000000000000000000091600019838309928260601b92838086109503948086039514612601579082916125b2868411611d90565b0981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50509150612610821515611d90565b0490565b6000198282099082810292838084109303928084039314612659576c010000000000000000000000009183831115610049570990828211900360a01b910360601c1790565b50505060601c90565b70010000000000000000000000000000000091600019838309928260801b92838086109503948086039514612601579082916125b2868411611d90565b90916000198383099280830292838086109503948086039514612601579082916125b2868411611d90565b9291906126d882828661269f565b9382156126f8575b096126e757565b906000198110156100495760010190565b612700611da6565b6126e0565b926001600160a01b0390818516918215610049576fffffffffffffffffffffffffffffffff84169182156100495760009015612748575050505061031292612798565b50610312955061276894929350909190811161276d5760601b04906113cf565b612886565b9061277791612579565b906113cf565b801561278b575b6000190490565b612793611da6565b612784565b91908115612820577bffffffffffffffffffffffffffffffff0000000000000000000000009060601b16906001600160a01b038093168082028183820414612808575b5090816127ef92156127fb575b83046113cf565b80820615159104011690565b612803611da6565b6127e8565b83018381106127db57915061281c926126ca565b1690565b505090565b91908115612820577bffffffffffffffffffffffffffffffff0000000000000000000000006001600160a01b039160601b1692169182808302928304148061287d575b156100495761031292612768928203916126ca565b50818111612868565b906001600160a01b03821691820361004957565b919290926001600160a01b0393848416938415610049576fffffffffffffffffffffffffffffffff821693841561004957156129375750600090508482116128f8575060601b908082061515910401905b8181111561004957031690565b90916c010000000000000000000000006129128285612579565b9309612920575b50906128eb565b600019821015612934575060010138612919565b80fd5b91935091506103129350612825565b91906001600160a01b039182821683851611612999575b82841693841561004957837bffffffffffffffffffffffffffffffff000000000000000000000000916126109585169403169160601b1661269f565b92909261295d565b91906001600160a01b039182821683851611612a00575b82841693841561004957837bffffffffffffffffffffffffffffffff000000000000000000000000916129f49585169403169160601b166126ca565b90808206151591040190565b9290926129b8565b61031292916fffffffffffffffffffffffffffffffff916001600160a01b039182811683831611612a3d575b03169116612614565b90612a34565b6c01000000000000000000000000916fffffffffffffffffffffffffffffffff916001600160a01b039182811683831611612aa1575b0316921691612a888184612614565b9209612a915790565b6000198110156100495760010190565b90612a79565b60020b6000811215612e4857806000035b620d89e88111612e1e576001600160a01b03916001821615612df55770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169160028116612dd9575b60048116612dbd575b60088116612da1575b60108116612d85575b60208116612d69575b60408116612d4d575b608090818116612d32575b6101008116612d17575b6102008116612cfc575b6104008116612ce1575b6108008116612cc6575b6110008116612cab575b6120008116612c90575b6140008116612c75575b6180008116612c5a575b620100008116612c3f575b620200008116612c25575b620400008116612c0b575b6208000016612bf0575b50600012612be2575b63ffffffff8116612bd95760ff60005b169060201c011690565b60ff6001612bcf565b612beb9061277d565b612bbf565b6b048a170391f7dc42444e8fa26000929302901c9190612bb6565b6d2216e584f5fa1ea926041bedfe98909302811c92612bac565b926e5d6af8dedb81196699c329225ee60402811c92612ba1565b926f09aa508b5b7a84e1c677de54f3e99bc902811c92612b96565b926f31be135f97d08fd981231505542fcfa602811c92612b8b565b926f70d869a156d2a1b890bb3df62baf32f702811c92612b81565b926fa9f746462d870fdf8a65dc1f90e061e502811c92612b77565b926fd097f3bdfd2022b8845ad8f792aa582502811c92612b6d565b926fe7159475a2c29b7443b29c7fa6e889d902811c92612b63565b926ff3392b0822b70005940c7a398e4b70f302811c92612b59565b926ff987a7253ac413176f2b074cf7815e5402811c92612b4f565b926ffcbe86c7900a88aedcffc83b479aa3a402811c92612b45565b926ffe5dee046a99a2a811c461f1969c305302811c92612b3b565b916fff2ea16466c96a3843ec78b326b528610260801c91612b30565b916fff973b41fa98c081472e6896dfb254c00260801c91612b27565b916fffcb9843d60f6159c9db58835c9266440260801c91612b1e565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91612b15565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91612b0c565b916ffff97272373d413259a46990580e213a0260801c91612b03565b70ffffffffffffffffffffffffffffffffff700100000000000000000000000000000000612af8565b60046040517f2bc80f3a000000000000000000000000000000000000000000000000000000008152fd5b80612ab8565b6001600160a01b038116906401000276a38210158061315e575b156131345777ffffffffffffffffffffffffffffffffffffffff000000009060201b16806fffffffffffffffffffffffffffffffff811160071b9181831c9267ffffffffffffffff841160061b93841c9363ffffffff851160051b94851c9461ffff861160041b95861c60ff9687821160031b91821c92600f841160021b93841c94600160038711811b96871c11961717171717171791608083101560001461312857507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8182011c5b8002607f928392828493841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c80029081881c82881c1c80029283891c84891c1c800294858a1c868a1c1c800296878b1c888b1c1c800298898c1c8a8c1c1c80029a8b8d1c8c821c1c8002809d1c8d821c1c8002809e81901c90821c1c80029e8f80911c911c1c800260cd1c6604000000000000169d60cc1c6608000000000000169c60cb1c6610000000000000169b60ca1c6620000000000000169a60c91c6640000000000000169960c81c6680000000000000169860c71c670100000000000000169760c61c670200000000000000169660c51c670400000000000000169560c41c670800000000000000169460c31c671000000000000000169360c21c672000000000000000169260c11c674000000000000000169160c01c67800000000000000016907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800160401b1717171717171717171717171717693627a301d71055774c85027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc556810160801d60020b906fdb2df09e81959a81455e260799a0632f0160801d60020b9160009083831460001461310c575050905090565b6131186100b685612aa7565b119050613123575090565b905090565b905081607f031b612f31565b60046040517f4980e1be000000000000000000000000000000000000000000000000000000008152fd5b5073fffd8963efd1fc6a506488495d951d5263988d268210612e68565b906004908051835560208101516001840155613228600284016131d96001600160a01b0360408501511682906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b606083015160020b7fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff82549160a01b76ffffff0000000000000000000000000000000000000000169116179055565b608081015160038401557fffffffffffffffffffffffffffffffff0000000000000000000000000000000060c06fffffffffffffffffffffffffffffffff60a08401511692015160801b1617910155565b9091939261328561082d565b5061328e610865565b9461329761082d565b508015613af8576001600160a01b036132b787516001600160a01b031690565b1615613a44575b60608601946fffffffffffffffffffffffffffffffff6132ee87516fffffffffffffffffffffffffffffffff1690565b16156139b2575b608087015160020b156138a8575b841561385b5761331d6100b688516001600160a01b031690565b6001600160a01b03841690811190811561384c575b505b613812576133c761334c88516001600160a01b031690565b966133a061337861336160208c015160020b90565b92516fffffffffffffffffffffffffffffffff1690565b91611795613384610820565b878152600060208201526001600160a01b03909b1660408c0152565b60006080890181905260a08901526fffffffffffffffffffffffffffffffff1660c0880152565b85511515806137f8575b156137b9578561343a61182d611823888b61342a608061342160606133f461082d565b9961341961340c60408301516001600160a01b031690565b6001600160a01b03168c52565b015160020b90565b92015160020b90565b906001600160a01b038b166141a5565b602081015160020b620d89e7198112156137a15750620d89e71960208201525b61347e61346e611868602084015160020b90565b6001600160a01b03166060830152565b6135136134ea61349860408a01516001600160a01b031690565b88156137895760608401516001600160a01b038881169116105b1561376e578a8a885b6118e060a06134dd60c08501516fffffffffffffffffffffffffffffffff1690565b935194015162ffffff1690565b60c0860190815260a08601918252608086019283526001600160a01b0390931660408c01529192565b6000861315613730579061353a613533611b9861355194518651906113cf565b8b5161142b565b8a5261354b60208b01519151611d97565b9061142b565b60208901525b613577611a7c60c08a01516fffffffffffffffffffffffffffffffff1690565b908161370c575b505061358a818861440e565b60408701516001600160a01b0316906135b06100b660608301516001600160a01b031690565b6001600160a01b0383169081036136da575060408101516135e792506135ec575b86156119b557602001516119a69060020b613b22565b6133c7565b61366e88886136026119d7602086015160020b90565b0392165afa9182156136cd575b6000926136a8575b50508091613698575b50600081600f0b1260001461367357611a91611a7c611a7660c06136559501516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1660c08a0152565b6135d1565b611ad560c06136939301516fffffffffffffffffffffffffffffffff1690565b613655565b6136a2915061151a565b38613620565b6136be9250803d10611b2f57611b1881836107d2565b50505050505090503880613617565b6136d56108d8565b61360f565b90516136ee906001600160a01b03166100b6565b036136fa575b506133c7565b6119a661370691612e4e565b386136f4565b6137249161371a9151612662565b60808901516113cf565b6080880152388061357e565b6137476137406137649351611d97565b8b516113db565b8a5261375e611b9860208c015192518551906113cf565b906113db565b6020890152613557565b8a8a61378460608701516001600160a01b031690565b6134bb565b60608401516001600160a01b038881169116116134b2565b620d89e8121561345a57620d89e8602082015261345a565b959493909250151560008313141590506137e25781516137d89161142b565b9160208201519293565b916137f460208301519383519061142b565b9293565b5060408601516001600160a01b03848116911614156133d1565b6040517f51b516ae0000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602490fd5b6401000276a391501038613332565b61386f6100b688516001600160a01b031690565b6001600160a01b03841690811090811561388a575b50613334565b73fffd8963efd1fc6a506488495d951d5263988d2691501138613884565b61395461390c60046001600160a01b038716604051907fddca3f43000000000000000000000000000000000000000000000000000000008252602093828d8682878297875afa9182156139a5575b600092613983575b5060a0019062ffffff169052565b604051928380927fd0c93a7c0000000000000000000000000000000000000000000000000000000082525afa918215613976575b600092613959575b505060020b6080890152565b613303565b61396f9250803d10611c7a57611c6981836107d2565b3880613948565b61397e6108d8565b613940565b60a091925061399e90863d88116101a45761019481836107d2565b91906138fe565b6139ad6108d8565b6138f6565b613a146040517f1a6865020000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b038a165afa908115613a37575b600091613a19575b506fffffffffffffffffffffffffffffffff168752565b6132f5565b613a31915060203d8111611ce257611cd481836107d2565b386139fd565b613a3f6108d8565b6139f5565b613ab36040517f3850c7bd00000000000000000000000000000000000000000000000000000000815260e0816004816001600160a01b0389165afa8015613aeb575b60009081908290613ab8575b60ff1660408b0152909150613aa6906116f7565b6001600160a01b03168752565b6132be565b505050613aa6613ad86116f79260e03d8111611d7c57611d6681836107d2565b5094925050509390919050839250613a92565b613af36108d8565b613a86565b60046040517f1f2a2005000000000000000000000000000000000000000000000000000000008152fd5b6000199060020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000181126001166113c7570190565b60020b9060020b906000821282627fffff19018212811516613b85575b82627fffff0182131661146e570390565b613b8d6108e5565b613b74565b91929115613bea5715613bb05750613bac91508251613e3e565b9052565b613bdc613bc5613bac94613be2938751613f4b565b8060808894939401528260608801528651926113cf565b90614045565b808452613e3e565b909150613bf657505050565b613c8b613c77613c70613c5b613c62613bac96613c1e895160008113600014613cab57610d27565b613c6862ffffff918280613c318c613e2a565b1681861690818110613c9e575b0316908115613c91575b0492613c6283620f42409788938d613f18565b1685610d4b565b04611399565b971690610d4b565b8093613f40565b8060808601528260608601528451926113cf565b90614027565b613c99611da6565b613c48565b613ca66108e5565b613c3e565b613cb490610915565b610d27565b919492939115613d325715613d06576060613cf3613bdc92613bac9596613ce560208701918251613ef5565b905260408501968751613fdc565b91848360808497015201528451926113cf565b50613bac9150613c8b613d1e60408301948551613ef5565b9182855260806060820151910151906113cf565b91929091613d5f576060613cf38493613c8b93613d576040613bac9801988951613ef5565b808952613fdc565b505090613d7160208301918251613ef5565b9052613bac6040820191613bdc83519160806060820151910151906113cf565b600082136000821390837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818104851183851616613e1d575b6000821292600160ff1b94848787058512911616613e10575b82600087129505861290851616613e03575b058312911616610d3f570290565b613e0b6108e5565b613df5565b613e186108e5565b613de3565b613e256108e5565b613dca565b62ffffff16620f424081811061146e570390565b60016103129262ffffff613e5d613e5782841686613d91565b92613e2a565b1660020b8015613ee8575b600160ff1b91600019821483821416613edb575b0590816000811291817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038513831516613ece575b03831216613ec1575b01906113db565b613ec96108e5565b613eba565b613ed66108e5565b613eb1565b613ee36108e5565b613e7c565b613ef0611da6565b613e68565b613f149062ffffff613f0a620f424094613e2a565b1660020b90613d91565b0590565b9062ffffff80809316911680920381116113c7570190565b60001990600181106113c7570190565b81811061146e570390565b91613c62613f68613fb593959460008113600014613cab57610d27565b613faf62ffffff91613c6283891693613fa8620f42409788948784038611613fcf575b83613f98838a8901613f18565b16908115613fc2575b049b613f18565b1689610d4b565b95610d4b565b828180941061146e570390565b613fca611da6565b613fa1565b613fd76108e5565b613f8b565b613c62613fb5929493613c5b614010613c62946000811360001461401857925b620f424095869162ffffff9485918c613f18565b961690610d4b565b61402190610915565b92613ffc565b906000821360010361403c57610312916113db565b6103129161142b565b906000821361403c57610312916113db565b60020b9060020b908115614083575b6000198214627fffff1982141661407b570590565b613f146108e5565b61408b611da6565b614066565b6000199060020b627fffff1981146113c7570190565b60019060020b6000811281627fffff0383138115166140d2575b81627fffff19038312166113c7570190565b6140da6108e5565b6140c0565b60020b9060020b906000811281627fffff0383138115166140d25781627fffff19038312166113c7570190565b60ff168060ff1061411e575b60ff0390565b6141266108e5565b614118565b60ff918216911681811061146e570390565b60020b9060020b9060008213600082139083627fffff818104851183851616614198575b6000821292627fffff1994848787058512911616613e105782600087129505861290851616613e0357058312911616610d3f570290565b6141a06108e5565b614161565b929190916141b38284614057565b928260008260020b1291826143f6575b50506143e6575b156142d4576141e98260020b9060ff6101008360081d60010b93071690565b9093614249602060ff84169661420a6001891b61420581613f30565b6113cf565b9360405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa9081156142c7575b6000916142a9575b501680158015959061429557509261428a611f10611f0a61429094614284611f2a9861209f565b9061412b565b90613b57565b61413d565b6142909250611f2a94915060020b90613b57565b6142c1915060203d8111611f6a57611f5b81836107d2565b3861425d565b6142cf6108d8565b614255565b60209261434d6142fc6142e6856140a6565b60020b9060ff6101008360081d60010b93071690565b959061430d600160ff89161b613f30565b199360405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa9081156143d9575b6000916143bb575b501680158015949061439b5790614395611f10611f0a6142909461439061438a611f2a996140a6565b9561218d565b61412b565b906140df565b6142909150614395611f10611f0a6143b5611f2a976140a6565b9361410c565b6143d3915060203d8111611f6a57611f5b81836107d2565b38614361565b6143e16108d8565b614359565b916143f090614090565b916141ca565b61440592509061209091611df6565b151582386141c3565b907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56861036e92604051926144418461079a565b83526020830190815260c0600a60005468010000000000000000811015614676575b6001810180600055811015614669575b600080520293847f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019051906144e16001600160a01b0383511682906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b614535602083015160020b82907fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff82549160a01b76ffffff0000000000000000000000000000000000000000169116179055565b604082015181547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff1690151560b81b77ff00000000000000000000000000000000000000000000001617905560608101516145e9906001600160a01b03167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5648701906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60808101517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56586015560a08101517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56686015501517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56784015551910161317b565b6146716109c4565b614473565b61467e610725565b61446356fea2646970667358221220b187edaa8bec76a8623c97c5eb48a16816fd9e355f8dc4194ebc779c3b9cd67e64736f6c634300080e0033';

type SwapSimulatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapSimulatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapSimulator__factory extends ContractFactory {
  constructor(...args: SwapSimulatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapSimulator> {
    return super.deploy(overrides || {}) as Promise<SwapSimulator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapSimulator {
    return super.attach(address) as SwapSimulator;
  }
  override connect(signer: Signer): SwapSimulator__factory {
    return super.connect(signer) as SwapSimulator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapSimulatorInterface {
    return new utils.Interface(_abi) as SwapSimulatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapSimulator {
    return new Contract(address, _abi, signerOrProvider) as SwapSimulator;
  }
}
