/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  SwapSimulator,
  SwapSimulatorInterface,
} from '../../../contracts/lens/SwapSimulator';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'simulateSwap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'value1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value2',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
        ],
        internalType: 'struct SwapSimulator.SwapStepAndState[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwapOnVPool',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'value1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value2',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
        ],
        internalType: 'struct SwapSimulator.SwapStepAndState[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
      {
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwapOnVPoolView',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'simulateSwapView',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608080604052346100165761477f908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b6000803560e01c91826304c4183d146102245782634aed8e0c146101f5578263e6ea15971461005657505063fbdeddde1461004e575b600080fd5b61004961059d565b346101f15761015e6004610086610169946100703661055a565b936100809793919796929661082d565b50610af6565b92602092838961009f828801516001600160a01b031690565b9601816100c26100b683516001600160a01b031690565b6001600160a01b031690565b8c51968780927f86c8e9a70000000000000000000000000000000000000000000000000000000082525afa9485156101e4575b84956101b8575b50906101146100b6600493516001600160a01b031690565b8b51928380927ffca6fbf20000000000000000000000000000000000000000000000000000000082525afa9485156101ab575b839561017c575b50501561016d57845b12926110fe565b905191829182610315565b0390f35b61017685610915565b94610157565b61019c929550803d106101a4575b61019481836107d2565b8101906108c3565b928a8061014e565b503d61018a565b6101b36108d8565b610147565b829195506100b66101da610114926004953d86116101a45761019481836107d2565b96929350506100fc565b6101ec6108d8565b6100f5565b5080fd5b346101f1576101699061021661020a366102c2565b94939093929192610f9b565b909391925193849384610467565b346101f15760e09061029861024761023b366102c2565b949390939291926110fe565b9151809260c0908051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565bf35b6001600160a01b0381160361004957565b62ffffff81160361004957565b8015150361004957565b60031960c0910112610049576004356102da8161029a565b906024356102e7816102ab565b906044356102f4816102ab565b90606435610301816102b8565b906084359060a4356103128161029a565b90565b61036e9092919260e081019360c0908051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565b565b90815180825260208080930193019160005b828110610390575050505090565b90919293826101c060019261045b83895180516001600160a01b038082511686528382015160020b848701526040808301511515908701526060908183015116908601526080808201519086015260a0808201519086015260c08091015190850152015160e083019060c09080518352602081015160208401526001600160a01b036040820151166040840152606081015160020b606084015260808101516080840152816fffffffffffffffffffffffffffffffff918260a08201511660a0860152015116910152565b01950193929101610382565b9061031293926104c18360e09360c0908051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565b80516001600160a01b031683830152602081015160020b610100840152604081015160ff1661012084015260608101516fffffffffffffffffffffffffffffffff16610140840152608081015160020b61016084015260a081015162ffffff1661018084015260c08101516101a084015201516101c082015261020090816101e08201520190610370565b63ffffffff81160361004957565b60031960a0910112610049576004356105728161029a565b9060243561057f8161054c565b90604435906064356105908161029a565b90608435610312816102b8565b5034610049576101696106a06105cb6105b53661055a565b92909491936105c261082d565b50610080610865565b9060046020918260406105e7828701516001600160a01b031690565b9501816105fe6100b683516001600160a01b031690565b604051958680927f86c8e9a70000000000000000000000000000000000000000000000000000000082525afa938415610718575b6000946106ec575b50906106526100b6600493516001600160a01b031690565b604051928380927ffca6fbf20000000000000000000000000000000000000000000000000000000082525afa9384156106df575b6000946106c0575b5050156106af576000845b1292610f9b565b60409391935193849384610467565b60006106ba85610915565b94610699565b6106d7929450803d106101a45761019481836107d2565b91388061068e565b6106e76108d8565b610686565b829194506100b661070e610652926004953d86116101a45761019481836107d2565b959293505061063a565b6107206108d8565b610632565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761077157604052565b610779610725565b604052565b6020810190811067ffffffffffffffff82111761077157604052565b6040810190811067ffffffffffffffff82111761077157604052565b60a0810190811067ffffffffffffffff82111761077157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761077157604052565b6040519061036e82610755565b6040519061036e826107b6565b6040519061083a82610755565b8160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b60405190610100820182811067ffffffffffffffff8211176108b6575b6040528160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b6108be610725565b610882565b908160209103126100495751610312816102ab565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600160ff1b8114610927575b60000390565b61092f6108e5565b610921565b604051906080820182811067ffffffffffffffff821117610975575b60405281600081526000602082015260006040820152606061097061082d565b910152565b61097d610725565b610950565b60209067ffffffffffffffff811161099c575b60051b0190565b6109a4610725565b610995565b604051906109b6826107b6565b600482526080366020840137565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090805115610a02570190565b610a0a6109c4565b0190565b604090805160011015610a02570190565b606090805160021015610a02570190565b608090805160031015610a02570190565b60209081818403126100495780519067ffffffffffffffff821161004957019180601f84011215610049578251610a7781610982565b93610a8560405195866107d2565b818552838086019260051b820101928311610049578301905b828210610aac575050505090565b81518152908301908301610a9e565b6020908160408183019282815285518094520193019160005b828110610ae2575050505090565b835185529381019392810192600101610ad4565b610c2c6001600160a01b036000610ba1610c3294969596610b2f610b18610934565b9863ffffffff166000526064602052604060002090565b6003610b396109a9565b9180610b44846109f4565b5260018101610b5284610a0e565b5260028101610b6084610a1f565b5201610b6b82610a30565b526040519485809481937fdbd035ff00000000000000000000000000000000000000000000000000000000835260048301610abb565b0392165afa908115610c5a575b600091610c39575b50610be3610bd66100b6610bc9846109f4565b516001600160a01b031690565b6001600160a01b03168652565b610c05610bf56100b6610bc984610a0e565b6001600160a01b03166020870152565b610c27610c176100b6610bc984610a1f565b6001600160a01b03166040870152565b610a30565b51610c67565b6060830152565b610c54913d8091833e610c4c81836107d2565b810190610a41565b38610bb6565b610c626108d8565b610bae565b9061036e610d176100b6610c7961082d565b946000604051610c888161077e565b5260405190610c968261077e565b601081811c835261ffff9182168852825180821c845282166020808a019190915283519182901c84529116604088015281519081901c825263ffffffff1660608701528051600881811c835260ff9182161515608089015282519081901c835216151560a08088019190915281519081901c9091526001600160a01b031690565b6001600160a01b031660c0840152565b620f4240908060001904821181151516610d3f570290565b610d476108e5565b0290565b8060001904821181151516610d3f570290565b6000805481805580610d6e575050565b6001917f199999999999999999999999999999999999999999999999999999999999999982118316610e17575b808052600a927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639284028301925b838110610dd7575050505050565b8083869255838382015583600282015583600382015583600482015583600582015583600682015583600782015583600882015583600982015501610dc9565b610e1f6108e5565b610d9b565b90604051610e3181610755565b60c060048294805484526001810154602085015260028101546001600160a01b038116604086015260a01c60020b60608501526003810154608085015201546fffffffffffffffffffffffffffffffff811660a084015260801c910152565b60005490610e9d82610982565b916040610eac815194856107d2565b8184526000808052906020907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563908287015b858510610eed57505050505050565b600a846001928451610efe8161079a565b8551610f0981610755565b87546001600160a01b038116825260a081811c600290810b878501529091610f3a9060ff9060b81c161515848b0152565b610f60610f50898c01546001600160a01b031690565b6001600160a01b03166060850152565b8901546080830152600389015490820152600488015460c08201528152610f8960058801610e24565b83820152815201930194019391610ede565b9593909194600495610fab61082d565b978892610fb6610865565b50610fbf610d5e565b6001600160a01b0394858216156110c4575b60008160209287521215956040519a8b80927fddca3f4300000000000000000000000000000000000000000000000000000000825286165afa9889156110b7575b600099611097575b506110298484888c8b8a613c58565b61103161082d565b508684519061103f9361133b565b9692879a929a9891989a6040870152602086015261105c95613d7f565b516001600160a01b03166001600160a01b031660a0850152604001516001600160a01b03166001600160a01b031660c0840152610312610e90565b6110b091995060203d81116101a45761019481836107d2565b973861101a565b6110bf6108d8565b611012565b905086156110e057602060006401000276a45b92915050610fd1565b6020600073fffd8963efd1fc6a506488495d951d5263988d256110d7565b9260049061036e9597969761111161082d565b9889966001600160a01b039283831615611203575b6000816020928b52121593604051968780927fddca3f4300000000000000000000000000000000000000000000000000000000825285165afa9485156111f6575b6000956111c8575b506111926111b9926111a9926111898b8b8b8b8b8b613c58565b868b5191612f6f565b6001600160a01b031660c08c015291939092909190565b6001600160a01b031660a08a0152565b60408801526020870152613d7f565b6111a99195506111b9926111ec6111929260203d81116101a45761019481836107d2565b969250925061116f565b6111fe6108d8565b611167565b9150831561121f57602060006401000276a45b93915050611126565b6020600073fffd8963efd1fc6a506488495d951d5263988d25611216565b9060049080518355602081015160018401556112ea6002840161129b6001600160a01b0360408501511682906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b606083015160020b7fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff82549160a01b76ffffff0000000000000000000000000000000000000000169116179055565b608081015160038401557fffffffffffffffffffffffffffffffff0000000000000000000000000000000060c06fffffffffffffffffffffffffffffffff60a08401511692015160801b1617910155565b9091939261134761082d565b50611350610865565b9461135961082d565b508015611cca576001600160a01b0361137987516001600160a01b031690565b1615611c00575b60608601946fffffffffffffffffffffffffffffffff6113b087516fffffffffffffffffffffffffffffffff1690565b1615611b5e575b608087015160020b15611a44575b84156119f7576113df6100b688516001600160a01b031690565b6001600160a01b0384169081119081156119e8575b505b6119ae5761149361140e88516001600160a01b031690565b9661146c61143a61142360208c015160020b90565b92516fffffffffffffffffffffffffffffffff1690565b91611462611446610813565b878152600060208201526001600160a01b03909b1660408c0152565b60020b60608a0152565b60006080890181905260a08901526fffffffffffffffffffffffffffffffff1660c0880152565b8551151580611994575b15611955578561151a611510611506888b6114f660806114ed60606114c061082d565b996114e56114d860408301516001600160a01b031690565b6001600160a01b03168c52565b015160020b90565b92015160020b90565b906001600160a01b038b1661426b565b1515604085015290565b60020b6020830152565b602081015160020b620d89e71981121561193d5750620d89e71960208201525b61156361155361154e602084015160020b90565b6127d1565b6001600160a01b03166060830152565b6115fe6115d561157d60408a01516001600160a01b031690565b88156119255760608401516001600160a01b038881169116105b1561190a578a8a885b6115cf60a06115c260c08501516fffffffffffffffffffffffffffffffff1690565b935194015162ffffff1690565b936121d2565b60c0860190815260a08601918252608086019283526001600160a01b0390931660408c01529192565b60008613156118cc579061162a61162361161e6116419451865190611e45565b6121c3565b8b51611e51565b8a5261163b60208b015191516121c3565b90611e51565b60208901525b61167c61166760c08a01516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1690565b90816118a8575b505061168f81886144d4565b60408701516001600160a01b0316906116b56100b660608301516001600160a01b031690565b6001600160a01b038316908103611876575060408101516116f69250611707575b86156116fb57602001516116ec9060020b611f91565b60020b6060880152565b611493565b6020015160020b6116ec565b6117e1888861176961171d602086015160020b90565b604051907ff30dba93000000000000000000000000000000000000000000000000000000008252818c816001600160a01b038161010097889660048301919091602081019260020b9052565b0392165afa918215611869575b600092611834575b50508091611824575b50600081600f0b126000146117e6576117c26116676117bc60c06117c89501516fffffffffffffffffffffffffffffffff1690565b92611f1b565b90611f70565b6fffffffffffffffffffffffffffffffff1660c08a0152565b6116d6565b61180660c061181f9301516fffffffffffffffffffffffffffffffff1690565b906fffffffffffffffffffffffffffffffff1690611f4b565b6117c8565b61182e9150611f1b565b38611787565b6118539250803d10611862575b61184b81836107d2565b810190611ead565b5050505050509050388061177e565b503d611841565b6118716108d8565b611776565b905161188a906001600160a01b03166100b6565b03611896575b50611493565b6116ec6118a291612b78565b38611890565b6118c0916118b69151612008565b6080890151611e45565b60808801523880611683565b6118e36118dc61190093516121c3565b8b51611dbf565b8a526118fa61161e60208c01519251855190611e45565b90611dbf565b6020890152611647565b8a8a61192060608701516001600160a01b031690565b6115a0565b60608401516001600160a01b03888116911611611597565b620d89e8121561153a57620d89e8602082015261153a565b9594939092501515600083131415905061197e57815161197491611e51565b9160208201519293565b91611990602083015193835190611e51565b9293565b5060408601516001600160a01b038481169116141561149d565b6040517f51b516ae0000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602490fd5b6401000276a3915010386113f4565b611a0b6100b688516001600160a01b031690565b6001600160a01b038416908110908115611a26575b506113f6565b73fffd8963efd1fc6a506488495d951d5263988d2691501138611a20565b611af0611aa860046001600160a01b038716604051907fddca3f43000000000000000000000000000000000000000000000000000000008252602093828d8682878297875afa918215611b51575b600092611b2f575b5060a0019062ffffff169052565b604051928380927fd0c93a7c0000000000000000000000000000000000000000000000000000000082525afa918215611b22575b600092611af5575b505060020b6080890152565b6113c5565b611b149250803d10611b1b575b611b0c81836107d2565b810190611dab565b3880611ae4565b503d611b02565b611b2a6108d8565b611adc565b60a0919250611b4a90863d88116101a45761019481836107d2565b9190611a9a565b611b596108d8565b611a92565b611bc06040517f1a6865020000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b038a165afa908115611bf3575b600091611bc5575b506fffffffffffffffffffffffffffffffff168752565b6113b7565b611be6915060203d8111611bec575b611bde81836107d2565b810190611d97565b38611ba9565b503d611bd4565b611bfb6108d8565b611ba1565b611c756040517f3850c7bd00000000000000000000000000000000000000000000000000000000815260e0816004816001600160a01b0389165afa8015611cbd575b60009081908290611c7a575b60ff1660408b0152909150611c68905b60020b60208a0152565b6001600160a01b03168752565b611380565b505050611c68611ca3611c5e9260e03d8111611cb6575b611c9b81836107d2565b810190611d11565b5094925050509390919050839250611c4e565b503d611c91565b611cc56108d8565b611c42565b60046040517f1f2a2005000000000000000000000000000000000000000000000000000000008152fd5b51908160020b820361004957565b519061ffff8216820361004957565b908160e0910312610049578051611d278161029a565b91611d3460208301611cf4565b91611d4160408201611d02565b91611d4e60608301611d02565b91611d5b60808201611d02565b9160a082015160ff811681036100495760c090920151610312816102b8565b51906fffffffffffffffffffffffffffffffff8216820361004957565b908160209103126100495761031290611d7a565b908160209103126100495761031290611cf4565b60008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313811516611e0a575b81600160ff1b03831216611e02570190565b610a0a6108e5565b611e126108e5565b611df0565b6001907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8111611e02570190565b81198111611e02570190565b6000821282600160ff1b018212811516611ea0575b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01821316611e94570390565b611e9c6108e5565b0390565b611ea86108e5565b611e66565b91908261010091031261004957611ec382611d7a565b91602081015180600f0b8103610049579160408201519160608101519160808201518060060b8103610049579160a0810151611efe8161029a565b9160e060c0830151611f0f8161054c565b920151610312816102b8565b600f0b7fffffffffffffffffffffffffffffffff8000000000000000000000000000000081146109275760000390565b906fffffffffffffffffffffffffffffffff8080931691168092038111611e02570190565b6fffffffffffffffffffffffffffffffff9182169116818110611e94570390565b6000199060020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000018112600116611e02570190565b60020b9060020b906000821282627fffff19018212811516611ff4575b82627fffff01821316611e94570390565b611ffc6108e5565b611fe3565b1561004957565b70010000000000000000000000000000000091600019838309928260801b9283808610950394808603951461209457908291612045868411612001565b0981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505091506120a3821515612001565b0490565b906000198183098183029182808310920391808303921461210557620f42409082821115610049577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c26139940990828211900360fa1b910360061c170290565b5050620f424091500490565b6c0100000000000000000000000091600019838309928260601b9283808610950394808603951461209457908291612045868411612001565b600019828209908281029283808410930392808403931461218f576c010000000000000000000000009183831115610049570990828211900360a01b910360601c1790565b50505060601c90565b9091600019838309928083029283808610950394808603951461209457908291612045868411612001565b600160ff1b8110156100495790565b949190928594600080806001600160a01b03908189169283838c161015978b8389129b898d15988c8a6000146123735790508492915061221c62ffffff8c620f424003168d6120a7565b8115612361578361222e8187866126cb565b955b86831061234f57505050509e8f965b8716968789149c6000146122f7578c806122f0575b156122e1575050505b9b8c99806122da575b156122ca5750505b985b806122bf575b6122b4575b50826122a9575b50501561228e57500390565b9050610312915062ffffff8082620f424003169116856123f4565b141590503880612282565b85900397503861227b565b508581038911612276565b6122d592508d612732565b61226e565b508b612266565b6122eb93506126cb565b61225d565b5089612254565b809392918d80612348575b15612339575050505b9c8d9a80612332575b15612323575050505b98612270565b61232d9350612670565b61231d565b508c612314565b612343935061276d565b61230b565b508a612302565b612359945061242f565b9e8f9661223f565b8361236d81858861276d565b95612230565b90938593929650816000146123b2578361238e818386612732565b915b91978903918883106123a857505050509e8f9661223f565b61235994506125c4565b836123be818584612670565b91612390565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b929190612402828286612198565b938215612422575b0961241157565b906000198110156100495760010190565b61242a6123c4565b61240a565b926001600160a01b0390818516918215610049576fffffffffffffffffffffffffffffffff841691821561004957600090156124725750505050610312926124c2565b5061031295506124929492935090919081116124975760601b0490611e45565b6125b0565b906124a191612111565b90611e45565b80156124b5575b6000190490565b6124bd6123c4565b6124ae565b9190811561254a577bffffffffffffffffffffffffffffffff0000000000000000000000009060601b16906001600160a01b038093168082028183820414612532575b5090816125199215612525575b8304611e45565b80820615159104011690565b61252d6123c4565b612512565b8301838110612505579150612546926123f4565b1690565b505090565b9190811561254a577bffffffffffffffffffffffffffffffff0000000000000000000000006001600160a01b039160601b169216918280830292830414806125a7575b156100495761031292612492928203916123f4565b50818111612592565b906001600160a01b03821691820361004957565b919290926001600160a01b0393848416938415610049576fffffffffffffffffffffffffffffffff82169384156100495715612661575060009050848211612622575060601b908082061515910401905b8181111561004957031690565b90916c0100000000000000000000000061263c8285612111565b930961264a575b5090612615565b60001982101561265e575060010138612643565b80fd5b9193509150610312935061254f565b91906001600160a01b0391828216838516116126c3575b82841693841561004957837bffffffffffffffffffffffffffffffff000000000000000000000000916120a39585169403169160601b16612198565b929092612687565b91906001600160a01b03918282168385161161272a575b82841693841561004957837bffffffffffffffffffffffffffffffff0000000000000000000000009161271e9585169403169160601b166123f4565b90808206151591040190565b9290926126e2565b61031292916fffffffffffffffffffffffffffffffff916001600160a01b039182811683831611612767575b0316911661214a565b9061275e565b6c01000000000000000000000000916fffffffffffffffffffffffffffffffff916001600160a01b0391828116838316116127cb575b03169216916127b2818461214a565b92096127bb5790565b6000198110156100495760010190565b906127a3565b60020b6000811215612b7257806000035b620d89e88111612b48576001600160a01b03916001821615612b1f5770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b169160028116612b03575b60048116612ae7575b60088116612acb575b60108116612aaf575b60208116612a93575b60408116612a77575b608090818116612a5c575b6101008116612a41575b6102008116612a26575b6104008116612a0b575b61080081166129f0575b61100081166129d5575b61200081166129ba575b614000811661299f575b6180008116612984575b620100008116612969575b62020000811661294f575b620400008116612935575b620800001661291a575b5060001261290c575b63ffffffff81166129035760ff60005b169060201c011690565b60ff60016128f9565b612915906124a7565b6128e9565b6b048a170391f7dc42444e8fa26000929302901c91906128e0565b6d2216e584f5fa1ea926041bedfe98909302811c926128d6565b926e5d6af8dedb81196699c329225ee60402811c926128cb565b926f09aa508b5b7a84e1c677de54f3e99bc902811c926128c0565b926f31be135f97d08fd981231505542fcfa602811c926128b5565b926f70d869a156d2a1b890bb3df62baf32f702811c926128ab565b926fa9f746462d870fdf8a65dc1f90e061e502811c926128a1565b926fd097f3bdfd2022b8845ad8f792aa582502811c92612897565b926fe7159475a2c29b7443b29c7fa6e889d902811c9261288d565b926ff3392b0822b70005940c7a398e4b70f302811c92612883565b926ff987a7253ac413176f2b074cf7815e5402811c92612879565b926ffcbe86c7900a88aedcffc83b479aa3a402811c9261286f565b926ffe5dee046a99a2a811c461f1969c305302811c92612865565b916fff2ea16466c96a3843ec78b326b528610260801c9161285a565b916fff973b41fa98c081472e6896dfb254c00260801c91612851565b916fffcb9843d60f6159c9db58835c9266440260801c91612848565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c9161283f565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91612836565b916ffff97272373d413259a46990580e213a0260801c9161282d565b70ffffffffffffffffffffffffffffffffff700100000000000000000000000000000000612822565b60046040517f2bc80f3a000000000000000000000000000000000000000000000000000000008152fd5b806127e2565b6001600160a01b038116906401000276a382101580612e88575b15612e5e5777ffffffffffffffffffffffffffffffffffffffff000000009060201b16806fffffffffffffffffffffffffffffffff811160071b9181831c9267ffffffffffffffff841160061b93841c9363ffffffff851160051b94851c9461ffff861160041b95861c60ff9687821160031b91821c92600f841160021b93841c94600160038711811b96871c119617171717171717916080831015600014612e5257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8182011c5b8002607f928392828493841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c80029081881c82881c1c80029283891c84891c1c800294858a1c868a1c1c800296878b1c888b1c1c800298898c1c8a8c1c1c80029a8b8d1c8c821c1c8002809d1c8d821c1c8002809e81901c90821c1c80029e8f80911c911c1c800260cd1c6604000000000000169d60cc1c6608000000000000169c60cb1c6610000000000000169b60ca1c6620000000000000169a60c91c6640000000000000169960c81c6680000000000000169860c71c670100000000000000169760c61c670200000000000000169660c51c670400000000000000169560c41c670800000000000000169460c31c671000000000000000169360c21c672000000000000000169260c11c674000000000000000169160c01c67800000000000000016907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800160401b1717171717171717171717171717693627a301d71055774c85027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc556810160801d60020b906fdb2df09e81959a81455e260799a0632f0160801d60020b91600090838314600014612e36575050905090565b612e426100b6856127d1565b119050612e4d575090565b905090565b905081607f031b612c5b565b60046040517f4980e1be000000000000000000000000000000000000000000000000000000008152fd5b5073fffd8963efd1fc6a506488495d951d5263988d268210612b92565b15612eac57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f41530000000000000000000000000000000000000000000000000000000000006044820152fd5b15612f1157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600360248201527f53504c00000000000000000000000000000000000000000000000000000000006044820152fd5b9091938493612f7f851515612ea5565b604051917f3850c7bd00000000000000000000000000000000000000000000000000000000835260e0836004816001600160a01b0388165afa8015613704575b60009384916136db575b50851561369857612ff66001600160a01b0384166001600160a01b03861681109081613689575b50612f0a565b6131bc84916131376040517f1a6865020000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b038d165afa90811561367c575b60009161365d575b506040517fddca3f430000000000000000000000000000000000000000000000000000000081526001600160a01b03906020816004818e86165afa908115613650575b600091613631575b5060208b6004604051809581937fd0c93a7c000000000000000000000000000000000000000000000000000000008352165afa918215613624575b6000926135fd575b5061312161312d92936130f76130e8610820565b6001600160a01b03909d168d52565b61310860208d0197889060020b9052565b6fffffffffffffffffffffffffffffffff1660408c0152565b62ffffff1660608a0152565b60020b6080880152565b6131a361315661314e88516001600160a01b031690565b925160020b90565b61319961317660408a01516fffffffffffffffffffffffffffffffff1690565b9360006020613183610820565b9e8f528e01526001600160a01b031660408d0152565b60020b60608b0152565b6fffffffffffffffffffffffffffffffff166080890152565b86511515806135e3575b15613597576131d361082d565b6131f76131ea60408a01516001600160a01b031690565b6001600160a01b03168252565b6132276115106115068961320f60608d015160020b90565b60808a015160020b906001600160a01b038c16613760565b602081015160020b620d89e71981121561357f5750620d89e71960208201525b61325861154e602083015160020b90565b6001600160a01b031660608201908152908960006133008b6132d261328760408301516001600160a01b031690565b8d851461356a5787516001600160a01b038c81169116105b8514613553578b8b5b60808501516fffffffffffffffffffffffffffffffff16906115cf6060875194015162ffffff1690565b95926080899893969298019560a08a019860c08b019889528952865260408501906001600160a01b03169052565b131561351b57509161331c6133279261333194519051016121c3565b8c51038c52516121c3565b60208b0151611e51565b60208a01525b61335f6100b661335160408c01516001600160a01b031690565b93516001600160a01b031690565b6001600160a01b0383169081036134e9575060408101516133a092506133b1575b87156133a557602001516000199060020b0160020b5b60020b6060890152565b6131bc565b6020015160020b613396565b61347f89896134136133c7602086015160020b90565b604051907ff30dba93000000000000000000000000000000000000000000000000000000008252818d816001600160a01b038161010097889660048301919091602081019260020b9052565b0392165afa9182156134dc575b6000926134b7575b505080916134a9575b50600081600f0b12600014613484576117c26116676117bc60806134669501516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1660808b0152565b613380565b61180660806134a49301516fffffffffffffffffffffffffffffffff1690565b613466565b9050600003600f0b38613431565b6134cd9250803d106118625761184b81836107d2565b50505050505090503880613428565b6134e46108d8565b613420565b90516134fd906001600160a01b03166100b6565b03613509575b506131bc565b61339661351591612b78565b38613503565b9161161e9161353f9361353161354996516121c3565b815101905251905190611e45565b60208b0151611dbf565b60208a0152613337565b8b61356589516001600160a01b031690565b6132a8565b87516001600160a01b038c811691161161329f565b620d89e8121561324757620d89e86020820152613247565b949350959150506135b260408501516001600160a01b031690565b91151560008213036135d3576135cc602091855190611e51565b9301519293565b6020840151935161199091611e51565b5060408701516001600160a01b03848116911614156131c6565b61312d925061361d6131219160203d602011611b1b57611b0c81836107d2565b92506130d4565b61362c6108d8565b6130cc565b61364a915060203d6020116101a45761019481836107d2565b38613091565b6136586108d8565b613089565b613676915060203d602011611bec57611bde81836107d2565b38613046565b6136846108d8565b61303e565b6401000276a391501138612ff0565b612ff66001600160a01b0384166001600160a01b038616811190816136bd5750612f0a565b73fffd8963efd1fc6a506488495d951d5263988d2691501038612ff0565b90506136f691935060e03d8111611cb657611c9b81836107d2565b505050505092909238612fc9565b61370c6108d8565b612fbf565b9060020b908115613724575b60020b0590565b61372c6123c4565b61371d565b9060020b908115613744575b60020b0790565b61374c6123c4565b61373d565b90816020910312610049575190565b91909261376d8285613711565b9060029483600082880b1291826139bc575b50506139af575b156138b9576137f792936137aa8260020b906101008260081d60010b920760ff1690565b949095602060ff8716976001891b9260405180809681947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa9182156138ac575b600092613878575b5080600019910101169081151595866000146138685750509061385661384b6138456138659661383d61385e966139da565b60ff91031690565b60ff1690565b62ffffff1660020b90565b900360020b90565b0260020b90565b91565b91508094500b9003820b02900b91565b60001991925061389e9060203d81116138a5575b61389681836107d2565b810190613751565b919061380b565b503d61388c565b6138b46108d8565b613803565b600101830b61391c60206138dd8360020b906101008260081d60010b920760ff1690565b9560405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa9081156139a2575b600091613984575b50600160ff85161b60001901191680158015959061397157509061396a61384b6138456138659661396361385e96613ac8565b0360ff1690565b0160020b90565b9360ff8092500316830b01820b02900b91565b61399c915060203d81116138a55761389681836107d2565b38613930565b6139aa6108d8565b613928565b9060001901840b90613786565b6139d19250906139cb91613731565b60020b90565b1515833861377f565b906000916139e9811515612001565b700100000000000000000000000000000000811015613abd575b80680100000000000000006002921015613aae575b640100000000811015613a9f575b62010000811015613a90575b610100811015613a81575b6010811015613a72575b6004811015613a64575b1015613a5957565b90600160ff91011690565b92810160ff1692811c613a51565b600493840160ff16931c613a47565b600893840160ff16931c613a3d565b601093840160ff16931c613a32565b602093840160ff16931c613a26565b604093840160ff16931c613a18565b60809250821c613a03565b90613ad4821515612001565b60ff6fffffffffffffffffffffffffffffffff831615613c4e5750607f5b67ffffffffffffffff831615613c44577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00160ff165b63ffffffff831615613c3a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160ff165b61ffff831615613c30577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00160ff165b60ff831615613c26577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80160ff165b600f831615613c1c576003190160ff165b6003831615613c105760ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6001920116925b16613c0457565b9060001960ff91011690565b9160019060021c613bfd565b9160041c91613bca565b9160081c91613bb9565b9160101c91613b8a565b9160201c91613b5a565b9160401c91613b28565b9160801c91613af2565b91929115613cb05715613c765750613c7291508251613f04565b9052565b613ca2613c8b613c7294613ca8938751614011565b806080889493940152826060880152865192611e45565b9061410b565b808452613f04565b909150613cbc57505050565b613d51613d3d613d36613d21613d28613c7296613ce4895160008113600014613d7157610d27565b613d2e62ffffff918280613cf78c613ef0565b1681861690818110613d64575b0316908115613d57575b0492613d2883620f42409788938d613fde565b1685610d4b565b04611e17565b971690610d4b565b8093614006565b806080860152826060860152845192611e45565b906140ed565b613d5f6123c4565b613d0e565b613d6c6108e5565b613d04565b613d7a90610915565b610d27565b919492939115613df85715613dcc576060613db9613ca292613c729596613dab60208701918251613fbb565b9052604085019687516140a2565b9184836080849701520152845192611e45565b50613c729150613d51613de460408301948551613fbb565b918285526080606082015191015190611e45565b91929091613e25576060613db98493613d5193613e1d6040613c729801988951613fbb565b8089526140a2565b505090613e3760208301918251613fbb565b9052613c726040820191613ca28351916080606082015191015190611e45565b600082136000821390837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff818104851183851616613ee3575b6000821292600160ff1b94848787058512911616613ed6575b82600087129505861290851616613ec9575b058312911616610d3f570290565b613ed16108e5565b613ebb565b613ede6108e5565b613ea9565b613eeb6108e5565b613e90565b62ffffff16620f4240818110611e94570390565b60016103129262ffffff613f23613f1d82841686613e57565b92613ef0565b1660020b8015613fae575b600160ff1b91600019821483821416613fa1575b0590816000811291817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038513831516613f94575b03831216613f87575b0190611dbf565b613f8f6108e5565b613f80565b613f9c6108e5565b613f77565b613fa96108e5565b613f42565b613fb66123c4565b613f2e565b613fda9062ffffff613fd0620f424094613ef0565b1660020b90613e57565b0590565b9062ffffff8080931691168092038111611e02570190565b6000199060018110611e02570190565b818110611e94570390565b91613d2861402e61407b93959460008113600014613d7157610d27565b61407562ffffff91613d288389169361406e620f42409788948784038611614095575b8361405e838a8901613fde565b16908115614088575b049b613fde565b1689610d4b565b95610d4b565b8281809410611e94570390565b6140906123c4565b614067565b61409d6108e5565b614051565b613d2861407b929493613d216140d6613d2894600081136000146140de57925b620f424095869162ffffff9485918c613fde565b961690610d4b565b6140e790610915565b926140c2565b90600082136001036141025761031291611dbf565b61031291611e51565b90600082136141025761031291611dbf565b60020b9060020b908115614149575b6000198214627fffff19821416614141570590565b613fda6108e5565b6141516123c4565b61412c565b6000199060020b627fffff198114611e02570190565b60019060020b6000811281627fffff038313811516614198575b81627fffff1903831216611e02570190565b6141a06108e5565b614186565b60020b9060020b906000811281627fffff0383138115166141985781627fffff1903831216611e02570190565b60ff168060ff106141e4575b60ff0390565b6141ec6108e5565b6141de565b60ff9182169116818110611e94570390565b60020b9060020b9060008213600082139083627fffff81810485118385161661425e575b6000821292627fffff1994848787058512911616613ed65782600087129505861290851616613ec957058312911616610d3f570290565b6142666108e5565b614227565b92919091614279828461411d565b928260008260020b1291826144bc575b50506144ac575b1561439a576142af8260020b9060ff6101008360081d60010b93071690565b909361430f602060ff8416966142d06001891b6142cb81613ff6565b611e45565b9360405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa90811561438d575b60009161436f575b501680158015959061435b57509261435061384b6138456143569461434a613865986139da565b906141f1565b90611fc6565b614203565b614356925061386594915060020b90611fc6565b614387915060203d81116138a55761389681836107d2565b38614323565b6143956108d8565b61431b565b6020926144136143c26143ac8561416c565b60020b9060ff6101008360081d60010b93071690565b95906143d3600160ff89161b613ff6565b199360405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa90811561449f575b600091614481575b5016801580159490614461579061445b61384b613845614356946144566144506138659961416c565b95613ac8565b6141f1565b906141a5565b614356915061445b61384b61384561447b6138659761416c565b936141d2565b614499915060203d81116138a55761389681836107d2565b38614427565b6144a76108d8565b61441f565b916144b690614156565b91614290565b6144cb9250906139cb91613731565b15158238614289565b907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56861036e92604051926145078461079a565b83526020830190815260c0600a6000546801000000000000000081101561473c575b600181018060005581101561472f575b600080520293847f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019051906145a76001600160a01b0383511682906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b6145fb602083015160020b82907fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff82549160a01b76ffffff0000000000000000000000000000000000000000169116179055565b604082015181547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff1690151560b81b77ff00000000000000000000000000000000000000000000001617905560608101516146af906001600160a01b03167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5648701906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60808101517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56586015560a08101517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56686015501517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56784015551910161123d565b6147376109c4565b614539565b614744610725565b61452956fea264697066735822122051029d50f34ab2586d25769fa788fdc3d548d5641dd25e2bb853131a340705c564736f6c634300080e0033';

type SwapSimulatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapSimulatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapSimulator__factory extends ContractFactory {
  constructor(...args: SwapSimulatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapSimulator> {
    return super.deploy(overrides || {}) as Promise<SwapSimulator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapSimulator {
    return super.attach(address) as SwapSimulator;
  }
  override connect(signer: Signer): SwapSimulator__factory {
    return super.connect(signer) as SwapSimulator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapSimulatorInterface {
    return new utils.Interface(_abi) as SwapSimulatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapSimulator {
    return new Contract(address, _abi, signerOrProvider) as SwapSimulator;
  }
}
