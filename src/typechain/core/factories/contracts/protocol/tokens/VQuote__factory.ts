/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VQuote,
  VQuoteInterface,
} from '../../../../contracts/protocol/tokens/VQuote';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'decimals_',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vPoolWrapper',
        type: 'address',
      },
    ],
    name: 'authorize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'isAuth',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405234620001c3576200173380380390816200001e816200020e565b9283928339602092839181010312620001c357519060ff82168203620001c3576200004862000234565b907f52616765205472616465205669727475616c2051756f746520546f6b656e0000818301526200007862000245565b657651756f746560d01b82820152825190916001600160401b038211620001b3575b620000b282620000ac60035462000256565b62000293565b80601f83116001146200011e57508190620000eb9460009262000112575b50508160011b916000199060031b1c19161760035562000345565b620000f63362000449565b60805260405161129b90816200049882396080518161050a0152f35b015190503880620000d0565b60036000529293919291601f1984167fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b936000905b8282106200019a575050916001939185620000eb9796941062000180575b505050811b0160035562000345565b015160001960f88460031b161c1916905538808062000171565b8060018697829497870151815501960194019062000153565b620001bd620001c8565b6200009a565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b03811183821017620001ff57604052565b62000209620001c8565b604052565b6040519190601f01601f191682016001600160401b03811183821017620001ff57604052565b6200023e620001df565b90601e8252565b6200024f620001df565b9060068252565b90600182811c9216801562000288575b60208310146200027257565b634e487b7160e01b600052602260045260246000fd5b91607f169162000266565b601f8111620002a0575050565b6000906003825260208220906020601f850160051c83019410620002e1575b601f0160051c01915b828110620002d557505050565b818155600101620002c8565b9092508290620002bf565b601f8111620002f9575050565b6000906004825260208220906020601f850160051c830194106200033a575b601f0160051c01915b8281106200032e57505050565b81815560010162000321565b909250829062000318565b80519091906001600160401b03811162000439575b62000372816200036c60045462000256565b620002ec565b602080601f8311600114620003b15750819293600092620003a5575b50508160011b916000199060031b1c191617600455565b0151905038806200038e565b6004600052601f198316949091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b926000905b8782106200042057505083600195961062000406575b505050811b01600455565b015160001960f88460031b161c19169055388080620003fb565b80600185968294968601518155019501930190620003e5565b62000443620001c8565b6200035a565b600580546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a356fe60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461017b578063095ea7b31461017257806318160ddd1461016957806323b872dd146101605780632520e7ff14610157578063313ce5671461014e578063395093511461014557806340c10f191461013c57806342966c681461013357806370a082311461012a578063715018a6146101215780638da5cb5b1461011857806395d89b411461010f578063a457c2d714610106578063a9059cbb146100fd578063b6a5d7de146100f4578063dd62ed3e146100eb5763f2fde38b146100e357600080fd5b61000e610b2c565b5061000e610ace565b5061000e610a62565b5061000e610a3b565b5061000e610974565b5061000e6108b0565b5061000e610888565b5061000e61080c565b5061000e6107d1565b5061000e6106b7565b5061000e610588565b5061000e61052e565b5061000e6104ef565b5061000e6104af565b5061000e6103b6565b5061000e610397565b5061000e610365565b5061000e6101fa565b919091602080825283519081818401526000945b8286106101e4575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09260409596116101d7575b0116010190565b60008582860101526101d0565b8581018201518487016040015294810194610198565b503461000e576000806003193601126103365760405190806003549060019180831c9280821692831561032c575b60209283861085146102ff5785885260208801949081156102c5575060011461026c575b6102688761025c81890382610c86565b60405191829182610184565b0390f35b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106102b4575050509101905061025c82610268388061024c565b805485870152948201948101610298565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016855250505001915061025c905082610268388061024c565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f1693610228565b80fd5b600435906001600160a01b038216820361000e57565b602435906001600160a01b038216820361000e57565b503461000e57604060031936011261000e5761038c610382610339565b6024359033610f65565b602060405160018152f35b503461000e57600060031936011261000e576020600254604051908152f35b503461000e57606060031936011261000e576103d0610339565b6103d861034f565b604435906001600160a01b038316600052600160205261040f336040600020906001600160a01b0316600052602052604060002090565b54927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff840361044f575b6104439350610e20565b60405160018152602090f35b82841061046b576104668361044395033383610f65565b610439565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b503461000e57602060031936011261000e576001600160a01b036104d1610339565b166000526006602052602060ff604060002054166040519015158152f35b503461000e57600060031936011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e57604060031936011261000e5761038c61054b610339565b33600052600160205261058160243561057b836040600020906001600160a01b0316600052602052604060002090565b54610d26565b9033610f65565b503461000e5760408060031936011261000e576105a3610339565b906024359133600052600660205260ff8260002054161561068e576001600160a01b03811690811561064b577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef610645856106296000979461061061060b8a97600254610d26565b600255565b6001600160a01b03166000526000602052604060002090565b610634828254610d26565b905585519081529081906020820190565b0390a351f35b6064835162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b600482517fd7a2ae6a000000000000000000000000000000000000000000000000000000008152fd5b503461000e57602060031936011261000e576004353315610767576000906106de336110c4565b806106fc336001600160a01b03166000526000602052604060002090565b54610709828210156111dd565b03610727336001600160a01b03166000526000602052604060002090565b5561073761060b8260025461124e565b60405190815233907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3005b608460405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b503461000e57602060031936011261000e576001600160a01b036107f3610339565b1660005260006020526020604060002054604051908152f35b503461000e57600080600319360112610336576005547fffffffffffffffffffffffff00000000000000000000000000000000000000006001600160a01b03821691610859338414610bd9565b1660055581604051917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e57600060031936011261000e5760206001600160a01b0360055416604051908152f35b503461000e576000806003193601126103365760405190806004549060019180831c9280821692831561096a575b60209283861085146102ff5785885260208801949081156102c55750600114610911576102688761025c81890382610c86565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838610610959575050509101905061025c82610268388061024c565b80548587015294820194810161093d565b93607f16936108de565b503461000e57604060031936011261000e5761098e610339565b602435903360005260016020526109bc816040600020906001600160a01b0316600052602052604060002090565b54918083106109d15761044392039033610f65565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b503461000e57604060031936011261000e5761038c610a58610339565b6024359033610e20565b503461000e57602060031936011261000e57610a7c610339565b6001600160a01b0390610a9482600554163314610bd9565b16600090815260066020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055005b503461000e57604060031936011261000e576020610b23610aed610339565b6001600160a01b03610afd61034f565b9116600052600183526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b503461000e57602060031936011261000e57610b46610339565b6001600160a01b03610b5d81600554163314610bd9565b811615610b6f57610b6d90610c24565b005b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b15610be057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600554906001600160a01b0380911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610cc757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81198111610d32570190565b610d3a610cf6565b0190565b15610d4557565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b15610db657565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b91906001600160a01b0390818416928315610efb57610ed9827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef94610ef6941696610e6c881515610d3e565b610e76828261116d565b610ebf84610e97836001600160a01b03166000526000602052604060002090565b54610ea482821015610daf565b03916001600160a01b03166000526000602052604060002090565b556001600160a01b03166000526000602052604060002090565b610ee4828254610d26565b90556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b906001600160a01b039182811692831561105b578216938415610ff15780610fe07f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610fc8610ef6956001600160a01b03166000526001602052604060002090565b906001600160a01b0316600052602052604060002090565b556040519081529081906020820190565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b03168015908115611164575b811561114b575b508015611117575b156110ed57565b60046040517fd7a2ae6a000000000000000000000000000000000000000000000000000000008152fd5b506000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f85460ff166110e6565b9050600052600660205260ff60406000205416386110de565b600191506110d7565b6001600160a01b038091169182159283156111d2575b83156111b7575b50821561119b575b5050156110ed57565b90915016600052600660205260ff604060002054163880611192565b909250600052600660205260ff60406000205416913861118a565b818316159350611183565b156111e457565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b818110611259570390565b611261610cf6565b039056fea264697066735822122024d44416037f10942e73f36a242c869dd3bbcd765c21a5e53ad21b5d2865551064736f6c634300080e0033';

type VQuoteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VQuoteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VQuote__factory extends ContractFactory {
  constructor(...args: VQuoteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VQuote> {
    return super.deploy(decimals_, overrides || {}) as Promise<VQuote>;
  }
  override getDeployTransaction(
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(decimals_, overrides || {});
  }
  override attach(address: string): VQuote {
    return super.attach(address) as VQuote;
  }
  override connect(signer: Signer): VQuote__factory {
    return super.connect(signer) as VQuote__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VQuoteInterface {
    return new utils.Interface(_abi) as VQuoteInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VQuote {
    return new Contract(address, _abi, signerOrProvider) as VQuote;
  }
}
