/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VQuote,
  VQuoteInterface,
} from '../../../../contracts/protocol/tokens/VQuote';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'decimals_',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vPoolWrapper',
        type: 'address',
      },
    ],
    name: 'authorize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'isAuth',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a06040523480156200001157600080fd5b506040516200122b3803806200122b8339810160408190526200003491620001d2565b604080518082018252601e81527f52616765205472616465205669727475616c2051756f746520546f6b656e00006020808301918252835180850190945260068452657651756f746560d01b90840152815191929162000097916003916200012c565b508051620000ad9060049060208401906200012c565b505050620000ca620000c4620000d660201b60201c565b620000da565b60ff166080526200023a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200013a90620001fe565b90600052602060002090601f0160209004810192826200015e5760008555620001a9565b82601f106200017957805160ff1916838001178555620001a9565b82800160010185558215620001a9579182015b82811115620001a95782518255916020019190600101906200018c565b50620001b7929150620001bb565b5090565b5b80821115620001b75760008155600101620001bc565b600060208284031215620001e557600080fd5b815160ff81168114620001f757600080fd5b9392505050565b600181811c908216806200021357607f821691505b6020821081036200023457634e487b7160e01b600052602260045260246000fd5b50919050565b608051610fd56200025660003960006101cb0152610fd56000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806370a08231116100b2578063a457c2d711610081578063b6a5d7de11610066578063b6a5d7de146102aa578063dd62ed3e146102bd578063f2fde38b146102f657600080fd5b8063a457c2d714610284578063a9059cbb1461029757600080fd5b806370a0823114610230578063715018a6146102595780638da5cb5b1461026157806395d89b411461027c57600080fd5b80632520e7ff1161010957806339509351116100ee57806339509351146101f557806340c10f191461020857806342966c681461021d57600080fd5b80632520e7ff146101a1578063313ce567146101c457600080fd5b806306fdde031461013b578063095ea7b31461015957806318160ddd1461017c57806323b872dd1461018e575b600080fd5b610143610309565b6040516101509190610ddb565b60405180910390f35b61016c610167366004610e4c565b61039b565b6040519015158152602001610150565b6002545b604051908152602001610150565b61016c61019c366004610e76565b6103b3565b61016c6101af366004610eb2565b60066020526000908152604090205460ff1681565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610150565b61016c610203366004610e4c565b6103d7565b61021b610216366004610e4c565b610416565b005b61021b61022b366004610ed4565b610454565b61018061023e366004610eb2565b6001600160a01b031660009081526020819052604090205490565b61021b610461565b6005546040516001600160a01b039091168152602001610150565b6101436104cc565b61016c610292366004610e4c565b6104db565b61016c6102a5366004610e4c565b610585565b61021b6102b8366004610eb2565b610593565b6101806102cb366004610eed565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61021b610304366004610eb2565b610611565b60606003805461031890610f20565b80601f016020809104026020016040519081016040528092919081815260200182805461034490610f20565b80156103915780601f1061036657610100808354040283529160200191610391565b820191906000526020600020905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b6000336103a98185856106f0565b5060019392505050565b6000336103c1858285610815565b6103cc8585856108a7565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103a99082908690610411908790610f70565b6106f0565b3360009081526006602052604090205460ff1661044657604051636bd1573560e11b815260040160405180910390fd5b6104508282610aaf565b5050565b61045e3382610b9a565b50565b6005546001600160a01b031633146104c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6104ca6000610cf1565b565b60606004805461031890610f20565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105785760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104b7565b6103cc82868684036106f0565b6000336103a98185856108a7565b6005546001600160a01b031633146105ed5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6005546001600160a01b0316331461066b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b7565b6001600160a01b0381166106e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104b7565b61045e81610cf1565b6001600160a01b0383166107525760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b7565b6001600160a01b0382166107b35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146108a157818110156108945760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104b7565b6108a184848484036106f0565b50505050565b6001600160a01b0383166109235760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104b7565b6001600160a01b0382166109855760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b7565b610990838383610d5b565b6001600160a01b03831660009081526020819052604090205481811015610a1f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104b7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a56908490610f70565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aa291815260200190565b60405180910390a36108a1565b6001600160a01b038216610b055760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b7565b610b1160008383610d5b565b8060026000828254610b239190610f70565b90915550506001600160a01b03821660009081526020819052604081208054839290610b50908490610f70565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610bfa5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b7565b610c0682600083610d5b565b6001600160a01b03821660009081526020819052604090205481811015610c7a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104b7565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ca9908490610f88565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610808565b505050565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383161580610d7857506001600160a01b038216155b80610d9b57506001600160a01b03831660009081526006602052604090205460ff165b80610dbe57506001600160a01b03821660009081526006602052604090205460ff165b610cec57604051636bd1573560e11b815260040160405180910390fd5b600060208083528351808285015260005b81811015610e0857858101830151858201604001528201610dec565b81811115610e1a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e4757600080fd5b919050565b60008060408385031215610e5f57600080fd5b610e6883610e30565b946020939093013593505050565b600080600060608486031215610e8b57600080fd5b610e9484610e30565b9250610ea260208501610e30565b9150604084013590509250925092565b600060208284031215610ec457600080fd5b610ecd82610e30565b9392505050565b600060208284031215610ee657600080fd5b5035919050565b60008060408385031215610f0057600080fd5b610f0983610e30565b9150610f1760208401610e30565b90509250929050565b600181811c90821680610f3457607f821691505b602082108103610f5457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610f8357610f83610f5a565b500190565b600082821015610f9a57610f9a610f5a565b50039056fea2646970667358221220e24179fb5169e4c9c0b9e314f7682a5ba49d480328a3f96ee2871170a3b7293964736f6c634300080d0033';

type VQuoteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VQuoteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VQuote__factory extends ContractFactory {
  constructor(...args: VQuoteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VQuote> {
    return super.deploy(decimals_, overrides || {}) as Promise<VQuote>;
  }
  override getDeployTransaction(
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(decimals_, overrides || {});
  }
  override attach(address: string): VQuote {
    return super.attach(address) as VQuote;
  }
  override connect(signer: Signer): VQuote__factory {
    return super.connect(signer) as VQuote__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VQuoteInterface {
    return new utils.Interface(_abi) as VQuoteInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VQuote {
    return new Contract(address, _abi, signerOrProvider) as VQuote;
  }
}
