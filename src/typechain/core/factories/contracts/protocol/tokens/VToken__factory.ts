/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  VToken,
  VTokenInterface,
} from '../../../../contracts/protocol/tokens/VToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: 'vTokenName',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'vTokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint8',
        name: 'cTokenDecimals',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vPoolWrapper',
        type: 'address',
      },
    ],
    name: 'setVPoolWrapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPoolWrapper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a060405234620000a157620016e2803803806200001d81620000bd565b928339810190606081830312620000a15780516001600160401b039290838111620000a1578162000050918401620000f2565b926020830151908111620000a1576040916200006e918401620000f2565b9101519060ff82168203620000a157620000889262000186565b6040516111ed9081620004f58239608051816104ca0152f35b600080fd5b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b03811183821017620000e357604052565b620000ed620000a6565b604052565b81601f82011215620000a1578051906001600160401b03821162000176575b60209062000128601f8401601f19168301620000bd565b93838552828483010111620000a15782906000905b838383106200015d575050116200015357505090565b6000918301015290565b819350828193920101518282880101520183916200013d565b62000180620000a6565b62000111565b805190939291906001600160401b038111620002a3575b620001b581620001af600354620002b3565b620002f0565b602080601f83116001146200020e57508190620001f294959660009262000202575b50508160011b916000199060031b1c191617600355620003a2565b620001fd33620004a6565b608052565b015190503880620001d7565b6003600052601f198316969091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b8982106200028a57505090839291600194620001f29798991062000270575b505050811b01600355620003a2565b015160001960f88460031b161c1916905538808062000261565b8060018596829496860151815501950193019062000242565b620002ad620000a6565b6200019d565b90600182811c92168015620002e5575b6020831014620002cf57565b634e487b7160e01b600052602260045260246000fd5b91607f1691620002c3565b601f8111620002fd575050565b6000906003825260208220906020601f850160051c830194106200033e575b601f0160051c01915b8281106200033257505050565b81815560010162000325565b90925082906200031c565b601f811162000356575050565b6000906004825260208220906020601f850160051c8301941062000397575b601f0160051c01915b8281106200038b57505050565b8181556001016200037e565b909250829062000375565b80519091906001600160401b03811162000496575b620003cf81620003c9600454620002b3565b62000349565b602080601f83116001146200040e575081929360009262000402575b50508160011b916000199060031b1c191617600455565b015190503880620003eb565b6004600052601f198316949091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b926000905b8782106200047d57505083600195961062000463575b505050811b01600455565b015160001960f88460031b161c1916905538808062000458565b8060018596829496860151815501950193019062000442565b620004a0620000a6565b620003b7565b600580546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a356fe60806040526004361015610013575b600080fd5b60003560e01c806306fdde031461017b578063095ea7b31461017257806318160ddd1461016957806323b872dd14610160578063313ce56714610157578063395093511461014e57806340c10f191461014557806342966c681461013c57806370a0823114610133578063715018a61461012a5780638da5cb5b1461012157806395d89b4114610118578063a457c2d71461010f578063a9059cbb14610106578063d7adb4fe146100fd578063dd62ed3e146100f4578063df8685d2146100eb5763f2fde38b146100e357600080fd5b61000e610b0b565b5061000e610ae3565b5061000e610a85565b5061000e610a19565b5061000e6109f2565b5061000e61092b565b5061000e610867565b5061000e61083f565b5061000e6107c3565b5061000e610788565b5061000e61066a565b5061000e610548565b5061000e6104ee565b5061000e6104af565b5061000e6103b6565b5061000e610397565b5061000e610365565b5061000e6101fa565b919091602080825283519081818401526000945b8286106101e4575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09260409596116101d7575b0116010190565b60008582860101526101d0565b8581018201518487016040015294810194610198565b503461000e576000806003193601126103365760405190806003549060019180831c9280821692831561032c575b60209283861085146102ff5785885260208801949081156102c5575060011461026c575b6102688761025c81890382610c63565b60405191829182610184565b0390f35b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106102b4575050509101905061025c82610268388061024c565b805485870152948201948101610298565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016855250505001915061025c905082610268388061024c565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f1693610228565b80fd5b600435906001600160a01b038216820361000e57565b602435906001600160a01b038216820361000e57565b503461000e57604060031936011261000e5761038c610382610339565b6024359033610f25565b602060405160018152f35b503461000e57600060031936011261000e576020600254604051908152f35b503461000e57606060031936011261000e576103d0610339565b6103d861034f565b604435906001600160a01b038316600052600160205261040f336040600020906001600160a01b0316600052602052604060002090565b54927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff840361044f575b6104439350610dfd565b60405160018152602090f35b82841061046b576104668361044395033383610f25565b610439565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b503461000e57600060031936011261000e57602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461000e57604060031936011261000e5761038c61050b610339565b33600052600160205261054160243561053b836040600020906001600160a01b0316600052602052604060002090565b54610d03565b9033610f25565b503461000e57604060031936011261000e57610562610339565b602435906001600160a01b03806006541633036106405781169182156105fc576105f7816105da6000946105c16105bc7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef96600254610d03565b600255565b6001600160a01b03166000526000602052604060002090565b6105e5828254610d03565b90556040519081529081906020820190565b0390a3005b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b60046040517fd7a2ae6a000000000000000000000000000000000000000000000000000000008152fd5b503461000e57602060031936011261000e57600435331561071e5760009061069133611084565b806106af336001600160a01b03166000526000602052604060002090565b546106bc8282101561112f565b036106da336001600160a01b03166000526000602052604060002090565b556106ea6105bc826002546111a0565b60405190815233907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080602081016105f7565b608460405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b503461000e57602060031936011261000e576001600160a01b036107aa610339565b1660005260006020526020604060002054604051908152f35b503461000e57600080600319360112610336576005547fffffffffffffffffffffffff00000000000000000000000000000000000000006001600160a01b03821691610810338414610bb6565b1660055581604051917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e57600060031936011261000e5760206001600160a01b0360055416604051908152f35b503461000e576000806003193601126103365760405190806004549060019180831c92808216928315610921575b60209283861085146102ff5785885260208801949081156102c557506001146108c8576102688761025c81890382610c63565b600460005294509192917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b838610610910575050509101905061025c82610268388061024c565b8054858701529482019481016108f4565b93607f1693610895565b503461000e57604060031936011261000e57610945610339565b60243590336000526001602052610973816040600020906001600160a01b0316600052602052604060002090565b54918083106109885761044392039033610f25565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b503461000e57604060031936011261000e5761038c610a0f610339565b6024359033610dfd565b503461000e57602060031936011261000e57610a33610339565b6001600160a01b0390610a4b82600554163314610bb6565b6006549180831615610a5a575b005b7fffffffffffffffffffffffff00000000000000000000000000000000000000009116911617600655005b503461000e57604060031936011261000e576020610ada610aa4610339565b6001600160a01b03610ab461034f565b9116600052600183526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b503461000e57600060031936011261000e5760206001600160a01b0360065416604051908152f35b503461000e57602060031936011261000e57610b25610339565b6001600160a01b03610b3c81600554163314610bb6565b811615610b4c57610a5890610c01565b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b15610bbd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b600554906001600160a01b0380911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610ca457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81198111610d0f570190565b610d17610cd3565b0190565b15610d2257565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b15610d9357565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b91906001600160a01b0390818416928315610ebb576105da827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef94610eb6941696610e49881515610d1b565b610e5382826110d5565b610e9c84610e74836001600160a01b03166000526000602052604060002090565b54610e8182821015610d8c565b03916001600160a01b03166000526000602052604060002090565b556001600160a01b03166000526000602052604060002090565b0390a3565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b906001600160a01b039182811692831561101b578216938415610fb15780610fa07f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610f88610eb6956001600160a01b03166000526001602052604060002090565b906001600160a01b0316600052602052604060002090565b556040519081529081906020820190565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b6001600160a01b038091169081159182156110cc575b82156110be575b5081156110b1575b501561064057565b90506006541615386110a9565b6006548216149150386110a1565b6001925061109a565b906001600160a01b03809216918215928315611124575b8315611116575b508215611104575b50501561064057565b809192506006541691161438806110fb565b6006548216149250386110f3565b8282161593506110ec565b1561113657565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b8181106111ab570390565b6111b3610cd3565b039056fea26469706673582212207876dea818f785ebe8d802c0ed846d78a8c00616cc48682675b7a4d816c9681e64736f6c634300080e0033';

type VTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VToken__factory extends ContractFactory {
  constructor(...args: VTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vTokenName: PromiseOrValue<string>,
    vTokenSymbol: PromiseOrValue<string>,
    cTokenDecimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VToken> {
    return super.deploy(
      vTokenName,
      vTokenSymbol,
      cTokenDecimals,
      overrides || {}
    ) as Promise<VToken>;
  }
  override getDeployTransaction(
    vTokenName: PromiseOrValue<string>,
    vTokenSymbol: PromiseOrValue<string>,
    cTokenDecimals: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vTokenName,
      vTokenSymbol,
      cTokenDecimals,
      overrides || {}
    );
  }
  override attach(address: string): VToken {
    return super.attach(address) as VToken;
  }
  override connect(signer: Signer): VToken__factory {
    return super.connect(signer) as VToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenInterface {
    return new utils.Interface(_abi) as VTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VToken {
    return new Contract(address, _abi, signerOrProvider) as VToken;
  }
}
