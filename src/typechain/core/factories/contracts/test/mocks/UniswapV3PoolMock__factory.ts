/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  UniswapV3PoolMock,
  UniswapV3PoolMockInterface,
} from '../../../../contracts/test/mocks/UniswapV3PoolMock';

const _abi = [
  {
    inputs: [],
    name: 'feeGrowthGlobal0X128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeGrowthGlobal1X128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_feeGrowthGlobal0X128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_feeGrowthGlobal1X128',
        type: 'uint256',
      },
    ],
    name: 'setFeeGrowth',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tick',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidityGross',
        type: 'uint128',
      },
      {
        internalType: 'int128',
        name: 'liquidityNet',
        type: 'int128',
      },
      {
        internalType: 'uint256',
        name: 'feeGrowthOutside0X128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeGrowthOutside1X128',
        type: 'uint256',
      },
      {
        internalType: 'int56',
        name: 'tickCumulativeOutside',
        type: 'int56',
      },
      {
        internalType: 'uint160',
        name: 'secondsPerLiquidityOutsideX128',
        type: 'uint160',
      },
      {
        internalType: 'uint32',
        name: 'secondsOutside',
        type: 'uint32',
      },
      {
        internalType: 'bool',
        name: 'initialized',
        type: 'bool',
      },
    ],
    name: 'setTick',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticks',
    outputs: [
      {
        internalType: 'uint128',
        name: 'liquidityGross',
        type: 'uint128',
      },
      {
        internalType: 'int128',
        name: 'liquidityNet',
        type: 'int128',
      },
      {
        internalType: 'uint256',
        name: 'feeGrowthOutside0X128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeGrowthOutside1X128',
        type: 'uint256',
      },
      {
        internalType: 'int56',
        name: 'tickCumulativeOutside',
        type: 'int56',
      },
      {
        internalType: 'uint160',
        name: 'secondsPerLiquidityOutsideX128',
        type: 'uint160',
      },
      {
        internalType: 'uint32',
        name: 'secondsOutside',
        type: 'uint32',
      },
      {
        internalType: 'bool',
        name: 'initialized',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461001657610486908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c9182634614131914610098575081637a7903751461007357508063ecb217ea1461006a578063f3058399146100615763f30dba9314610059575b600080fd5b6100546101ad565b5061005461018e565b5061005461010c565b3461009557604060031936011261009557600435600155602435600255604051f35b80fd5b346100b257816003193601126100b2576020906002548152f35b5080fd5b600435908160020b820361005457565b60c4359073ffffffffffffffffffffffffffffffffffffffff8216820361005457565b60e4359063ffffffff8216820361005457565b6101043590811515820361005457565b503461005457610120600319360112610054576101276100b6565b602435906fffffffffffffffffffffffffffffffff82168203610054576044359081600f0b82036100545760a435928360060b84036100545761018c9361016c6100c6565b916101756100e9565b9361017e6100fc565b95608435926064359261026b565b005b5034610054576000600319360112610054576020600154604051908152f35b5034610054576020600319360112610054576101c76100b6565b600290810b60009081526020818152604091829020805460018201549482015460039092015484516fffffffffffffffffffffffffffffffff83168152608092831d600f0b94810194909452938301949094526060820152600682900b9281019290925273ffffffffffffffffffffffffffffffffffffffff603882901c1660a083015263ffffffff60d882901c1660c083015260f81c151560e082015261010090f35b600281810b600090815260208190526040902060809490941b7fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff93909316929092178355600183019390935581019290925561044e95946003946103fb9492936103e89361037f92918801907fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000008254169066ffffffffffffff16179055866103328660020b6000526000602052604060002090565b01907fffffffffff0000000000000000000000000000000000000000ffffffffffffff7affffffffffffffffffffffffffffffffffffffff0000000000000083549260381b169116179055565b846103978460020b6000526000602052604060002090565b01907fff00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffff7effffffff00000000000000000000000000000000000000000000000000000083549260d81b169116179055565b60020b6000526000602052604060002090565b01907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7fff00000000000000000000000000000000000000000000000000000000000000835492151560f81b169116179055565b56fea26469706673582212204c8da750d1d8e18c97c2ed7b951b9f9950accd1c8f5154196880abc4e00593d164736f6c634300080e0033';

type UniswapV3PoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3PoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3PoolMock__factory extends ContractFactory {
  constructor(...args: UniswapV3PoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapV3PoolMock> {
    return super.deploy(overrides || {}) as Promise<UniswapV3PoolMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UniswapV3PoolMock {
    return super.attach(address) as UniswapV3PoolMock;
  }
  override connect(signer: Signer): UniswapV3PoolMock__factory {
    return super.connect(signer) as UniswapV3PoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3PoolMockInterface {
    return new utils.Interface(_abi) as UniswapV3PoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3PoolMock {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3PoolMock;
  }
}
