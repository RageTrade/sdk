/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../../../../contracts/test/mocks/VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'oracle',
        type: 'address',
      },
    ],
    name: 'InvalidFundingRateOracle',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    name: 'InvalidFundingRateValueX128',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidSetting',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernanceOrTeamMultisig',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'value',
        type: 'uint128',
      },
    ],
    name: 'SafeCast_Int128Overflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCast_Int256Overflow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AccruedProtocolFeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
    ],
    name: 'LiquidityFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        indexed: false,
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFundingRateAndVirtualPrice',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFundingRateOverride',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVQuote',
            name: 'vQuote',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract AggregatorV3Interface',
        name: 'chainlinkOracle',
        type: 'address',
      },
    ],
    name: 'setFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'fundingRateOverrideX128',
        type: 'int256',
      },
    ],
    name: 'setFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuoteAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unsetFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'useZeroFundingRate',
        type: 'bool',
      },
    ],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vQuote',
    outputs: [
      {
        internalType: 'contract IVQuote',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608080604052346100265765ffffffffffff19600854166008556160f290816200002c8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806309e54e31146102bb5780630af96800146102b2578063195cd92c146102a95780631dce5fcf146102a05780631e2eaeaf146102975780632a99a7921461028e5780632ad4f84b146102855780633464c4ca1461027c578063466c88271461027357806348aaa8c01461026a5780634bc36bd614610261578063512403361461025857806356d15a881461024f5780635e622abc146102465780636719578c1461023d5780636c544335146102345780637779815c1461022b5780637c93746b146102225780637feedaa11461021957806386c8e9a7146102105780638b1e9781146102075780639bb1a99c146101fe5780639f883c12146101f5578063a34123a7146101ec578063a3a1e7e9146101e3578063a3c35e2c146101da578063acfd7928146101d1578063adb61832146101c8578063c04b98c4146101bf578063d3487997146101b6578063dbd035ff146101ad578063fa461e33146101a4578063fb7e3e241461019b5763fca6fbf21461019357600080fd5b61000e611b40565b5061000e611b18565b5061000e611870565b5061000e6117cb565b5061000e61152a565b5061000e6114dd565b5061000e6114b6565b5061000e611497565b5061000e611448565b5061000e611424565b5061000e61137b565b5061000e611240565b5061000e611218565b5061000e61115f565b5061000e611138565b5061000e611055565b5061000e610f0b565b5061000e610eec565b5061000e610eac565b5061000e610e84565b5061000e610ded565b5061000e610c89565b5061000e610c26565b5061000e610bfe565b5061000e610ba3565b5061000e610a21565b5061000e610a02565b5061000e6109d4565b5061000e6108bd565b5061000e610849565b5061000e610753565b5061000e610364565b5061000e61031e565b5061000e6102e5565b600319602091011261000e5760043565ffffffffffff8116810361000e5790565b503461000e5765ffffffffffff6102fb366102c4565b1665ffffffffffff1960085416176008556000604051f35b600091031261000e57565b503461000e57600060031936011261000e5760206001600160a01b0360005460101c16604051908152f35b8015150361000e57565b6001600160a01b0381160361000e57565b503461000e57606060031936011261000e5760043561038281610349565b6044359060243561039283610353565b61039a612a5e565b916001600160a01b039360009480865460101c16330361069157818592948288821215921615610662575b835260035493878162ffffff94858860b81c1687878a60a01c16916103eb928589614474565b886103f4612ab5565b600a60808201529889926101f460a085015261040e61527f565b60c086015260e0850152895191169361042694612e06565b9091975161043a906001600160a01b031690565b6001600160a01b031660a08801526040988980920151610460906001600160a01b031690565b6001600160a01b0390811660c08a0152600354895184517f128acb0800000000000000000000000000000000000000000000000000000000815230600482015288151560248201526044810191909152928216606484015260a06084840152600060a48401529194859260c492849291165af16106169a61051d98610508948315610655575b8293610624575b50828b8a01528160208a015214918261061a575b5050612b29565b60035492808460b81c169360a01c1691614591565b6105356105306080840151600454612b8d565b600455565b61053d615cfe565b7f374e2c00db0195ec47718dc83fbed946c07c24c240e8332e547d9b4ac086fd478151806105ba858291909160c060e08201938051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565b0390a1519182918291909160c060e08201938051835260208101516020840152604081015160408401526060810151606084015260808101516080840152816001600160a01b03918260a08201511660a0860152015116910152565b0390f35b1490503880610501565b90925061064791508a3d8c1161064e575b61063f818361172f565b810190612b13565b91386104ed565b503d610635565b61065d61278f565b6104e6565b94508315610677576401000276a45b946103c5565b73fffd8963efd1fc6a506488495d951d5263988d25610671565b60046040517f8597d08b000000000000000000000000000000000000000000000000000000008152fd5b8060020b0361000e57565b6fffffffffffffffffffffffffffffffff81160361000e57565b600319606091011261000e576004356106f8816106bb565b90602435610705816106bb565b90604435610712816106c6565b90565b604090610751939594929560c0820196825260208201520190606080918051845260208101516020850152604081015160408501520151910152565b565b503461000e57610762366106e0565b909161076c614fa1565b506001600160a01b0360005460101c163303610691578260020b8160020b908082129182159261083b575b821561082e575b821561081d575b50811561080d575b506107cf5790610616926107c092614fc6565b60409391935193849384610715565b6040517f957b5ed5000000000000000000000000000000000000000000000000000000008152600291820b600482015292900b602483015250604490fd5b600a91500760020b1515386107ad565b600a900760020b15159150386107a5565b620d89e88213925061079e565b620d89e71981129250610797565b503461000e57602060031936011261000e57602060043554604051908152f35b600319604091011261000e57600435610881816106bb565b90602435610712816106bb565b610751909291926080810193606080918051845260208101516020850152604081015160408501520151910152565b503461000e576106166109776108d236610869565b91906108dc614fa1565b92600460e06109026108f66003546001600160a01b031690565b6001600160a01b031690565b604051928380927f3850c7bd0000000000000000000000000000000000000000000000000000000082525afa9081156109c7575b600091610992575b506109476156dc565b9161096561095361555b565b80855260055460065460075491615853565b60408401528251865260095493615710565b6060840152604083015260208201526040519182918261088e565b6109b3915060e03d81116109c0575b6109ab818361172f565b810190612bb3565b505050505090503861093e565b503d6109a1565b6109cf61278f565b610936565b503461000e5765ffffffffffff6109ea366102c4565b1665ffffffffffff19600c541617600c556000604051f35b503461000e57600060031936011261000e576020600a54604051908152f35b503461000e5760208060031936011261000e5760043590610a4182610353565b600054610a599060101c6001600160a01b03166108f6565b90604051907f5aa6e6750000000000000000000000000000000000000000000000000000000082528082600481865afa918215610b96575b600092610b77575b506001600160a01b038092163314159283610aeb575b505050610ac157610abf90612916565b005b60046040517f52d335a7000000000000000000000000000000000000000000000000000000008152fd5b8192935090600491604051928380927fdbc0c0850000000000000000000000000000000000000000000000000000000082525afa918215610b6a575b600092610b3d575b505016331415388080610aaf565b610b5c9250803d10610b63575b610b54818361172f565b81019061277a565b3880610b2f565b503d610b4a565b610b7261278f565b610b27565b81610b8f9293503d8411610b6357610b54818361172f565b9038610a99565b610b9e61278f565b610a91565b503461000e57602060031936011261000e57600435610bc1816106bb565b60020b600052600b602052608060406000208054906001810154906003600282015491015491604051938452602084015260408301526060820152f35b503461000e57600060031936011261000e5760206001600160a01b0360025416604051908152f35b503461000e57602060031936011261000e57600435610c4481610349565b6001600160a01b0360005460101c16330361069157610abf90610c6561527f565b919065ffffffffffff600c541691600014610c835750600090611f74565b90611f74565b503461000e5760c060031936011261000e5760005460ff8160081c169081600014610de45750303b155b15610d60571580610cfa575b610cc7611b7f565b610ccd57005b610abf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b610d2b6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b610d5b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b610cbf565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b60ff1615610cb3565b503461000e57600060031936011261000e576001600160a01b0360005460101c16330361069157610616600060045480610e5d575b507f889bbef14ccbbb6f97773359c9c09396f67ed97695236771816a304ec5d886116020604051838152a16040519081529081906020820190565b600019915060018110610e77575b01600160045538610e22565b610e7f611d31565b610e6b565b503461000e57600060031936011261000e5760206001600160a01b0360035416604051908152f35b503461000e57600060031936011261000e57608060055460065460075465ffffffffffff6008541691604051938452602084015260408301526060820152f35b503461000e57600060031936011261000e576020600554604051908152f35b503461000e57600080600319360112611045578054610f359060101c6001600160a01b03166108f6565b6040517f5aa6e67500000000000000000000000000000000000000000000000000000000815260208082600481865afa918215611038575b8492611019575b506001600160a01b038092163314159283610f9e575b505050610ac157610f9961290e565b604051f35b8192935090600491604051928380927fdbc0c0850000000000000000000000000000000000000000000000000000000082525afa91821561100c575b8492610fef575b505016331415388080610f8a565b6110059250803d10610b6357610b54818361172f565b3880610fe1565b61101461278f565b610fda565b816110319293503d8411610b6357610b54818361172f565b9038610f74565b61104061278f565b610f6d565b80fd5b62ffffff81160361000e57565b503461000e57602060031936011261000e5760043561107381611048565b6001600160a01b03600460206110968360005460101c166001600160a01b031690565b604051928380927f5aa6e6750000000000000000000000000000000000000000000000000000000082525afa90811561112b575b60009161110d575b501633036110e357610abf90612858565b60046040517fb56f932c000000000000000000000000000000000000000000000000000000008152fd5b611125915060203d8111610b6357610b54818361172f565b386110d2565b61113361278f565b6110ca565b503461000e57600060031936011261000e57602062ffffff60035460a01c16604051908152f35b503461000e57602060031936011261000e5760043561117d81611048565b6001600160a01b03600460206111a08360005460101c166001600160a01b031690565b604051928380927f5aa6e6750000000000000000000000000000000000000000000000000000000082525afa90811561120b575b6000916111ed575b501633036110e357610abf9061279c565b611205915060203d8111610b6357610b54818361172f565b386111dc565b61121361278f565b6111d4565b503461000e57600060031936011261000e5760206001600160a01b0360015416604051908152f35b503461000e5760208060031936011261000e5760005461126b9060101c6001600160a01b03166108f6565b90604051907f5aa6e6750000000000000000000000000000000000000000000000000000000082528082600481865afa91821561136e575b60009261134f575b506001600160a01b0380921633141592836112d3575b505050610ac157610abf60043561299c565b8192935090600491604051928380927fdbc0c0850000000000000000000000000000000000000000000000000000000082525afa918215611342575b600092611325575b5050163314153880806112c1565b61133b9250803d10610b6357610b54818361172f565b3880611317565b61134a61278f565b61130f565b816113679293503d8411610b6357610b54818361172f565b90386112ab565b61137661278f565b6112a3565b503461000e5761138a366106e0565b9091611394614fa1565b506001600160a01b0360005460101c163303610691578260020b8160020b9080821291821592611416575b8215611409575b82156113f8575b5081156113e8575b506107cf5790610616926107c092615190565b600a91500760020b1515386113d5565b600a900760020b15159150386113cd565b620d89e8821392506113c6565b620d89e719811292506113bf565b503461000e57600060031936011261000e57602061144061555b565b604051908152f35b503461000e57608061146a61145c36610869565b90611465614fa1565b615587565b6114956040518092606080918051845260208101516020850152604081015160408501520151910152565bf35b503461000e57600060031936011261000e576020600454604051908152f35b503461000e57600060031936011261000e57602065ffffffffffff600c5416604051908152f35b503461000e57600060031936011261000e576020600954604051908152f35b9181601f8401121561000e5782359167ffffffffffffffff831161000e576020838186019501011161000e57565b503461000e57606060031936011261000e5760043560243560443567ffffffffffffffff811161000e576115629036906004016114fc565b50506001600160a01b03600354163303611698578061160e575b508061158457005b6115996108f66001546001600160a01b031690565b803b1561000e576040517f40c10f1900000000000000000000000000000000000000000000000000000000815233600482015260248101929092526000908290604490829084905af18015611601575b15610abf57806115fb610abf926116f2565b80610313565b61160961278f565b6115e9565b6116236108f66002546001600160a01b031690565b803b1561000e576040517f40c10f1900000000000000000000000000000000000000000000000000000000815233600482015260248101929092526000908290604490829084905af1801561168b575b1561157c57806115fb611685926116f2565b3861157c565b61169361278f565b611673565b60046040517f21162cac000000000000000000000000000000000000000000000000000000008152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161170657604052565b61170e6116c2565b604052565b6080810190811067ffffffffffffffff82111761170657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761170657604052565b6040519060e0820182811067ffffffffffffffff82111761170657604052565b6020908160408183019282815285518094520193019160005b8281106117b7575050505090565b8351855293810193928101926001016117a9565b503461000e5760208060031936011261000e5767ffffffffffffffff60043581811161000e573660238201121561000e578060040135918211611863575b8160051b6040519261181d8583018561172f565b83526024848401918301019136831161000e57602401905b8282106118545761061661184885615ee4565b60405191829182611790565b81358152908401908401611835565b61186b6116c2565b611809565b503461000e57606060031936011261000e57600480359060243560443567ffffffffffffffff811161000e576118a990369084016114fc565b50506001600160a01b0390816003541691823303611aef5760009485938482136119f1575b50508282136118de575b82604051f35b6118f36108f66003546001600160a01b031690565b906040517fd21220a70000000000000000000000000000000000000000000000000000000081526020818781865afa9081156119e4575b85916119c6575b501690813b156119c2578361198a95604051968795869485937f40c10f190000000000000000000000000000000000000000000000000000000085528401602090939291936001600160a01b0360408201951681520152565b03925af180156119b5575b6119a2575b8181806118d8565b806115fb6119af926116f2565b3861199a565b6119bd61278f565b611995565b8380fd5b6119de915060203d8111610b6357610b54818361172f565b38611931565b6119ec61278f565b61192a565b826040517f0dfe16810000000000000000000000000000000000000000000000000000000081526020818981865afa908115611ae2575b8791611ac4575b501691823b15611ac057611a8a928692836040518096819582947f40c10f190000000000000000000000000000000000000000000000000000000084528d8401602090939291936001600160a01b0360408201951681520152565b03925af18015611ab3575b611aa0575b806118ce565b806115fb611aad926116f2565b38611a9a565b611abb61278f565b611a95565b8580fd5b611adc915060203d8111610b6357610b54818361172f565b38611a2f565b611aea61278f565b611a28565b836040517f21162cac000000000000000000000000000000000000000000000000000000008152fd5b503461000e57600060031936011261000e576040611b3461527f565b82519182526020820152f35b503461000e57600060031936011261000e57602062ffffff60035460b81c16604051908152f35b60843561071281611048565b60a43561071281611048565b600435611b8b81610353565b7fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00006000549260101b16911617600055602435611bdd81610353565b6001600160a01b03807fffffffffffffffffffffffff00000000000000000000000000000000000000009216826001541617600155604435611c1e81610353565b16906002541617600255611c6b606435611c3781610353565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355565b611cbf611c76611b67565b7fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff76ffffff00000000000000000000000000000000000000006003549260a01b16911617600355565b611d16611cca611b73565b7fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff79ffffff00000000000000000000000000000000000000000000006003549260b81b16911617600355565b611d1e6123b5565b61075165ffffffffffff600c5416611e5d565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600081129060001991817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313811516611db5575b81600160ff1b03831216611da9570190565b611db1611d31565b0190565b611dbd611d31565b611d97565b60008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03600013811516611e0e575b81600160ff1b0360001216611e065790565b610712611d31565b611e16611d31565b611df4565b60008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313811516611db55781600160ff1b03831216611da9570190565b65ffffffffffff1960085465ffffffffffff8093169281168310611f67575b611ebb600654611ea5611e8e826126af565b6000811280611f39575b611f2b575b600754611e1b565b600755611eb3600554611dc2565b600555611dc2565b60065516176008557f62187ed3f133848cd15541a988e634a4c2e6a75750e025c69ea914b1ea2263cc60405180611f268190600160a060c084019360055481526006546020820152600754604082015265ffffffffffff600854166060820152600060808201520152565b0390a1565b611f3490611d61565b611e9d565b50611f4383612724565b700100000000000000000000000000000000600091820915611e9857506001611e98565b611f6f611d31565b611e7c565b907f62187ed3f133848cd15541a988e634a4c2e6a75750e025c69ea914b1ea2263cc929165ffffffffffff196008549165ffffffffffff90611fba86868385881661235a565b611fee60065491611fe3611fce84836126f1565b600081128061209857611f2b57600754611e1b565b600755600554611e1b565b6005556000811290807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0360001382151661208b575b600160ff1b036000121661207e575b16911617600855611f266040519283928360a0909392919360c081019460055482526006546020830152600754604083015265ffffffffffff60085416606083015260808201520152565b612086611d31565b612033565b612093611d31565b612024565b506120a283612724565b7001000000000000000000000000000000006120bd87612724565b6000920915611e9857506001611e98565b65ffffffffffff19907f62187ed3f133848cd15541a988e634a4c2e6a75750e025c69ea914b1ea2263cc95949361218360085494859361217861217361216d6121228c8c8965ffffffffffff809c1661235a565b9361214c60065495611fe361213788836126f1565b60008112806121e857611f2b57600754611e1b565b6005556001906000808212156121e157915061216790612437565b95612739565b9461244f565b6126a0565b91156121d157611e1b565b60065516911617600855611f266040519283928360a0909392919360c081019460055482526006546020830152600754604083015265ffffffffffff60085416606083015260808201520152565b906121db90612437565b90611e1b565b5095612739565b506121f283612724565b7001000000000000000000000000000000006120bd8b612724565b60016000198183600160ff1b058212600085131616612269575b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff051360008312161661225c575b60000390565b612264611d31565b612256565b612271611d31565b612227565b600082136000821390837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81810485118385161661230e575b6000821292600160ff1b94848787058512911616612301575b826000871295058612908516166122f4575b0583129116166122e8570290565b6122f0611d31565b0290565b6122fc611d31565b6122da565b612309611d31565b6122c8565b612316611d31565b6122af565b9061232b612173610712946125df565b9165ffffffffffff8080931691169081811061234d575b031660050b90612276565b612355611d31565b612342565b61071293600084129361237f9161217391861561237a5761237a9061220d565b612623565b926123a5575b65ffffffffffff8080931691169081811061234d57031660050b90612276565b916123af90612437565b91612385565b7fd2d06ee736d3d6ea4ad579594bdfae87317018c75692e5a82d77fdc85fc389f360207f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80600a55604051908152a1565b60207fd2d06ee736d3d6ea4ad579594bdfae87317018c75692e5a82d77fdc85fc389f39180600a55604051908152a1565b600160ff1b811461225c5760000390565b1561000e57565b70010000000000000000000000000000000091600019838309928260801b928380861095039480860395146124db5790829161248c868411612448565b0981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505091506124ea821515612448565b0490565b906000198183098183029182808310920391808303921461254c57620f4240908282111561000e577fde8f6cefed634549b62c77574f722e1ac57e23f24d8fd5cb790fb65668c26139940990828211900360fa1b910360061c170290565b5050620f424091500490565b6c0100000000000000000000000091600019838309928260601b928380861095039480860395146124db5790829161248c868411612448565b60001982820990828102928380841093039280840393146125d6576c01000000000000000000000000918383111561000e570990828211900360a01b910360601c1790565b50505060601c90565b60009060001981830990811561261e5770010000000000000000000000000000000090828211156119c257830990811515900360801b910360801c1790565b505090565b600019828209908281029283808410930392808403931461266c57700100000000000000000000000000000000918383111561000e570990828211900360801b910360801c1790565b50505060801c90565b909160001983830992808302928380861095039480860395146124db5790829161248c868411612448565b600160ff1b81101561000e5790565b90600160008312156126e457506126d26121736126cd600094612437565b6125df565b91156126da57565b9061071290612437565b916121736126d2916125df565b6121736127176126d29294939460016000821260001461271d5750612167600091612437565b94612623565b9095612739565b60008113156127305790565b61071290612437565b919060008312156107125761274f901592612437565b9190565b6000199060018110611da9570190565b81811061276e570390565b612776611d31565b0390565b9081602091031261000e575161071281610353565b506040513d6000823e3d90fd5b62ffffff811690620186a08211612827577f5e286c9a939d59334080ddf15517957037c2228384e26bb92a368ce44c531edd9161281e6020927fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff76ffffff00000000000000000000000000000000000000006003549260a01b16911617600355565b604051908152a1565b60246040517fd4131ba200000000000000000000000000000000000000000000000000000000815260106004820152fd5b62ffffff811690620186a082116128dd577f2edf7eef14cb246dab2aac555e300928981632918159d9e33fcaa24dcd38cb409161281e6020927fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff79ffffff00000000000000000000000000000000000000000000006003549260b81b16911617600355565b60246040517fd4131ba200000000000000000000000000000000000000000000000000000000815260206004820152fd5b6123b56159cf565b61291e6159cf565b6001600160a01b038116801561296b57507fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006107519160601b166b41444452455353000000000017612406565b602490604051907f495097960000000000000000000000000000000000000000000000000000000082526004820152fd5b6129a46159cf565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81148015612a0c575b6129db5761075190612406565b602490604051907f83119a2f0000000000000000000000000000000000000000000000000000000082526004820152fd5b506001600160a01b03612a1e82612a26565b1615156129ce565b906000918060a01b7f414444524553530000000000000000000000000000000000000000000000000014612a575750565b60601c9150565b6040519060e0820182811067ffffffffffffffff821117612aa8575b6040528160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b612ab06116c2565b612a7a565b60405190610100820182811067ffffffffffffffff821117612b06575b6040528160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b612b0e6116c2565b612ad2565b919082604091031261000e576020825192015190565b15612b3057565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6001907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8111611da9570190565b81198111611da9570190565b519061ffff8216820361000e57565b519061075182610349565b908160e091031261000e578051612bc981610353565b916020820151612bd8816106bb565b91612be560408201612b99565b91612bf260608301612b99565b91612bff60808201612b99565b9160a082015160ff8116810361000e5760c09092015161071281610349565b9081602091031261000e5751610712816106c6565b9081602091031261000e575161071281611048565b9081602091031261000e5751610712816106bb565b6000821282600160ff1b018212811516612ca0575b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182131661276e570390565b612ca8611d31565b612c72565b91908261010091031261000e578151612cc5816106c6565b91602081015180600f0b810361000e579160408201519160608101519160808201518060060b810361000e579160a0810151612d0081610353565b9160c082015163ffffffff8116810361000e5760e0610712919301612ba8565b600f0b7fffffffffffffffffffffffffffffffff80000000000000000000000000000000811461225c5760000390565b906fffffffffffffffffffffffffffffffff8080931691168092038111611da9570190565b6fffffffffffffffffffffffffffffffff918216911681811061276e570390565b6000199060020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000018112600116611da9570190565b60020b9060020b906000821282627fffff19018212811516612df9575b82627fffff0182131661276e570390565b612e01611d31565b612de8565b91949394929092612e15612a5e565b50801561377f576001600160a01b03612e3587516001600160a01b031690565b16156136c5575b60608601946fffffffffffffffffffffffffffffffff612e6c87516fffffffffffffffffffffffffffffffff1690565b1615613623575b608087015160020b156134f9575b84156134ac57612e9b6108f688516001600160a01b031690565b6001600160a01b03841690811190811561349d575b505b61346357612f4f612eca88516001600160a01b031690565b96612f28612ef6612edf60208c015160020b90565b92516fffffffffffffffffffffffffffffffff1690565b91612f1e612f02611770565b878152600060208201526001600160a01b03909b1660408c0152565b60020b60608a0152565b60006080890181905260a08901526fffffffffffffffffffffffffffffffff1660c0880152565b855b8651151580613449575b1561340a5786612fd8612fce612fc4898c612fb46080612fab6060612f7e612a5e565b99612fa3612f9660408301516001600160a01b031690565b6001600160a01b03168c52565b015160020b90565b92015160020b90565b906001600160a01b038c16614a90565b1515604085015290565b60020b6020830152565b602081015160020b620d89e7198112156133f25750620d89e71960208201525b61302161301161300c602084015160020b90565b613da0565b6001600160a01b03166060830152565b6130bc61309361303b60408b01516001600160a01b031690565b89156133da5760608401516001600160a01b038981169116105b156133bf578b8b895b61308d60a061308060c08501516fffffffffffffffffffffffffffffffff1690565b935194015162ffffff1690565b936137a9565b60c0860190815260a08601918252608086019283526001600160a01b0390931660408d01529192565b600087131561338757906130e36130dc6121736130fa9451865190612b8d565b8c51612c5d565b8b526130f460208c015191516126a0565b90612c5d565b60208a01525b61313561312060c08b01516fffffffffffffffffffffffffffffffff1690565b6fffffffffffffffffffffffffffffffff1690565b9081613363575b505061314a81898b8a615f0d565b60408801516001600160a01b0316906131706108f660608301516001600160a01b031690565b6001600160a01b038316908103613331575060408101516131b192506131c2575b87156131b657602001516131a79060020b612d96565b60020b6060890152565b612f51565b6020015160020b6131a7565b61329c89896132246131d8602086015160020b90565b604051907ff30dba93000000000000000000000000000000000000000000000000000000008252818d816001600160a01b038161010097889660048301919091602081019260020b9052565b0392165afa918215613324575b6000926132ef575b505080916132df575b50600081600f0b126000146132a15761327d61312061327760c06132839501516fffffffffffffffffffffffffffffffff1690565b92612d20565b90612d75565b6fffffffffffffffffffffffffffffffff1660c08b0152565b613191565b6132c160c06132da9301516fffffffffffffffffffffffffffffffff1690565b906fffffffffffffffffffffffffffffffff1690612d50565b613283565b6132e99150612d20565b38613242565b61330e9250803d1061331d575b613306818361172f565b810190612cad565b50505050505090503880613239565b503d6132fc565b61332c61278f565b613231565b9051613345906001600160a01b03166108f6565b03613351575b50612f51565b6131a761335d91614147565b3861334b565b61337b91613371915161244f565b60808a0151612b8d565b6080890152388061313c565b61339e6133976133b593516126a0565b8c51611e1b565b8b526121db61217360208d01519251855190612b8d565b60208a0152613100565b8b8b6133d560608701516001600160a01b031690565b61305e565b60608401516001600160a01b03898116911611613055565b620d89e81215612ff857620d89e86020820152612ff8565b9492509550915060008213901515146000146134355761342e602091845190612c5d565b9201519192565b6020830151925161344591612c5d565b9192565b5060408701516001600160a01b0385811691161415612f5b565b6040517f51b516ae0000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602490fd5b6401000276a391501038612eb0565b6134c06108f688516001600160a01b031690565b6001600160a01b0384169081109081156134db575b50612eb2565b73fffd8963efd1fc6a506488495d951d5263988d26915011386134d5565b6135a561355d60046001600160a01b038716604051907fddca3f43000000000000000000000000000000000000000000000000000000008252602093828d8682878297875afa918215613616575b6000926135e4575b5060a0019062ffffff169052565b604051928380927fd0c93a7c0000000000000000000000000000000000000000000000000000000082525afa9182156135d7575b6000926135aa575b505060020b6080890152565b612e81565b6135c99250803d106135d0575b6135c1818361172f565b810190612c48565b3880613599565b503d6135b7565b6135df61278f565b613591565b60a091925061360890863d881161360f575b613600818361172f565b810190612c33565b919061354f565b503d6135f6565b61361e61278f565b613547565b6136856040517f1a6865020000000000000000000000000000000000000000000000000000000081526020816004816001600160a01b038a165afa9081156136b8575b60009161368a575b506fffffffffffffffffffffffffffffffff168752565b612e73565b6136ab915060203d81116136b1575b6136a3818361172f565b810190612c1e565b3861366e565b503d613699565b6136c061278f565b613666565b61373a6040517f3850c7bd00000000000000000000000000000000000000000000000000000000815260e0816004816001600160a01b0389165afa8015613772575b6000908190829061373f575b60ff1660408b015290915061372d905b60020b60208a0152565b6001600160a01b03168752565b612e3c565b50505061372d61375f6137239260e03d81116109c0576109ab818361172f565b5094925050509390919050839250613713565b61377a61278f565b613707565b60046040517f1f2a2005000000000000000000000000000000000000000000000000000000008152fd5b949190928594600080806001600160a01b03908189169283838c161015978b8389129b898d15988c8a60001461394a579050849291506137f362ffffff8c620f424003168d6124ee565b81156139385783613805818786613c9a565b955b86831061392657505050509e8f965b8716968789149c6000146138ce578c806138c7575b156138b8575050505b9b8c99806138b1575b156138a15750505b985b80613896575b61388b575b5082613880575b50501561386557500390565b9050610712915062ffffff8082620f424003169116856139cb565b141590503880613859565b859003975038613852565b50858103891161384d565b6138ac92508d613d01565b613845565b508b61383d565b6138c29350613c9a565b613834565b508961382b565b809392918d8061391f575b15613910575050505b9c8d9a80613909575b156138fa575050505b98613847565b6139049350613c3f565b6138f4565b508c6138eb565b61391a9350613d3c565b6138e2565b508a6138d9565b6139309450613a06565b9e8f96613816565b83613944818588613d3c565b95613807565b90938593929650816000146139895783613965818386613d01565b915b919789039188831061397f57505050509e8f96613816565b6139309450613b96565b83613995818584613c3f565b91613967565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9291906139d9828286612675565b9382156139f9575b096139e857565b9060001981101561000e5760010190565b613a0161399b565b6139e1565b926001600160a01b039081851691821561000e576fffffffffffffffffffffffffffffffff841691821561000e5760009015613a49575050505061071292613a99565b506107129550613a69949293509091908111613a6e5760601b0490612b8d565b613b82565b90613a7891612558565b90612b8d565b8015613a8c575b6000190490565b613a9461399b565b613a85565b9190811561261e577bffffffffffffffffffffffffffffffff0000000000000000000000009060601b16906001600160a01b038093168082028183820414613b09575b509081613af09215613afc575b8304612b8d565b80820615159104011690565b613b0461399b565b613ae9565b8301838110613adc579150613b1d926139cb565b1690565b9190811561261e577bffffffffffffffffffffffffffffffff0000000000000000000000006001600160a01b039160601b16921691828083029283041480613b79575b1561000e5761071292613a69928203916139cb565b50818111613b64565b906001600160a01b03821691820361000e57565b919290926001600160a01b039384841693841561000e576fffffffffffffffffffffffffffffffff821693841561000e5715613c30575060009050848211613bf4575060601b908082061515910401905b8181111561000e57031690565b90916c01000000000000000000000000613c0e8285612558565b9309613c1c575b5090613be7565b600019821015611045575060010138613c15565b91935091506107129350613b21565b91906001600160a01b039182821683851611613c92575b82841693841561000e57837bffffffffffffffffffffffffffffffff000000000000000000000000916124ea9585169403169160601b16612675565b929092613c56565b91906001600160a01b039182821683851611613cf9575b82841693841561000e57837bffffffffffffffffffffffffffffffff00000000000000000000000091613ced9585169403169160601b166139cb565b90808206151591040190565b929092613cb1565b61071292916fffffffffffffffffffffffffffffffff916001600160a01b039182811683831611613d36575b03169116612591565b90613d2d565b6c01000000000000000000000000916fffffffffffffffffffffffffffffffff916001600160a01b039182811683831611613d9a575b0316921691613d818184612591565b9209613d8a5790565b60001981101561000e5760010190565b90613d72565b60020b600081121561414157806000035b620d89e88111614117576001600160a01b039160018216156140ee5770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b1691600281166140d2575b600481166140b6575b6008811661409a575b6010811661407e575b60208116614062575b60408116614046575b60809081811661402b575b6101008116614010575b6102008116613ff5575b6104008116613fda575b6108008116613fbf575b6110008116613fa4575b6120008116613f89575b6140008116613f6e575b6180008116613f53575b620100008116613f38575b620200008116613f1e575b620400008116613f04575b6208000016613ee9575b50600012613edb575b63ffffffff8116613ed25760ff60005b169060201c011690565b60ff6001613ec8565b613ee490613a7e565b613eb8565b6b048a170391f7dc42444e8fa26000929302901c9190613eaf565b6d2216e584f5fa1ea926041bedfe98909302811c92613ea5565b926e5d6af8dedb81196699c329225ee60402811c92613e9a565b926f09aa508b5b7a84e1c677de54f3e99bc902811c92613e8f565b926f31be135f97d08fd981231505542fcfa602811c92613e84565b926f70d869a156d2a1b890bb3df62baf32f702811c92613e7a565b926fa9f746462d870fdf8a65dc1f90e061e502811c92613e70565b926fd097f3bdfd2022b8845ad8f792aa582502811c92613e66565b926fe7159475a2c29b7443b29c7fa6e889d902811c92613e5c565b926ff3392b0822b70005940c7a398e4b70f302811c92613e52565b926ff987a7253ac413176f2b074cf7815e5402811c92613e48565b926ffcbe86c7900a88aedcffc83b479aa3a402811c92613e3e565b926ffe5dee046a99a2a811c461f1969c305302811c92613e34565b916fff2ea16466c96a3843ec78b326b528610260801c91613e29565b916fff973b41fa98c081472e6896dfb254c00260801c91613e20565b916fffcb9843d60f6159c9db58835c9266440260801c91613e17565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c91613e0e565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c91613e05565b916ffff97272373d413259a46990580e213a0260801c91613dfc565b70ffffffffffffffffffffffffffffffffff700100000000000000000000000000000000613df1565b60046040517f2bc80f3a000000000000000000000000000000000000000000000000000000008152fd5b80613db1565b6001600160a01b038116906401000276a382101580614457575b1561442d5777ffffffffffffffffffffffffffffffffffffffff000000009060201b16806fffffffffffffffffffffffffffffffff811160071b9181831c9267ffffffffffffffff841160061b93841c9363ffffffff851160051b94851c9461ffff861160041b95861c60ff9687821160031b91821c92600f841160021b93841c94600160038711811b96871c11961717171717171791608083101560001461442157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8182011c5b8002607f928392828493841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c80029081881c82881c1c80029283891c84891c1c800294858a1c868a1c1c800296878b1c888b1c1c800298898c1c8a8c1c1c80029a8b8d1c8c821c1c8002809d1c8d821c1c8002809e81901c90821c1c80029e8f80911c911c1c800260cd1c6604000000000000169d60cc1c6608000000000000169c60cb1c6610000000000000169b60ca1c6620000000000000169a60c91c6640000000000000169960c81c6680000000000000169860c71c670100000000000000169760c61c670200000000000000169660c51c670400000000000000169560c41c670800000000000000169460c31c671000000000000000169360c21c672000000000000000169260c11c674000000000000000169160c01c67800000000000000016907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800160401b1717171717171717171717171717693627a301d71055774c85027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc556810160801d60020b906fdb2df09e81959a81455e260799a0632f0160801d60020b91600090838314600014614405575050905090565b6144116108f685613da0565b11905061441c575090565b905090565b905081607f031b61422a565b60046040517f4980e1be000000000000000000000000000000000000000000000000000000008152fd5b5073fffd8963efd1fc6a506488495d951d5263988d268210614161565b156144c8571561448e57505061448a8151614674565b9052565b6144ba6144a361448a936144c0938651614826565b806080879493940152826060870152855192612b8d565b906148fd565b808352614674565b6144d157505050565b61456461454561453061453761448a956144f36144ee8951612724565b6147e3565b61453d62ffffff9182806145068b614660565b1681861690818110614584575b0316908115614577575b049261453783620f42409788938c61480e565b16856147fb565b04612b5f565b9616906147fb565b828180941061456a575b03806080860152826060860152845192612b8d565b906148df565b614572611d31565b61454f565b61457f61399b565b61451d565b61458c611d31565b614513565b919392911561460757156145db57906144ba60606145c861448a94602085016145ba815161475e565b9052604085019687516148af565b9184836080849701520152845192612b8d565b50905061448a60408201916145646145f3845161475e565b918285526080606082015191015190612b8d565b61462f579061456460606145c861448a946040850196614627885161475e565b8089526148af565b50905060208101614640815161475e565b905261448a60408201916144ba8351916080606082015191015190612b8d565b62ffffff16620f424081811061276e570390565b6107129060017e4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a78211600083131616614751575b60017fffbe76c8b4395810624dd2f1a9fbe76c8b4395810624dd2f1a9fbe76c8b439598212600083121616614744575b6001620f404c6101f483020560008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313811516614737575b81600160ff1b0383121661472a575b0190611e1b565b614732611d31565b614723565b61473f611d31565b614714565b61474c611d31565b6146d7565b614759611d31565b6146a7565b620f404c620f42409160017d08648ed44d2db5ee0837f89d8553b31787ac4f44c07f66701aab8bdfa34082116000831316166147d6575b60017ffffff79b712bb2d24a11f7c807627aac4ce87853b0bb3f80998fe55474205cc082126000831216166147c957020590565b6147d1611d31565b020590565b6147de611d31565b614795565b620f42409080600019048211811515166122e8570290565b80600019048211811515166122e8570290565b9062ffffff8080931691168092038111611da9570190565b9161453761483b6144ee614888949695612724565b61488262ffffff916145378389169361487b620f424097889487840386116148a2575b8361486b838a890161480e565b16908115614895575b049b61480e565b16896147fb565b956147fb565b828180941061276e570390565b61489d61399b565b614874565b6148aa611d31565b61485e565b61453761488892949361453061453d6148ca61453795612724565b92620f424095869162ffffff9485918c61480e565b90600082136001036148f45761071291611e1b565b61071291612c5d565b90600082136148f45761071291611e1b565b60020b9060020b90811561493f575b6000198214627fffff19821416614933570590565b61493b611d31565b0590565b61494761399b565b61491e565b9060020b90811561495f575b60020b0790565b61496761399b565b614958565b6000199060020b627fffff198114611da9570190565b60019060020b6000811281627fffff0383138115166149ae575b81627fffff1903831216611da9570190565b6149b6611d31565b61499c565b60020b9060020b906000811281627fffff0383138115166149ae5781627fffff1903831216611da9570190565b9081602091031261000e575190565b60ff168060ff10614a09575b60ff0390565b614a11611d31565b614a03565b60ff918216911681811061276e570390565b60020b9060020b9060008213600082139083627fffff818104851183851616614a83575b6000821292627fffff199484878705851291161661230157826000871295058612908516166122f4570583129116166122e8570290565b614a8b611d31565b614a4c565b92919091614a9e828461490f565b928260008260020b129182614d05575b5050614cf5575b15614be357614ad48260020b9060ff6101008360081d60010b93071690565b9093614b34602060ff841696614af56001891b614af081612753565b612b8d565b9360405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa908115614bd6575b600091614ba8575b5016801580159590614b94575092614b86614b7b614b75614b8c94614b6f614b9198614d23565b90614a16565b60ff1690565b62ffffff1660020b90565b90612dcb565b614a28565b91565b614b8c9250614b9194915060020b90612dcb565b614bc9915060203d8111614bcf575b614bc1818361172f565b8101906149e8565b38614b48565b503d614bb7565b614bde61278f565b614b40565b602092614c5c614c0b614bf585614982565b60020b9060ff6101008360081d60010b93071690565b9590614c1c600160ff89161b612753565b199360405180809581947f5339c29600000000000000000000000000000000000000000000000000000000835260048301919091602081019260010b9052565b03915afa908115614ce8575b600091614cca575b5016801580159490614caa5790614ca4614b7b614b75614b8c94614c9f614c99614b9199614982565b95614e11565b614a16565b906149bb565b614b8c9150614ca4614b7b614b75614cc4614b9197614982565b936149f7565b614ce2915060203d8111614bcf57614bc1818361172f565b38614c70565b614cf061278f565b614c68565b91614cff9061496c565b91614ab5565b614d1a925090614d149161494c565b60020b90565b15158238614aae565b90600091614d32811515612448565b700100000000000000000000000000000000811015614e06575b80680100000000000000006002921015614df7575b640100000000811015614de8575b62010000811015614dd9575b610100811015614dca575b6010811015614dbb575b6004811015614dad575b1015614da257565b90600160ff91011690565b92810160ff1692811c614d9a565b600493840160ff16931c614d90565b600893840160ff16931c614d86565b601093840160ff16931c614d7b565b602093840160ff16931c614d6f565b604093840160ff16931c614d61565b60809250821c614d4c565b90614e1d821515612448565b60ff6fffffffffffffffffffffffffffffffff831615614f975750607f5b67ffffffffffffffff831615614f8d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00160ff165b63ffffffff831615614f83577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160ff165b61ffff831615614f79577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00160ff165b60ff831615614f6f577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80160ff165b600f831615614f65576003190160ff165b6003831615614f595760ff7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe6001920116925b16614f4d57565b9060001960ff91011690565b9160019060021c614f46565b9160041c91614f13565b9160081c91614f02565b9160101c91614ed3565b9160201c91614ea3565b9160401c91614e71565b9160801c91614e3b565b60405190614fae82611713565b60006060838281528260208201528260408201520152565b90604090939293614fd5615a81565b60c4614fe0866150b3565b9360006150046001600160a01b0396614ffc8860035416615114565b908685615a9d565b95600354166fffffffffffffffffffffffffffffffff8651998a9687957f3c8a7d8d00000000000000000000000000000000000000000000000000000000875230600488015260020b602487015260020b604486015216606484015260a060848401528160a48401525af19283156150a6575b600090819461508557509291565b90506150a091935060403d811161064e5761063f818361172f565b92909291565b6150ae61278f565b615077565b6fffffffffffffffffffffffffffffffff166f800000000000000000000000000000008110156150e357600f0b90565b602490604051907f832da39d0000000000000000000000000000000000000000000000000000000082526004820152fd5b60e06001600160a01b03916004604051809481937f3850c7bd000000000000000000000000000000000000000000000000000000008352165afa908115615183575b600091615161575090565b615179915060e03d81116109c0576109ab818361172f565b5050505050905090565b61518b61278f565b615156565b919261519a615a81565b6151ab6151a6856150b3565b612d20565b9160406fffffffffffffffffffffffffffffffff60646151e26001600160a01b03966151da8860035416615114565b90868a615a9d565b95600354169760008451998a9485937fa34123a70000000000000000000000000000000000000000000000000000000085528b60020b60048601528860020b60248601521660448401525af1948515615272575b600090819661524d575b509061075191959461588f565b61075192965061526b915060403d811161064e5761063f818361172f565b9591615240565b61527a61278f565b615236565b6152a06152976108f66001546001600160a01b031690565b63ffffffff1690565b906152ba6108f66000546001600160a01b039060101c1690565b6040517fce4c18de00000000000000000000000000000000000000000000000000000000815263ffffffff84166004820152926020908185602481865afa9485156153dc575b6000956153b7575b5061274f92918591615318615434565b949015615329575b50505050615512565b6040517f706bdd2500000000000000000000000000000000000000000000000000000000815263ffffffff92909216600483015261538494508290829060249082905afa9182156153aa575b60009261538d575b50506153e9565b83388080615320565b6153a39250803d10614bcf57614bc1818361172f565b388061537d565b6153b261278f565b615375565b8295506153d49061274f94933d8811614bcf57614bc1818361172f565b949192615308565b6153e461278f565b615300565b6154226121736154086153ff62015180956154d2565b6130f4856154d2565b600081129390841561541d5761541d9061220d565b61244f565b9061542b570590565b61493b90612437565b600a54907f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82146154ca576001600160a01b0361547083612a26565b168061547d575060019190565b600492506040906000938480927ffeaf968c0000000000000000000000000000000000000000000000000000000082525afa806154b8579190565b91506453d1ac100060205160801b0590565b600091508190565b600160ff1b8110156154e15790565b602490604051907f8320b7bc0000000000000000000000000000000000000000000000000000000082526004820152fd5b6c883148f5cb1270b85273b667ae908181131561552d575090565b90507fffffffffffffffffffffffffffffffffffffff77ceb70a34ed8f47ad8c49985280821261441c575090565b6107126121db61556961527f565b6005929192549265ffffffffffff806008541690600c54169061235a565b918060020b8260020b90808212918215926156ce575b82156156c1575b82156156b0575b5081156156a0575b50615664579061562091600460e06001600160a01b0360035416604051928380927f3850c7bd0000000000000000000000000000000000000000000000000000000082525afa908115615657575b600091615632575b506156126156dc565b918251865260095493615710565b60608401526040830152602082015290565b61564a915060e03d81116109c0576109ab818361172f565b5050505050905038615609565b61565f61278f565b615601565b6040517f957b5ed5000000000000000000000000000000000000000000000000000000008152600292830b6004820152910b6024820152604490fd5b600a91500760020b1515386155b3565b600a900760020b15159150386155ab565b620d89e8821392506155a4565b620d89e7198112925061559d565b604051906156e982611713565b60055482526006546020830152600754604083015260085465ffffffffffff166060830152565b9061071292849694926157308160020b600052600b602052604060002090565b6157478460020b600052600b602052604060002090565b916001820154600361576284546002860154848b5192615853565b9301549460020b809260020b13615824575b89600185015492600361579087546002890154878d5192615853565b9601549760020b13156157d7575b509160406157c46157bf936157bf6157cc979660206157d29b9c0151612c5d565b612c5d565b9b0151612c5d565b95612763565b612763565b92906157c4886157bf60409360206158126157d29c61580c6157cc9c896158046157bf9d878b0151612c5d565b980151612c5d565b9a612763565b9b50509496975050935050508961579e565b61584661583b61584d9260208a9896980151612c5d565b956040890151612c5d565b928a612763565b93615774565b906158646121db9261071295612c5d565b906126f1565b919082604091031261000e5760208251615883816106c6565b920151610712816106c6565b9060409060a46001600160a01b0360035416936000845195869485937f4f1eb3d800000000000000000000000000000000000000000000000000000000855230600486015260020b602485015260020b60448401526fffffffffffffffffffffffffffffffff80606485015260848401525af18015615944575b615917575b50610751615cfe565b6159379060403d811161593d575b61592f818361172f565b81019061586a565b5061590e565b503d615925565b61594c61278f565b615909565b9060039160020b600052600b6020526040600020906159af825491604060018501918254926159a661599760028901976121db6159918a54928751612c5d565b886126f1565b94835189556020840151612c5d565b90550151612c5d565b905501908154908181106159c257039055565b6159ca611d31565b039055565b7f62187ed3f133848cd15541a988e634a4c2e6a75750e025c69ea914b1ea2263cc611f266159fb61527f565b905065ffffffffffff65ffffffffffff1981600c541691615a39615a25858560085494851661231b565b611eb360065491611fe3611fce84836126f1565b600655161760085560405191829182919060a060c084019360055481526006546020820152600754604082015265ffffffffffff600854166060820152600060808201520152565b610751615a8c61527f565b9065ffffffffffff600c5416611f74565b9392909193615aaa614fa1565b50615ab36156dc565b9160095492600091829488600f0b9889615b5b575b505050506000615adb8584611465614fa1565b9612615ae8575b50505050565b615b2b575b50615afb575b808080615ae2565b615b259060009060020b8152600b6020526003604082208281558260018201558260028201550155565b38615af3565b615b559060009060020b8152600b6020526003604082208281558260018201558260028201550155565b38615aed565b909192809650615ba49450519060208701805191615b92888660408c01958651906001600160a01b0398868c8b6003541696615bae565b9851915192519360035416958a615bae565b9138808080615ac8565b90979697949294939193615bcf8260020b600052600b602052604060002090565b6040517ff30dba93000000000000000000000000000000000000000000000000000000008152600284900b60048201526101009a9196918b90829060249082906001600160a01b03165afa9a8b15615cf1575b60009b615ccb575b5050600081600f0b12600014615caa57615c49613120615c4f92612d20565b8a612d75565b6fffffffffffffffffffffffffffffffff809a1615998a911615141598615c7a575b50505050505050565b60020b9060020b1315615c8f575b8080615c71565b60039383556001830155600282015501553880808080615c88565b615cc6906fffffffffffffffffffffffffffffffff168a612d50565b615c4f565b615ce2929b50803d1061331d57613306818361172f565b50505050505050983880615c2a565b615cf961278f565b615c22565b615d136108f66002546001600160a01b031690565b6040517f70a08231000000000000000000000000000000000000000000000000000000008082523060048301526020929091908382602481845afa918215615ed7575b600092615eb8575b5081615e43575b5050615d7c6108f66001546001600160a01b031690565b604051918252306004830152908281602481855afa928315615e36575b600093615e17575b505081615dac575050565b803b1561000e576040517f42966c6800000000000000000000000000000000000000000000000000000000815260048101929092526000908290602490829084905af18015615e0a575b615dfd5750565b806115fb610751926116f2565b615e1261278f565b615df6565b615e2e929350803d10614bcf57614bc1818361172f565b903880615da1565b615e3e61278f565b615d99565b803b1561000e576040517f42966c6800000000000000000000000000000000000000000000000000000000815260048101929092526000908290602490829084905af18015615eab575b615e98575b80615d65565b806115fb615ea5926116f2565b38615e92565b615eb361278f565b615e8d565b615ed0919250843d8611614bcf57614bc1818361172f565b9038615d5e565b615edf61278f565b615d56565b805160051b810160209081018183015b818110615f015750505090565b80515481528201615ef4565b91615fa092604092816000146160a657608086015191615f4c615f3360a08901516154d2565b6003549062ffffff808360b81c169260a01c16906148af565b5060c08501936fffffffffffffffffffffffffffffffff80615f7e87516fffffffffffffffffffffffffffffffff1690565b1615158061609d575b615ff1575b50505050505001516001600160a01b031690565b6001600160a01b03615fbf6108f660608501516001600160a01b031690565b911614615fc95750565b6040810151615fd55750565b602001516009546107519160020b615feb6156dc565b90615951565b61607c9561605361606f9561606994613120946160196160779a9060e060c083015192015190565b9290936000146160875761602c906154d2565b85516fffffffffffffffffffffffffffffffff16600c5465ffffffffffff169216906120ce565b516fffffffffffffffffffffffffffffffff1690565b9061244f565b600954612b8d565b600955565b388080808080615f8c565b616093616098916154d2565b612437565b61602c565b50811515615f87565b60a086015191615f4c615f3360808901516154d256fea26469706673582212205a2b40af759acc6a274eb533234019356911939f35050329cb5398cbf204a15b64736f6c634300080e0033';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  override connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
