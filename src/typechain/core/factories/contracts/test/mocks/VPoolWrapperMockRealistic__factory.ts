/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../../../../contracts/test/mocks/VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'value',
        type: 'uint128',
      },
    ],
    name: 'SafeCast_Int128Overflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCast_Int256Overflow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AccruedProtocolFeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int256',
        name: 'fundingRateOverrideX128',
        type: 'int256',
      },
    ],
    name: 'FundingRateOverrideUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
    ],
    name: 'LiquidityFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        indexed: false,
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fundingRateOverrideX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFundingRateAndVirtualPrice',
    outputs: [
      {
        internalType: 'int256',
        name: 'fundingRateX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IClearingHouse',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVQuote',
            name: 'vQuote',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'fundingRateOverrideX128_',
        type: 'int256',
      },
    ],
    name: 'setFundingRateOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuoteAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'useZeroFundingRate',
        type: 'bool',
      },
    ],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vQuote',
    outputs: [
      {
        internalType: 'contract IVQuote',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506008805465ffffffffffff19169055614e758061002f6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637feedaa11161010f578063acfd7928116100a2578063dbd035ff11610071578063dbd035ff14610555578063fa461e3314610575578063fb7e3e2414610588578063fca6fbf2146105a557600080fd5b8063acfd792814610507578063adb6183214610510578063c04b98c414610539578063d34879971461054257600080fd5b80639f883c12116100de5780639f883c12146104c6578063a34123a7146104d9578063a3a1e7e9146104ec578063a3c35e2c146104f457600080fd5b80637feedaa11461046357806386c8e9a7146104765780638b1e9781146104a05780639bb1a99c146104b357600080fd5b806348aaa8c0116101875780635e622abc116101565780635e622abc146103fa5780636719578c146104025780636c544335146104155780637779815c1461045b57600080fd5b806348aaa8c01461036c5780634bc36bd6146103c157806351240336146103d457806356d15a88146103e757600080fd5b80631e2eaeaf116101c35780631e2eaeaf146102f55780632a99a792146103155780632ad4f84b146103355780633b231e011461036357600080fd5b806309e54e31146101f55780630af9680014610225578063195cd92c1461025b5780631dce5fcf146102d3575b600080fd5b610223610203366004614307565b6008805465ffffffffffff191665ffffffffffff92909216919091179055565b005b60005461023e906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61026e610269366004614355565b6105bb565b6040516102529190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b6102e66102e13660046143bb565b610964565b604051610252939291906143fb565b610307610303366004614437565b5490565b604051908152602001610252565b610328610323366004614450565b610b49565b6040516102529190614489565b610223610343366004614307565b600c805465ffffffffffff191665ffffffffffff92909216919091179055565b610307600a5481565b6103a161037a3660046144b4565b600b6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610252565b60025461023e906001600160a01b031681565b6102236103e23660046144d1565b610c75565b6102236103f53660046144ee565b610cec565b610307610f4f565b60035461023e906001600160a01b031681565b6005546006546007546008546104339392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff166060820152608001610252565b600554610307565b610223610471366004614517565b610fce565b60035461048c90600160a01b900462ffffff1681565b60405162ffffff9091168152602001610252565b6102236104ae366004614517565b6110cf565b60015461023e906001600160a01b031681565b6102236104d4366004614437565b6111c9565b6102e66104e73660046143bb565b6112a6565b610307611470565b610328610502366004614450565b6114b4565b61030760045481565b600c546105229065ffffffffffff1681565b60405165ffffffffffff9091168152602001610252565b61030760095481565b610223610550366004614576565b611651565b6105686105633660046145df565b611759565b604051610252919061469d565b610223610583366004614576565b611787565b610590611950565b60408051928352602083019190915201610252565b60035461048c90600160b81b900462ffffff1681565b61060d6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6000546201000090046001600160a01b0316331461063e57604051638597d08b60e01b815260040160405180910390fd5b600080841215906001600160a01b0384169003610691578461067e57610679600173fffd8963efd1fc6a506488495d951d5263988d266146f7565b61068e565b61068e6401000276a3600161471f565b92505b8382526003546106bf90829087906101f49062ffffff600160a01b8204811691600160b81b90041687611a92565b60408051610100810182526000808252602082018190529181018290526060810182905260c0810182905260e08101829052600a60808201526101f460a0820152908061070a611950565b60c0850181905260e085018290529092509050845160035460009182918291610743916001600160a01b0316908d908c8a611b39611cc2565b92509250925085600001518860a001906001600160a01b031690816001600160a01b03168152505080604001518860c001906001600160a01b031690816001600160a01b031681525050600360009054906101000a90046001600160a01b03166001600160a01b031663128acb08308d8b600001518d6040518563ffffffff1660e01b815260040161080d94939291906001600160a01b03948516815292151560208401526040830191909152909116606082015260a06080820181905260009082015260c00190565b60408051808303816000875af115801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f919061474a565b60408a0152602089018190528314801561086c5750876040015182145b6108785761087861476e565b50506003546108a994508593508992506101f4915062ffffff600160a01b8204811691600160b81b90041687612475565b8160800151600460008282546108bf9190614784565b909155506108cd9050612585565b7f374e2c00db0195ec47718dc83fbed946c07c24c240e8332e547d9b4ac086fd47826040516109549190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b60405180910390a1509392505050565b6000806109926040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b031633146109c357604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806109e15750620d89e719600283900b125b806109fd57506109f4620d89e71961479c565b60020b8160020b135b80610a145750610a0e600a836147d4565b60020b15155b80610a2b5750610a25600a826147d4565b60020b15155b15610a5c5760405163957b5ed560e01b8152600283810b600483015282900b60248201526044015b60405180910390fd5b610a64612728565b610a958888610a7b896001600160801b031661275b565b600354610a90906001600160a01b03166127a5565b612816565b600354604051633c8a7d8d60e01b815230600482015260028b810b60248301528a900b60448201526001600160801b038916606482015260a06084820152600060a4820181905292955082916001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b36919061474a565b909b909a50949850939650505050505050565b610b746040518060800160405280600081526020016000815260200160008152602001600081525090565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be29190614813565b505060408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152939550929350610c289250611470915050565b808252600554600654600754610c3d93612967565b604082015280518352600954610c5d90600b908790879086908690612997565b60608601526040850152602084015250909392505050565b6000546201000090046001600160a01b03163314610ca657604051638597d08b60e01b815260040160405180910390fd5b600080610cb1611950565b91509150610ce760006001610ccd600c5465ffffffffffff1690565b86610cd85785610cdb565b60005b60059392919086612aef565b505050565b600054610100900460ff16610d075760005460ff1615610d0b565b303b155b610d7d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610a53565b600054610100900460ff16158015610d9f576000805461ffff19166101011790555b610dac60208301836148ab565b600080546001600160a01b039290921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055610dfb60408301602084016148ab565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055610e3860608301604084016148ab565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055610e7560808301606084016148ab565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055610eb260a0830160808401614517565b6003805462ffffff92909216600160a01b0262ffffff60a01b19909216919091179055610ee560c0830160a08401614517565b6003805462ffffff92909216600160b81b0262ffffff60b81b199092169190911790556001600160ff1b03600a55610f3960006001610f2b600c5465ffffffffffff1690565b600592919060006001612aef565b8015610f4b576000805461ff00191690555b5050565b600080546201000090046001600160a01b03163314610f8157604051638597d08b60e01b815260040160405180910390fd5b6001600454610f9091906148c8565b60016004556040518181529091507f889bbef14ccbbb6f97773359c9c09396f67ed97695236771816a304ec5d886119060200160405180910390a190565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015611021573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104591906148df565b6001600160a01b0316336001600160a01b03161461107657604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60b81b1916600160b81b62ffffff8416908102919091179091556040519081527f2edf7eef14cb246dab2aac555e300928981632918159d9e33fcaa24dcd38cb40906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015611122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114691906148df565b6001600160a01b0316336001600160a01b03161461117757604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60a01b1916600160a01b62ffffff8416908102919091179091556040519081527f5e286c9a939d59334080ddf15517957037c2228384e26bb92a368ce44c531edd906020016110c4565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa15801561121c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124091906148df565b6001600160a01b0316336001600160a01b03161461127157604051632d5be4cb60e21b815260040160405180910390fd5b600a8190556040518181527fe71127eab59a3a0c0415330d6b03fb027923dc6710978f16940a31355cbf83e8906020016110c4565b6000806112d46040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b0316331461130557604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806113235750620d89e719600283900b125b8061133f5750611336620d89e71961479c565b60020b8160020b135b806113565750611350600a836147d4565b60020b15155b8061136d5750611367600a826147d4565b60020b15155b156113995760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610a53565b6113a1612728565b6113c188886113b8896001600160801b031661275b565b610a7b906148fc565b60035460405163a34123a760e01b815260028b810b60048301528a900b60248201526001600160801b038916604482015291945060009182916001600160a01b03169063a34123a79060640160408051808303816000875af115801561142b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144f919061474a565b915091508196508095506114638a8a612c00565b5050505093509350939050565b600080600061147d611950565b6005546008549294509092506114ad9165ffffffffffff166114a6600c5465ffffffffffff1690565b8585612c9d565b9250505090565b6114df6040518060800160405280600081526020016000815260200160008152602001600081525090565b82828060020b8260020b1215806114fd5750620d89e719600283900b125b806115195750611510620d89e71961479c565b60020b8160020b135b80611530575061152a600a836147d4565b60020b15155b806115475750611541600a826147d4565b60020b15155b156115735760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610a53565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa1580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e19190614813565b50506040805160808101825260055480825260065460208301526007549282019290925260085465ffffffffffff166060820152908a52600954949650945061163793600b93508b92508a915086908690612997565b606088015260408701526020860152509295945050505050565b6003546001600160a01b0316331461167c576040516308458b2b60e21b815260040160405180910390fd5b82156116e7576002546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156116ce57600080fd5b505af11580156116e2573d6000803e3d6000fd5b505050505b8315611753576001546040516340c10f1960e01b8152336004820152602481018690526001600160a01b03909116906340c10f19906044015b600060405180830381600087803b15801561173a57600080fd5b505af115801561174e573d6000803e3d6000fd5b505050505b50505050565b606060208251028201602001602083015b8181101561177f57805154815260200161176a565b509192915050565b6003546001600160a01b031633146117b2576040516308458b2b60e21b815260040160405180910390fd5b600084131561189857600360009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561180e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061183291906148df565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018790529116906340c10f1990604401600060405180830381600087803b15801561187f57600080fd5b505af1158015611893573d6000803e3d6000fd5b505050505b600083131561175357600360009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191891906148df565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018690529116906340c10f1990604401611720565b600a5460015460009182916001600160ff1b03821490839061197a906001600160a01b0316612cbf565b6000546040516367260c6f60e11b815263ffffffff831660048201529192506201000090046001600160a01b03169063ce4c18de90602401602060405180830381865afa1580156119cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f39190614922565b93508115611a87576000805460405163706bdd2560e01b815263ffffffff84166004820152620100009091046001600160a01b03169063706bdd2590602401602060405180830381865afa158015611a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a739190614922565b9050611a7f8186612ccf565b955050611a8b565b8294505b5050509091565b8515611af3578415611ab1578051611aaa9085612d00565b8152611b31565b8051611ac09060028585612d43565b60808301819052606083018290528251611ae6929091611adf91614784565b6001612e6e565b808252611aaa9085612d00565b8415611b31578051611b089060018585612d43565b60808301819052606083018290528251611b2e929091611b2791614784565b6000612e6e565b81525b505050505050565b60008085611b50578260a001518360800151611b5b565b82608001518360a001515b915091506000611b8e611b6d83612ea8565b60035460009062ffffff600160a01b8204811691600160b81b900416612d43565b50905060008560c001516001600160801b0316118015611bae5750600083115b15611c485760c086015160e0870151611c1089611bdc57611bce86612ea8565b611bd79061493b565b611be5565b611be586612ea8565b8860c001516001600160801b0316611c04600c5465ffffffffffff1690565b60059291908587612aef565b60c0870151611c2f908490600160801b906001600160801b0316612ed1565b60096000828254611c409190614784565b909155505050505b83606001516001600160a01b031685604001516001600160a01b031603611cb957836040015115611cb957602080850151604080516080810182526005548152600654938101939093526007549083015260085465ffffffffffff166060830152600954611cb992600b9291612f83565b50505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086600003611d1d57604051631f2a200560e01b815260040160405180910390fd5b84516001600160a01b0316600003611db157886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d919190614813565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b0316600003611e3757886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e289190614957565b6001600160801b031660608601525b846080015160020b600003611f2457886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611e84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea89190614974565b62ffffff1660a0860152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015611ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1b9190614991565b60020b60808601525b87611f6e5784600001516001600160a01b0316866001600160a01b03161080611f69575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b611f9f565b84600001516001600160a01b0316866001600160a01b03161180611f9f57506401000276a36001600160a01b038716105b15611fc8576040516328da8b5760e11b81526001600160a01b0387166004820152602401610a53565b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b8151158015906120585750866001600160a01b031682604001516001600160a01b031614155b1561242f576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b039081168252606084015160808901516120c5928e1691635339c296918e613004565b1515604083015260020b60208201819052620d89e71913156120f057620d89e7196020820152612124565b6120fd620d89e71961479c565b60020b816020015160020b13156121245761211b620d89e71961479c565b60020b60208201525b6121318160200151613270565b6001600160a01b0316606082015260408301516121a6908b61216b57896001600160a01b031683606001516001600160a01b031611612185565b896001600160a01b031683606001516001600160a01b0316105b612193578260600151612195565b895b60c0860151865160a08c0151613593565b60c085015260a084015260808301526001600160a01b03166040840152811561221e576121e58160c0015182608001516121e09190614784565b613785565b835184906121f49083906149ae565b90525060a081015161220590613785565b836020015161221491906149ae565b6020840152612269565b61222b8160a00151613785565b8351849061223a9083906149ed565b90525060c08101516080820151612254916121e091614784565b836020015161226391906149ed565b60208401525b60c08301516001600160801b0316156122b15761229c8160c00151600160801b8560c001516001600160801b0316612ed1565b836080018181516122ad9190614784565b9052505b6122c18a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b0316036123f2578060400151156123c557602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa15801561233e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123629190614a2d565b5050505050509150508a1561237d5761237a816148fc565b90505b600081600f0b1261239d57808460c001516123989190614adb565b6123b5565b6123a6816148fc565b8460c001516123b59190614afd565b6001600160801b031660c0850152505b896123d45780602001516123e5565b600181602001516123e59190614b1d565b60020b6060840152612429565b80600001516001600160a01b031683604001516001600160a01b031614612429576124208360400151613797565b60020b60608401525b50612032565b80151589151514612450576020820151825161244b908a6149ae565b612462565b815161245c90896149ae565b82602001515b909b909a50919850909650505050505050565b85156124ff5784156124d25761248f816020015185613aaa565b602082015260408101516124a69060008585612d43565b608083018190526060830182905260408301516124c8929091611adf91614784565b6040820152611b31565b6124e0816040015185613aaa565b60408201819052608082015160608301516124c89291611b2791614784565b8461254857612512816040015185613aaa565b604082018190526125269060008585612d43565b608083018190526060830182905260408301516124c8929091611b2791614784565b612556816020015185613aaa565b60208201526040810151608082015160608301516125789291611adf91614784565b6040820152505050505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156125ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f29190614922565b9050801561265957600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561264057600080fd5b505af1158015612654573d6000803e3d6000fd5b505050505b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156126a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c69190614922565b90508015610f4b57600154604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561271457600080fd5b505af1158015611b31573d6000803e3d6000fd5b600080612733611950565b91509150610f4b6000600161274f600c5465ffffffffffff1690565b60059291908686612aef565b60006f80000000000000000000000000000000826001600160801b0316106127a15760405163832da39d60e01b81526001600160801b0383166004820152602401610a53565b5090565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156127e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128099190614813565b5093979650505050505050565b6128416040518060800160405280600081526020016000815260200160008152602001600081525090565b60408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152600954600080600f87900b156128e3578351602085015160408601516003546128b193600b938e938c938e939291908b906001600160a01b0316613ac7565b8451602086015160408701516003549395506128e093600b938d938c938e938b906001600160a01b0316613ac7565b90505b6128ed89896114b4565b9450600087600f0b121561295b57811561292b57600289810b6000908152600b60205260408120818155600181018290559182018190556003909101555b801561295b57600288810b6000908152600b60205260408120818155600181018290559182018190556003909101555b50505050949350505050565b600061298261297686846149ae565b8590600160801b613bd8565b61298c90846149ed565b90505b949350505050565b600285810b60009081526020889052604080822087840b83529082206001820154825494830154875194958695869594939286926129d89290918591612967565b90506000846003015490508a60020b8d60020b1315612a2257828a60200151612a0191906149ae565b9250818a60400151612a1391906149ae565b9150612a1f818a6148c8565b90505b6001840154845460028601548c51600092612a41929091859190612967565b90506000866003015490508d60020b8f60020b13612a8a57828d60200151612a6991906149ae565b9250818d60400151612a7b91906149ae565b9150612a87818d6148c8565b90505b82868e60200151612a9b91906149ae565b612aa591906149ae565b9a5081858e60400151612ab891906149ae565b612ac291906149ae565b995080612acf858e6148c8565b612ad991906148c8565b9850505050505050505096509650969350505050565b6003860154600090612b0b9065ffffffffffff16858585613c35565b6001880154909150612b23908290600160801b613c5d565b876002016000828254612b3691906149ed565b9091555050865481908890600090612b4f9084906149ed565b90915550612b64905086600160801b87613bd8565b876001016000828254612b7791906149ed565b909155505060038701805465ffffffffffff861665ffffffffffff199091168117909155604080518954815260018a0154602082015260028a01548183015260608101929092526080820185905260a08201849052517f62187ed3f133848cd15541a988e634a4c2e6a75750e025c69ea914b1ea2263cc9181900360c00190a150505050505050565b6003546040516309e3d67b60e31b8152306004820152600284810b602483015283900b60448201526001600160801b036064820181905260848201526001600160a01b0390911690634f1eb3d89060a40160408051808303816000875af1158015612c6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c939190614b65565b5050610f4b612585565b6000612cab85858585613c35565b612cb590876149ed565b9695505050505050565b600063ffffffff82165b92915050565b600062015180612cef600160801b85612ce886826149ae565b9190613cab565b612cf99190614b94565b9392505050565b600080612d1083620f4240614bc2565b60020b612d2262ffffff851686614bde565b612d2c9190614b94565b612d379060016149ed565b905061298f81856149ed565b6000806000612d5187613ce8565b90506001866002811115612d6757612d67614c65565b03612da75783612d7a86620f4240614bc2565b612d849190614bc2565b62ffffff16612d9682620f4240614c7b565b612da09190614c9a565b9050612df7565b6002866002811115612dbb57612dbb614c65565b03612df75783612dce86620f4240614cae565b612dd89190614cae565b62ffffff16612dea82620f4240614c7b565b612df49190614c9a565b90505b6000620f4240612e078688614cae565b612e169062ffffff1684614c7b565b612e209190614c9a565b612e2b906001614784565b9050620f4240612e4062ffffff881684614c7b565b612e4a9190614c9a565b612e55906001614784565b9350612e6184826148c8565b9250505094509492505050565b600080826001811115612e8357612e83614c65565b146000851303612e9e57612e9783856149ed565b9050612cf9565b61298f83856149ae565b6000600160ff1b82106127a1576040516320c82def60e21b815260048101839052602401610a53565b6000808060001985870985870292508281108382030391505080600003612f0a5760008411612eff57600080fd5b508290049050612cf9565b808411612f1657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600283810b6000908152602086905260408120805460018201549382015486519294612fb193909190612967565b8451835560018301546020860151919250612fcb916149ae565b60018301556040840151612fe09082906149ae565b60028301556003820154612ff490846148c8565b8260030181905550505050505050565b600080806130128587614ccc565b905060008660020b128015613032575061302c85876147d4565b60020b15155b15613045578061304181614d06565b9150505b831561314a5760008061305783613cff565b90925090506000600160ff831681901b9061307290826148c8565b61307c9190614784565b90506000818c8c866040518263ffffffff1660e01b81526004016130a9919060019190910b815260200190565b602060405180830381865afa1580156130c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ea9190614922565b168015159650905085613114578861310560ff851687614b1d565b61310f9190614d29565b61313f565b8861311e82613d1c565b6131289085614db6565b6131359060ff1687614b1d565b61313f9190614d29565b965050505050613265565b60008061316061315b846001614dd9565b613cff565b90925090506000613178600160ff841681901b6148c8565b1990506000818c8c866040518263ffffffff1660e01b81526004016131a6919060019190910b815260200190565b602060405180830381865afa1580156131c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e79190614922565b16801515965090508561322757886132008460ff614db6565b60ff1661320e876001614dd9565b6132189190614dd9565b6132229190614d29565b61325e565b888361323283613dbd565b61323c9190614db6565b60ff1661324a876001614dd9565b6132549190614dd9565b61325e9190614d29565b9650505050505b509550959350505050565b60008060008360020b12613287578260020b61328f565b8260020b6000035b9050620d89e88111156132b5576040516315e4079d60e11b815260040160405180910390fd5b6000816001166000036132cc57600160801b6132de565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613312576ffff97272373d413259a46990580e213a0260801c5b6004821615613331576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613350576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561336f576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561338e576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156133ad576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156133cc576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156133ec576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561340c576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561342c576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561344c576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561346c576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561348c576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156134ac576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156134cc576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156134ed576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561350d576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561352c576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613549576b048a170391f7dc42444e8fa20260801c5b60008460020b131561356a578060001981613566576135666147be565b0490505b64010000000081061561357e576001613581565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906136185760006135cc8989620f42400362ffffff16620f4240612ed1565b9050826135e5576135e08c8c8c6001613ea7565b6135f2565b6135f28b8d8c6001613f17565b9550858110613603578a9650613612565b61360f8c8b8386613fe0565b96505b50613662565b8161362f5761362a8b8b8b6000613f17565b61363c565b61363c8a8c8b6000613ea7565b935083886000031061365057899550613662565b61365f8b8a8a6000038561402c565b95505b6001600160a01b038a81169087161482156136c5578080156136815750815b61369757613692878d8c6001613f17565b613699565b855b95508080156136a6575081155b6136bc576136b7878d8c6000613ea7565b6136be565b845b945061370f565b8080156136cf5750815b6136e5576136e08c888c6001613ea7565b6136e7565b855b95508080156136f4575081155b61370a576137058c888c6000613f17565b61370c565b845b94505b8115801561371f57508860000385115b1561372b578860000394505b81801561374a57508a6001600160a01b0316876001600160a01b031614155b15613759578589039350613776565b613773868962ffffff168a620f42400362ffffff16614078565b93505b50505095509550955095915050565b6000600160ff1b82106127a157600080fd5b60006401000276a36001600160a01b038316108015906137d3575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b6137f0576040516324c070df60e11b815260040160405180910390fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061389157607f810383901c915061389b565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14613a9b57886001600160a01b0316613a8082613270565b6001600160a01b03161115613a955781613a9d565b80613a9d565b815b9998505050505050505050565b6000620f4240613aba8382614bc2565b612cef9060020b85614bde565b600288900b600081815260208b90526040808220905163f30dba9360e01b81526004810193909352909182906001600160a01b0385169063f30dba939060240161010060405180830381865afa158015613b25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b499190614a2d565b5050505050505090506000808a600f0b12613b6d57613b688a83614adb565b613b80565b613b768a6148fc565b613b809083614afd565b6001600160801b0380821615908416801591909114159550909150600003613bc8578a60020b8c60020b13613bc8578883556001830188905560028301879055600383018690555b5050509998505050505050505050565b60006001818080613be988856140b8565b94509250613bf787856140b8565b94509150613c0586856140b8565b94509050613c176121e0848484612ed1565b945083613c2a57613c278561493b565b94505b505050509392505050565b6000613c418585614e20565b60050b613c538484600160801b613cab565b61298c9190614bde565b6000613c6a848484613bd8565b9050600081128015613c9a5750613c9a613c83856140e5565b613c8c856140e5565b613c95856140e5565b6140f0565b15612cf95761298f600019826149ed565b6000613cd46121e060008612613cc15785613ccd565b613ccd86600019614bde565b8585612ed1565b90506000841215612cf95761298f8161493b565b60008082136127a157613cfa8261493b565b612cc9565b600281900b60081d6000613d15610100846147d4565b9050915091565b6000808211613d2a57600080fd5b600160801b8210613d3d57608091821c91015b680100000000000000008210613d5557604091821c91015b6401000000008210613d6957602091821c91015b620100008210613d7b57601091821c91015b6101008210613d8c57600891821c91015b60108210613d9c57600491821c91015b60048210613dac57600291821c91015b60028210613db8576001015b919050565b6000808211613dcb57600080fd5b5060ff6001600160801b03821615613de657607f1901613dee565b608082901c91505b67ffffffffffffffff821615613e0757603f1901613e0f565b604082901c91505b63ffffffff821615613e2457601f1901613e2c565b602082901c91505b61ffff821615613e3f57600f1901613e47565b601082901c91505b60ff821615613e595760071901613e61565b600882901c91505b600f821615613e735760031901613e7b565b600482901c91505b6003821615613e8d5760011901613e95565b600282901c91505b6001821615613db85760001901919050565b6000836001600160a01b0316856001600160a01b03161115613ec7579293925b81613ef457613eef836001600160801b03168686036001600160a01b0316600160601b612ed1565b61298c565b61298c836001600160801b03168686036001600160a01b0316600160601b614078565b6000836001600160a01b0316856001600160a01b03161115613f37579293925b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b038686038116908716613f7357600080fd5b83613fa957866001600160a01b0316613f968383896001600160a01b0316612ed1565b81613fa357613fa36147be565b04613fd5565b613fd5613fc08383896001600160a01b0316614078565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b031611613ff757600080fd5b6000846001600160801b03161161400d57600080fd5b8161401f57613eef8585856001614109565b61298c85858560016141ef565b600080856001600160a01b03161161404357600080fd5b6000846001600160801b03161161405957600080fd5b8161406b57613eef85858560006141ef565b61298c8585856000614109565b6000614085848484612ed1565b905060008280614097576140976147be565b8486091115612cf95760001981106140ae57600080fd5b6001019392505050565b60008060008412156140d7579115916140d08461493b565b91506140db565b8391505b50815b9250929050565b6000612cc982613ce8565b600081838509801561410157600191505b509392505050565b6000811561417b5760006001600160a01b0384111561413f5761413a84600160601b876001600160801b0316612ed1565b614156565b6141566001600160801b038616606086901b614c9a565b905061417361416e826001600160a01b038916614784565b6142f1565b91505061298f565b60006001600160a01b038411156141a9576141a484600160601b876001600160801b0316614078565b6141c6565b6141c6606085901b6001600160801b038716808204910615150190565b905080866001600160a01b0316116141dd57600080fd5b6001600160a01b03861603905061298f565b60008260000361420057508361298f565b7bffffffffffffffffffffffffffffffff000000000000000000000000606085901b1682156142a4576001600160a01b03861684810290858281614246576142466147be565b0403614276578181018281106142745761426a83896001600160a01b031683614078565b935050505061298f565b505b50614173818561428f6001600160a01b038a1683614c9a565b6142999190614784565b808204910615150190565b6001600160a01b038616848102908582816142c1576142c16147be565b041480156142ce57508082115b6142d757600080fd5b80820361426a61416e846001600160a01b038b1684614078565b806001600160a01b0381168114613db857600080fd5b60006020828403121561431957600080fd5b813565ffffffffffff81168114612cf957600080fd5b801515811461433d57600080fd5b50565b6001600160a01b038116811461433d57600080fd5b60008060006060848603121561436a57600080fd5b83356143758161432f565b925060208401359150604084013561438c81614340565b809150509250925092565b8060020b811461433d57600080fd5b6001600160801b038116811461433d57600080fd5b6000806000606084860312156143d057600080fd5b83356143db81614397565b925060208401356143eb81614397565b9150604084013561438c816143a6565b8381526020810183905260c0810161298f6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b60006020828403121561444957600080fd5b5035919050565b6000806040838503121561446357600080fd5b823561446e81614397565b9150602083013561447e81614397565b809150509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101612cc9565b6000602082840312156144c657600080fd5b8135612cf981614397565b6000602082840312156144e357600080fd5b8135612cf98161432f565b600060c0828403121561450057600080fd5b50919050565b62ffffff8116811461433d57600080fd5b60006020828403121561452957600080fd5b8135612cf981614506565b60008083601f84011261454657600080fd5b50813567ffffffffffffffff81111561455e57600080fd5b6020830191508360208285010111156140de57600080fd5b6000806000806060858703121561458c57600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156145b157600080fd5b6145bd87828801614534565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156145f257600080fd5b823567ffffffffffffffff8082111561460a57600080fd5b818501915085601f83011261461e57600080fd5b813581811115614630576146306145c9565b8060051b604051601f19603f83011681018181108582111715614655576146556145c9565b60405291825284820192508381018501918883111561467357600080fd5b938501935b8285101561469157843584529385019392850192614678565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156146d5578351835292840192918401916001016146b9565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015614717576147176146e1565b039392505050565b60006001600160a01b03808316818516808303821115614741576147416146e1565b01949350505050565b6000806040838503121561475d57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b60008219821115614797576147976146e1565b500190565b60008160020b627fffff1981036147b5576147b56146e1565b60000392915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b806147e7576147e76147be565b808360020b0791505092915050565b805161ffff81168114613db857600080fd5b8051613db88161432f565b600080600080600080600060e0888a03121561482e57600080fd5b875161483981614340565b602089015190975061484a81614397565b9550614858604089016147f6565b9450614866606089016147f6565b9350614874608089016147f6565b925060a088015160ff8116811461488a57600080fd5b60c089015190925061489b8161432f565b8091505092959891949750929550565b6000602082840312156148bd57600080fd5b8135612cf981614340565b6000828210156148da576148da6146e1565b500390565b6000602082840312156148f157600080fd5b8151612cf981614340565b600081600f0b6f7fffffffffffffffffffffffffffffff1981036147b5576147b56146e1565b60006020828403121561493457600080fd5b5051919050565b6000600160ff1b8201614950576149506146e1565b5060000390565b60006020828403121561496957600080fd5b8151612cf9816143a6565b60006020828403121561498657600080fd5b8151612cf981614506565b6000602082840312156149a357600080fd5b8151612cf981614397565b60008083128015600160ff1b8501841216156149cc576149cc6146e1565b836001600160ff1b030183138116156149e7576149e76146e1565b50500390565b6000808212826001600160ff1b0303841381151615614a0e57614a0e6146e1565b600160ff1b8390038412811615614a2757614a276146e1565b50500190565b600080600080600080600080610100898b031215614a4a57600080fd5b8851614a55816143a6565b80985050602089015180600f0b8114614a6d57600080fd5b80975050604089015195506060890151945060808901518060060b8114614a9357600080fd5b60a08a0151909450614aa481614340565b60c08a015190935063ffffffff81168114614abe57600080fd5b9150614acc60e08a01614808565b90509295985092959890939650565b60006001600160801b03808316818516808303821115614741576147416146e1565b60006001600160801b0383811690831681811015614717576147176146e1565b60008160020b8360020b6000811281627fffff1901831281151615614b4457614b446146e1565b81627fffff018313811615614b5b57614b5b6146e1565b5090039392505050565b60008060408385031215614b7857600080fd5b8251614b83816143a6565b602084015190925061447e816143a6565b600082614ba357614ba36147be565b600160ff1b821460001984141615614bbd57614bbd6146e1565b500590565b600062ffffff83811690831681811015614717576147176146e1565b60006001600160ff1b03600084136000841385830485118282161615614c0657614c066146e1565b600160ff1b6000871282811687830589121615614c2557614c256146e1565b60008712925087820587128484161615614c4157614c416146e1565b87850587128184161615614c5757614c576146e1565b505050929093029392505050565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615614c9557614c956146e1565b500290565b600082614ca957614ca96147be565b500490565b600062ffffff808316818516808303821115614741576147416146e1565b60008160020b8360020b80614ce357614ce36147be565b627fffff19821460001982141615614cfd57614cfd6146e1565b90059392505050565b60008160020b627fffff198103614d1f57614d1f6146e1565b6000190192915050565b60008160020b8360020b627fffff600082136000841383830485118282161615614d5557614d556146e1565b627fffff196000851282811687830587121615614d7457614d746146e1565b60008712925085820587128484161615614d9057614d906146e1565b85850587128184161615614da657614da66146e1565b5050509290910295945050505050565b600060ff821660ff841680821015614dd057614dd06146e1565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615614dff57614dff6146e1565b82627fffff19038212811615614e1757614e176146e1565b50019392505050565b600065ffffffffffff83811690831681811015614717576147176146e156fea2646970667358221220e0c20ce87e6b25dd40f8e4a16b4a7201471081e0c01595395b13c5a7eae6e9a064736f6c634300080d0033';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  override connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
