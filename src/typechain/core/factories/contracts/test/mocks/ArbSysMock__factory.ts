/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ArbSysMock,
  ArbSysMockInterface,
} from '../../../../contracts/test/mocks/ArbSysMock';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'arbBlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_arbBlockNumber',
        type: 'uint256',
      },
    ],
    name: 'setArbBlockNumber',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001a60008055565b60b1806100286000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80634259d1be146037578063a3b1b31d146049575b600080fd5b604760423660046063565b600055565b005b605160005481565b60405190815260200160405180910390f35b600060208284031215607457600080fd5b503591905056fea2646970667358221220569ca827becca31264c5397b6d936d7d4f388648352cb73d82809e8dfaa38c3b64736f6c634300080d0033';

type ArbSysMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbSysMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbSysMock__factory extends ContractFactory {
  constructor(...args: ArbSysMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbSysMock> {
    return super.deploy(overrides || {}) as Promise<ArbSysMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ArbSysMock {
    return super.attach(address) as ArbSysMock;
  }
  override connect(signer: Signer): ArbSysMock__factory {
    return super.connect(signer) as ArbSysMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbSysMockInterface {
    return new utils.Interface(_abi) as ArbSysMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbSysMock {
    return new Contract(address, _abi, signerOrProvider) as ArbSysMock;
  }
}
