/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionTest,
  VTokenPositionTestInterface,
} from '../../../contracts/test/VTokenPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_netTraderPosition',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_sumALastX128',
        type: 'int256',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'riskSide',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unrealizedFundingPayment',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905561006c565b610a88806106f983390190565b61067e8061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063125071271461005c578063481050a91461007b5780635094b8ea14610090578063ac210cc7146100a6578063f78231b2146100d1575b600080fd5b6100646100e4565b60405160ff90911681526020015b60405180910390f35b61008e610089366004610484565b61012d565b005b610098610169565b604051908152602001610072565b6002546100b9906001600160a01b031681565b6040516001600160a01b039091168152602001610072565b6100986100df3660046104b0565b6101ab565b600080805260016020526101177fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496101f5565b6001811115610128576101286104c9565b905090565b6000805460019082908180610141836104f5565b9091555081526020810191909152604001600020938455506001830191909155600290910155565b6002546000808052600160205290610128907fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49906001600160a01b0316610211565b60025460008080526001602052906101ef907fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb499084906001600160a01b031661029f565b92915050565b6000808260000154136102095760016101ef565b600092915050565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610276919061050e565b9050600061028d82866002015487600101546102d1565b61029690610527565b95945050505050565b82546000906102b39084600160801b6102f3565b90506102bf8483610211565b6102c99082610543565b949350505050565b60006102c96102e08486610584565b8390600160801b610335565b9392505050565b600061032161031c600086126103095785610315565b610315866000196105c3565b8585610392565b610444565b905060008412156102ec576102c981610527565b60006001818080610346888561045a565b94509250610354878561045a565b94509150610362868561045a565b9450905061037461031c848484610392565b9450836103875761038485610527565b94505b505050509392505050565b60008080600019858709858702925082811083820303915050806000036103cb57600084116103c057600080fd5b5082900490506102ec565b8084116103d757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000600160ff1b821061045657600080fd5b5090565b60008060008412156104795791159161047284610527565b915061047d565b8391505b5092909150565b60008060006060848603121561049957600080fd5b505081359360208301359350604090920135919050565b6000602082840312156104c257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610507576105076104df565b5060010190565b60006020828403121561052057600080fd5b5051919050565b6000600160ff1b820161053c5761053c6104df565b5060000390565b600080821280156001600160ff1b0384900385131615610565576105656104df565b600160ff1b839003841281161561057e5761057e6104df565b50500190565b60008083128015600160ff1b8501841216156105a2576105a26104df565b6001600160ff1b03840183138116156105bd576105bd6104df565b50500390565b60006001600160ff1b03818413828413808216868404861116156105e9576105e96104df565b600160ff1b6000871282811687830589121615610608576106086104df565b60008712925087820587128484161615610624576106246104df565b8785058712818416161561063a5761063a6104df565b50505092909302939250505056fea2646970667358221220714823f1ac99228b2c25f58c85f62807dd960da31120093bd084accb951894eb64736f6c634300080d0033608060405234801561001057600080fd5b50610a68806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636719578c116100ad578063a3a1e7e911610071578063a3a1e7e9146102de578063a3c35e2c14610204578063d74dcaca14610324578063ea6e4e521461035d578063fca6fbf21461038d57600080fd5b80636719578c146102b35780637779815c146102de57806386c8e9a7146102e857806397c71faf146102fe578063a34123a71461031157600080fd5b80632a99a792116100f45780632a99a792146102045780634c2ebc5814610224578063512403361461028d57806356d15a881461029e5780635e622abc146102ac57600080fd5b806302dc9951146101265780630d8f6f461461014e578063195cd92c1461016f5780631dce5fcf146101e2575b600080fd5b6001546101359062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61016161015c36600461068b565b6103a6565b604051908152602001610145565b61018261017d3660046106ce565b6103bb565b6040516101459190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301516001600160a01b039081169183019190915260c092830151169181019190915260e00190565b6101f56101f0366004610720565b610469565b60405161014593929190610768565b6102176102123660046107ac565b61053a565b60405161014591906107df565b61028b61023236600461080a565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b005b61028b61029b36600461085f565b50565b61028b61029b36600461087a565b6000610161565b6003546102c6906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b600560821b610161565b600154610135906301000000900462ffffff1681565b61016161030c36600461068b565b6105b7565b6101f561031f366004610720565b6105c5565b61028b610332366004610892565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b61028b61036b3660046108d4565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154610135906601000000000000900462ffffff1681565b60006103b582610f9f19610907565b92915050565b61040d6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b831515600084130361043f57602081018390526104298361098c565b61043590610fa0610907565b6040820152610462565b610fa061044b8461098c565b61045591906109a8565b6020820152604081018390525b9392505050565b6000806104976040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546104b291906109e4565b9091555050600286810b6000908152602082815260408083209389900b835292905220600101546104ed906001600160801b038616906109fc565b600287810b600090815260208281526040808320938a900b83529290522054909350610523906001600160801b038616906109fc565b915061052f868661053a565b905093509350939050565b6105656040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b60006103b5610fa0836109a8565b6000806105f36040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b03166004600082825461060e9190610a1b565b9091555050600286810b6000908152602082815260408083209389900b83529290522054610646906001600160801b038616906109fc565b600287810b600090815260208281526040808320938a900b8352929052206001015490925061067f906001600160801b038616906109fc565b925061052f868661053a565b60006020828403121561069d57600080fd5b5035919050565b803580151581146106b457600080fd5b919050565b6001600160a01b038116811461029b57600080fd5b6000806000606084860312156106e357600080fd5b6106ec846106a4565b9250602084013591506040840135610703816106b9565b809150509250925092565b8035600281900b81146106b457600080fd5b60008060006060848603121561073557600080fd5b61073e8461070e565b925061074c6020850161070e565b915060408401356001600160801b038116811461070357600080fd5b8381526020810183905260c081016107a46040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080604083850312156107bf57600080fd5b6107c88361070e565b91506107d66020840161070e565b90509250929050565b81518152602080830151908201526040808301519082015260608083015190820152608081016103b5565b60008060008060008060c0878903121561082357600080fd5b61082c8761070e565b955061083a6020880161070e565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60006020828403121561087157600080fd5b610462826106a4565b600060c0828403121561088c57600080fd5b50919050565b600080600080608085870312156108a857600080fd5b6108b18561070e565b93506108bf6020860161070e565b93969395505050506040820135916060013590565b6000602082840312156108e657600080fd5b8135610462816106b9565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b038184138284138082168684048611161561092d5761092d6108f1565b600160ff1b600087128281168783058912161561094c5761094c6108f1565b60008712925087820587128484161615610968576109686108f1565b8785058712818416161561097e5761097e6108f1565b505050929093029392505050565b6000600160ff1b82016109a1576109a16108f1565b5060000390565b6000826109c557634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156109df576109df6108f1565b500590565b600082198211156109f7576109f76108f1565b500190565b6000816000190483118215151615610a1657610a166108f1565b500290565b600082821015610a2d57610a2d6108f1565b50039056fea2646970667358221220b750edbec97ee752931b1de1e202e6669d4baff571f51dc31d356a406380db9d64736f6c634300080d0033';

type VTokenPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionTest__factory extends ContractFactory {
  constructor(...args: VTokenPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionTest> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VTokenPositionTest {
    return super.attach(address) as VTokenPositionTest;
  }
  override connect(signer: Signer): VTokenPositionTest__factory {
    return super.connect(signer) as VTokenPositionTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionTestInterface {
    return new utils.Interface(_abi) as VTokenPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionTest {
    return new Contract(address, _abi, signerOrProvider) as VTokenPositionTest;
  }
}
