/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SignedMathTest,
  SignedMathTestInterface,
} from '../../../contracts/test/SignedMathTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    name: 'abs',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    name: 'absUint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'bool',
        name: 'positive',
        type: 'bool',
      },
    ],
    name: 'extractSign',
    outputs: [
      {
        internalType: 'uint256',
        name: '_a',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
    ],
    name: 'extractSign',
    outputs: [
      {
        internalType: 'uint256',
        name: '_a',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    name: 'sign',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461001657610235908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081631b5ac4b5146100c457816328f7328014610071575080635755298d1461006857806363fa28231461005f5763ae610b481461005757600080fd5b61000e61013b565b5061000e61011c565b5061000e6100ea565b346100c15760406003193601126100c157600435602435801590811581036100bd57928212156100b75791506100a69061018b565b604080519182529115156020820152f35b506100a6565b8380fd5b80fd5b346100c15760206003193601126100c15760206100e26004356101e7565b604051908152f35b503461000e57602060031936011261000e576004356001600082121561011657506100a660009161018b565b906100a6565b503461000e57602060031936011261000e5760206100e26004356101e7565b503461000e57602060031936011261000e576000600435126101635760206001604051908152f35b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6100e2565b7f800000000000000000000000000000000000000000000000000000000000000081146101b85760000390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008113156101f35790565b6101fc9061018b565b9056fea26469706673582212206eab8c79ccaf72008aefca0282280a3e179886c393be0f5c0a83dec56ce0c8ed64736f6c634300080e0033';

type SignedMathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignedMathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignedMathTest__factory extends ContractFactory {
  constructor(...args: SignedMathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignedMathTest> {
    return super.deploy(overrides || {}) as Promise<SignedMathTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SignedMathTest {
    return super.attach(address) as SignedMathTest;
  }
  override connect(signer: Signer): SignedMathTest__factory {
    return super.connect(signer) as SignedMathTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedMathTestInterface {
    return new utils.Interface(_abi) as SignedMathTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedMathTest {
    return new Contract(address, _abi, signerOrProvider) as SignedMathTest;
  }
}
