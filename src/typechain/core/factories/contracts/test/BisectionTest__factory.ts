/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  BisectionTest,
  BisectionTestInterface,
} from '../../../contracts/test/BisectionTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'y_target',
        type: 'uint256',
      },
      {
        internalType: 'uint160',
        name: 'x_lower',
        type: 'uint160',
      },
      {
        internalType: 'uint160',
        name: 'x_upper',
        type: 'uint160',
      },
    ],
    name: 'SolutionOutOfBounds',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'y_target',
        type: 'uint256',
      },
      {
        internalType: 'uint160',
        name: 'x_lower',
        type: 'uint160',
      },
      {
        internalType: 'uint160',
        name: 'x_upper',
        type: 'uint160',
      },
    ],
    name: 'findSolution',
    outputs: [
      {
        internalType: 'uint160',
        name: '',
        type: 'uint160',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'val',
        type: 'uint160',
      },
    ],
    name: 'increasingFunction',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x60808060405234610016576103c3908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c806350135a251461020c57635f1c73681461003357600080fd5b346102095760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102095760043561006d610274565b9161007661029c565b73ffffffffffffffffffffffffffffffffffffffff9391828286610099836102ef565b16876100a4836102ef565b169087109081156101ff575b506101a9575050905b60016100e16100c88584610327565b73ffffffffffffffffffffffffffffffffffffffff1690565b111561013e576101196101136100f78584610327565b60011c737fffffffffffffffffffffffffffffffffffffff1690565b84610358565b908486610125846102ef565b1611156101355750905b906100b9565b9192509161012f565b9290610187949182851683851614159283610192575b50505060001461018b57505b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b9050610160565b9091925061019f856102ef565b1614903880610154565b6040517ff7b6b2e90000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff928316602482015291166044820152606490fd5b90508611386100b0565b80fd5b50346102095760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610209576004359073ffffffffffffffffffffffffffffffffffffffff908183168303610209575061026b6020926102ef565b16604051908152f35b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361029757565b600080fd5b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361029757565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60039073ffffffffffffffffffffffffffffffffffffffff80911680910482118115151661031b570290565b6103236102bf565b0290565b73ffffffffffffffffffffffffffffffffffffffff918216911681811061034c570390565b6103546102bf565b0390565b9073ffffffffffffffffffffffffffffffffffffffff8080931691168092038111610381570190565b6103896102bf565b019056fea2646970667358221220b086368d05ebea1aa50d24e00c17c054c8c4fc8a1814dbaa123b1fc54792eb5664736f6c634300080e0033';

type BisectionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BisectionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BisectionTest__factory extends ContractFactory {
  constructor(...args: BisectionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BisectionTest> {
    return super.deploy(overrides || {}) as Promise<BisectionTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BisectionTest {
    return super.attach(address) as BisectionTest;
  }
  override connect(signer: Signer): BisectionTest__factory {
    return super.connect(signer) as BisectionTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BisectionTestInterface {
    return new utils.Interface(_abi) as BisectionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BisectionTest {
    return new Contract(address, _abi, signerOrProvider) as BisectionTest;
  }
}
