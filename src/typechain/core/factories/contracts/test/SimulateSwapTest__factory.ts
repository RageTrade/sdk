/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SimulateSwapTest,
  SimulateSwapTestInterface,
} from '../../../contracts/test/SimulateSwapTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'clearSwapSteps',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'extendedFeeGrowthOutsideX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap1',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap2',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'value1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'value2',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
        ],
        internalType: 'struct SimulateSwapTest.SwapStep[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint24',
        name: 'fee',
        type: 'uint24',
      },
    ],
    name: 'simulateSwap3',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vQuoteIn',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sqrtPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: 'sq',
        type: 'uint160',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620031043803806200310483398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b613068806200009c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063769042d511610066578063769042d5146101a9578063b83d2683146101bc578063bf0f9789146101dc578063d750ba34146101ef578063fa461e33146101f957600080fd5b80631274ddd2146100a3578063195cd92c146100cf57806322d03d6d146100f757806348aaa8c01461010e5780636c54433514610163575b600080fd5b6100b66100b13660046126b7565b61020c565b6040516100c694939291906127f2565b60405180910390f35b6100e26100dd3660046126b7565b610444565b604080519283526020830191909152016100c6565b61010060065481565b6040519081526020016100c6565b61014361011c3660046128a2565b60076020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016100c6565b6002546003546004546005546101819392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff1660608201526080016100c6565b6100e26101b73660046126b7565b6104e4565b6101c4610510565b6040516001600160a01b0390911681526020016100c6565b6100e26101ea3660046128d0565b610594565b6101f7610684565b005b6101f7610207366004612907565b610692565b6000806102176125b8565b600054606090610235906001600160a01b03168888886107af610a0a565b6001805460408051602080840282018101909252828152969a509498509196509290915060009084015b8282101561043557838290600052602060002090600a0201604051806040016040529081600082016040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160149054906101000a900460020b60020b60020b8152602001600382015481526020016004820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016004820160109054906101000a90046001600160801b03166001600160801b03166001600160801b0316815250508152602001600582016040518060e00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460ff161515151581526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820154815260200160038201548152602001600482015481525050815250508152602001906001019061025f565b50505050905093509350935093565b60008054604080513360208083018290528351808403909101815282840193849052630251596160e31b90935284936001600160a01b03169263128acb089261049692918a918a918a916044016129df565b60408051808303816000875af11580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190612a1a565b91509150935093915050565b600080548190610502906001600160a01b03168686866107af610a0a565b509197909650945050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190612a5b565b50949695505050505050565b60008061059f6125b8565b62ffffff841660a0820152600054604080516334324e9f60e21b815290516001600160a01b039092169163d0c93a7c916004808201926020929091908290030181865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190612af3565b60020b608082015261067686868161064e57610649600173fffd8963efd1fc6a506488495d951d5263988d26612b26565b61065e565b61065e6401000276a36001612b4e565b6000546001600160a01b0316929190856107af610a6d565b509097909650945050505050565b610690600160006125fc565b565b6000546001600160a01b031633146106a957600080fd5b60006106b782840184612b79565b9050600085131561074b5760005460408051630dfe168160e01b8152905161074b9284926001600160a01b039091169189918391630dfe1681916004808201926020929091908290030181865afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190612b96565b6001600160a01b0316929190611225565b60008413156107a8576000546040805163d21220a760e01b815290516107a89284926001600160a01b03909116918891839163d21220a7916004808201926020929091908290030181865afa158015610716573d6000803e3d6000fd5b5050505050565b604080518082018252928352602080840192835260018054808201825560009190915293518051600a9095027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810195909555808201517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7860155808301517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88601805460608085015162ffffff908116600160a01b9081026001600160b81b03199485166001600160a01b0397881617179094556080808701517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98c015560a08088015160c0988901516001600160801b03908116600160801b029116177fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8d0155995180517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb8d0180549a8301519b8301511515600160b81b0260ff60b81b199c9095169097029990951694871694909417979097179790971696909617909155938401517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc87018054919092166001600160a01b031991909116179055908201517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfd850155918101517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfe84015501517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cff909101555050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290528190610a4c6125b8565b610a5a89898989858a610a6d565b919b909a50909850909650945050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086600003610ac857604051631f2a200560e01b815260040160405180910390fd5b84516001600160a01b0316600003610b5c57886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c9190612a5b565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b0316600003610be257886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd39190612bca565b6001600160801b031660608601525b846080015160020b600003610ccf57886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c539190612be5565b62ffffff1660a0860152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc69190612af3565b60020b60808601525b87610d195784600001516001600160a01b0316866001600160a01b03161080610d14575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b610d4a565b84600001516001600160a01b0316866001600160a01b03161180610d4a57506401000276a36001600160a01b038716105b15610d78576040516328da8b5760e11b81526001600160a01b03871660048201526024015b60405180910390fd5b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b815115801590610e085750866001600160a01b031682604001516001600160a01b031614155b156111df576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b03908116825260608401516080890151610e75928e1691635339c296918e611285565b1515604083015260020b60208201819052620d89e7191315610ea057620d89e7196020820152610ed4565b610ead620d89e719612c02565b60020b816020015160020b1315610ed457610ecb620d89e719612c02565b60020b60208201525b610ee181602001516114f1565b6001600160a01b031660608201526040830151610f56908b610f1b57896001600160a01b031683606001516001600160a01b031611610f35565b896001600160a01b031683606001516001600160a01b0316105b610f43578260600151610f45565b895b60c0860151865160a08c0151611814565b60c085015260a084015260808301526001600160a01b031660408401528115610fce57610f958160c001518260800151610f909190612c24565b611a06565b83518490610fa4908390612c3c565b90525060a0810151610fb590611a06565b8360200151610fc49190612c3c565b6020840152611019565b610fdb8160a00151611a06565b83518490610fea908390612c7b565b90525060c0810151608082015161100491610f9091612c24565b83602001516110139190612c7b565b60208401525b60c08301516001600160801b0316156110615761104c8160c00151600160801b8560c001516001600160801b0316611a1c565b8360800181815161105d9190612c24565b9052505b6110718a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b0316036111a25780604001511561117557602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa1580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111129190612cbc565b5050505050509150508a1561112d5761112a81612d66565b90505b600081600f0b1261114d57808460c001516111489190612d8c565b611165565b61115681612d66565b8460c001516111659190612dae565b6001600160801b031660c0850152505b89611184578060200151611195565b600181602001516111959190612dce565b60020b60608401526111d9565b80600001516001600160a01b031683604001516001600160a01b0316146111d9576111d08360400151611acf565b60020b60608401525b50610de2565b8015158915151461120057602082015182516111fb908a612c3c565b611212565b815161120c9089612c3c565b82602001515b909b909a50919850909650505050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261127f908590611dd5565b50505050565b600080806112938587612e2c565b905060008660020b1280156112b357506112ad8587612e66565b60020b15155b156112c657806112c281612e88565b9150505b83156113cb576000806112d883611eac565b90925090506000600160ff831681901b906112f39082612eab565b6112fd9190612c24565b90506000818c8c866040518263ffffffff1660e01b815260040161132a919060019190910b815260200190565b602060405180830381865afa158015611347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136b9190612ec2565b168015159650905085611395578861138660ff851687612dce565b6113909190612edb565b6113c0565b8861139f82611ec9565b6113a99085612f68565b6113b69060ff1687612dce565b6113c09190612edb565b9650505050506114e6565b6000806113e16113dc846001612f8b565b611eac565b909250905060006113f9600160ff841681901b612eab565b1990506000818c8c866040518263ffffffff1660e01b8152600401611427919060019190910b815260200190565b602060405180830381865afa158015611444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114689190612ec2565b1680151596509050856114a857886114818460ff612f68565b60ff1661148f876001612f8b565b6114999190612f8b565b6114a39190612edb565b6114df565b88836114b383611f6a565b6114bd9190612f68565b60ff166114cb876001612f8b565b6114d59190612f8b565b6114df9190612edb565b9650505050505b509550959350505050565b60008060008360020b12611508578260020b611510565b8260020b6000035b9050620d89e8811115611536576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361154d57600160801b61155f565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611593576ffff97272373d413259a46990580e213a0260801c5b60048216156115b2576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156115d1576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156115f0576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561160f576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561162e576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561164d576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561166d576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561168d576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156116ad576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156116cd576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156116ed576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561170d576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561172d576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561174d576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561176e576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561178e576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156117ad576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156117ca576b048a170391f7dc42444e8fa20260801c5b60008460020b13156117eb5780600019816117e7576117e7612e16565b0490505b6401000000008106156117ff576001611802565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a16101581871280159061189957600061184d8989620f42400362ffffff16620f4240611a1c565b905082611866576118618c8c8c6001612054565b611873565b6118738b8d8c60016120cf565b9550858110611884578a9650611893565b6118908c8b8386612186565b96505b506118e3565b816118b0576118ab8b8b8b60006120cf565b6118bd565b6118bd8a8c8b6000612054565b93508388600003106118d1578995506118e3565b6118e08b8a8a600003856121d2565b95505b6001600160a01b038a8116908716148215611946578080156119025750815b61191857611913878d8c60016120cf565b61191a565b855b9550808015611927575081155b61193d57611938878d8c6000612054565b61193f565b845b9450611990565b8080156119505750815b611966576119618c888c6001612054565b611968565b855b9550808015611975575081155b61198b576119868c888c60006120cf565b61198d565b845b94505b811580156119a057508860000385115b156119ac578860000394505b8180156119cb57508a6001600160a01b0316876001600160a01b031614155b156119da5785890393506119f7565b6119f4868962ffffff168a620f42400362ffffff1661221e565b93505b50505095509550955095915050565b6000600160ff1b8210611a1857600080fd5b5090565b6000808060001985870985870292508281108382030391505080600003611a555760008411611a4a57600080fd5b508290049050611ac8565b808411611a6157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60006401000276a36001600160a01b03831610801590611b0b575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b611b28576040516324c070df60e11b815260040160405180910390fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110611bbc57607f810383901c9150611bc6565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14611dc657886001600160a01b0316611dab826114f1565b6001600160a01b03161115611dc05781611dc8565b80611dc8565b815b9998505050505050505050565b6000611e2a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661225e9092919063ffffffff16565b805190915015611ea75780806020019051810190611e489190612fd2565b611ea75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d6f565b505050565b600281900b60081d6000611ec261010084612e66565b9050915091565b6000808211611ed757600080fd5b600160801b8210611eea57608091821c91015b680100000000000000008210611f0257604091821c91015b6401000000008210611f1657602091821c91015b620100008210611f2857601091821c91015b6101008210611f3957600891821c91015b60108210611f4957600491821c91015b60048210611f5957600291821c91015b60028210611f65576001015b919050565b6000808211611f7857600080fd5b5060ff6001600160801b03821615611f9357607f1901611f9b565b608082901c91505b67ffffffffffffffff821615611fb457603f1901611fbc565b604082901c91505b63ffffffff821615611fd157601f1901611fd9565b602082901c91505b61ffff821615611fec57600f1901611ff4565b601082901c91505b60ff821615612006576007190161200e565b600882901c91505b600f8216156120205760031901612028565b600482901c91505b600382161561203a5760011901612042565b600282901c91505b6001821615611f655760001901919050565b6000836001600160a01b0316856001600160a01b03161115612074579293925b816120a15761209c836001600160801b03168686036001600160a01b0316600160601b611a1c565b6120c4565b6120c4836001600160801b03168686036001600160a01b0316600160601b61221e565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156120ef579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661211957600080fd5b8361214f57866001600160a01b031661213c8383896001600160a01b0316611a1c565b8161214957612149612e16565b0461217b565b61217b6121668383896001600160a01b031661221e565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b03161161219d57600080fd5b6000846001600160801b0316116121b357600080fd5b816121c55761209c858585600161226d565b6120c48585856001612353565b600080856001600160a01b0316116121e957600080fd5b6000846001600160801b0316116121ff57600080fd5b816122115761209c8585856000612353565b6120c4858585600061226d565b600061222b848484611a1c565b90506000828061223d5761223d612e16565b8486091115611ac857600019811061225457600080fd5b6001019392505050565b60606120c78484600085612443565b600081156122df5760006001600160a01b038411156122a35761229e84600160601b876001600160801b0316611a1c565b6122ba565b6122ba6001600160801b038616606086901b612fef565b90506122d76122d2826001600160a01b038916612c24565b612569565b9150506120c7565b60006001600160a01b0384111561230d5761230884600160601b876001600160801b031661221e565b61232a565b61232a606085901b6001600160801b038716808204910615150190565b905080866001600160a01b03161161234157600080fd5b6001600160a01b0386160390506120c7565b6000826000036123645750836120c7565b600160601b600160e01b03606085901b1682156123f6576001600160a01b0386168481029085828161239857612398612e16565b04036123c8578181018281106123c6576123bc83896001600160a01b03168361221e565b93505050506120c7565b505b506122d781856123e16001600160a01b038a1683612fef565b6123eb9190612c24565b808204910615150190565b6001600160a01b0386168481029085828161241357612413612e16565b0414801561242057508082115b61242957600080fd5b8082036123bc6122d2846001600160a01b038b168461221e565b6060824710156124a45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d6f565b6001600160a01b0385163b6124fb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d6f565b600080866001600160a01b031685876040516125179190613003565b60006040518083038185875af1925050503d8060008114612554576040519150601f19603f3d011682016040523d82523d6000602084013e612559565b606091505b509150915061217b82828661257f565b806001600160a01b0381168114611f6557600080fd5b6060831561258e575081611ac8565b82511561259e5782518084602001fd5b8160405162461bcd60e51b8152600401610d6f919061301f565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b50805460008255600a029060005260206000209081019061261d9190612620565b50565b5b80821115611a18576000808255600182018190556002820180546001600160b81b031916905560038201819055600482018190556005820180546001600160c01b03191690556006820180546001600160a01b031916905560078201819055600882018190556009820155600a01612621565b801515811461261d57600080fd5b6001600160a01b038116811461261d57600080fd5b6000806000606084860312156126cc57600080fd5b83356126d781612694565b92506020840135915060408401356126ee816126a2565b809150509250925092565b600081518084526020808501945080840160005b838110156127e757815180518051895284810151858a01526040808201516001600160a01b0316908a015260608082015160020b908a0152608080820151908a015260a0808201516001600160801b03908116918b019190915260c09182015116908901528301516127d260e089018260018060a01b03808251168352602082015160020b6020840152604082015115156040840152806060830151166060840152506080810151608083015260a081015160a083015260c081015160c08301525050565b506101c096909601959082019060010161270d565b509495945050505050565b600061016086835285602084015260018060a01b038551166040840152602085015160020b606084015260ff6040860151166080840152606085015161284360a08501826001600160801b03169052565b50608085015161285860c085018260020b9052565b5060a085015162ffffff811660e08501525060c085015161010084015260e08501516101208401528061014084015261217b818401856126f9565b8060020b811461261d57600080fd5b6000602082840312156128b457600080fd5b8135611ac881612893565b62ffffff8116811461261d57600080fd5b6000806000606084860312156128e557600080fd5b83356128f081612694565b92506020840135915060408401356126ee816128bf565b6000806000806060858703121561291d57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561294357600080fd5b818701915087601f83011261295757600080fd5b81358181111561296657600080fd5b88602082850101111561297857600080fd5b95989497505060200194505050565b60005b838110156129a257818101518382015260200161298a565b8381111561127f5750506000910152565b600081518084526129cb816020860160208601612987565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a06080820181905260009061217b908301846129b3565b60008060408385031215612a2d57600080fd5b505080516020909101519092909150565b805161ffff81168114611f6557600080fd5b8051611f6581612694565b600080600080600080600060e0888a031215612a7657600080fd5b8751612a81816126a2565b6020890151909750612a9281612893565b9550612aa060408901612a3e565b9450612aae60608901612a3e565b9350612abc60808901612a3e565b925060a088015160ff81168114612ad257600080fd5b60c0890151909250612ae381612694565b8091505092959891949750929550565b600060208284031215612b0557600080fd5b8151611ac881612893565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015612b4657612b46612b10565b039392505050565b60006001600160a01b03828116848216808303821115612b7057612b70612b10565b01949350505050565b600060208284031215612b8b57600080fd5b8135611ac8816126a2565b600060208284031215612ba857600080fd5b8151611ac8816126a2565b80516001600160801b0381168114611f6557600080fd5b600060208284031215612bdc57600080fd5b611ac882612bb3565b600060208284031215612bf757600080fd5b8151611ac8816128bf565b60008160020b627fffff198103612c1b57612c1b612b10565b60000392915050565b60008219821115612c3757612c37612b10565b500190565b60008083128015600160ff1b850184121615612c5a57612c5a612b10565b6001600160ff1b0384018313811615612c7557612c75612b10565b50500390565b600080821280156001600160ff1b0384900385131615612c9d57612c9d612b10565b600160ff1b8390038412811615612cb657612cb6612b10565b50500190565b600080600080600080600080610100898b031215612cd957600080fd5b612ce289612bb3565b9750602089015180600f0b8114612cf857600080fd5b80975050604089015195506060890151945060808901518060060b8114612d1e57600080fd5b60a08a0151909450612d2f816126a2565b60c08a015190935063ffffffff81168114612d4957600080fd5b9150612d5760e08a01612a50565b90509295985092959890939650565b600081600f0b6f7fffffffffffffffffffffffffffffff198103612c1b57612c1b612b10565b60006001600160801b03808316818516808303821115612b7057612b70612b10565b60006001600160801b0383811690831681811015612b4657612b46612b10565b60008160020b8360020b6000811281627fffff1901831281151615612df557612df5612b10565b81627fffff018313811615612e0c57612e0c612b10565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b80612e4357612e43612e16565b627fffff19821460001982141615612e5d57612e5d612b10565b90059392505050565b60008260020b80612e7957612e79612e16565b808360020b0791505092915050565b60008160020b627fffff198103612ea157612ea1612b10565b6000190192915050565b600082821015612ebd57612ebd612b10565b500390565b600060208284031215612ed457600080fd5b5051919050565b60008160020b8360020b627fffff600082136000841383830485118282161615612f0757612f07612b10565b627fffff196000851282811687830587121615612f2657612f26612b10565b60008712925085820587128484161615612f4257612f42612b10565b85850587128184161615612f5857612f58612b10565b5050509290910295945050505050565b600060ff821660ff841680821015612f8257612f82612b10565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615612fb157612fb1612b10565b82627fffff19038212811615612fc957612fc9612b10565b50019392505050565b600060208284031215612fe457600080fd5b8151611ac881612694565b600082612ffe57612ffe612e16565b500490565b60008251613015818460208701612987565b9190910192915050565b602081526000611ac860208301846129b356fea2646970667358221220a28292363291690bb83b6bfbef1f22da2f822a21f7c487809146e63f4eb9b04a64736f6c634300080d0033';

type SimulateSwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimulateSwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimulateSwapTest__factory extends ContractFactory {
  constructor(...args: SimulateSwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimulateSwapTest> {
    return super.deploy(vPool_, overrides || {}) as Promise<SimulateSwapTest>;
  }
  override getDeployTransaction(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vPool_, overrides || {});
  }
  override attach(address: string): SimulateSwapTest {
    return super.attach(address) as SimulateSwapTest;
  }
  override connect(signer: Signer): SimulateSwapTest__factory {
    return super.connect(signer) as SimulateSwapTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimulateSwapTestInterface {
    return new utils.Interface(_abi) as SimulateSwapTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimulateSwapTest {
    return new Contract(address, _abi, signerOrProvider) as SimulateSwapTest;
  }
}
