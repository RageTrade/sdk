/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  Uint48Test,
  Uint48TestInterface,
} from '../../../contracts/test/Uint48Test';

const _abi = [
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'val1',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'val2',
        type: 'int24',
      },
    ],
    name: 'assertConcat',
    outputs: [
      {
        internalType: 'uint48',
        name: 'concatenated',
        type: 'uint48',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'val1',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'val2',
        type: 'int24',
      },
    ],
    name: 'concat',
    outputs: [
      {
        internalType: 'uint48',
        name: 'concatenated',
        type: 'uint48',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x60808060405234610016576101a2908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806348a572d71461003b5763edabf4c51461003357600080fd5b61000e6100db565b3461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206100746100bb565b6100ab61007f6100cb565b61009e62ffffff82168460181b019360020b8460181c60020b14610136565b60020b8260020b14610136565b65ffffffffffff60405191168152f35b600435908160020b820361000e57565b602435908160020b820361000e57565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206101156100bb565b65ffffffffffff62ffffff6101286100cb565b166040519260181b01168152f35b1561013d57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea2646970667358221220e33d0832fedee3948bb1c1c4869a93f6cdddb4cb2fff21ee282cce947c99080464736f6c634300080e0033';

type Uint48TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uint48TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uint48Test__factory extends ContractFactory {
  constructor(...args: Uint48TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Uint48Test> {
    return super.deploy(overrides || {}) as Promise<Uint48Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Uint48Test {
    return super.attach(address) as Uint48Test;
  }
  override connect(signer: Signer): Uint48Test__factory {
    return super.connect(signer) as Uint48Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uint48TestInterface {
    return new utils.Interface(_abi) as Uint48TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Uint48Test {
    return new Contract(address, _abi, signerOrProvider) as Uint48Test;
  }
}
