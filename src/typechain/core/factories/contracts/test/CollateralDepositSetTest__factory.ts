/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  CollateralDepositSetTest,
  CollateralDepositSetTestInterface,
} from '../../../contracts/test/CollateralDepositSetTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_settlementToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientCollateralBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllDepositAccountMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'depositValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
    ],
    name: 'getBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'initVToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maxVirtualPriceDeviationRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523462000072576020816200209638819003908190601f8201601f191684016001600160401b0381118582101762000077575b6040528339810103126200007257516001600160a01b0381168103620000725762000062906200009e565b6040516114a790816200011b8239f35b600080fd5b6200008162000087565b62000037565b50634e487b7160e01b600052604160045260246000fd5b60405180610ad4808201906001600160401b038211838310176200010a575b620015c2833903906000f0908115620000fe5760d580546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055565b6040513d6000823e3d90fd5b6200011462000087565b620000bd56fe60806040526004361015610013575b600080fd5b60003560e01c80631ca45818146101175780633ffe794c1461010e5780635b86f59914610105578063713fdf47146100fc57806382d9dbaa146100f35780638b1a8fb6146100ea5780638ce74426146100e1578063a96822a3146100d8578063ac210cc7146100cf578063c28fd787146100c6578063ed16575a146100bd578063f8b2cb4f146100b45763ff056949146100ac57600080fd5b61000e610d0e565b5061000e610cd2565b5061000e610c67565b5061000e610a12565b5061000e6109dd565b5061000e610860565b5061000e61077d565b5061000e610575565b5061000e61051c565b5061000e61047e565b5061000e610409565b5061000e610136565b503461000e57600060031936011261000e576020606e54604051908152f35b503461000e5761014060031936011261000e576103e9600360043561015a816103eb565b63ffffffff811660005260006020526101b160406000209161017b816103eb565b829073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff19825416179055565b6101f96024356101c0816103eb565b600183019073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff19825416179055565b610241604435610208816103eb565b600283019073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff19825416179055565b0161027c61024d6113ae565b829061ffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000825416179055565b6102bc6102876113bf565b82547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff1660109190911b63ffff000016178255565b6102fe6102c76113d0565b82547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff1660209190911b65ffff0000000016178255565b60c43561030a81610470565b81547fffffffffffffffffffffffffffffffffffffffffff0000000000ffffffffffff69ffffffff0000000000006aff0000000000000000000061034c611442565b151560501b169360301b169116171781556103a5610368611451565b82547fffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff1690151560581b6bff000000000000000000000016178255565b6103ad611461565b6bffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083549260601b169116179055565b005b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e57604060031936011261000e57600435610427816103eb565b61045363ffffffff602435921661043d816110e2565b63ffffffff166000526070602052604060002090565b9081548119811161046357019055005b61046b610e4a565b019055005b63ffffffff81160361000e57565b503461000e57606060031936011261000e576103e960043561049f816103eb565b602435906104ac826103eb565b604435906104b982610470565b6040516104c5816105f5565b73ffffffffffffffffffffffffffffffffffffffff809416815263ffffffff8093166020820152600160408201526040519361050085610640565b8216845260208401521660005260016020526040600020610d3e565b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff60043561054f816103eb565b1673ffffffffffffffffffffffffffffffffffffffff1960045416176004556000604051f35b503461000e57602060031936011261000e576103e973ffffffffffffffffffffffffffffffffffffffff6004356105ab816103eb565b63ffffffff811660005260006020521660406000209073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff19825416179055565b6060810190811067ffffffffffffffff82111761061157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761061157604052565b610100810190811067ffffffffffffffff82111761061157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761061157604052565b9260e061076d91610180969399989794996101a087019a73ffffffffffffffffffffffffffffffffffffffff809216885216602087015261ffff8082511660408801528060208301511660608801526040820151166080870152610729606082015160a088019061ffff169052565b608081015161ffff1660c087015260a081015161ffff168683015260c081015167ffffffffffffffff16610100870152015167ffffffffffffffff16610120850152565b6101408301526101608201520152565b503461000e57600060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff806003541690600454169061085c6040516107be8161065c565b61084560055461082261ffff8083168552808360101c1660208601526107f0818460201c16604087019061ffff169052565b61ffff603084901c821616606086015261ffff604084901c82161660808601528260501c1660a085019061ffff169052565b67ffffffffffffffff606082901c811660c085015260a09190911c1660e0830152565b6006546007549060085492604051968796876106ba565b0390f35b503461000e576000806003193601126109da5780815b600860ff84161061088d575b604051828152602090f35b906108aa61089a84610e96565b905463ffffffff9160031b1c1690565b63ffffffff808216156109d257916109836109688361098f9560016109056108ff6108e86109899963ffffffff166000526001602052604060002090565b9463ffffffff166000526070602052604060002090565b5461124f565b9201549060405180927fdd86c1010000000000000000000000000000000000000000000000000000000082528173ffffffffffffffffffffffffffffffffffffffff8160209889968560a01c166004830191909163ffffffff6020820193169052565b0392165afa9283156109c5575b8893610996575b505061127a565b906111e3565b926111b5565b9190610876565b6109b6929350803d106109be575b6109ae8183610679565b8101906111c7565b90388061097c565b503d6109a4565b6109cd6111d6565b610975565b505090610882565b80fd5b503461000e57600060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff60d55416604051908152f35b503461000e576003193601610180811261000e576101001361000e57610a68610a396113e1565b61ffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00006005541617600555565b610aa9610a736113f2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff63ffff00006005549260101b16911617600555565b610aec610ab4611403565b7fffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff65ffff000000006005549260201b16911617600555565b610af46113ae565b6005547fffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffff67ffff00000000000069ffff0000000000000000610b346113bf565b60401b169360301b1691161717600555610b8d610b4f6113d0565b7fffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffff6bffff000000000000000000006005549260501b16911617600555565b610bde610b98611414565b7fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff73ffffffffffffffff0000000000000000000000006005549260601b16911617600555565b610c37610be961142b565b7fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff7bffffffffffffffff00000000000000000000000000000000000000006005549260a01b16911617600555565b610c4361010435600655565b610c4f61012435600755565b610c5b61014435600855565b6103e961016435606e55565b503461000e576000806003193601126109da57805b60088110610c8b575b50604051f35b63ffffffff610c9982610e96565b90549060031b1c16908115610ccc57610cc282610cc79385526070602052604085205490610ef0565b610e7a565b610c7c565b50610c85565b503461000e57602060031936011261000e5763ffffffff600435610cf5816103eb565b1660005260706020526020604060002054604051908152f35b503461000e57604060031936011261000e576103e9600435610d2f816103eb565b63ffffffff6024359116610ef0565b610dd66020600173ffffffffffffffffffffffffffffffffffffffff93610d9885875116829073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff19825416179055565b0193015191825116839073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff19825416179055565b6020810151907fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff77ffffffff000000000000000000000000000000000000000078ff00000000000000000000000000000000000000000000000060408654940151151560c01b169360a01b16911617179055565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001906000198114610e8a570190565b610e92610e4a565b0190565b906008821015610eb157601c8260031c606f019260021b1690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000199060018110610e8a570190565b9080610f0c8363ffffffff166000526070602052604060002090565b54106110b857610f2c8263ffffffff166000526070602052604060002090565b9081548181106110ab575b039055610f548163ffffffff166000526070602052604060002090565b5415610f5d5750565b63ffffffff16801561107957600880916000905b828210611007575b5080820361100157506007905b8203610f90575050565b808203610fb85750610fa4610fb691610e96565b63ffffffff82549160031b1b19169055565b565b90610fa482610fe0610fd8610fd261089a610fb697610e96565b94610e96565b939092610e96565b919082549060031b9163ffffffff9283811b93849216901b16911916179055565b90610f86565b9291908361102361101a61089a84610e96565b63ffffffff1690565b14611071575b61103861101a61089a83610e96565b1561104e5761104690610e7a565b909192610f71565b91925090600090801561106b576110659150610ee0565b38610f79565b50611065565b915081611029565b6040517f3b16221e00000000000000000000000000000000000000000000000000000000815260006004820152602490fd5b6110b3610e4a565b610f37565b60046040517fb1eae4f1000000000000000000000000000000000000000000000000000000008152fd5b63ffffffff81168015611079576008809160005b82811061116c575b505081146111355790611113610fb692610e96565b90919082549060031b9163ffffffff9283811b93849216901b16911916179055565b6040517f4e99453600000000000000000000000000000000000000000000000000000000815263ffffffff83166004820152602490fd5b8161117c61101a61089a84610e96565b146111ae5761119061101a61089a83610e96565b156111a35761119e90610e7a565b6110f6565b9250389050806110fe565b5050505050565b60ff6001911660ff8114610e8a570190565b9081602091031261000e575190565b506040513d6000823e3d90fd5b60008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313811516611242575b817f800000000000000000000000000000000000000000000000000000000000000003831216610e8a570190565b61124a610e4a565b611214565b7f800000000000000000000000000000000000000000000000000000000000000081101561000e5790565b91906112fa6112ff9160008512948560001461135c57600160001981837f800000000000000000000000000000000000000000000000000000000000000005821260008513161661134f575b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0513871616611342575b60000361135c565b61124f565b9161130657565b907f80000000000000000000000000000000000000000000000000000000000000008114611335575b60000390565b61133d610e4a565b61132f565b61134a610e4a565b6112f2565b611357610e4a565b6112c6565b60001982820990828102928380841093039280840393146113a557700100000000000000000000000000000000918383111561000e570990828211900360801b910360801c1790565b50505060801c90565b60643561ffff8116810361000e5790565b60843561ffff8116810361000e5790565b60a43561ffff8116810361000e5790565b60043561ffff8116810361000e5790565b60243561ffff8116810361000e5790565b60443561ffff8116810361000e5790565b60c43567ffffffffffffffff8116810361000e5790565b60e43567ffffffffffffffff8116810361000e5790565b60e435801515810361000e5790565b61010435801515810361000e5790565b6101243561146e816103eb565b9056fea2646970667358221220b6cbb663dbc4af92e5aae5d011e73da1d82fc5fb8802568520bd956a93255b6464736f6c634300080e00336080806040523461001657610ab8908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806302dc99511461017d5780630d8f6f4614610174578063195cd92c1461016b5780631dce5fcf146101625780632a99a792146101085780634c2ebc5814610159578063512403361461015057806356d15a88146101475780635e622abc1461013e5780636719578c146101355780637779815c1461011157806386c8e9a71461012c57806397c71faf14610123578063a34123a71461011a578063a3a1e7e914610111578063a3c35e2c14610108578063d74dcaca146100ff578063ea6e4e52146100f65763fca6fbf2146100ee57600080fd5b61000e610850565b5061000e6107ec565b5061000e610794565b5061000e610508565b5061000e61066f565b5061000e6106e5565b5061000e6106c3565b5061000e61069c565b5061000e61063a565b5061000e61061d565b5061000e610609565b5061000e6105ed565b5061000e610562565b5061000e61043e565b5061000e61028b565b5061000e6101a1565b503461000e57600060031936011261000e57602062ffffff60015416604051908152f35b503461000e57602060031936011261000e5760206004357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0606001827f8000000000000000000000000000000000000000000000000000000000000000058212600084131616610251575b60017ffff7ced916872b020c49ba5e353f7ced916872b020c49ba5e353f7ced916872c8312600084121616610244575b60405191028152f35b61024c610967565b61023b565b610259610967565b61020b565b60043590811515820361000e57565b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b503461000e57606060031936011261000e576103796102a861025e565b6024356102b660443561026d565b6102be610877565b916000808452602084019080825260408501928184528160608701528160808701528160a08701528160c087015215159084131460001461037d578261030e92936103099252610a47565b6109d4565b90525b6040519182918291909160c060e082019380518352602081015160208401526040810151604084015260608101516060840152608081015160808401528173ffffffffffffffffffffffffffffffffffffffff918260a08201511660a0860152015116910152565b0390f35b61039161038984610a47565b610fa0900590565b905252610311565b600435908160020b820361000e57565b602435908160020b820361000e57565b600319606091011261000e576004358060020b810361000e57906024358060020b810361000e57906044356fffffffffffffffffffffffffffffffff8116810361000e5790565b60409061043c939594929560c0820196825260208201520190606080918051845260208101516020850152604081015160408501520151910152565b565b503461000e576104ef6fffffffffffffffffffffffffffffffff610379610464366103b9565b6104729592959491946108e6565b50169283600454811981116104fb575b016004556104e98560020b948560005260026020526104bf8160016104b88660406000209060020b600052602052604060002090565b0154610997565b9560005260026020526104e38360406000209060020b600052602052604060002090565b54610997565b9461090a565b60405193849384610400565b610503610967565b610482565b503461000e57604060031936011261000e576080610535610527610399565b61052f6103a9565b9061090a565b6105606040518092606080918051845260208101516020850152604081015160408501520151910152565bf35b503461000e5760c060031936011261000e5761057c610399565b60036105866103a9565b9161058f6108c6565b9260443584526020840160643581526105d760408601926084358452606087019460a435865260020b600052600060205260406000209060020b600052602052604060002090565b9451855551600185015551600284015551910155005b503461000e57602060031936011261000e5761060761025e565b005b503461000e5760c060031936011261000e57005b503461000e57600060031936011261000e57602060405160008152f35b503461000e57600060031936011261000e57602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b503461000e57600060031936011261000e5760206040517014000000000000000000000000000000008152f35b503461000e57600060031936011261000e57602062ffffff60015460181c16604051908152f35b503461000e57602060031936011261000e576020604051610fa0600435058152f35b503461000e576104ef6fffffffffffffffffffffffffffffffff61037961070b366103b9565b61071895929491956108e6565b50169384600454818110610787575b036004556107818460020b9586600052600260205261075b816104e38560406000209060020b600052602052604060002090565b96600052600260205260016104b88460406000209060020b600052602052604060002090565b9361090a565b61078f610967565b610727565b503461000e57608060031936011261000e576107dc6107b1610399565b6107b96103a9565b9060020b600052600260205260406000209060020b600052602052604060002090565b6044358155606435600190910155005b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff60043561081f8161026d565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060035416176003556000604051f35b503461000e57600060031936011261000e57602062ffffff60015460301c16604051908152f35b6040519060e0820182811067ffffffffffffffff82111761089757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051906080820182811067ffffffffffffffff82111761089757604052565b6108ee6108c6565b9060008252600060208301526000604083015260006060830152565b9061093a916109176108e6565b5060020b600052600060205260406000209060020b600052602052604060002090565b60036109446108c6565b918054835260018101546020840152600281015460408401520154606082015290565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211811515166109c8570290565b6109d0610967565b0290565b610fa09060017e083126e978d4fdf3b645a1cac083126e978d4fdf3b645a1cac083126e978d48211600083131616610a3a575b60017ffff7ced916872b020c49ba5e353f7ced916872b020c49ba5e353f7ced916872c82126000831216166109c8570290565b610a42610967565b610a07565b7f80000000000000000000000000000000000000000000000000000000000000008114610a75575b60000390565b610a7d610967565b610a6f56fea26469706673582212200f9a172143839e71b45fba9b45692bcf7f87ac43051223cc076de54e4110c29864736f6c634300080e0033';

type CollateralDepositSetTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollateralDepositSetTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollateralDepositSetTest__factory extends ContractFactory {
  constructor(...args: CollateralDepositSetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _settlementToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CollateralDepositSetTest> {
    return super.deploy(
      _settlementToken,
      overrides || {}
    ) as Promise<CollateralDepositSetTest>;
  }
  override getDeployTransaction(
    _settlementToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_settlementToken, overrides || {});
  }
  override attach(address: string): CollateralDepositSetTest {
    return super.attach(address) as CollateralDepositSetTest;
  }
  override connect(signer: Signer): CollateralDepositSetTest__factory {
    return super.connect(signer) as CollateralDepositSetTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollateralDepositSetTestInterface {
    return new utils.Interface(_abi) as CollateralDepositSetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollateralDepositSetTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CollateralDepositSetTest;
  }
}
