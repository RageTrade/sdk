/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  Uint48L5ArrayTest,
  Uint48L5ArrayTestInterface,
} from '../../../contracts/test/Uint48L5ArrayTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'exclude',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'exists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
    ],
    name: 'getter',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getterAll',
    outputs: [
      {
        internalType: 'uint48[5]',
        name: '',
        type: 'uint48[5]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'include',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'length',
    outputs: [
      {
        internalType: 'uint8',
        name: 'len',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numberOfNonZeroElements',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'setter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461001657610840908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c90816304a2c339146100b6575080631f7b6d32146100ad578063296eaea2146100a45780633fc1d8ce1461009b5780634c84b36e1461009257806394d881cb14610089578063968cf6cf146100805763b0825a631461007857600080fd5b61000e6104eb565b5061000e6103a9565b5061000e610338565b5061000e6102e6565b5061000e610201565b5061000e6101a7565b5061000e6100f4565b346100dc5760206003193601126100dc576100d76100d26100df565b61060b565b604051f35b80fd5b6004359065ffffffffffff8216820361000e57565b503461000e57600060031936011261000e576000805b60058082101561019c578082045490820660060260031b1c65ffffffffffff1661018c575b61015b61015061013e836105b8565b905465ffffffffffff9160031b1c1690565b65ffffffffffff1690565b1561016e576101699061054e565b61010a565b50610188905b60405160ff90911681529081906020820190565b0390f35b9061019690610741565b9061012f565b505061018890610174565b503461000e57600060031936011261000e5760206101c36107b3565b604051908152f35b60a0810192916000915b600583106101e257505050565b60019065ffffffffffff835116815260208091019201920191906101d5565b503461000e57600060031936011261000e5760408051610220816106f6565b60a080913690378151908160009182915b6005600484011061025457610188858761024a826106f6565b51918291826101cb565b6001826005926102ca875465ffffffffffff808216845261028460208501828460301c1665ffffffffffff169052565b6102b58c6102a160609187018486841c1665ffffffffffff169052565b8501828460901c1665ffffffffffff169052565b608084019160c01c1665ffffffffffff169052565b01940192019192610231565b6004359060ff8216820361000e57565b503461000e57602060031936011261000e5760206103026102d6565b600581101561032b575b65ffffffffffff60058204546006600560405194060260031b1c168152f35b610333610588565b61030c565b503461000e57604060031936011261000e576103526102d6565b60243565ffffffffffff811680910361000e5761039890600583101561039c575b6006600580850494060283549060031b65ffffffffffff811b9283911b169119161790565b9055005b6103a4610588565b610373565b503461000e57602060031936011261000e5765ffffffffffff6103ca6100df565b1680156104b957600580916000905b828210610453575b5080820361044d57506004905b82036103f657005b808203610420575061040a61041e916105b8565b65ffffffffffff82549160031b1b19169055565b005b9061040a8261044861044061043a61013e61041e976105b8565b946105b8565b9390926105b8565b6105dd565b906103ee565b91908261046561015061013e846105b8565b146104b1575b61047a61015061013e836105b8565b1561048f576104889061054e565b90916103d9565b90915060009080156104ab576104a591506106c8565b386103e1565b506104a5565b92508261046b565b6040517fc712b5e900000000000000000000000000000000000000000000000000000000815260006004820152602490fd5b503461000e57602060031936011261000e576020600560ff61051361050e6100df565b610753565b161415604051908152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461057c570190565b61058461051e565b0190565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060058210156105d0575b6006600580840493060290565b6105d8610588565b6105c3565b919065ffffffffffff61060792169083549060031b65ffffffffffff811b9283911b169119161790565b9055565b65ffffffffffff811680156104b9576005809160005b82811061067f575b50508114610646579061063e610644926105b8565b906105dd565b565b6040517f5503aeb500000000000000000000000000000000000000000000000000000000815265ffffffffffff83166004820152602490fd5b8161068f61015061013e846105b8565b146106c1576106a361015061013e836105b8565b156106b6576106b19061054e565b610621565b925038905080610629565b5050505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906001811061057c570190565b60a0810190811067ffffffffffffffff82111761071257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60ff6001911660ff811461057c570190565b60005b60058060ff831610156107ab578082101561079e575b8082045465ffffffffffff9060068286169385060260031b1c16146107995761079490610741565b610756565b905090565b6107a6610588565b61076c565b505050600590565b60005b60ff8116906005808310156107ab578065ffffffffffff918310156107fd575b6006818404549184060260031b1c16156107f9576107f49150610741565b6107b6565b5090565b610805610588565b6107d656fea264697066735822122030c5dfe649330711379c0be19e164d3bb51b8a2ad4614a3ef6374e18fdcdc41464736f6c634300080e0033';

type Uint48L5ArrayTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uint48L5ArrayTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uint48L5ArrayTest__factory extends ContractFactory {
  constructor(...args: Uint48L5ArrayTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Uint48L5ArrayTest> {
    return super.deploy(overrides || {}) as Promise<Uint48L5ArrayTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Uint48L5ArrayTest {
    return super.attach(address) as Uint48L5ArrayTest;
  }
  override connect(signer: Signer): Uint48L5ArrayTest__factory {
    return super.connect(signer) as Uint48L5ArrayTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uint48L5ArrayTestInterface {
    return new utils.Interface(_abi) as Uint48L5ArrayTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Uint48L5ArrayTest {
    return new Contract(address, _abi, signerOrProvider) as Uint48L5ArrayTest;
  }
}
