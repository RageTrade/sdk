/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionSetTest2,
  VTokenPositionSetTest2Interface,
} from '../../../contracts/test/VTokenPositionSetTest2';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'LPS_DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'LPS_IllegalTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LP_AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'y_target',
        type: 'uint256',
      },
      {
        internalType: 'uint160',
        name: 'x_lower',
        type: 'uint160',
      },
      {
        internalType: 'uint160',
        name: 'x_upper',
        type: 'uint160',
      },
    ],
    name: 'SolutionOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'VPS_DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'VPS_TokenInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllTokenPositionValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isInititalMargin',
        type: 'bool',
      },
    ],
    name: 'getRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouseEnums.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
          {
            internalType: 'bool',
            name: 'settleProfit',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maxVirtualPriceDeviationRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'settleProfit',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouseStructures.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vQuoteIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouseStructures.BalanceAdjustments',
        name: 'balanceAdjustments',
        type: 'tuple',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'update',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461001b57607b60d655613fb090816100218239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806319ab453c146100ef5780631ca45818146100e65780633ffe794c146100dd5780634bed187d146100d45780637675995e146100cb57806382d9dbaa146100c25780638cd32e0d146100b95780638ce74426146100b0578063a3883a08146100a7578063c28fd7871461009e5763f46a1de81461009657600080fd5b61000e610d51565b5061000e610abd565b5061000e6109f9565b5061000e6108ca565b5061000e61076e565b5061000e6106e5565b5061000e6105ce565b5061000e610554565b5061000e61019b565b5061000e61017c565b5061000e610109565b6001600160a01b0381160361000e57565b503461000e57602060031936011261000e5761017a60043561012a816100f8565b63ffffffff811661013a81610ed2565b60005260006020526040600020906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b005b503461000e57600060031936011261000e576020606e54604051908152f35b503461000e5761014060031936011261000e576004356101ba816100f8565b63ffffffff600360009282811684528360205261021260408520916101de816100f8565b82906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b610258602435610221816100f8565b60018301906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b61029e604435610267816100f8565b60028301906001600160a01b03167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b016102dd6064356102ae816109d1565b829061ffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000825416179055565b6103216084356102ec816109d1565b82547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff1660109190911b63ffff000016178255565b61036760a435610330816109d1565b82547fffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff1660209190911b65ffff0000000016178255565b60c435918216820361048757610482917fffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffffff69ffffffff00000000000083549260301b1691161781556103f66103ba613f41565b82547fffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffff1690151560501b6aff0000000000000000000016178255565b61043e610401613f4d565b82547fffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffff1690151560581b6bff000000000000000000000016178255565b610446613f5a565b6bffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000083549260601b169116179055565b604051f35b8280fd5b50634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff8211176104be57604052565b6104c661048b565b604052565b610100810190811067ffffffffffffffff8211176104be57604052565b6060810190811067ffffffffffffffff8211176104be57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176104be57604052565b60405190610552826104e8565b565b503461000e5760031936016080811261000e5760601361000e5761017a6040516060810181811067ffffffffffffffff8211176105c1575b604052600435815260243560208201526044356040820152606435906105b1826100f8565b63ffffffff60d654921691611058565b6105c961048b565b61058c565b503461000e57600060031936011261000e576000805b600860ff821610610614575b6106106106008360715490610fe0565b6040519081529081906020820190565b0390f35b63ffffffff61062282610ea9565b919054600392831b1c169081156106de57906106ac6106d3926106d9949561065a8463ffffffff166000526070602052604060002090565b916106648561352d565b90506106a26106c96106b2610678846133a9565b956106ac6001600160a01b0395868c600297889163ffffffff166000526000602052604060002090565b015416908a613c8d565b90610fe0565b9763ffffffff166000526000602052604060002090565b0154169201613195565b91613183565b6105e4565b50506105f0565b503461000e57602060031936011261000e576001600160a01b0360043561070b816100f8565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060045416176004556000604051f35b60843590610552826100f8565b8015150361000e57565b60c4359061055282610749565b610104359061055282610749565b503461000e5760c060031936011261000e5760043561078c816100f8565b60a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261000e5760405161017a916107c6826104a2565b60243582526044356107d7816100f8565b60208301526064356107e881610749565b60408301526084356107f981610749565b606083015260a43561080a81610749565b6080830152611761565b9260e06108ba91610180969399989794996101a087019a6001600160a01b03809216885216602087015261ffff8082511660408801528060208301511660608801526040820151166080870152610876606082015160a088019061ffff169052565b608081015161ffff1660c087015260a081015161ffff168683015260c081015167ffffffffffffffff16610100870152015167ffffffffffffffff16610120850152565b6101408301526101608201520152565b503461000e57600060031936011261000e576001600160a01b0380600354169060045416906106106040516108fe816104cb565b61098560055461096261ffff8083168552808360101c166020860152610930818460201c16604087019061ffff169052565b61ffff603084901c821616606086015261ffff604084901c82161660808601528260501c1660a085019061ffff169052565b67ffffffffffffffff606082901c811660c085015260a09190911c1660e0830152565b600654600754906008549260405196879687610814565b8060020b0361000e57565b602435906105528261099c565b604435906105528261099c565b6064359081600f0b820361000e57565b61ffff81160361000e57565b60a43590610552826109d1565b60e43590600382101561000e57565b503461000e5761012060031936011261000e57600435610a18816100f8565b6101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36011261000e5760405161017a91610a53826104cb565b610a5b6109a7565b8252610a656109b4565b6020830152610a726109c1565b6040830152610a7f61073c565b6060830152610a8c6109dd565b6080830152610a99610753565b60a0830152610aa66109ea565b60c0830152610ab3610760565b60e08301526119b1565b503461000e576003193601610180811261000e576101001361000e57610b17600435610ae8816109d1565b61ffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00006005541617600555565b610b5c602435610b26816109d1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffff63ffff00006005549260101b16911617600555565b610ba3604435610b6b816109d1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffff65ffff000000006005549260201b16911617600555565b606435610baf816109d1565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffff67ffff0000000000006005549260301b16911617600555610c2e610bf2613efb565b7fffffffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffff69ffff00000000000000006005549260401b16911617600555565b610c77610c39613f07565b7fffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffff6bffff000000000000000000006005549260501b16911617600555565b610cc8610c82613f13565b7fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff73ffffffffffffffff0000000000000000000000006005549260601b16911617600555565b610d21610cd3613f2a565b7fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff7bffffffffffffffff00000000000000000000000000000000000000006005549260a01b16911617600555565b610d2d61010435600655565b610d3961012435600755565b610d4561014435600855565b61017a61016435606e55565b503461000e57602060031936011261000e57600435610d6f81610749565b60008091819082905b600860ff831610610d95575b610610610600856106ac8689613cb8565b909363ffffffff90610dbc610da987610ea9565b939054600394851b1c1663ffffffff1690565b15610e585790610e0991610e14610de5610dd589610ea9565b905463ffffffff9160031b1c1690565b92610df08487613cc5565b95909463ffffffff166000526000602052604060002090565b015460581c60ff1690565b15610e3f5791610e2a610e3092610e3694610fe0565b94610fe0565b94613183565b90939193610d78565b9395946106ac610e3693610e5293613cb8565b93613183565b9450610d84565b50634e487b7160e01b600052601160045260246000fd5b6001906000198114610e86570190565b610e8e610e5f565b0190565b50634e487b7160e01b600052603260045260246000fd5b906008821015610ec5575b601c8260031c606f019260021b1690565b610ecd610e92565b610eb4565b63ffffffff81168015610fae576008809160005b828110610f5c575b50508114610f255790610f0361055292610ea9565b90919082549060031b9163ffffffff9283811b93849216901b16911916179055565b6040517f4e99453600000000000000000000000000000000000000000000000000000000815263ffffffff83166004820152602490fd5b81610f75610f6c610dd584610ea9565b63ffffffff1690565b14610fa757610f89610f6c610dd583610ea9565b15610f9c57610f9790610e76565b610ee6565b925038905080610eee565b5050505050565b6040517f3b16221e00000000000000000000000000000000000000000000000000000000815260006004820152602490fd5b60008112817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038313811516611023575b81600160ff1b03831216610e86570190565b61102b610e5f565b611011565b60056006919392938185101561104b575b8185040193060290565b611053610e92565b611041565b6001600160a01b03600261107c8563ffffffff166000526000602052604060002090565b015416907f207752419b4d795bdf5fbf6fe5dc8c9f25db48ef8c82f58a5a19724babf74a2b61113e6110be8663ffffffff166000526070602052604060002090565b93604051907f7779815c000000000000000000000000000000000000000000000000000000008252602082600481845afa918215611200575b6000926111cb575b50600261110d83928861140d565b9661111a88607154610fe0565b607155015560408051958652602086019190915263ffffffff871694918291820190565b0390a361114a82610ed2565b6111986111678363ffffffff166000526070602052604060002090565b9161117760208201518454610fe0565b8355604081015161118d60018501918254610fe0565b905551607154610fe0565b60715580541590816111b6575b506111ad5750565b6105529061120d565b6003015465ffffffffffff16159050386111a5565b61110d92506111f260029160203d81116111f9575b6111ea8183610504565b8101906113d2565b92506110ff565b503d6111e0565b6112086113e1565b6110f7565b6112278163ffffffff166000526070602052604060002090565b541580159061137d575b6113465763ffffffff168015610fae57600880916000905b8282106112dd575b508082036112d757506007905b8203611268575050565b80820361128e575061127c61055291610ea9565b63ffffffff82549160031b1b19169055565b9061127c826112b66112ae6112a8610dd561055297610ea9565b94610ea9565b939092610ea9565b919082549060031b9163ffffffff9283811b93849216901b16911916179055565b9061125e565b929190836112f0610f6c610dd584610ea9565b1461133e575b611305610f6c610dd583610ea9565b1561131b5761131390610e76565b909192611249565b9192509060009080156113385761133291506113ab565b38611251565b50611332565b9150816112f6565b60249063ffffffff604051917fd04a5725000000000000000000000000000000000000000000000000000000008352166004820152fd5b5065ffffffffffff60036113a18363ffffffff166000526070602052604060002090565b0154161515611231565b6000199060018110610e86570190565b8181106113c6570390565b6113ce610e5f565b0390565b9081602091031261000e575190565b506040513d6000823e3d90fd5b600160ff1b8114611400575b60000390565b611408610e5f565b6113fa565b6001600160a01b0361147991602061147e946004604051809581937fa3a1e7e9000000000000000000000000000000000000000000000000000000008352165afa9182156114a5575b600092611481575b508060016002611473930154910154926114b2565b90611502565b6113ee565b90565b61147391925061149e9060203d81116111f9576111ea8183610504565b919061145e565b6114ad6113e1565b611456565b6000821282600160ff1b0182128115166114f5575b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213166113c6570390565b6114fd610e5f565b6114c7565b90919060016000821215611567575061151c6000916113ee565b905b80600085121561155857506115469161153b6115419215956113ee565b906115c1565b611752565b911561154e57565b9061147e906113ee565b936115469261154192506115c1565b61151e565b1561000e57565b60001982820990828102928380841093039280840393146115b8576c01000000000000000000000000918383111561000e570990828211900360a01b910360601c1790565b50505060601c90565b600019828209908281029283808410930392808403931461160a57700100000000000000000000000000000000918383111561000e570990828211900360801b910360801c1790565b50505060801c90565b60001982820990828102928380841093039280840393146116545768010000000000000000918383111561000e570990828211900360c01b910360401c1790565b50505060401c90565b90600019818309818302918280831092039180830392146116ba57612710908282111561000e577fbc01a36e2eb1c432ca57a786c226809d495182a9930be0ded288ce703afb7e91940990828211900360fc1b910360041c170290565b505061271091500490565b9091600019838309928083029283808610950394808603951461173f579082916116f086841161156c565b0981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b5050915061174e82151561156c565b0490565b600160ff1b81101561000e5790565b7fe21eb33795bf361d3419629f8b1091aef9f4c8d525bea8dd66efbbe19d05de4d63ffffffff60d6549216926000908482528160205260409060e06001600160a01b036002848620015416918051926117bc85830151151590565b156119105785806117da60208551955b01516001600160a01b031690565b87517f195cd92c00000000000000000000000000000000000000000000000000000000815292909612600483015260248201939093526001600160a01b03909416604485015283916064918391905af1928315611903575b926118d3575b506118ce61184960208401516113ee565b91611856818501516113ee565b9361187788611863610545565b878152866020820152868582015289611058565b61189f60c061189060a08401516001600160a01b031690565b9201516001600160a01b031690565b915194859485929094936060926080850196855260208501526001600160a01b03809216604085015216910152565b0390a3565b6118f591925060e03d81116118fc575b6118ed8183610504565b810190611926565b9038611838565b503d6118e3565b61190b6113e1565b611832565b85806117da6020611920886113ee565b956117cc565b908160e091031261000e5760c06040519160e0830183811067ffffffffffffffff8211176119a4575b604052805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015161198c816100f8565b60a0840152015161199c816100f8565b60c082015290565b6119ac61048b565b61194f565b63ffffffff60d65491166119c481610ed2565b6119de8163ffffffff166000526070602052604060002090565b9260408051906060820182811067ffffffffffffffff821117611bce575b815260008252600060208301528082019560008752600381019184518060020b926020870151938460020b90818113611b92575050918891611a6f859460048b99989762ffffff168460181b60050b0191611a57838a612d91565b019065ffffffffffff16600052602052604060002090565b93611a7985611c32565b15611afb575b505084611ac494879460a0988a9895611ab8611abe96611aaf60c0611acb9f0151611aa981611bdb565b86611bfb565b8b0151600f0b90565b93611c54565b87611058565b0151151590565b80611af1575b611ada57505050565b611ae7611aed93516113ee565b91612f6b565b5050565b5082511515611ad1565b91938095969750611b0d919350611c32565b611b6957835460209190911b66ffffff000000001663ffffff0060089390931b929092167fffffffffffffffffffffffffffffffffffffffffffffffffff000000000000ff909116171782558593929190879084611ac4611a7f565b600483517fa0bb33f9000000000000000000000000000000000000000000000000000000008152fd5b84517f68a08b20000000000000000000000000000000000000000000000000000000008152600291820b600482015291900b6024820152604490fd5b611bd661048b565b6119fc565b60031115611be557565b634e487b7160e01b600052602160045260246000fd5b906003811015611be55760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b548060081c60020b1590811591611c47575090565b905060201c60020b151590565b94908394849360009060028095611c8d82611c7f8563ffffffff166000526000602052604060002090565b01546001600160a01b031690565b611c9561212d565b5085600f0b948488888389139d8e60001461201857546040517f1dce5fcf000000000000000000000000000000000000000000000000000000008152600882901c890b600290810b600483015260209290921c90980b900b6024880152505050506fffffffffffffffffffffffffffffffff8616604484015260c090839060649082906000906001600160a01b03165af1801561200b575b838760009283958491611fc1575b5091611d5c9391611d56611d50879594611752565b97611752565b9c612262565b87815190611d69916114b2565b8152602081019782895190611d7d916114b2565b89528a87611d9b8663ffffffff166000526000602052604060002090565b600101546001600160a01b0316611db190612ee0565b92838988611dbe896113ee565b93611dc8906113ee565b94611dd296612a56565b611ddc908b61239a565b509860018b01918254611def908c6114b2565b9060400190815190611e0091610fe0565b90528a5460381c6fffffffffffffffffffffffffffffffff16906000149563ffffffff957f841e7440ea722264a0d4fdfb3c6be43d4c3be7d0dd5334b7a2edab9e8ca845ff97611f7c575090611e68916fffffffffffffffffffffffffffffffff169061223d565b915b6fffffffffffffffffffffffffffffffff99838b1615611f2f57611ed5611eda93948d907fffffffffffffffffff00000000000000000000000000000000ffffffffffffff76ffffffffffffffffffffffffffffffff0000000000000083549260381b169116179055565b610fe0565b90555b611f168854965160405193849316968860201c810b908960081c900b84604091949392606082019560020b825260020b60208201520152565b0390a360381c1615611f26575050565b61055291612adb565b505089547fffffffffffffffffff00000000000000000000000000000000ffffffffffffff168a556000915055600085890155600060038901556000600489015560006005890155611edd565b60009094929412611f8e575b50611e6a565b92611fb4611f9f611fba9395612171565b6fffffffffffffffffffffffffffffffff1690565b9061221c565b9138611f88565b611d569650611d5c94508593915091611ff3611d509360c03d8111612004575b611feb8183610504565b8101906121fc565b989194909893955050509193611d3b565b503d611fe1565b6120136113e1565b611d2d565b9484979160c09394956001600160a01b0361203a611f9f6120a89a5494612171565b94604051998a96879586937fa34123a70000000000000000000000000000000000000000000000000000000085528160201c810b9160081c900b600485019160409194936fffffffffffffffffffffffffffffffff91606085019660020b855260020b602085015216910152565b0393165af18015612120575b859386916120de575b5091611d5c9391611d566114796120d8611479899796611752565b98611752565b6120d89650611d5c94508593915091611d5661147961210d6114799560c03d811161200457611feb8183610504565b9a9196909a9597505050505091936120bd565b6121286113e1565b6120b4565b604051906080820182811067ffffffffffffffff821117612164575b60405260006060838281528260208201528260408201520152565b61216c61048b565b612149565b600f0b7fffffffffffffffffffffffffffffffff8000000000000000000000000000000081146114005760000390565b919082608091031261000e576040516080810181811067ffffffffffffffff8211176121ef575b60405260608082948051845260208101516020850152604081015160408501520151910152565b6121f761048b565b6121c8565b909160c08284031261000e5761147e8251936040602085015194016121a1565b6fffffffffffffffffffffffffffffffff91821691168181106113c6570390565b906fffffffffffffffffffffffffffffffff8080931691168092038111610e86570190565b93919092805190846040820192835161227b9189612904565b928386519061228991610fe0565b86526060830192835161229c908a612a19565b6122a590611752565b96878151906122b391610fe0565b90528051908160028b015560200151918260038b015551938460048b0155519889600582015554948560081c60020b9560201c60020b9663ffffffff16998a95604051948594612334948b8b8893909796959260c0959260e086019960020b865260020b602086015260408501526060840152608083015260a08201520152565b037fb9b041b729bca1f1535dde5369cddca43b655bbc9dbd3e5878047a06e11a45c791a360408051600292830b81529290910b60208301528101919091527f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e744290606090a3565b5491906123ad600884901c60020b61255d565b926123bd8160201c60020b61255d565b9082916001600160a01b039283808816951685811060001461248057505085925b83918095828616918381168311612473575b5082841695861561000e5761244f611541976124498a876fffffffffffffffffffffffffffffffff998161147e9e169203167bffffffffffffffffffffffffffffffff0000000000000000000000008b60281b166116c5565b04611752565b998093829311612468575b505003169160381c16611573565b91509150388061245a565b96509250849592386123f0565b84839592951610156123de57925080926123de565b50634e487b7160e01b600052601260045260246000fd5b80156124ba575b6000190490565b6124c2612495565b6124b3565b6001600160a01b039283831684831611612555575b7bffffffffffffffffffffffffffffffff0000000000000000000000009060601b1692808083850316921692831561000e57169061251b8282866116c5565b938215612548575b09612534575b808206151591040190565b9060001981101561000e5760010190612529565b612550612495565b612523565b9091906124dc565b60020b60008112156128fe57806000035b620d89e881116128d4576001600160a01b039160018216156128ab5770ffffffffffffffffffffffffffffffffff6ffffcb933bd6fad37aa2d162d1a5940015b16916002811661288f575b60048116612873575b60088116612857575b6010811661283b575b6020811661281f575b60408116612803575b6080908181166127e8575b61010081166127cd575b61020081166127b2575b6104008116612797575b610800811661277c575b6110008116612761575b6120008116612746575b614000811661272b575b6180008116612710575b6201000081166126f5575b6202000081166126db575b6204000081166126c1575b62080000166126a6575b50600012612698575b63ffffffff811661268f5760ff60005b169060201c011690565b60ff6001612685565b6126a1906124ac565b612675565b6b048a170391f7dc42444e8fa26000929302901c919061266c565b6d2216e584f5fa1ea926041bedfe98909302811c92612662565b926e5d6af8dedb81196699c329225ee60402811c92612657565b926f09aa508b5b7a84e1c677de54f3e99bc902811c9261264c565b926f31be135f97d08fd981231505542fcfa602811c92612641565b926f70d869a156d2a1b890bb3df62baf32f702811c92612637565b926fa9f746462d870fdf8a65dc1f90e061e502811c9261262d565b926fd097f3bdfd2022b8845ad8f792aa582502811c92612623565b926fe7159475a2c29b7443b29c7fa6e889d902811c92612619565b926ff3392b0822b70005940c7a398e4b70f302811c9261260f565b926ff987a7253ac413176f2b074cf7815e5402811c92612605565b926ffcbe86c7900a88aedcffc83b479aa3a402811c926125fb565b926ffe5dee046a99a2a811c461f1969c305302811c926125f1565b916fff2ea16466c96a3843ec78b326b528610260801c916125e6565b916fff973b41fa98c081472e6896dfb254c00260801c916125dd565b916fffcb9843d60f6159c9db58835c9266440260801c916125d4565b916fffe5caca7e10e4e61c3624eaa0941cd00260801c916125cb565b916ffff2e50f5f656932ef12357cf3c7fdcc0260801c916125c2565b916ffff97272373d413259a46990580e213a0260801c916125b9565b70ffffffffffffffffffffffffffffffffff7001000000000000000000000000000000006125ae565b60046040517f2bc80f3a000000000000000000000000000000000000000000000000000000008152fd5b8061256e565b61147e92612942612948926106ac60028201546114736003840154916fffffffffffffffffffffffffffffffff6004860154955460381c16986114b2565b906114b2565b906129538183612d42565b9160008312918291826129d0575b505061296e575b506113ee565b9060001991817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383138115166129c3575b81600160ff1b038312166129b6575b0138612968565b6129be610e5f565b6129af565b6129cb610e5f565b6129a0565b70010000000000000000000000000000000091925060008113600014612a0a57915b60009209612a02575b3880612961565b5060016129fb565b612a13906113ee565b916129f2565b9061147e916fffffffffffffffffffffffffffffffff600582015491828410612a49575b5460381c1691036115c1565b612a51610e5f565b612a3d565b95929594919094549560ff871690604051978060081c60020b895260201c60020b6020890152600f0b60408801526003811015611be5577f90ebe5c3d0a3bbd59fb51797eff156440d75c86a623dddef804547362e66595a9460e09463ffffffff946001600160a01b039360608b015260808a015260a08901521660c08701521693a3565b9054906fffffffffffffffffffffffffffffffff8260381c1680612c9e575065ffffffffffff6005927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008160201c62ffffff169160101b16840b0116918215612c6c57909181906000905b828210612bf3575b50808203612bed57506004905b8203612b6657505050565b808203612b8f5750612b7b9061055292611030565b65ffffffffffff82549160031b1b19169055565b82612bca612b7b612bc2612bbb612ba98661055299611030565b905465ffffffffffff9160031b1c1690565b9584611030565b949093611030565b919082549060031b9165ffffffffffff9283811b93849216901b16911916179055565b90612b5b565b9392919084612c13612c08612ba98488611030565b65ffffffffffff1690565b14612c64575b612c29612c08612ba98387611030565b15612c4057612c3790610e76565b90919293612b46565b92935090916000908015612c5e57612c5891506113ab565b38612b4e565b50612c58565b915081612c19565b6040517fc712b5e900000000000000000000000000000000000000000000000000000000815260006004820152602490fd5b82606491604051917f1346bf480000000000000000000000000000000000000000000000000000000083528060081c60020b600484015260201c60020b60248301526044820152fd5b60016000198183600160ff1b058212600085131616612d35575b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05136000831216166114005760000390565b612d3d610e5f565b612d01565b9190611541612d6691600085129485600014612d6157612d6190612ce7565b6115c1565b9161154e57565b9190611541612d6691600085129485600014612d8c57612d8c90612ce7565b61165d565b65ffffffffffff8216908115612c6c576005809260005b828110612e23575b50508214612dea576105529291612dc691611030565b90919082549060031b9165ffffffffffff9283811b93849216901b16911916179055565b6040517f5503aeb500000000000000000000000000000000000000000000000000000000815265ffffffffffff84166004820152602490fd5b81612e34612c08612ba98488611030565b14612e6757612e49612c08612ba98387611030565b15612e5c57612e5790610e76565b612da8565b935038905080612db0565b505050505050565b908160e091031261000e578051612e85816100f8565b916020820151612e948161099c565b916040810151612ea3816109d1565b916060820151612eb2816109d1565b916080810151612ec1816109d1565b9160a082015160ff8116810361000e5760c09092015161147e81610749565b60e06001600160a01b03916004604051809481937f3850c7bd000000000000000000000000000000000000000000000000000000008352165afa908115612f5e575b600091612f2d575090565b612f4e915060e03d8111612f57575b612f468183610504565b810190612e6f565b50505050505090565b503d612f3c565b612f666113e1565b612f22565b90929160409182519160a0830183811067ffffffffffffffff821117613176575b84528252602082019260009384815260e08285019186835286606087015286608087015263ffffffff89169586885287602052876001600160a01b03600287832001541691612fdd81519651151590565b1561316257612ff7829151945b516001600160a01b031690565b87517f195cd92c00000000000000000000000000000000000000000000000000000000815292909612600483015260248201939093526001600160a01b03909416604485015283916064918391905af1948515613155575b94613113575b507fe21eb33795bf361d3419629f8b1091aef9f4c8d525bea8dd66efbbe19d05de4d9061308560208601516113ee565b946130b2613095838301516113ee565b9861309e610545565b8a8152886020820152888582015286611058565b61310c6130dd60c06130ce60a08501516001600160a01b031690565b9301516001600160a01b031690565b9251878152602081018a90526001600160a01b0392831660408201529190921660608201529081906080820190565b0390a39190565b7fe21eb33795bf361d3419629f8b1091aef9f4c8d525bea8dd66efbbe19d05de4d91945061314e9060e03d81116118fc576118ed8183610504565b9390613055565b61315d6113e1565b61304f565b5080612ff7613170876113ee565b94612fea565b61317e61048b565b612f8c565b60ff6001911660ff8114610e86570190565b600093928492835b600585106131ac575050505050565b909192939565ffffffffffff6131c28887611030565b90549060031b1c168015613301576132b6916106ac6131f96132b09360018a019065ffffffffffff16600052602052604060002090565b6106ac61321d611ed561320c8a8561239a565b91906132178c61331c565b90612d42565b8254604080517f2a99a792000000000000000000000000000000000000000000000000000000008152600883901c600290810b600483015260209390931c90920b6024830152939160809182818e816001600160a01b0381604481010392165afa9283156132f4575b8b936132bf575b50506132a4906106ac611541606085015186612a19565b93815191015191612904565b96610e76565b9392919061319d565b6132a492935090816132e592903d106132ed575b6132dd8183610504565b810190613308565b91903861328d565b503d6132d3565b6132fc6113e1565b613286565b5095610fa7565b9060808282031261000e5761147e916121a1565b6001600160a01b03166401000276a381108015613373575b613342578061147e91611613565b602490604051907f5d236c450000000000000000000000000000000000000000000000000000000082526004820152fd5b5073fffd8963efd1fc6a506488495d951d5263988d26811015613334565b6001600160a01b0391821691168181106113c6570390565b6401000276a373fffd8963efd1fc6a506488495d951d5263988d2591600180821080156134e8575b61349157805b613415575b506001600160a01b0380841690831614159081613403575b50156133fe575090565b905090565b905061340e83613f67565b14386133f4565b92836134306134248584613391565b6001600160a01b031690565b111561348b576134686134626134468584613391565b60011c737fffffffffffffffffffffffffffffffffffffff1690565b84613511565b908261347383613f67565b1115613481575092806133d7565b93909250806133d7565b926133dc565b6040517ff7b6b2e9000000000000000000000000000000000000000000000000000000008152600481018390526401000276a3602482015273fffd8963efd1fc6a506488495d951d5263988d256044820152606490fd5b507ffffb12cdf108779ad387f409f1a66d1a2f5124ea64410ed5b3a4d30149805a4f82116133d1565b906001600160a01b038080931691168092038111610e86570190565b906135366136e4565b916135518163ffffffff166000526009602052604060002090565b9081549363ffffffff809116818616146000146135c55750506001015460ff8160e01c166000146135a0577bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1691508190565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169160201c90565b91509250600090602060036135ea8663ffffffff166000526000602052604060002090565b0154916024604051809481937fdd86c1010000000000000000000000000000000000000000000000000000000083528160301c16600483015260601c5afa9182156136d7575b916136b9575b50613673600361366761365061364b87613790565b61331c565b9563ffffffff166000526000602052604060002090565b015460201c61ffff1690565b838211156136a35761369461ffff61368b86856113bb565b925b168361165d565b1061369d579190565b80925090565b61369461ffff6136b384876113bb565b9261368d565b6136d1915060203d81116111f9576111ea8183610504565b38613636565b6136df6113e1565b613630565b61a4b146148015613784575b8015613778575b1561376e5763ffffffff6040517fa3b1b31d00000000000000000000000000000000000000000000000000000000815260208160048160645afa908115613761575b60009161374557501690565b61375d915060203d81116111f9576111ea8183610504565b1690565b6137696113e1565b613739565b63ffffffff431690565b5062066eec46146136f7565b5062066eeb46146136f0565b6137ca61147e9163ffffffff809116600052600060205260406000209060036001600160a01b0360018401541692015460301c1690613a85565b61255d565b60209067ffffffffffffffff81116137e9575b60051b0190565b6137f161048b565b6137e2565b60405190613803826104e8565b600282526040366020840137565b60209080511561381f570190565b610e8e610e92565b60409080516001101561381f570190565b81601f8201121561000e5780519161384f836137cf565b9261385d6040519485610504565b808452602092838086019260051b82010192831161000e578301905b828210613887575050505090565b8380918351613895816100f8565b815201910190613879565b91909160408184031261000e5780519267ffffffffffffffff9384811161000e5782019381601f8601121561000e578451946138db866137cf565b906138e96040519283610504565b868252602096878084019160051b8301019185831161000e578801905b828210613925575050509483015190811161000e5761147e9201613838565b81518060060b810361000e578152908801908801613906565b6020908160408183019282815285518094520193019160005b828110613965575050505090565b835163ffffffff1685529381019392810192600101613957565b60060b9060060b9060008212827fffffffffffffffffffffffffffffffffffffffffffffffffff800000000000000182128115166139cd575b82667fffffffffffff018213166113c6570390565b6139d5610e5f565b6139b8565b60060b9060060b908115613a26575b60001982147fffffffffffffffffffffffffffffffffffffffffffffffffff80000000000000821416613a1a570590565b613a22610e5f565b0590565b613a2e612495565b6139e9565b9060060b908115613a46575b60060b0790565b613a4e612495565b613a3f565b6000199060020b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008114610e86570190565b9063ffffffff81168015613c2d57613b046001600160a01b0393613abf613aaa6137f6565b94613ab486613811565b9063ffffffff169052565b600094859182613ace87613827565b521693604051809381927f883bdbfd0000000000000000000000000000000000000000000000000000000083526004830161393e565b0381865afa849181613c08575b50613b8957505060e0600491604051928380927f3850c7bd0000000000000000000000000000000000000000000000000000000082525afa918215613b7c575b91613b5a575090565b613b72915060e03d8111612f5757612f468183610504565b5050505050905090565b613b846113e1565b613b51565b613bb4919250613bae613ba1613ba8613ba184613827565b5160060b90565b92613811565b9061397f565b9060060b613bcb613bc582846139da565b60020b90565b928260060b129182613bea575b5050613be15790565b61147e90613a53565b613bff925090613bf991613a33565b60060b90565b15153880613bd8565b613c259192503d8087833e613c1d8183610504565b8101906138a0565b509038613b11565b505061147e9060e06001600160a01b03916004604051809481937f3850c7bd000000000000000000000000000000000000000000000000000000008352165afa908115613c80575b600091613b5a575090565b613c886113e1565b613c75565b9061147e92613ca06106ac928454612d42565b9261140d565b6000811315613cb25790565b50600090565b90808213156133fe575090565b919091613ce28363ffffffff166000526070602052604060002090565b90613d01613cef8561352d565b929050613cfb836133a9565b95613ebb565b9180549460038083016000928392600486016001600160a01b0390818416925b60058710613d81575b5050505050505091613d77613d63613d7161ffff613d68613d63613d7c97611ed5886001613d5b61147e9e9d611752565b930154612d42565b613ca6565b96168096612d6d565b976113ee565b612d42565b612d6d565b9091929394959665ffffffffffff613d998989611030565b905490841b1c168015613e8b57613e6591613e598888613dce613e5f95899065ffffffffffff16600052602052604060002090565b6001613e398b613e1a84549560029280613dfb613def8a60081c870b61255d565b958a60201c900b61255d565b99818b168411613e845780935b86831610613e7c57925b169116611613565b956fffffffffffffffffffffffffffffffff60009660381c16916124c7565b910154918212613e70579081613e5482612d61941015613e9e565b6113bb565b90613e92565b97610e76565b959493929190613d21565b613e59612d6192612ce7565b508492613e12565b8a93613e08565b5096613d2a565b81198111610e86570190565b15613ea557565b634e487b7160e01b600052600160045260246000fd5b63ffffffff9115613edf5716600052600060205261ffff6003604060002001541690565b16600052600060205261ffff60036040600020015460101c1690565b60843561147e816109d1565b60a43561147e816109d1565b60c43567ffffffffffffffff8116810361000e5790565b60e43567ffffffffffffffff8116810361000e5790565b60e43561147e81610749565b6101043561147e81610749565b6101243561147e816100f8565b6001600160a01b0361147e91168061161356fea26469706673582212201143045f6b8b1414a1ed594b686b62fce51145e46245e08b75c27a322b50d5e964736f6c634300080e0033';

type VTokenPositionSetTest2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionSetTest2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionSetTest2__factory extends ContractFactory {
  constructor(...args: VTokenPositionSetTest2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionSetTest2> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionSetTest2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VTokenPositionSetTest2 {
    return super.attach(address) as VTokenPositionSetTest2;
  }
  override connect(signer: Signer): VTokenPositionSetTest2__factory {
    return super.connect(signer) as VTokenPositionSetTest2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionSetTest2Interface {
    return new utils.Interface(_abi) as VTokenPositionSetTest2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionSetTest2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VTokenPositionSetTest2;
  }
}
