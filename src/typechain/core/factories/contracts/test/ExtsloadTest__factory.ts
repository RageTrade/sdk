/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ExtsloadTest,
  ExtsloadTestInterface,
} from '../../../contracts/test/ExtsloadTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461002557600960035560106004556019600555610245908161002b8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80631e2eaeaf1461013e5763dbd035ff1461003357600080fd5b3461011d57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011d5767ffffffffffffffff9060043582811161013a573660238201121561013a5780600401359083821161012d575b8160051b91604051947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f85011686019086821090821117610120575b60405284526024858501928201019236841161011d5750602401905b82821061010e5761010a6100fe856101e6565b604051918291826101ab565b0390f35b813581529084019084016100eb565b80fd5b61012861017b565b6100cf565b61013561017b565b610091565b5080fd5b503461011d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011d576004355460805260206080f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020908160408183019282815285518094520193019160005b8281106101d2575050505090565b8351855293810193928101926001016101c4565b805160051b810160209081018183015b8181106102035750505090565b805154815282016101f656fea264697066735822122028ff7fdad97f6ab93f6d0ad8629cbbd703f4cd6196f5927c578e9bd4fbaf502064736f6c634300080e0033';

type ExtsloadTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExtsloadTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExtsloadTest__factory extends ContractFactory {
  constructor(...args: ExtsloadTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExtsloadTest> {
    return super.deploy(overrides || {}) as Promise<ExtsloadTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExtsloadTest {
    return super.attach(address) as ExtsloadTest;
  }
  override connect(signer: Signer): ExtsloadTest__factory {
    return super.connect(signer) as ExtsloadTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExtsloadTestInterface {
    return new utils.Interface(_abi) as ExtsloadTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExtsloadTest {
    return new Contract(address, _abi, signerOrProvider) as ExtsloadTest;
  }
}
