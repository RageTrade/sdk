/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ProxyAdmin,
  ProxyAdminInterface,
} from '../../../../../@openzeppelin/contracts/proxy/transparent/ProxyAdmin';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'contract TransparentUpgradeableProxy',
        name: 'proxy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'changeProxyAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract TransparentUpgradeableProxy',
        name: 'proxy',
        type: 'address',
      },
    ],
    name: 'getProxyAdmin',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract TransparentUpgradeableProxy',
        name: 'proxy',
        type: 'address',
      },
    ],
    name: 'getProxyImplementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract TransparentUpgradeableProxy',
        name: 'proxy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'upgrade',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract TransparentUpgradeableProxy',
        name: 'proxy',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09084a361086b90816100618239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c918263204e1c7a146100b85750508063715018a6146100af5780637eff275e146100a65780638da5cb5b1461009d5780639623609d1461009457806399a88ec41461008b578063f2fde38b146100825763f3b7dead1461007a575b600080fd5b6100756105b1565b506100756104db565b50610075610453565b506100756103c7565b506100756102f3565b50610075610249565b5061007561019a565b3461016d57602060031936011261016d57818060048035936100d985610171565b7f5c60da1b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8095165afa9161011f610714565b921561016a575061013c8260208061016695518301019101610744565b166040519182918291909173ffffffffffffffffffffffffffffffffffffffff6020820193169052565b0390f35b80fd5b5080fd5b73ffffffffffffffffffffffffffffffffffffffff81160361007557565b600091031261007557565b50346100755760008060031936011261016a5780547fffffffffffffffffffffffff000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff8216916101f3338414610640565b16825581604051917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b60031960409101126100755760043561023981610171565b9060243561024681610171565b90565b50346100755761025836610221565b6000809273ffffffffffffffffffffffffffffffffffffffff8091610281828554163314610640565b1692833b156102ef576024908360405195869485937f8f2839700000000000000000000000000000000000000000000000000000000085521660048401525af180156102e2575b6102d3575b50604051f35b6102dc90610358565b386102cd565b6102ea610759565b6102c8565b8280fd5b503461007557600060031936011261007557602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811161036c57604052565b610374610328565b604052565b90601f601f19910116810190811067ffffffffffffffff82111761036c57604052565b601f19601f60209267ffffffffffffffff81116103ba575b01160190565b6103c2610328565b6103b4565b506060600319360112610075576004356103e081610171565b602435906103ed82610171565b6044359167ffffffffffffffff831161007557366023840112156100755782600401359161041a8361039c565b926104286040519485610379565b808452366024828701011161007557602081600092602461045198018388013785010152610766565b005b50346100755761046236610221565b6000809273ffffffffffffffffffffffffffffffffffffffff809161048b828554163314610640565b1692833b156102ef576024908360405195869485937f3659cfe60000000000000000000000000000000000000000000000000000000085521660048401525af180156102e2576102d35750604051f35b5034610075576020600319360112610075576004356104f981610171565b73ffffffffffffffffffffffffffffffffffffffff61051d81600054163314610640565b81161561052d57610451906106a5565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5034610075576020600319360112610075576004356105cf81610171565b60008060046040517ff851a44000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8095165afa9061061d610714565b911561007557610637826020808095518301019101610744565b16604051908152f35b1561064757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b3d1561073f573d906107258261039c565b916107336040519384610379565b82523d6000602084013e565b606090565b90816020910312610075575161024681610171565b506040513d6000823e3d90fd5b909173ffffffffffffffffffffffffffffffffffffffff9081600093610790828654163314610640565b1691823b1561085a579391906040519485937f4f1ef2860000000000000000000000000000000000000000000000000000000085521660048401526040602484015280519081604485015284905b82821061083f575083601f19601f84839560649511610833575b0116810103019134905af18015610826575b6108115750565b8061081e61082492610358565b8061018f565b565b61082e610759565b61080a565b888582860101526107f8565b602081830181015160648985010152879550909101906107de565b8380fdfea164736f6c634300080e000a';

type ProxyAdminConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyAdminConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyAdmin__factory extends ContractFactory {
  constructor(...args: ProxyAdminConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyAdmin> {
    return super.deploy(overrides || {}) as Promise<ProxyAdmin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyAdmin {
    return super.attach(address) as ProxyAdmin;
  }
  override connect(signer: Signer): ProxyAdmin__factory {
    return super.connect(signer) as ProxyAdmin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAdminInterface {
    return new utils.Interface(_abi) as ProxyAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAdmin {
    return new Contract(address, _abi, signerOrProvider) as ProxyAdmin;
  }
}
