/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../../common';
import type {
  ERC20Upgradeable,
  ERC20UpgradeableInterface,
} from '../../../../../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461001657610c12908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806306fdde03146100ef578063095ea7b3146100e657806318160ddd146100dd57806323b872dd146100d4578063313ce567146100cb57806339509351146100c257806370a08231146100b957806395d89b41146100b0578063a457c2d7146100a7578063a9059cbb1461009e5763dd62ed3e1461009657600080fd5b61000e6106e2565b5061000e6106bb565b5061000e6105e7565b5061000e610523565b5061000e6104db565b5061000e610474565b5061000e610457565b5061000e610344565b5061000e610325565b5061000e6102f3565b5061000e61016e565b919091602080825283519081818401526000945b828610610158575050601f817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092604095961161014b575b0116010190565b6000858286010152610144565b858101820151848701604001529481019461010c565b503461000e576000806003193601126102aa5760405190806036549060019180831c928082169283156102a0575b602092838610851461027357858852602088019490811561023957506001146101e0575b6101dc876101d08189038261075a565b604051918291826100f8565b0390f35b603660005294509192917f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b83861061022857505050910190506101d0826101dc38806101c0565b80548587015294820194810161020c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050500191506101d09050826101dc38806101c0565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361019c565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b503461000e57604060031936011261000e5761031a6103106102ad565b6024359033610a56565b602060405160018152f35b503461000e57600060031936011261000e576020603554604051908152f35b503461000e57606060031936011261000e5761035e6102ad565b6103666102d0565b6044359073ffffffffffffffffffffffffffffffffffffffff831660005260346020526103b73360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84036103f7575b6103eb93506108e7565b60405160018152602090f35b8284106104135761040e836103eb95033383610a56565b6103e1565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b503461000e57600060031936011261000e57602060405160128152f35b503461000e57604060031936011261000e5761031a6104916102ad565b3360005260346020526104d46024356104ce8360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b546107ca565b9033610a56565b503461000e57602060031936011261000e5773ffffffffffffffffffffffffffffffffffffffff61050a6102ad565b1660005260336020526020604060002054604051908152f35b503461000e576000806003193601126102aa5760405190806037549060019180831c928082169283156105dd575b60209283861085146102735785885260208801949081156102395750600114610584576101dc876101d08189038261075a565b603760005294509192917f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8386106105cc57505050910190506101d0826101dc38806101c0565b8054858701529482019481016105b0565b93607f1693610551565b503461000e57604060031936011261000e576106016102ad565b6024359033600052603460205261063c8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5491808310610651576103eb92039033610a56565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b503461000e57604060031936011261000e5761031a6106d86102ad565b60243590336108e7565b503461000e57604060031936011261000e5760206107516107016102ad565b73ffffffffffffffffffffffffffffffffffffffff61071e6102d0565b91166000526034835260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761079b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b811981116107d6570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b1561080c57565b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b1561087d57565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b919073ffffffffffffffffffffffffffffffffffffffff908184169283156109ec576109ca827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946109e7941696610940881515610805565b6109a38461096e8373ffffffffffffffffffffffffffffffffffffffff166000526033602052604060002090565b5461097b82821015610876565b039173ffffffffffffffffffffffffffffffffffffffff166000526033602052604060002090565b5573ffffffffffffffffffffffffffffffffffffffff166000526033602052604060002090565b6109d58282546107ca565b90556040519081529081906020820190565b0390a3565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b9073ffffffffffffffffffffffffffffffffffffffff91828116928315610b73578216938415610b095780610af87f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594610ad36109e79573ffffffffffffffffffffffffffffffffffffffff166000526034602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b556040519081529081906020820190565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220986e89f609442316c337f6b6947916552a74ef4b4b84213a529ac3c83f67f06764736f6c634300080e0033';

type ERC20UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC20UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC20Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Upgradeable {
    return super.attach(address) as ERC20Upgradeable;
  }
  override connect(signer: Signer): ERC20Upgradeable__factory {
    return super.connect(signer) as ERC20Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20UpgradeableInterface {
    return new utils.Interface(_abi) as ERC20UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Upgradeable;
  }
}
