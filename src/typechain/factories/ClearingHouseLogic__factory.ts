/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ClearingHouseLogic,
  ClearingHouseLogicInterface,
} from '../ClearingHouseLogic';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'txGasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'ExcessTxGasPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IClearingHouse.MulticallOperationType',
        name: 'multicallOperationType',
        type: 'uint8',
      },
    ],
    name: 'InvalidMulticallOperationType',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    name: 'KeeperFeeNotPositive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'cTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedCToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'NewCollateralSupported',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'NewVTokenSupported',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        indexed: false,
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'settings',
        type: 'tuple',
      },
    ],
    name: 'RageTradePoolSettingsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_defaultCollateralToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_defaultCollateralTokenOracle',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'cTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'cTokenId',
        type: 'uint32',
      },
    ],
    name: 'cTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
        ],
        internalType: 'struct CTokenLib.CToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'createAccountAndAddMargin',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountNetProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountNetProfit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'cTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'enum IClearingHouse.MulticallOperationType',
            name: 'operationType',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IClearingHouse.MulticallOperation[]',
        name: 'operations',
        type: 'tuple[]',
      },
    ],
    name: 'multicallWithSingleMarginCheck',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'cTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_txGasPriceLimit',
        type: 'uint256',
      },
    ],
    name: 'setTxGasPriceLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txGasPriceLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615c70806200019a6000396000f3fe6080604052600436106102935760003560e01c80637ec6ba311161015a578063d257be2b116100c1578063e3d41c181161007a578063e3d41c1814610a92578063e450f6f414610ab2578063e67ed1df14610ad2578063ee6cd5ee14610af2578063fcd0a50614610b12578063fe6f083a14610b3257600080fd5b8063d257be2b146109c7578063d38bfff4146109e7578063dac42a9614610a07578063dbc0c08514610a27578063dbd035ff14610a45578063e1f1671314610a7257600080fd5b806394c8c71d1161011357806394c8c71d1461089b5780639cd1be58146108bb5780639dca362f146108db578063a4063dbc146108f0578063ac9650d814610994578063b7902303146109a757600080fd5b80637ec6ba311461072f5780637f64d6631461074f57806384088b651461076f5780638ce25a93146107b157806391257584146107c757806393420cf4146107e757600080fd5b806340c4f69b116101fe5780635c318ad9116101b75780635c318ad9146106525780635c975abb1461067257806364f368011461068c57806369c71668146106ac57806373cceb9d146106cc5780637cc2f4f51461070f57600080fd5b806340c4f69b1461056557806342be9fca1461059257806343233d2e146105b257806353440597146105ee578063569634d31461060e5780635aa6e6751461062e57600080fd5b80632afaea37116102505780632afaea371461045b57806332a72d981461047b57806336fadead146104b057806339359029146104d05780633d56a35e146104f05780633fc42d801461051557600080fd5b8063127fec131461029857806316c38b3c146102d55780631a1feae1146102f75780631e2eaeaf1461031c57806321df4c0e1461033b578063241c486a1461036b575b600080fd5b3480156102a457600080fd5b5060d5546102b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102e157600080fd5b506102f56102f0366004614168565b610b52565b005b34801561030357600080fd5b5061030e61013a5481565b6040519081526020016102cc565b34801561032857600080fd5b5061030e610337366004614185565b5490565b34801561034757600080fd5b5061035b610356366004614185565b610bb0565b6040516102cc94939291906141c8565b34801561037757600080fd5b50610412610386366004614367565b6040805160808101825260008082526020820181905291810182905260608101919091525063ffffffff908116600090815260656020908152604091829020825160808101845281546001600160a01b03908116825260019092015491821692810192909252600160a01b810490931691810191909152600160c01b90910460ff161515606082015290565b6040516102cc919081516001600160a01b0390811682526020808401519091169082015260408083015163ffffffff169082015260609182015115159181019190915260800190565b34801561046757600080fd5b506102f5610476366004614384565b610c54565b34801561048757600080fd5b5061049b610496366004614530565b610c97565b604080519283526020830191909152016102cc565b3480156104bc57600080fd5b506102f56104cb36600461456f565b610ce7565b3480156104dc57600080fd5b506102f56104eb366004614384565b610e07565b3480156104fc57600080fd5b5060d3546102b89061010090046001600160a01b031681565b34801561052157600080fd5b506105556105303660046145a8565b63ffffffff16600090815260656020526040902060010154600160c01b900460ff1690565b60405190151581526020016102cc565b34801561057157600080fd5b50610585610580366004614610565b610e46565b6040516102cc91906146b3565b34801561059e57600080fd5b5061030e6105ad366004614715565b611575565b3480156105be57600080fd5b506102b86105cd366004614367565b63ffffffff166000908152606660205260409020546001600160a01b031690565b3480156105fa57600080fd5b506102f5610609366004614737565b61161c565b34801561061a57600080fd5b506102f5610629366004614185565b6116ce565b34801561063a57600080fd5b506000546201000090046001600160a01b03166102b8565b34801561065e57600080fd5b506102f561066d366004614778565b6116dd565b34801561067e57600080fd5b5060d3546105559060ff1681565b34801561069857600080fd5b506102f56106a736600461456f565b611746565b3480156106b857600080fd5b506102f56106c73660046147ba565b611866565b3480156106d857600080fd5b506105556106e73660046145a8565b6001600160a01b0316600090815260646020526040902060020154600160401b900460ff1690565b34801561071b57600080fd5b506102f561072a36600461484b565b611953565b34801561073b57600080fd5b506102f561074a366004614185565b611968565b34801561075b57600080fd5b506102f561076a3660046145a8565b6119b9565b34801561077b57600080fd5b5061078f61078a3660046148b9565b611a87565b60408051825181526020808401519082015291810151908201526060016102cc565b3480156107bd57600080fd5b5061030e60d15481565b3480156107d357600080fd5b506102f56107e23660046148f8565b611ac2565b3480156107f357600080fd5b50604080516060808201835260008083526020808401829052928401526067548351808301855260695461ffff808216835262010000820481168387019081526401000000009092048116838801908152606a54606b54606c548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102cc565b3480156108a757600080fd5b5061078f6108b636600461492d565b611b8a565b3480156108c757600080fd5b506102f56108d6366004614715565b611c5c565b3480156108e757600080fd5b5061030e611c9f565b3480156108fc57600080fd5b5061091061090b3660046145a8565b611d41565b6040516102cc919060006101008201905060018060a01b03808451168352806020850151166020840152604084015161ffff8082511660408601528060208301511660608601525063ffffffff60408201511660808501526060810151151560a08501526080810151151560c08501528160a08201511660e0850152505092915050565b6105856109a236600461497f565b611e3e565b3480156109b357600080fd5b5060d4546102b8906001600160a01b031681565b3480156109d357600080fd5b5061049b6109e23660046145a8565b611f8e565b3480156109f357600080fd5b506102f5610a023660046145a8565b611fc2565b348015610a1357600080fd5b50610555610a22366004614367565b612084565b348015610a3357600080fd5b506001546001600160a01b03166102b8565b348015610a5157600080fd5b50610a65610a603660046149e3565b6120b9565b6040516102cc9190614a6d565b348015610a7e57600080fd5b506102f5610a8d36600461497f565b6120e7565b348015610a9e57600080fd5b5061030e610aad366004614185565b612233565b348015610abe57600080fd5b5061030e610acd366004614ab1565b6122bd565b348015610ade57600080fd5b5061049b610aed366004614add565b6122d4565b348015610afe57600080fd5b5061049b610b0d366004614b02565b612372565b348015610b1e57600080fd5b506102f5610b2d366004614b4d565b6123c3565b348015610b3e57600080fd5b5061030e610b4d366004614b98565b612419565b6001546001600160a01b03163314801590610b7f57506000546001600160a01b0362010000909104163314155b15610b9d57604051636bd1573560e11b815260040160405180910390fd5b60d3805460ff1916911515919091179055565b600081815260d2602052604080822090516330977c6d60e21b8152600481019190915260646024820152819060609081907369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c9063c25df1b490604401600060405180830381865af4158015610c1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c459190810190614df1565b93509350935093509193509193565b60d35460ff1615610c78576040516313d0ff5960e31b815260040160405180910390fd5b6000610c8384612467565b9050610c91848285856124a6565b50505050565b60d354600090819060ff1615610cc0576040516313d0ff5960e31b815260040160405180910390fd5b6000610ccb86612467565b9050610cda81868660016125c7565b9250925050935093915050565b6001546001600160a01b03163314801590610d1457506000546001600160a01b0362010000909104163314155b15610d3257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216610d4857610d48614ef7565b6001600160a01b0382166000908152606460205260409020600201805461ffff16610dac5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b60448201526064015b60405180910390fd5b805468ff00000000000000001916600160401b831515021781556040516001600160a01b03841681527f7e69aaf85f04d7a874f7bf8768cd38b8fcf65e261176bdcb61c9d542b26c9c9c9060200160405180910390a1505050565b60d35460ff1615610e2b576040516313d0ff5960e31b815260040160405180910390fd5b6000610e3684612467565b9050610c918482858560016127a0565b6060816001600160401b03811115610e6057610e606143bc565b604051908082528060200260200182016040528015610e9357816020015b6060815260200190600190039081610e7e5790505b5090506000610ea185612467565b90506000805b84811015611488576000868683818110610ec357610ec3614f0d565b9050602002810190610ed59190614f23565b610ee3906020810190614f43565b6007811115610ef457610ef461419e565b1415610f5357600080878784818110610f0f57610f0f614f0d565b9050602002810190610f219190614f23565b610f2f906020810190614f64565b810190610f3c9190614ab1565b91509150610f4c898684846124a6565b5050611476565b6001868683818110610f6757610f67614f0d565b9050602002810190610f799190614f23565b610f87906020810190614f43565b6007811115610f9857610f9861419e565b1415610ff257600080878784818110610fb357610fb3614f0d565b9050602002810190610fc59190614f23565b610fd3906020810190614f64565b810190610fe09190614ab1565b91509150610f4c8986848460006127a0565b600286868381811061100657611006614f0d565b90506020028101906110189190614f23565b611026906020810190614f43565b60078111156110375761103761419e565b141561109757600086868381811061105157611051614f0d565b90506020028101906110639190614f23565b611071906020810190614f64565b81019061107e9190614185565b905061108d88858360006128cf565b6001925050611476565b60038686838181106110ab576110ab614f0d565b90506020028101906110bd9190614f23565b6110cb906020810190614f43565b60078111156110dc576110dc61419e565b1415611186576000808787848181106110f7576110f7614f0d565b90506020028101906111099190614f23565b611117906020810190614f64565b8101906111249190614faa565b9150915060008061113887858560006125c7565b6040805160208101849052908101829052919350915060600160405160208183030381529060405288868151811061117257611172614f0d565b602002602001018190525050505050611476565b600486868381811061119a5761119a614f0d565b90506020028101906111ac9190614f23565b6111ba906020810190614f43565b60078111156111cb576111cb61419e565b1415611227576000808787848181106111e6576111e6614f0d565b90506020028101906111f89190614f23565b611206906020810190614f64565b810190611213919061508b565b915091506000806111388785856000612a2a565b600586868381811061123b5761123b614f0d565b905060200281019061124d9190614f23565b61125b906020810190614f43565b600781111561126c5761126c61419e565b14156112d65760008060008089898681811061128a5761128a614f0d565b905060200281019061129c9190614f23565b6112aa906020810190614f64565b8101906112b791906150b9565b93509350935093506112cc8b85858585612b45565b5050505050611476565b60068686838181106112ea576112ea614f0d565b90506020028101906112fc9190614f23565b61130a906020810190614f43565b600781111561131b5761131b61419e565b14156113325761132c876000612c56565b50611476565b600786868381811061134657611346614f0d565b90506020028101906113589190614f23565b611366906020810190614f43565b60078111156113775761137761419e565b141561142a57600080600088888581811061139457611394614f0d565b90506020028101906113a69190614f23565b6113b4906020810190614f64565b8101906113c1919061510a565b9250925092506113d58a8484846000612dc0565b60408051825160208083019190915283015181830152910151606082015260800160405160208183030381529060405287858151811061141757611417614f0d565b6020026020010181905250505050611476565b85858281811061143c5761143c614f0d565b905060200281019061144e9190614f23565b61145c906020810190614f43565b604051633164e52160e11b8152600401610da39190615141565b8061148081615171565b915050610ea7565b5080156114fa57604051638c9f0c8960e01b815260048101839052606460248201527369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c90638c9f0c899060440160006040518083038186803b1580156114e157600080fd5b505af41580156114f5573d6000803e3d6000fd5b505050505b60405163954eea2160e01b815260048101839052600160248201526064604482018190527369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c9163954eea21910160006040518083038186803b15801561155357600080fd5b505af4158015611567573d6000803e3d6000fd5b5050505050505b9392505050565b60008180156115fe576000611588612f34565b5a611593919061518c565b905061159f6044612fec565b6115a98585612c56565b925060006115b5612f34565b5a6115c0919061518c565b6115ca90836151a4565b9050808311156115f757604051634010928f60e01b81526004810184905260248101829052604401610da3565b5050611615565b6116086044612fec565b6116128484612c56565b91505b5092915050565b6001546001600160a01b0316331480159061164957506000546001600160a01b0362010000909104163314155b1561166757604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0382166000908152606460205260409020819060020161168e8282615213565b9050507ff495762bbd6f871d11992fa00aba5fde436c630137b4c977b97ff7ad289ed2fb82826040516116c29291906152f2565b60405180910390a15050565b6116d9816000612c56565b5050565b6001546001600160a01b0316331480159061170a57506000546001600160a01b0362010000909104163314155b1561172857604051636bd1573560e11b815260040160405180910390fd5b836069611735828261539c565b5050606b92909255606c55606a5550565b6001546001600160a01b0316331480159061177357506000546001600160a01b0362010000909104163314155b1561179157604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0382166117a7576117a7614ef7565b63ffffffff808316600090815260656020526040902083916117cd908290849061301916565b61180b5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606401610da3565b60018101805460ff60c01b1916600160c01b851515021790556040516001600160a01b03851681527f608ea0cd92f466c2b2ed8d950ef3b2e94ef37fb25ff849b89bb004c6e78c69a99060200160405180910390a150505050565b600054610100900460ff168061187f575060005460ff16155b61189b5760405162461bcd60e51b8152600401610da39061540a565b600054610100900460ff161580156118bd576000805461ffff19166101011790555b60d38054610100600160a81b0319166101006001600160a01b038a81169190910291909117909155606880546001600160a01b03199081168984161790915560d48054821687841617905560d580548216858416179055606780549091169185169190911790556119308686603c61302c565b6119386130ca565b801561194a576000805461ff00191690555b50505050505050565b611961848484846000612b45565b5050505050565b6001546001600160a01b0316331480159061199557506000546001600160a01b0362010000909104163314155b156119b357604051636bd1573560e11b815260040160405180910390fd5b61013a55565b6001546001600160a01b031633148015906119e657506000546001600160a01b0362010000909104163314155b15611a0457604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038116611a2b5760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b611aab60405180606001604052806000815260200160008152602001600081525090565b611ab9858585856000612dc0565b95945050505050565b60d35461010090046001600160a01b03163314611af2576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff808216600090815260666020526040812054929350611b2d926001600160a01b03169161278f16565b611b3957611b39614ef7565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390611b828282615478565b505050505050565b611bae60405180606001604052806000815260200160008152602001600081525090565b818015611c38576000611bbf612f34565b5a611bca919061518c565b9050611bd660a4612fec565b611be38888888888612dc0565b92506000611bef612f34565b5a611bfa919061518c565b611c0490836151a4565b905080831115611c3157604051634010928f60e01b81526004810184905260248101829052604401610da3565b5050611c52565b611c4260a4612fec565b611c4f8787878787612dc0565b91505b5095945050505050565b60d35460ff1615611c80576040516313d0ff5960e31b815260040160405180910390fd5b6000611c8b83612467565b9050611c9a83828460016128cf565b505050565b60d35460009060ff1615611cc6576040516313d0ff5960e31b815260040160405180910390fd5b5060d154611cd581600161518c565b60d155600081815260d260205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea390611d359085815260200190565b60405180910390a25090565b611d8d604080516060808201835260008083526020808401829052845160c0810186528281529081018290528085018290529182018190526080820181905260a0820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160c08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff6401000000008504168386015260ff600160401b85048116151591840191909152690100000000000000000084041615156080830152600160501b90920490931660a08401529081019190915290565b6060816001600160401b03811115611e5857611e586143bc565b604051908082528060200260200182016040528015611e8b57816020015b6060815260200190600190039081611e765790505b50905060005b828110156116155760008030868685818110611eaf57611eaf614f0d565b9050602002810190611ec19190614f64565b604051611ecf929190615593565b600060405180830381855af49150503d8060008114611f0a576040519150601f19603f3d011682016040523d82523d6000602084013e611f0f565b606091505b509150915081611f5b57604481511015611f2857600080fd5b60048101905080806020019051810190611f4291906155a3565b60405162461bcd60e51b8152600401610da39190615636565b80848481518110611f6e57611f6e614f0d565b602002602001018190525050508080611f8690615171565b915050611e91565b600080611fa56001600160a01b03841660646130d5565b9150611fbb6001600160a01b0384166064613168565b9050915091565b6000546001600160a01b0362010000909104163314611ff457604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661201b5760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff80821660009081526066602052604081205490916120b3916001600160a01b031690839061278f16565b92915050565b606060208251028201602001602083015b818110156120df5780515481526020016120ca565b509192915050565b6000805b8281101561220a57600084848381811061210757612107614f0d565b905060200201602081019061211c91906145a8565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561215b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217f9190615649565b905084848381811061219357612193614f0d565b90506020020160208101906121a891906145a8565b6001600160a01b03167f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c4826040516121e291815260200190565b60405180910390a26121f4818461518c565b925050808061220290615171565b9150506120eb565b50611c9a6122206001546001600160a01b031690565b6068546001600160a01b0316908361318e565b600081815260d260205260408082209051631d51169760e11b81526004810191909152606460248201527369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c90633aa22d2e90604401602060405180830381865af4158015612299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b39190615649565b60006122c7611c9f565b90506120b3818484610c54565b600082815260d260205260408082209051631361754b60e11b81526004810191909152821515602482015260646044820181905282917369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c916326c2ea9691016040805180830381865af4158015612343573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123679190615662565b909590945092505050565b60d354600090819060ff161561239b576040516313d0ff5960e31b815260040160405180910390fd5b60006123a686612467565b9050610cda81866123bc36889003880188615686565b6001612a2a565b6001546001600160a01b031633148015906123f057506000546001600160a01b0362010000909104163314155b1561240e57604051636bd1573560e11b815260040160405180910390fd5b611c9a83838361302c565b600081801561245057600061242c612f34565b5a612437919061518c565b905061244360a4612fec565b611be38888888888612b45565b61245a60a4612fec565b611c4f8787878787612b45565b600081815260d26020526040902080546001600160a01b031633146124a157604051630504a20d60e01b8152336004820152602401610da3565b919050565b60d35460ff16156124ca576040516313d0ff5960e31b815260040160405180910390fd5b60006124d78360016131f1565b90506125013330846124f085546001600160a01b031690565b6001600160a01b031692919061327f565b8054604051631b2d4e8960e01b8152600481018690526001600160a01b039091166024820152604481018390527369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c90631b2d4e899060640160006040518083038186803b15801561256557600080fd5b505af4158015612579573d6000803e3d6000fd5b505082546040518581526001600160a01b0390911692508791507fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee759060200160405180910390a35050505050565b60d354600090819060ff16156125f0576040516313d0ff5960e31b815260040160405180910390fd5b60006125fb866132b7565b60408051639747e26360e01b8152600481018a90526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915285151560e48201529091507369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c90639747e26390610104016040805180830381865af415801561269c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c09190615662565b909350915060006126d083613358565b606c549091508110156126f9576040516312b6b5cd60e11b815260048101829052602401610da3565b60208601516001600160a01b03161580159061271757508560600151155b15612784578560400151801561273e5750855161273390613358565b61273c84613358565b145b80612767575085604001511580156127675750855161275c90613358565b61276585613358565b145b612784576040516307a1db0760e01b815260040160405180910390fd5b505094509492505050565b6001600160a01b0390811691161490565b60d35460ff16156127c4576040516313d0ff5960e31b815260040160405180910390fd5b60006127d18460006131f1565b80546040516341901e3560e11b8152600481018890526001600160a01b0390911660248201526044810185905260648082015283151560848201529091507369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c906383203c6a9060a40160006040518083038186803b15801561284657600080fd5b505af415801561285a573d6000803e3d6000fd5b50505050612884338461287484546001600160a01b031690565b6001600160a01b0316919061318e565b80546040518481526001600160a01b039091169087907fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c9220018309469060200160405180910390a3505050505050565b60d35460ff16156128f3576040516313d0ff5960e31b815260040160405180910390fd5b8161292a5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610da3565b604051632f342a3560e11b81526004810184905260248101839052606460448201819052821515908201527369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c90635e68546a9060840160006040518083038186803b15801561298c57600080fd5b505af41580156129a0573d6000803e3d6000fd5b5050505060008213156129ca576068546129c5906001600160a01b031633308561327f565b6129ea565b6129ea336129d7846156a2565b6068546001600160a01b0316919061318e565b837fb4604a31ce2914796ae6383c67cee47a3cb969b59a7dba0d06edcab53ff96a8483604051612a1c91815260200190565b60405180910390a250505050565b60d354600090819060ff1615612a53576040516313d0ff5960e31b815260040160405180910390fd5b6000612a5e866132b7565b905084606001516001600160a01b0316600014612a8857612a888186606001518760800151613373565b60405163086d871160e11b81527369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c906310db0e2290612ac8908a9085908a906064908b906004016156bf565b6040805180830381865af4158015612ae4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b089190615662565b90935091506000612b1c828585606461340e565b606c54909150811015612784576040516312b6b5cd60e11b815260048101829052602401610da3565b60d35460009060ff1615612b6c576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d26020526040812090612b84876132b7565b9050612b8f8461344e565b606b54612b9c919061518c565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a48201529093507369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c906343c74e939060c40160006040518083038186803b158015612c1b57600080fd5b505af4158015612c2f573d6000803e3d6000fd5b5050606854612c4b92506001600160a01b03169050338561318e565b505095945050505050565b60d35460009060ff1615612c7d576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d260205260408120907369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c6379452b2383612cb08761344e565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612cf7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1b9190615662565b90935090506000612d2c8285615761565b905060008413612d525760405163ef37dcc760e01b815260048101859052602401610da3565b606854612d69906001600160a01b0316338661318e565b612d7282613565565b6040805182815260208101869052908101839052339087907f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060600160405180910390a350505092915050565b612de460405180606001604052806000815260200160008152602001600081525090565b60d35460ff1615612e08576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff161115612e2f576040516348d69f3560e01b815260040160405180910390fd5b600085815260d26020526040812090612e47866132b7565b600089815260d260205260408120919250907369806394A0B6A06a3Aa6B03A76E8bc61825d2F1c9063ff12fd529085908986612e828b61344e565b6040516001600160e01b031960e088901b1681526004810195909552602485019390935261ffff90911660448401526001600160a01b0316606483810191909152608483019190915260a4820152600160c482015260e401608060405180830381865af4158015612ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f1b91906157a2565b94509050612f2881613565565b50505095945050505050565b60408051600481526024810182526020810180516001600160e01b031663a94597ff60e01b179052905160009182918291606491612f72919061581a565b600060405180830381855afa9150503d8060008114612fad576040519150601f19603f3d011682016040523d82523d6000602084013e612fb2565b606091505b5091509150811580612fc357508051155b15612fd15760009250505090565b80806020019051810190612fe59190615649565b9250505090565b3681101561301657604051634219202560e01b815236600482015260248101829052604401610da3565b50565b90546001600160a01b0391821691161490565b604080516080810182526001600160a01b038581168252938416602080830191825263ffffffff94851683850190815260006060850181815298871681526065909252939020915182549086166001600160a01b03199091161782555160019091018054925195511515600160c01b0260ff60c01b1996909416600160a01b026001600160c01b031990931691909416171792909216919091179055565b3361301681806135f1565b6001600160a01b0382811660009081526020839052604080822060020154905163dd86c10160e01b8152640100000000820463ffffffff1660048201529192600160501b909104169063dd86c10190602401602060405180830381865afa158015613144573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156e9190615649565b600061156e6131806001600160a01b038516846136f9565b6001600160a01b0316613738565b6040516001600160a01b038316602482015260448101829052611c9a90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526137a5565b63ffffffff80831660009081526065602052604081209161321491839161301916565b1561323a5760405163b087c8c360e01b815263ffffffff84166004820152602401610da3565b81801561325357506001810154600160c01b900460ff16155b156120b357805460405163a006afaf60e01b81526001600160a01b039091166004820152602401610da3565b6040516001600160a01b0380851660248301528316604482015260648101829052610c919085906323b872dd60e01b906084016131ba565b63ffffffff8082166000908152606660205260408120546001600160a01b0316916132e491839161278f16565b1561330a5760405163b087c8c360e01b815263ffffffff83166004820152602401610da3565b6001600160a01b038116600090815260646020526040902060020154600160401b900460ff166124a157604051631079472960e21b81526001600160a01b0382166004820152602401610da3565b600080821361336f5761336a826156a2565b6120b3565b5090565b60006133896001600160a01b0385166064613877565b90506000836001600160a01b0316826001600160a01b0316116133b5576133b0828561582c565b6133bf565b6133bf848361582c565b90506127106133d28561ffff8616615854565b6133dc9190615899565b6001600160a01b0316816001600160a01b03161115611961576040516307a1db0760e01b815260040160405180910390fd5b600061341983613358565b61344461342f6001600160a01b03881685613168565b600160801b61343d88613358565b919061389d565b611ab99190615761565b60003a61013a548111156134845761013a54604051638dfe587d60e01b8152610da3918391600401918252602082015260400190565b82158061349a575060d5546001600160a01b0316155b156134a8576000915061355f565b6000333214156134bd576134ba6138df565b90505b60006134c93a866158bf565b60d55460405163dd86c10160e01b815261012c60048201529192506000916001600160a01b039091169063dd86c10190602401602060405180830381865afa158015613519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061353d9190615649565b905061355981600160801b613552858761518c565b919061391d565b94505050505b50919050565b600081131561358b5760d454606854613016916001600160a01b0391821691168361318e565b60d4546001600160a01b031663379607f56135a5836156a2565b6040518263ffffffff1660e01b81526004016135c391815260200190565b600060405180830381600087803b1580156135dd57600080fd5b505af1158015611961573d6000803e3d6000fd5b600054610100900460ff168061360a575060005460ff16155b6136265760405162461bcd60e51b8152600401610da39061540a565b600054610100900460ff16158015613648576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a38015611c9a576000805461ff0019169055505050565b6001600160a01b03808316600090815260208390526040812060028101549054919261156e92169063ffffffff6401000000009091048116906139cb16565b60006401000276a36001600160a01b0383161080613773575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561379c57604051635d236c4560e01b81526001600160a01b0383166004820152602401610da3565b6120b3826139ec565b60006137fa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613a069092919063ffffffff16565b805190915015611c9a578080602001905181019061381891906158de565b611c9a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610da3565b6001600160a01b03808316600090815260208390526040812054909161156e9116613a15565b60006138c3600085126138b057846138bc565b6138bc856000196158fb565b848461391d565b9050600084121561156e576138d7816156a2565b949350505050565b60408051600481526024810182526020810180516001600160e01b031663637bef0760e11b179052905160009182918291606491612f72919061581a565b600080806000198587098587029250828110838203039150508060001415613957576000841161394c57600080fd5b50829004905061156e565b80841161396357600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806139e16001600160a01b03851684613a9f565b905061161281613cbb565b60006120b36001600160a01b03831680600160401b61391d565b60606138d78484600085613fee565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a7a9190615980565b509496509294505050506001600160a01b0383161515905061355f5761156e81613cbb565b600063ffffffff8216613ac8576040516351a4d88160e01b815260006004820152602401610da3565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110613afd57613afd614f0d565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110613b2c57613b2c614f0d565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90613b6d908490600401615a22565b600060405180830381865afa925050508015613bab57506040513d6000823e601f3d908101601f19168201604052613ba89190810190615ac4565b60015b613c2057836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c119190615980565b50939650611615945050505050565b600082600081518110613c3557613c35614f0d565b602002602001015183600181518110613c5057613c50614f0d565b6020026020010151613c629190615b8f565b90506000613c7663ffffffff881683615bdf565b905060008260060b128015613c9c5750613c9663ffffffff881683615c1d565b60060b15155b15613caf5780613cab81615c3f565b9150505b94506120b39350505050565b60008060008360020b12613cd2578260020b613cda565b8260020b6000035b9050620d89e8811115613d135760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610da3565b600060018216613d2757600160801b613d39565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613d6d576ffff97272373d413259a46990580e213a0260801c5b6004821615613d8c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613dab576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613dca576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613de9576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613e08576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613e27576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613e47576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613e67576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613e87576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613ea7576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613ec7576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613ee7576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613f07576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613f27576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613f48576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613f68576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613f87576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613fa4576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613fc5578060001981613fc157613fc1615883565b0490505b640100000000810615613fd9576001613fdc565b60005b60ff16602082901c0192505050919050565b60608247101561404f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610da3565b843b61409d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610da3565b600080866001600160a01b031685876040516140b9919061581a565b60006040518083038185875af1925050503d80600081146140f6576040519150601f19603f3d011682016040523d82523d6000602084013e6140fb565b606091505b509150915061410b828286614116565b979650505050505050565b6060831561412557508161156e565b8251156141355782518084602001fd5b8160405162461bcd60e51b8152600401610da39190615636565b801515811461301657600080fd5b80356124a18161414f565b60006020828403121561417a57600080fd5b813561156e8161414f565b60006020828403121561419757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106141c4576141c461419e565b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b818110156142245786518051871684528501518584015295840195918301916001016141fd565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561434157848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b8083101561432c5783516142af8382516141b4565b8b8101518060020b8d850152508a81015160020b8b84015260608101516142e160608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a8401935060018301925061429a565b509a89019a9450505090860190600101614247565b50909e9d5050505050505050505050505050565b63ffffffff8116811461301657600080fd5b60006020828403121561437957600080fd5b813561156e81614355565b60008060006060848603121561439957600080fd5b8335925060208401356143ab81614355565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156143f4576143f46143bc565b60405290565b60405161012081016001600160401b03811182821017156143f4576143f46143bc565b604080519081016001600160401b03811182821017156143f4576143f46143bc565b60405160e081016001600160401b03811182821017156143f4576143f46143bc565b604051601f8201601f191681016001600160401b0381118282101715614489576144896143bc565b604052919050565b6001600160a01b038116811461301657600080fd5b80356124a181614491565b6000608082840312156144c357600080fd5b604051608081018181106001600160401b03821117156144e5576144e56143bc565b6040528235815290508060208301356144fd81614491565b602082015260408301356145108161414f565b604082015260608301356145238161414f565b6060919091015292915050565b600080600060c0848603121561454557600080fd5b83359250602084013561455781614355565b915061456685604086016144b1565b90509250925092565b6000806040838503121561458257600080fd5b823561458d81614491565b9150602083013561459d8161414f565b809150509250929050565b6000602082840312156145ba57600080fd5b813561156e81614491565b60008083601f8401126145d757600080fd5b5081356001600160401b038111156145ee57600080fd5b6020830191508360208260051b850101111561460957600080fd5b9250929050565b60008060006040848603121561462557600080fd5b8335925060208401356001600160401b0381111561464257600080fd5b61464e868287016145c5565b9497909650939450505050565b60005b8381101561467657818101518382015260200161465e565b83811115610c915750506000910152565b6000815180845261469f81602086016020860161465b565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561470857603f198886030184526146f6858351614687565b945092850192908501906001016146da565b5092979650505050505050565b6000806040838503121561472857600080fd5b50508035926020909101359150565b60008082840360e081121561474b57600080fd5b833561475681614491565b925060c0601f198201121561476a57600080fd5b506020830190509250929050565b60008060008084860360c081121561478f57600080fd5b606081121561479d57600080fd5b509395606087013595506080870135945060a08701359350915050565b60008060008060008060c087890312156147d357600080fd5b86356147de81614491565b955060208701356147ee81614491565b945060408701356147fe81614491565b9350606087013561480e81614491565b9250608087013561481e81614491565b915060a087013561482e81614491565b809150509295509295509295565b8060020b811461301657600080fd5b6000806000806080858703121561486157600080fd5b84359350602085013561487381614355565b925060408501356148838161483c565b915060608501356148938161483c565b939692955090935050565b61ffff8116811461301657600080fd5b80356124a18161489e565b600080600080608085870312156148cf57600080fd5b843593506020850135925060408501356148e881614355565b915060608501356148938161489e565b60008082840361012081121561490d57600080fd5b833561491881614491565b9250610100601f198201121561476a57600080fd5b600080600080600060a0868803121561494557600080fd5b8535945060208601359350604086013561495e81614355565b9250606086013561496e8161489e565b949793965091946080013592915050565b6000806020838503121561499257600080fd5b82356001600160401b038111156149a857600080fd5b6149b4858286016145c5565b90969095509350505050565b60006001600160401b038211156149d9576149d96143bc565b5060051b60200190565b600060208083850312156149f657600080fd5b82356001600160401b03811115614a0c57600080fd5b8301601f81018513614a1d57600080fd5b8035614a30614a2b826149c0565b614461565b81815260059190911b82018301908381019087831115614a4f57600080fd5b928401925b8284101561410b57833582529284019290840190614a54565b6020808252825182820181905260009190848201906040850190845b81811015614aa557835183529284019291840191600101614a89565b50909695505050505050565b60008060408385031215614ac457600080fd5b8235614acf81614355565b946020939093013593505050565b60008060408385031215614af057600080fd5b82359150602083013561459d8161414f565b6000806000838503610120811215614b1957600080fd5b843593506020850135614b2b81614355565b925060e0603f1982011215614b3f57600080fd5b506040840190509250925092565b600080600060608486031215614b6257600080fd5b8335614b6d81614491565b92506020840135614b7d81614491565b91506040840135614b8d81614355565b809150509250925092565b600080600080600060a08688031215614bb057600080fd5b853594506020860135614bc281614355565b93506040860135614bd28161483c565b9250606086013561496e8161483c565b6003811061301657600080fd5b80516124a181614be2565b80516124a18161483c565b80516001600160801b03811681146124a157600080fd5b600082601f830112614c2d57600080fd5b81516020614c3d614a2b836149c0565b82815260059290921b84018101918181019086841115614c5c57600080fd5b8286015b84811015614de65780516001600160401b0380821115614c7f57600080fd5b9088019060a0828b03601f19011215614c9757600080fd5b614c9f6143d2565b86830151614cac81614491565b80825250604083015187820152606083015160408201526080830151606082015260a083015182811115614cdf57600080fd5b8084019350508a603f840112614cf457600080fd5b868301519150614d06614a2b836149c0565b82815261012092830284016040019288820191908d851115614d2757600080fd5b6040860195505b84861015614dd05780868f031215614d4557600080fd5b614d4d6143fa565b614d5687614bef565b8152614d638b8801614bfa565b8b820152614d7360408801614bfa565b6040820152614d8460608801614c05565b60608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e08201526101008701516101008201528084525089830192508086019550614d2e565b5060808301525085525050918301918301614c60565b509695505050505050565b60008060008060808587031215614e0757600080fd5b8451614e1281614491565b8094505060208086015193506040808701516001600160401b0380821115614e3957600080fd5b818901915089601f830112614e4d57600080fd5b8151614e5b614a2b826149c0565b81815260069190911b8301850190858101908c831115614e7a57600080fd5b938601935b82851015614ec35785858e031215614e975760008081fd5b614e9f61441d565b8551614eaa81614491565b8152858801518882015282529385019390860190614e7f565b60608c01519098509550505080841115614edc57600080fd5b505050614eeb87828801614c1c565b91505092959194509250565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112614f3957600080fd5b9190910192915050565b600060208284031215614f5557600080fd5b81356008811061156e57600080fd5b6000808335601e19843603018112614f7b57600080fd5b8301803591506001600160401b03821115614f9557600080fd5b60200191503681900382131561460957600080fd5b60008060a08385031215614fbd57600080fd5b8235614fc881614355565b9150614fd784602085016144b1565b90509250929050565b80356124a181614be2565b600060e08284031215614ffd57600080fd5b61500561443f565b905081356150128161483c565b815260208201356150228161483c565b60208201526040820135600f81900b811461503c57600080fd5b604082015261504d606083016144a6565b606082015261505e608083016148ae565b608082015261506f60a0830161415d565b60a082015261508060c08301614fe0565b60c082015292915050565b600080610100838503121561509f57600080fd5b82356150aa81614355565b9150614fd78460208501614feb565b600080600080608085870312156150cf57600080fd5b84356150da81614355565b935060208501356150ea8161483c565b925060408501356150fa8161483c565b9396929550929360600135925050565b60008060006060848603121561511f57600080fd5b83359250602084013561513181614355565b91506040840135614b8d8161489e565b60208101600883106151555761515561419e565b91905290565b634e487b7160e01b600052601160045260246000fd5b60006000198214156151855761518561515b565b5060010190565b6000821982111561519f5761519f61515b565b500190565b6000828210156151b6576151b661515b565b500390565b600081356120b38161414f565b600081356120b381614491565b80547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b813561521e8161489e565b815461ffff191661ffff821617825550602082013561523c8161489e565b815463ffff00001916601082901b63ffff00001617825550604082013561526281614355565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560608401356152928161414f565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815560808201356152c18161414f565b815460ff60481b191681151560481b60ff60481b161782555060a08201356152e881614491565b611c9a81836151d5565b6001600160a01b038316815260e08101823561530d8161489e565b61ffff8082166020850152602085013591506153288261489e565b1660408381019190915283013561533e81614355565b63ffffffff811660608401525060608301356153598161414f565b80151560808401525060808301356153708161414f565b80151560a08401525061538560a084016144a6565b6001600160a01b03811660c0840152509392505050565b81356153a78161489e565b815461ffff191661ffff82161782555060208201356153c58161489e565b815463ffff00001916601082901b63ffff0000161782555060408201356153eb8161489e565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b813561548381614491565b61548d8183615458565b50602082013561549c81614491565b6154a98160018401615458565b506002810160408301356154bc8161489e565b815461ffff191661ffff82161782555060608301356154da8161489e565b815463ffff00001916601082901b63ffff00001617825550608083013561550081614355565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a08501356155308161414f565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815561557e61556060c085016151bb565b82805460ff60481b191691151560481b60ff60481b16919091179055565b611c9a61558d60e085016151c8565b826151d5565b8183823760009101908152919050565b6000602082840312156155b557600080fd5b81516001600160401b03808211156155cc57600080fd5b818401915084601f8301126155e057600080fd5b8151818111156155f2576155f26143bc565b615605601f8201601f1916602001614461565b915080825285602082850101111561561c57600080fd5b61562d81602084016020860161465b565b50949350505050565b60208152600061156e6020830184614687565b60006020828403121561565b57600080fd5b5051919050565b6000806040838503121561567557600080fd5b505080516020909101519092909150565b600060e0828403121561569857600080fd5b61156e8383614feb565b6000600160ff1b8214156156b8576156b861515b565b5060000390565b60006101608201905086825260018060a01b038087166020840152855160020b6040840152602086015160020b60608401526040860151600f0b60808401528060608701511660a08401525061ffff60808601511660c083015260a085015161572c60e084018215159052565b5060c08501516157406101008401826141b4565b508361012083015261575761014083018415159052565b9695505050505050565b600080821280156001600160ff1b03849003851316156157835761578361515b565b600160ff1b839003841281161561579c5761579c61515b565b50500190565b60008082840360808112156157b657600080fd5b835192506060601f19820112156157cc57600080fd5b50604051606081018181106001600160401b03821117156157ef576157ef6143bc565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60008251614f3981846020870161465b565b60006001600160a01b038381169083168181101561584c5761584c61515b565b039392505050565b60006001600160a01b038281168482168115158284048211161561587a5761587a61515b565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b03838116806158b3576158b3615883565b92169190910492915050565b60008160001904831182151516156158d9576158d961515b565b500290565b6000602082840312156158f057600080fd5b815161156e8161414f565b60006001600160ff1b03818413828413808216868404861116156159215761592161515b565b600160ff1b60008712828116878305891216156159405761594061515b565b6000871292508782058712848416161561595c5761595c61515b565b878505871281841616156159725761597261515b565b505050929093029392505050565b600080600080600080600060e0888a03121561599b57600080fd5b87516159a681614491565b60208901519097506159b78161483c565b60408901519096506159c88161489e565b60608901519095506159d98161489e565b60808901519094506159ea8161489e565b60a089015190935060ff81168114615a0157600080fd5b60c0890151909250615a128161414f565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b81811015614aa557835163ffffffff1683529284019291840191600101615a3e565b600082601f830112615a7157600080fd5b81516020615a81614a2b836149c0565b82815260059290921b84018101918181019086841115615aa057600080fd5b8286015b84811015614de6578051615ab781614491565b8352918301918301615aa4565b60008060408385031215615ad757600080fd5b82516001600160401b0380821115615aee57600080fd5b818501915085601f830112615b0257600080fd5b81516020615b12614a2b836149c0565b82815260059290921b84018101918181019089841115615b3157600080fd5b948201945b83861015615b5f5785518060060b8114615b505760008081fd5b82529482019490820190615b36565b91880151919650909350505080821115615b7857600080fd5b50615b8585828601615a60565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615615bba57615bba61515b565b81667fffffffffffff018313811615615bd557615bd561515b565b5090039392505050565b60008160060b8360060b80615bf657615bf6615883565b667fffffffffffff19821460001982141615615c1457615c1461515b565b90059392505050565b60008260060b80615c3057615c30615883565b808360060b0791505092915050565b60008160020b627fffff19811415615c5957615c5961515b565b600019019291505056fea164736f6c634300080a000a';

type ClearingHouseLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClearingHouseLogic__factory extends ContractFactory {
  constructor(...args: ClearingHouseLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'ClearingHouseLogic';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseLogic> {
    return super.deploy(overrides || {}) as Promise<ClearingHouseLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouseLogic {
    return super.attach(address) as ClearingHouseLogic;
  }
  connect(signer: Signer): ClearingHouseLogic__factory {
    return super.connect(signer) as ClearingHouseLogic__factory;
  }
  static readonly contractName: 'ClearingHouseLogic';
  public readonly contractName: 'ClearingHouseLogic';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseLogicInterface {
    return new utils.Interface(_abi) as ClearingHouseLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseLogic {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouseLogic;
  }
}
