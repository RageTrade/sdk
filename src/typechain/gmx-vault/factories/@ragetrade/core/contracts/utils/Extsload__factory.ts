/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  Extsload,
  ExtsloadInterface,
} from '../../../../../@ragetrade/core/contracts/utils/Extsload';

const _abi = [
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

export class Extsload__factory {
  static readonly abi = _abi;
  static createInterface(): ExtsloadInterface {
    return new utils.Interface(_abi) as ExtsloadInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Extsload {
    return new Contract(address, _abi, signerOrProvider) as Extsload;
  }
}
