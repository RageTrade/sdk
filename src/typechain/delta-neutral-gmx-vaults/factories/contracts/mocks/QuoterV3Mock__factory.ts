/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  QuoterV3Mock,
  QuoterV3MockInterface,
} from '../../../contracts/mocks/QuoterV3Mock';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'USDC_TO_WBTC',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'USDC_TO_WETH',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'USDC_TO_WETH_',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WBTC_TO_USDC',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WETH_TO_USDC',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'path',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    name: 'quoteExactInput',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'path',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    name: 'quoteExactOutput',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThresholdSwapBtcBps',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_slippageThresholdSwapEthBps',
        type: 'uint256',
      },
    ],
    name: 'setSlippages',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060409080825234620008d5576008805462ffffff60581b1916607d605a1b179055601180546001600160a01b0319908116732f2a2543b76a4166549f7aab2e75bef0aefc5b0f179091556010805482167382af49447d8a07e3bd95bd0d56f35241523fbab1178155600f8054831673ff970a61a04b1ca14834a43f5de4533ebddb5cc81781557f82af49447d8a07e3bd95bd0d56f35241523fbab1000000000000000000000000602080860191909152607d60ea1b60348601527fff970a61a04b1ca14834a43f5de4533ebddb5cc80000000000000000000000006037860152602b8552929390929190620000f681620008da565b80516001600160401b0391908281116200056a57605454906001928383811c93168015620008ca575b8784101462000549578190601f9384811162000873575b5087908483116001146200080957600092620007fd575b5050600019600383901b1c191690831b176054555b855484546001600160a01b039791620001809189169089166200091a565b8051908582116200056a57605654908582811c92168015620007f2575b89831014620005495781858493116200079b575b508890858311600114620007315760009262000725575b5050600019600383901b1c191690841b176056555b805485546011548b516001600160601b0319918b16606090811b83168b830190815261017760eb1b6014820152938c16811b83166017850152607d60ea1b602b850152938b1690931b16602e820152909590869060420103956200024a601f1997888101835282620008f6565b8051908682116200056a57605554908682811c921680156200071a575b8a83101462000549578186849311620006c3575b5089908683116001146200065d5760009262000651575b5050600019600383901b1c191690851b176055555b620002ba8882541689845416906200091a565b8051908682116200056a576057548681811c9116801562000646575b8a8210146200054957858111620005fa575b5088908583116001146200058c576200037e9392916000918362000580575b5050600019600383901b1c191690861b176057555b601154905492548b51918a16606090811b6001600160601b03199081168b850190815261017760eb1b6014820152958c16821b81166017870152607d60ea1b602b870152918b16901b16602e84015291829060420103868101835282620008f6565b80519384116200056a576058548381811c911680156200055f575b878210146200054957828111620004fd575b508591841160011462000495578394509083929160009462000489575b50501b916000199060031b1c1916176058555b60048173a97684ead0e402dc232d5a977953df7ecbab3cdb80866018541617601855865192838092631f94a27560e31b82525afa9182156200047e576000926200043a575b50501690601654161760165551610aa290816200095b8239f35b81813d831162000476575b620004518183620008f6565b810103126200047257519082821682036200046f5750388062000420565b80fd5b5080fd5b503d62000445565b85513d6000823e3d90fd5b015192503880620003c8565b9193831691605860005283866000209360005b8888838310620004e55750505010620004cb575b505050811b01605855620003db565b015160001960f88460031b161c19169055388080620004bc565b868601518855909601959485019487935001620004a8565b6058600052866000208380870160051c8201928988106200053f575b0160051c019084905b82811062000532575050620003ab565b6000815501849062000522565b9250819262000519565b634e487b7160e01b600052602260045260246000fd5b90607f169062000399565b634e487b7160e01b600052604160045260246000fd5b01519050388062000307565b929186918982169060576000528b6000209160005b8d828210620005e357505095836200037e9710620005c9575b505050811b016057556200031c565b015160001960f88460031b161c19169055388080620005ba565b8389015185558b96909401939283019201620005a1565b6057600052896000208680850160051c8201928c86106200063c575b0160051c019087905b8281106200062f575050620002e8565b600081550187906200061f565b9250819262000616565b90607f1690620002d6565b01519050388062000292565b90898894169160556000528b6000209260005b8d828210620006ac575050841162000692575b505050811b01605555620002a7565b015160001960f88460031b161c1916905538808062000683565b8385015186558b9790950194938401930162000670565b9091506055600052896000208680850160051c8201928c861062000710575b918991869594930160051c01915b828110620007005750506200027b565b60008155859450899101620006f0565b92508192620006e2565b91607f169162000267565b015190503880620001c8565b90869350601f1983169160566000528a6000209260005b8c8282106200078457505084116200076a575b505050811b01605655620001dd565b015160001960f88460031b161c191690553880806200075b565b8385015186558a9790950194938401930162000748565b9091506056600052886000208580850160051c8201928b8610620007e8575b918891869594930160051c01915b828110620007d8575050620001b1565b60008155859450889101620007c8565b92508192620007ba565b91607f16916200019d565b0151905038806200014d565b90859350601f198316916054600052896000209260005b8b8282106200085c575050841162000842575b505050811b0160545562000162565b015160001960f88460031b161c1916905538808062000833565b838501518655899790950194938401930162000820565b9091506054600052876000208480850160051c8201928a8610620008c0575b918791869594930160051c01915b828110620008b057505062000136565b60008155859450879101620008a0565b9250819262000892565b92607f16926200011f565b600080fd5b606081019081106001600160401b038211176200056a57604052565b601f909101601f19168101906001600160401b038211908210176200056a57604052565b6040516001600160601b0319606092831b81166020830152607d60ea1b60348301529290911b9091166037820152602b81526200095781620008da565b9056fe604060808152600436101561001357600080fd5b600090813560e01c806280792c146102da57806306f837c31461021e5780632f80bb1d1461020357806352f38ce0146101e65780636b42c576146101c4578063b66385c71461019c578063ba8ba3861461009b5763cdca17531461007657600080fd5b346100975760209061009061008a366105cb565b9061068e565b9051908152f35b5080fd5b50346100975781600319360112610097578051908260585490600182811c91818416938415610192575b602094858510811461017e5784885290811561015c5750600114610103575b6100ff86866100f5828b03836102f7565b5191829182610582565b0390f35b929550605883527f657000d47e971dcfb21375bcfa3496f47a2a2f0f12c8aeb78a008ace6ae55ca55b82841061014957505050826100ff946100f59282010194386100e4565b805486850188015292860192810161012c565b60ff191687860152505050151560051b83010192506100f5826100ff386100e4565b634e487b7160e01b83526022600452602483fd5b92607f16926100c5565b50346100975781600319360112610097576100ff906101b96104ce565b905191829182610582565b5034610097573660031901126101e357600435605955602435605a5580f35b80fd5b50346100975781600319360112610097576100ff906101b961041a565b503461009757602090610090610218366105cb565b906108b8565b50346100975781600319360112610097578051908260555490600182811c918184169384156102d0575b602094858510811461017e5784885290811561015c5750600114610277576100ff86866100f5828b03836102f7565b929550605583527f71beda120aafdd3bb922b360a066d10b7ce81d7ac2ad9874daac46e2282f6b455b8284106102bd57505050826100ff946100f59282010194386100e4565b80548685018801529286019281016102a0565b92607f1692610248565b50346100975781600319360112610097576100ff906101b961032f565b90601f8019910116810190811067ffffffffffffffff82111761031957604052565b634e487b7160e01b600052604160045260246000fd5b60405190600060565490600182811c90808416938415610410575b60209485841081146103fc57838852879493929181156103dc575060011461037d575b505061037b925003836102f7565b565b9093915060566000527fea7419f5ae821e7204864e6a0871433ba612011908963bb42a64f42d65ad2f72936000915b8183106103c457505061037b9350820101388061036d565b855488840185015294850194879450918301916103ac565b91505061037b94925060ff191682840152151560051b820101388061036d565b634e487b7160e01b85526022600452602485fd5b91607f169161034a565b60405190600060545490600182811c908084169384156104c4575b60209485841081146103fc57838852879493929181156103dc575060011461046557505061037b925003836102f7565b9093915060546000527ff0d642dbc7517672e217238a2f008f4f8cdad0586d8ce5113e9e09dcc6860619936000915b8183106104ac57505061037b9350820101388061036d565b85548884018501529485019487945091830191610494565b91607f1691610435565b60405190600060575490600182811c90808416938415610578575b60209485841081146103fc57838852879493929181156103dc575060011461051957505061037b925003836102f7565b9093915060576000527fe8e5595d268aaa85b36c3557e9d96c14a4fffaee9f45bcae0c407968a7109630936000915b81831061056057505061037b9350820101388061036d565b85548884018501529485019487945091830191610548565b91607f16916104e9565b6020808252825181830181905290939260005b8281106105b757505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610595565b60406003198201126106405767ffffffffffffffff60043581811161064057826023820112156106405780600401359182116103195760405192610619601f8401601f1916602001856102f7565b82845260248383010111610640578160009260246020930183860137830101529060243590565b600080fd5b8181029291811591840414171561065857565b634e487b7160e01b600052601160045260246000fd5b8115610678570490565b634e487b7160e01b600052601260045260246000fd5b9073__$2af743edc7b1c16cb7d679fc921122aeb9$__906001600160a01b0391826011541691604051633528463d60e21b9485825260009660049688888501526024968785015260209283856044818a5af49485156108ad578a95610879575b5090604484926010541691604051988993849283528d8d8401528b8301525af494851561086e57889561083b575b5080519082810191822061072e61032f565b848151910120146107d657519020906107456104ce565b80519101200361079d575061075991610645565b90605a54936127109485039385851161078d575050506c0c9f2c9cd04674edea40000000929161078891610645565b040490565b634e487b7160e01b825260119052fd5b6107a79250610645565b90605954936127109485039385851161078d575050506c0c9f2c9cd04674edea40000000929161078891610645565b5050505090929493916c0c9f2c9cd04674edea400000009182810292818404149015171561082a57605a54926127109384039684881161078d57505050610827939461082191610645565b0461066e565b90565b634e487b7160e01b83526011865282fd5b9094508181813d8311610867575b61085381836102f7565b810103126108635751933861071c565b8780fd5b503d610849565b6040513d8a823e3d90fd5b9094508381813d83116108a6575b61089181836102f7565b810103126108a257519360446106ee565b8980fd5b503d610887565b6040513d8c823e3d90fd5b9073__$2af743edc7b1c16cb7d679fc921122aeb9$__906001600160a01b0391826011541691604051633528463d60e21b9485825260009660049688888501526024968785015260209283856044818a5af49485156108ad578a95610a65575b5090604484926010541691604051988993849283528d8d8401528b8301525af494851561086e578895610a36575b5080519082810191822061095861032f565b848151910120146109eb575190209061096f61041a565b8051910120036109b2575061098391610645565b90605a54936127109485019384861161078d575050506c0c9f2c9cd04674edea40000000929161078891610645565b6109bc9250610645565b90605954936127109485019384861161078d575050506c0c9f2c9cd04674edea40000000929161078891610645565b5050505090929493916c0c9f2c9cd04674edea400000009182810292818404149015171561082a57605a54926127109384019687851161078d57505050610827939461082191610645565b9094508181813d8311610a5e575b610a4e81836102f7565b8101031261086357519338610946565b503d610a44565b9094508381813d8311610a8e575b610a7d81836102f7565b810103126108a25751936044610918565b503d610a7356fea164736f6c6343000812000a';

type QuoterV3MockConstructorParams =
  | [linkLibraryAddresses: QuoterV3MockLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: QuoterV3MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class QuoterV3Mock__factory extends ContractFactory {
  constructor(...args: QuoterV3MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        QuoterV3Mock__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: QuoterV3MockLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$2af743edc7b1c16cb7d679fc921122aeb9\\$__', 'g'),
      linkLibraryAddresses[
        'contracts/libraries/DnGmxJuniorVaultManager.sol:DnGmxJuniorVaultManager'
      ]
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      QuoterV3Mock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): QuoterV3Mock__factory {
    return super.connect(runner) as QuoterV3Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuoterV3MockInterface {
    return new Interface(_abi) as QuoterV3MockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): QuoterV3Mock {
    return new Contract(address, _abi, runner) as unknown as QuoterV3Mock;
  }
}

export interface QuoterV3MockLibraryAddresses {
  ['contracts/libraries/DnGmxJuniorVaultManager.sol:DnGmxJuniorVaultManager']: string;
}
