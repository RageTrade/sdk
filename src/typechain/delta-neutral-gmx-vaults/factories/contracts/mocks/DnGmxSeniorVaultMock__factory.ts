/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  DnGmxSeniorVaultMock,
  DnGmxSeniorVaultMockInterface,
} from '../../../contracts/mocks/DnGmxSeniorVaultMock';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotBorrower',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositCapExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrowAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBorrowerAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidCapUpdate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidMaxUtilizationBps',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxUtilizationBreached',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'AllowancesGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'vault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newCap',
        type: 'uint256',
      },
    ],
    name: 'BorrowCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Deposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'DepositCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IBorrower',
        name: 'dnGmxJuniorVault',
        type: 'address',
      },
    ],
    name: 'DnGmxJuniorVaultUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint128',
        name: 'optimalUtilizationRate',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'baseVariableBorrowRate',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'variableRateSlope1',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'variableRateSlope2',
        type: 'uint128',
      },
    ],
    name: 'FeeStrategyUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IBorrower',
        name: 'leveragePool',
        type: 'address',
      },
    ],
    name: 'LeveragePoolUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxUtilizationBps',
        type: 'uint256',
      },
    ],
    name: 'MaxUtilizationBpsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'eventType',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'juniorVaultAusdc',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'seniorVaultAusdc',
        type: 'uint256',
      },
    ],
    name: 'VaultState',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'caller',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'Withdraw',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_afterDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: '_beforeWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'asset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'availableBorrow',
    outputs: [
      {
        internalType: 'uint256',
        name: 'availableAUsdc',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'borrow',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'borrowCaps',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cap',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'convertToAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'convertToShares',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IBorrower',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeStrategy',
    outputs: [
      {
        internalType: 'uint128',
        name: 'optimalUtilizationRate',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'baseVariableBorrowRate',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'variableRateSlope1',
        type: 'uint128',
      },
      {
        internalType: 'uint128',
        name: 'variableRateSlope2',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getEthRewardsSplitRate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'feeSplitRate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVaultMarketValue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: '_symbol',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_poolAddressesProvider',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'leveragePool',
    outputs: [
      {
        internalType: 'contract IBorrower',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'maxMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxUtilizationBps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'maxWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewDeposit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewMint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    name: 'previewRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    name: 'previewWithdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'redeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'repay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'setDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IBorrower',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
    ],
    name: 'setDnGmxJuniorVault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IBorrower',
        name: '_leveragePool',
        type: 'address',
      },
    ],
    name: 'setLeveragePool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxUtilizationBps',
        type: 'uint256',
      },
    ],
    name: 'setMaxUtilizationBps',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalAssets',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalUsdcBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: 'usdcBorrowed',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrowerAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'cap',
        type: 'uint256',
      },
    ],
    name: 'updateBorrowCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'optimalUtilizationRate',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'baseVariableBorrowRate',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'variableRateSlope1',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'variableRateSlope2',
            type: 'uint128',
          },
        ],
        internalType: 'struct FeeSplitStrategy.Info',
        name: '_feeStrategy',
        type: 'tuple',
      },
    ],
    name: 'updateFeeStrategyParams',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'withdraw',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080806040523461001657613c3d908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301e1d1141461038d57806306fdde031461038857806307a2d13a14610342578063095ea7b3146103835780630a28a4771461037e57806318160ddd1461037957806323b872dd14610374578063304ea9cb1461036f578063313ce5671461036a578063371fd8e61461036557806338d52e0f14610360578063395093511461035b5780633d672a45146103565780633f4ba83a14610351578063402d267d1461034c5780634a584432146103475780634cdad50614610342578063543bc9841461033d57806356ab92b3146103385780635c975abb14610333578063613d25bb1461032e5780636e553f651461032957806370a0823114610324578063715018a61461031f578063768e66d31461031a57806377c718ae146103155780638224f4e8146103105780638456cb591461030b57806386651203146103065780638d315d7b146103015780638da5cb5b146102fc578063949b22ae146102f757806394bf804d146102f257806395d89b41146102ed578063964f7be2146102e8578063a22c75c6146102e3578063a457c2d7146102de578063a9059cbb146102d9578063aa88fdc3146102d4578063b3d7f6b9146102cf578063b460af94146102ca578063ba087652146102c5578063bf9571f1146102c0578063c5ebeaec146102bb578063c63d75b6146102b6578063c6e6f5921461028e578063ce96cb77146102b1578063d026c123146102ac578063d905777e146102a7578063db2d9c3a146102a2578063dbd5edc71461029d578063dd62ed3e14610298578063e3696edd14610293578063ef8b30f71461028e578063f2fde38b146102895763fdef50931461028457600080fd5b611f06565b611e75565b611c2d565b611df6565b611d91565b611d73565b611d05565b611ce0565b611c72565b611c4b565b611bff565b611b04565b6119b9565b611895565b611758565b611711565b6116ea565b6116c0565b61160d565b611532565b6113d3565b61132c565b61117c565b611135565b61110e565b61108b565b61103f565b610fe5565b610fbe565b610fa3565b610de0565b610d82565b610d44565b610c0d565b610ad4565b610a83565b610a1b565b6109f4565b6104f3565b6109b5565b61098f565b6108fb565b610860565b6107fd565b6107d6565b6106af565b610693565b610675565b610593565b610575565b610557565b610522565b61040e565b6103a2565b600091031261039d57565b600080fd5b3461039d57600036600319011261039d5760206103bd613924565b604051908152f35b6020808252825181830181905290939260005b8281106103fa57505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016103d8565b3461039d576000806003193601126104f057604051908060365461043181612069565b808552916001918083169081156104c6575060011461046b575b6104678561045b818703826120ee565b604051918291826103c5565b0390f35b9250603683527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8284106104ae57505050810160200161045b8261046761044b565b80546020858701810191909152909301928101610493565b8695506104679693506020925061045b94915060ff191682840152151560051b820101929361044b565b80fd5b3461039d57602036600319011261039d5760206103bd60043561246a565b6001600160a01b0381160361039d57565b3461039d57604036600319011261039d5761054c60043561054281610511565b602435903361230a565b602060405160018152f35b3461039d57602036600319011261039d5760206103bd6004356124ca565b3461039d57600036600319011261039d576020603554604051908152f35b3461039d57606036600319011261039d576004356105b081610511565b6024356105bc81610511565b604435906001600160a01b03831660005260346020526105f3336040600020906001600160a01b0316600052602052604060002090565b549260018401610614575b61060893506121e6565b60405160018152602090f35b8284106106305761062b836106089503338361230a565b6105fe565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b3461039d57600036600319011261039d57602060fd54604051908152f35b3461039d57600036600319011261039d57602060405160068152f35b3461039d57602036600319011261039d576001600160a01b038060ff5416908133141590816107c7575b506107b557803b1561039d576000809160046040518094819363138cc18f60e01b83525af180156107975761079c575b5061072c610720610103546001600160a01b031690565b6001600160a01b031690565b6040516323b872dd60e01b81523360048083019190915230602483015235604482015290602090829081600081606481015b03925af180156107975761076e57005b61078e9060203d8111610790575b61078681836120ee565b810190612771565b005b503d61077c565b6125e2565b806107a96107af926120b9565b80610392565b38610709565b604051633c698d7960e01b8152600490fd5b905060fe5416331415386106d9565b3461039d57600036600319011261039d5760206001600160a01b0360655416604051908152f35b3461039d57604036600319011261039d5760043561081a81610511565b336000526034602052610844816040600020906001600160a01b0316600052602052604060002090565b54602435810180911161085b5761054c913361230a565b612110565b3461039d57600036600319011261039d576001600160a01b036020816101045416916065541660246040518094819363b3596f0760e01b835260048301525afa90811561079757610467916108bd916000916108cd575b50613451565b6040519081529081906020820190565b6108ee915060203d81116108f4575b6108e681836120ee565b810190612eba565b386108b7565b503d6108dc565b3461039d57600036600319011261039d57610914611fc7565b60ca5460ff8116156109535760ff191660ca557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b3461039d57602036600319011261039d576109ab600435610511565b60206103bd613990565b3461039d57602036600319011261039d576001600160a01b036004356109da81610511565b166000526101066020526020604060002054604051908152f35b3461039d57602036600319011261039d5760206103bd600435610a1681610511565b613827565b3461039d57602036600319011261039d57600435610a37611fc7565b6127108111610a71576020817f17eb3ea543d479a0358f9f15a48526b973a5b7f30243301da7d83f4720e243c29260fd55604051908152a1005b60405163221d6b1360e01b8152600490fd5b3461039d57600036600319011261039d57602060ff60ca54166040519015158152f35b9181601f8401121561039d5782359167ffffffffffffffff831161039d576020838186019501011161039d57565b3461039d57608036600319011261039d57600435610af181610511565b67ffffffffffffffff60243581811161039d57610b12903690600401610aa6565b60443592831161039d57610b2d610b7c933690600401610aa6565b9160643593610b3b85610511565b60005496610b6060ff8960081c16158099819a610bff575b8115610bdf575b506124e9565b87610b73600160ff196000541617600055565b610bc657612789565b610b8257005b610b9261ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989080602081015b0390a1005b610bda61010061ff00196000541617600055565b612789565b303b15915081610bf1575b5038610b5a565b6001915060ff161438610bea565b600160ff8216109150610b53565b3461039d57604036600319011261039d57602435600435610c2d82610511565b610c35612e76565b610c3d613a52565b6001600160a01b038060ff5416803b1561039d576000809160046040518094819363138cc18f60e01b83525af1801561079757610d35575b50610c7f82612437565b918215610d025761046793610cfa92610cb383610caa6107206107206065546001600160a01b031690565b30903390612f8d565b610cbd8583612ec9565b6040805184815260208101879052929091169133917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d791a36133a4565b6108bd613b68565b60405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f53484152455360a81b6044820152606490fd5b610d3e906120b9565b38610c75565b3461039d57602036600319011261039d576001600160a01b03600435610d6981610511565b1660005260336020526020604060002054604051908152f35b3461039d576000806003193601126104f057610d9c611fc7565b806001600160a01b036098546001600160601b0360a01b8116609855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b3461039d5760408060031936011261039d57600435610dfe81610511565b60243590610e0a611fc7565b610e2261072061072060ff546001600160a01b031690565b6001600160a01b0382169081141580610f82575b610f715783518091632578b69f60e21b825281600460209485935afa8015610797578491600091610f54575b501015610f435782610e88836001600160a01b0316600052610106602052604060002090565b55610e9f610720610103546001600160a01b031690565b845163095ea7b360e01b81526001600160a01b03841660048201526024810185905294908290869060449082906000905af1918215610797577f84d2db42497fc6f1882756be420935d982025ad8a2a903dfb83638a09e49a77595610bc193610f25575b50505192839283602090939291936001600160a01b0360408201951681520152565b81610f3b92903d106107905761078681836120ee565b503880610f03565b8351633a020d0160e11b8152600490fd5b610f6b9150833d85116108f4576108e681836120ee565b38610e62565b83516348b905b160e01b8152600490fd5b50610f9b61072061072060fe546001600160a01b031690565b811415610e36565b3461039d57600036600319011261039d5760206103bd613664565b3461039d57600036600319011261039d5760206001600160a01b0360fe5416604051908152f35b3461039d57600036600319011261039d57610ffe611fc7565b611006612e76565b600160ff1960ca54161760ca557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461039d57602036600319011261039d577f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f9602060043561107e611fc7565b8060fc55604051908152a1005b3461039d57600036600319011261039d576001600160a01b036020816101045416916065541660246040518094819363b3596f0760e01b835260048301525afa90811561079757610467916108bd916000916110f0575b506110eb613924565b6134c2565b611108915060203d81116108f4576108e681836120ee565b386110e2565b3461039d57600036600319011261039d5760206001600160a01b0360985416604051908152f35b3461039d57600036600319011261039d576101005461010154604080516001600160801b038085168252608094851c602083015283169181019190915290821c6060820152f35b3461039d57600060408060031936011261132857600435906024356111a081610511565b6111a8612e76565b6111b0613a52565b6001600160a01b0392848460ff5416803b15611328578190600486518094819363138cc18f60e01b83525af1801561079757611315575b507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d761121282612488565b9461122586826065541630903390612f8d565b61122f8385612ec9565b8451868152602081019390935292909216913391604090a361125882611253613924565b612126565b60fc54106113055782611277610720610102546001600160a01b031690565b6065546001600160a01b031690803b1561130157835163617ba03760e01b81526001600160a01b0392909216600483015260248201859052306044830152600060648301529094859160849183915af192831561079757610467936112ee575b506112e0613b68565b519081529081906020820190565b806107a96112fb926120b9565b386112d7565b8280fd5b516324d758c360e21b8152600490fd5b611321909591956120b9565b93386111e7565b5080fd5b3461039d576000806003193601126104f057604051908060375461134f81612069565b808552916001918083169081156104c65750600114611378576104678561045b818703826120ee565b9250603783527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8284106113bb57505050810160200161045b8261046761044b565b805460208587018101919091529093019281016113a0565b3461039d57608036600319011261039d576113ec611fc7565b7f37f0489f29f6e60f68be54709fc0686e4fbf0ff44b70be0b5be1eebb17c9953f6004356114198161261d565b61010080546001600160801b0319166001600160801b038316179055602435906114428261261d565b61010080546001600160801b0316608084901b6001600160801b031916179055610bc16044356114718161261d565b61010180546001600160801b0319166001600160801b0383161790556064359061149a8261261d565b61010180546001600160801b0316608084901b6001600160801b0319161790556114c38461261d565b6114cc8561261d565b6114d58161261d565b6114de8261261d565b604080516001600160801b039586168152958516602087015290841690850152909116606083015281906080820190565b606090600319011261039d57600435906024359060443561152f81610511565b90565b3461039d576115403661150f565b505061154a613664565b61157261156a6115618461155c613924565b61317c565b60fd549061332e565b612710900490565b106115fb5760206115d491611593610720610102546001600160a01b031690565b606554604051631a4ca37b60e21b81526001600160a01b03909116600482015260248101929092523060448301529092839190829060009082906064820190565b03925af18015610797576115e457005b61078e9060203d81116108f4576108e681836120ee565b604051635276dbb960e01b8152600490fd5b3461039d57604036600319011261039d5760043561162a81610511565b60243590336000526034602052611658816040600020906001600160a01b0316600052602052604060002090565b549180831061166d576106089203903361230a565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608490fd5b3461039d57604036600319011261039d5761054c6004356116e081610511565b60243590336121e6565b3461039d57600036600319011261039d5760206001600160a01b0360ff5416604051908152f35b3461039d57602036600319011261039d5760206103bd600435612488565b606090600319011261039d576004359060243561174b81610511565b9060443561152f81610511565b3461039d576117663661172f565b906000928391611774612e76565b61177c613a52565b6001600160a01b038060ff5416803b1561189157849060046040518099819363138cc18f60e01b83525af19384156107975761046796610cfa95611882575b50906117e86117c9856124ca565b878184819a1695863303611844575b50506117e387613341565b613189565b60408051858152602081018890529184169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db9190819081015b0390a461183f6107206107206065546001600160a01b031690565b6132bb565b868152603460209081526040918290203360009081529152205460018101156117d85761187b916118749161317c565b338361230a565b81386117d8565b61188b906120b9565b386117bb565b8480fd5b3461039d576118a33661172f565b919060009283916118b2612e76565b6118ba613a52565b6001600160a01b038060ff5416803b1561189157849060046040518099819363138cc18f60e01b83525af19384156107975761046796610cfa956119aa575b5090858185169283330361196c575b5061192c6119158261246a565b9788966119238815156132f4565b6117e388613341565b6040805186815260208101929092529184169133917ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db9181908101611824565b83815260346020908152604091829020336000908152915220546001810115611908576119a39161199c9161317c565b338661230a565b8538611908565b6119b3906120b9565b386118f9565b3461039d576000806003193601126104f0576119d3611fc7565b6119e9610720610102546001600160a01b031690565b611a016107206107206065546001600160a01b031690565b60405163095ea7b360e01b8082526001600160a01b03841660048301526000196024830152602093919290919084908490604490829089905af191821561079757611a92938593611ae7575b50611a64610720610103546001600160a01b031690565b90866040518096819582948352600483019190916001600160a01b0360408201931681526020600019910152565b03925af1801561079757611ac9575b827fba5bb3f899c7a3edcc9ff9d46c4e08449c6a608b6f8254132bc5af4898645cbc8180a180f35b81611adf92903d106107905761078681836120ee565b503880611aa1565b611afd90843d86116107905761078681836120ee565b5038611a4d565b3461039d57602036600319011261039d576004356001600160a01b038060ff541690813314159081611bf0575b506107b55781158015611bdf575b611bcd57803b1561039d576000809160046040518094819363138cc18f60e01b83525af180156107975760009260209261075e92611bba575b50611b8f610720610103546001600160a01b031690565b60405163a9059cbb60e01b815233600482015260248101929092529093849283919082906044820190565b806107a9611bc7926120b9565b38611b78565b604051630e25379960e21b8152600490fd5b50611be933613827565b8211611b3f565b905060fe541633141538611b31565b3461039d57602036600319011261039d57611c1b600435610511565b60206103bd611c28613990565b612437565b3461039d57602036600319011261039d5760206103bd600435612437565b3461039d57602036600319011261039d5760206103bd600435611c6d81610511565b6139b8565b3461039d57602036600319011261039d577f52d81611b2e2e74037271caa673fe82efa363a106c27d6373566a950d2be73fc60206001600160a01b03600435611cba81610511565b611cc2611fc7565b16806001600160601b0360a01b60ff54161760ff55604051908152a1005b3461039d57602036600319011261039d5760206103bd611c28600435611c6d81610511565b3461039d57602036600319011261039d577fbd325305afd7728b65bc6a18a2ad623494a5ee4e3f31aad475ddb77d8e70717b60206001600160a01b03600435611d4d81610511565b611d55611fc7565b16806001600160601b0360a01b60fe54161760fe55604051908152a1005b3461039d57600036600319011261039d57602060fc54604051908152f35b3461039d57604036600319011261039d576020611ded600435611db381610511565b6001600160a01b0360243591611dc883610511565b16600052603483526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b3461039d57600036600319011261039d57602460206001600160a01b036101035416604051928380926370a0823160e01b82523060048301525afa90811561079757610467916108bd91600091611e57575b50611e51613664565b9061376c565b611e6f915060203d81116108f4576108e681836120ee565b38611e48565b3461039d57602036600319011261039d57600435611e9281610511565b611e9a611fc7565b6001600160a01b03811615611eb25761078e9061201f565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b3461039d57611f143661150f565b5050611f2281611253613924565b60fc5410611fb557611f40610720610102546001600160a01b031690565b90611f536065546001600160a01b031690565b823b1561039d5760405163617ba03760e01b81526001600160a01b03919091166004820152602481019190915230604482015260006064820181905290918290608490829084905af1801561079757611fa857005b806107a961078e926120b9565b6040516324d758c360e21b8152600490fd5b6001600160a01b03609854163303611fdb57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b609854906001600160a01b0380911691826001600160601b0360a01b821617609855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b90600182811c92168015612099575b602083101461208357565b634e487b7160e01b600052602260045260246000fd5b91607f1691612078565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116120cd57604052565b6120a3565b6040810190811067ffffffffffffffff8211176120cd57604052565b90601f8019910116810190811067ffffffffffffffff8211176120cd57604052565b634e487b7160e01b600052601160045260246000fd5b9190820180921161085b57565b1561213a57565b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b1561219257565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b91906001600160a01b03908184169283156122b757612295827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef946122b2941696612232881515612133565b61227b84612253836001600160a01b03166000526033602052604060002090565b546122608282101561218b565b03916001600160a01b03166000526033602052604060002090565b556001600160a01b03166000526033602052604060002090565b6122a0828254612126565b90556040519081529081906020820190565b0390a3565b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b906001600160a01b03918281169283156123e657821693841561239657806123857f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259461236d6122b2956001600160a01b03166000526034602052604060002090565b906001600160a01b0316600052602052604060002090565b556040519081529081906020820190565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b60355480612443575090565b9061152f91612450613924565b915b8181029181830414901517821515161561039d570490565b60355480612476575090565b61152f91612482613924565b90612452565b60355480612494575090565b61152f916124a0613924565b905b9190918281029281840414901517811515161561039d57600190600019830104019015150290565b603554806124d6575090565b9061152f916124e3613924565b916124a2565b156124f057565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b604051906101e0820182811067ffffffffffffffff8211176120cd57604052565b67ffffffffffffffff81116120cd57601f01601f191660200190565b9291926125958261256d565b916125a360405193846120ee565b82948184528183011161039d578281602093846000960137010152565b51906125cb82610511565b565b9081602091031261039d575161152f81610511565b6040513d6000823e3d90fd5b919082602091031261039d576040516020810181811067ffffffffffffffff8211176120cd5760405291518252565b6001600160801b0381160361039d57565b51906125cb8261261d565b519064ffffffffff8216820361039d57565b519061ffff8216820361039d57565b6101e08183031261039d5761267761267061254c565b92826125ee565b82526126856020820161262e565b60208301526126966040820161262e565b60408301526126a76060820161262e565b60608301526126b86080820161262e565b60808301526126c960a0820161262e565b60a08301526126da60c08201612639565b60c08301526126eb60e0820161264b565b60e08301526101006126fe8183016125c0565b908301526101206127108183016125c0565b908301526101406127228183016125c0565b908301526101606127348183016125c0565b9083015261018061274681830161262e565b908301526101a061275881830161262e565b9083015261276a6101c080920161262e565b9082015290565b9081602091031261039d5751801515810361039d5790565b9391926127ae6127b6926127bd9561279f612b2d565b6127a7612b50565b3691612589565b923691612589565b9083612b71565b610105805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0393841690811782556127f290610720565b92604051809463026b1d5f60e01b825281600460209788935afa90811561079757612843918391600091612ab0575b50166001600160a01b0361010291166001600160601b0360a01b825416179055565b61288e6101029361285e61072086546001600160a01b031690565b6040516335ea6a7560e01b81526001600160a01b0390921660048301526101e09283918391829081906024820190565b03915afa908115610797576004946128ea6128ca6107206101006128f796610720968d99600092612a83575b505001516001600160a01b031690565b6001600160a01b0361010391166001600160601b0360a01b825416179055565b546001600160a01b031690565b604051631f94a27560e31b815293849182905afa80156107975761293f92600091612a56575b50166001600160a01b0361010491166001600160601b0360a01b825416179055565b612955610720610103546001600160a01b031690565b9061296a61072082546001600160a01b031690565b60405163095ea7b360e01b8082526001600160a01b039290921660048201526000196024820152928490849060449082906000905af191821561079757612a0e938593612a39575b506129df6107206129d16107206107206065546001600160a01b031690565b92546001600160a01b031690565b6040519283526001600160a01b0316600483015260001960248301529092839190829060009082906044820190565b03925af1801561079757612a20575050565b81612a3692903d106107905761078681836120ee565b50565b612a4f90843d86116107905761078681836120ee565b50386129b2565b612a769150853d8711612a7c575b612a6e81836120ee565b8101906125cd565b3861291d565b503d612a64565b612aa29250803d10612aa9575b612a9a81836120ee565b81019061265a565b38806128ba565b503d612a90565b612ac79150873d8911612a7c57612a6e81836120ee565b38612821565b15612ad457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b612b4760ff60005460081c16612b4281612acd565b612acd565b6125cb3361201f565b612b6560ff60005460081c16612b4281612acd565b60ff1960ca541660ca55565b909291612b8960ff60005460081c16612b4281612acd565b835167ffffffffffffffff81116120cd57612bae81612ba9603654612069565b612caa565b602080601f8311600114612c1457509080612beb93926125cb9697600092612c09575b50508160011b916000199060031b1c191617603655612d8c565b6001600160a01b03166001600160601b0360a01b6065541617606555565b015190503880612bd1565b90601f19831696612c4760366000527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b890565b926000905b898210612c92575050918391600193612beb96956125cb999a10612c79575b505050811b01603655612d8c565b015160001960f88460031b161c19169055388080612c6b565b80600185968294968601518155019501930190612c4c565b601f8111612cb6575050565b600090603682527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8906020601f850160051c83019410612d11575b601f0160051c01915b828110612d0657505050565b818155600101612cfa565b9092508290612cf1565b601f8111612d27575050565b600090603782527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae906020601f850160051c83019410612d82575b601f0160051c01915b828110612d7757505050565b818155600101612d6b565b9092508290612d62565b90815167ffffffffffffffff81116120cd57612db281612dad603754612069565b612d1b565b602080601f8311600114612dee5750819293600092612de3575b50508160011b916000199060031b1c191617603755565b015190503880612dcc565b90601f19831694612e2160376000527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae90565b926000905b878210612e5e575050836001959610612e45575b505050811b01603755565b015160001960f88460031b161c19169055388080612e3a565b80600185968294968601518155019501930190612e26565b60ff60ca5416612e8257565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9081602091031261039d575190565b906001600160a01b038216918215612f48576035549082820180921161085b57612f09916035556001600160a01b03166000526033602052604060002090565b80549082820180921161085b576000927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209255604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648201929092526125cb91612fd982608481015b03601f1981018452836120ee565b61303d565b15612fe557565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6001600160a01b03169060405190613054826120d2565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b156130cb57600082819282876130a69796519301915af16130a0613110565b90613140565b805190816130b357505050565b826125cb936130c6938301019101612771565b612fde565b60405162461bcd60e51b815260048101859052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b3d1561313b573d906131218261256d565b9161312f60405193846120ee565b82523d6000602084013e565b606090565b9091901561314c575090565b81511561315c5750805190602001fd5b60405162461bcd60e51b815290819061317890600483016103c5565b0390fd5b9190820391821161085b57565b6001600160a01b03811690811561326c576131b7816001600160a01b03166000526033602052604060002090565b5483811061321c57837fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926132076000966122b29403916001600160a01b03166000526033602052604060002090565b556108bd6132178260355461317c565b603555565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b60405163a9059cbb60e01b60208201526001600160a01b03909216602483015260448201929092526125cb91612fd98260648101612fcb565b156132fb57565b60405162461bcd60e51b815260206004820152600b60248201526a5a45524f5f41535345545360a81b6044820152606490fd5b8181029291811591840414171561085b57565b613349613664565b61335b61156a6115618461155c613924565b106115fb57602061337c91611593610720610102546001600160a01b031690565b03925af180156107975761338d5750565b612a369060203d81116108f4576108e681836120ee565b6133ac613924565b81810180911161085b5760fc5410611fb5576133d4610720610102546001600160a01b031690565b906133e76065546001600160a01b031690565b823b1561039d5760405163617ba03760e01b81526001600160a01b03919091166004820152602481019190915230604482015260006064820181905290918290608490829084905af180156107975761343d5750565b806107a96125cb926120b9565b1561039d57565b600160801b6000198183098260801b918280831092039180830392146134b5576305f5e100908282111561039d577facbe0e98f503f8881186e60dbb7f727bf36b7213ee9f5a78c767074b22e90e21940990828211900360f81b910360081c170290565b50506305f5e10091500490565b90600019818309818302918280831092039180830392146134b5576305f5e100908282111561039d577facbe0e98f503f8881186e60dbb7f727bf36b7213ee9f5a78c767074b22e90e21940990828211900360f81b910360081c170290565b6c0c9f2c9cd04674edea400000009160001983830992808302928380861095039480860395146135a85790829161355986841161344a565b0981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505091506135b782151561344a565b0490565b9060001981830981830291828083109203918083039214613623576c0c9f2c9cd04674edea40000000908282111561039d577f7d33c22789773a07feda8b6f0930e26fa397c439f1d5cf4b2eb27d7306d2dc99940990828211900360e21b9103601e1c170290565b50506c0c9f2c9cd04674edea4000000091500490565b909160001983830992808302928380861095039480860395146135a85790829161355986841161344a565b60009061367c61072060fe546001600160a01b031690565b6001600160a01b0390818116613700575b506136a361072060ff546001600160a01b031690565b9081166136ad5750565b9160206004929360405193848092632578b69f60e21b82525afa9081156107975761152f926000926136e0575b50612126565b6136f991925060203d81116108f4576108e681836120ee565b90386136da565b604051632578b69f60e21b8152919350602090829060049082905afa90811561079757600091613733575b50913861368d565b61374b915060203d81116108f4576108e681836120ee565b3861372b565b9190916001600160801b038080941691160191821161085b57565b8161380f57505060005b610100546001600160801b038082166c0c9f2c9cd04674edea400000009381850394851161085b57818111156137e35761152f946137ba6137dc936137bf9361317c565b613521565b6137d361010154948486169060801c613751565b9360801c6135bb565b9116612126565b61152f9450613806926137ff610101546001600160801b031690565b1690613639565b9060801c612126565b81810180911161085b5761382291613521565b613776565b6001600160a01b039061384e816001600160a01b0316600052610106602052604060002090565b549060405190632578b69f60e21b8252816004816020968794165afa90811561079757600091613907575b508181116138ff5761388a9161317c565b906138a1610720610103546001600160a01b031690565b6040516370a0823160e01b8152306004820152908290829060249082905afa918215610797576000926138e2575b5050808210156138dd575090565b905090565b6138f89250803d106108f4576108e681836120ee565b38806138cf565b505050600090565b61391e9150833d85116108f4576108e681836120ee565b38613879565b602460206001600160a01b036101035416604051928380926370a0823160e01b82523060048301525afa90811561079757600091613972575b50613966613664565b810180911161085b5790565b61398a915060203d81116108f4576108e681836120ee565b3861395d565b60fc5461399b613924565b6000828210156139b25750810390811161085b5790565b91505090565b6139c0613924565b6139c8613664565b6127109081810291818304149015171561085b5760fd54908115613a3c5704600081831115613a2a5750810390811161085b576001600160a01b0390915b166000526033602052613a1d60406000205461246a565b90808210156138dd575090565b90506001600160a01b03915091613a06565b634e487b7160e01b600052601260045260246000fd5b613a68610720610103546001600160a01b031690565b613aae613a8061072060ff546001600160a01b031690565b6040516370a0823160e01b8082526001600160a01b0390921660048201526020928390829081906024820190565b0381875afa918215610797578391600093613b49575b5060405190815230600482015293849060249082905afa908115610797576000937f6398cf9a29f8130777c54d3d2c061f37c691879a0c04755d9e5e6eb66705ee76938593613b2a575b505060408051918252602082019290925290819081015b0390a2565b613b41929350803d106108f4576108e681836120ee565b903880613b0e565b613b61919350823d84116108f4576108e681836120ee565b9138613ac4565b613b7e610720610103546001600160a01b031690565b613b96613a8061072060ff546001600160a01b031690565b0381875afa918215610797578391600093613c11575b5060405190815230600482015293849060249082905afa908115610797576001937f6398cf9a29f8130777c54d3d2c061f37c691879a0c04755d9e5e6eb66705ee7693600093613b2a5750506040805191825260208201929092529081908101613b25565b613c29919350823d84116108f4576108e681836120ee565b9138613bac56fea164736f6c6343000812000a';

type DnGmxSeniorVaultMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxSeniorVaultMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxSeniorVaultMock__factory extends ContractFactory {
  constructor(...args: DnGmxSeniorVaultMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DnGmxSeniorVaultMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DnGmxSeniorVaultMock__factory {
    return super.connect(runner) as DnGmxSeniorVaultMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxSeniorVaultMockInterface {
    return new Interface(_abi) as DnGmxSeniorVaultMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DnGmxSeniorVaultMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DnGmxSeniorVaultMock;
  }
}
