/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxBatchingManagerGlp,
  DnGmxBatchingManagerGlpInterface,
} from '../../../contracts/vaults/DnGmxBatchingManagerGlp';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositCapBreached',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoAssetBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'totalAssetsDeposited',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'targetAssetCap',
        type: 'uint256',
      },
    ],
    name: 'TargetAssetCapBreached',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'totalAssets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'claimer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetsReceived',
        type: 'uint256',
      },
    ],
    name: 'ClaimedAndRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'DepositCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'partialGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'partialShareAmount',
        type: 'uint256',
      },
    ],
    name: 'PartialBatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newTargeAssetCap',
        type: 'uint256',
      },
    ],
    name: 'TargetAssetCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minGlpDepositThreshold',
        type: 'uint256',
      },
    ],
    name: 'ThresholdsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'assetBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'claimAndRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpReceived',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'sGlpToDeposit',
        type: 'uint128',
      },
    ],
    name: 'executeBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minGlpDepositThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundAssetBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalAssets',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManagerGlp.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpDeposited',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundSharesMinted',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_depositCap',
        type: 'uint256',
      },
    ],
    name: 'setDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_targetAssetCap',
        type: 'uint256',
      },
    ],
    name: 'setTargetAssetCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minGlpDepositThreshold',
        type: 'uint256',
      },
    ],
    name: 'setThresholds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDnGmxBatchingManager',
        name: '_usdcBatchingManager',
        type: 'address',
      },
    ],
    name: 'setUsdcBatchingManager',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'targetAssetCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'assetBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManagerGlp.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundSharesMinted',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpDeposited',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundAssetBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080806040523461001657611af1908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163091d97dd14611407575080630ba36dcd146113785780631459457a14611096578063385c5f62146110495780633f95513114610ffc57806344e805bb14610fdd5780634968856c14610c565780635157ced514610bb75780635c975abb14610b9357806362a19c8414610b5057806369026e8814610add5780636e553f651461062c578063715018a6146105cf578063748747e61461056257806386651203146105155780638a19c8bc146104f65780638d100017146104bd5780638da5cb5b1461049557806395693f261461046f578063a8c775f714610450578063aa88fdc314610428578063aad3ec96146103ff578063ab504ad5146103d2578063aced1661146103aa578063ae4127861461038b578063bf9571f1146102f6578063c108a970146102d7578063cd88e55814610294578063dae115f61461022f578063dbd5edc71461020c5763f2fde38b1461017857600080fd5b3461020857602036600319011261020857610191611423565b9161019a61143e565b6001600160a01b038316156101b657836101b384611496565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461022b578160031936011261022b576020906099549051908152f35b5080fd5b503461020857602036600319011261020857918192816020845161025281611572565b828152015235815260a76020522081519061026c82611572565b546001600160801b0390602082821693848152019060801c8152835192835251166020820152f35b50503461022b57602036600319011261022b576001600160801b036001826020946001600160a01b036102c5611423565b16815260a68652200154169051908152f35b50503461022b578160031936011261022b5760209060a4549051908152f35b50903461020857826003193601126102085761031061143e565b60206001600160a01b0392604484609d5416946098541691868551968794859363095ea7b360e01b855284015260001960248401525af19081156103825750610357575080f35b6103779060203d811161037b575b61036f818361158e565b8101906115cf565b5080f35b503d610365565b513d84823e3d90fd5b50503461022b578160031936011261022b5760209060a3549051908152f35b50503461022b578160031936011261022b576020906001600160a01b03609754169051908152f35b50503461022b57602036600319011261022b576020906103f86103f3611423565b61186a565b9051908152f35b50503461022b57366003190112610425576101b361041b611423565b602435903361193e565b80fd5b50503461022b578160031936011261022b576020906001600160a01b03609854169051908152f35b50503461022b578160031936011261022b5760209060a5549051908152f35b50503461022b57602036600319011261022b576020906103f8610490611423565b611705565b50503461022b578160031936011261022b576020906001600160a01b03603354169051908152f35b50503461022b578160031936011261022b5760809060a2549060a3549060a4549060a55492815194855260208501528301526060820152f35b50503461022b578160031936011261022b5760209060a2549051908152f35b5034610208576020366003190112610208577f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f991602091359061055661143e565b8160995551908152a180f35b50503461022b57602036600319011261022b5760207f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e916001600160a01b036105a9611423565b6105b161143e565b1690816001600160601b0360a01b609754161760975551908152a180f35b83346104255780600319360112610425576105e861143e565b806001600160a01b036033546001600160601b0360a01b8116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346102085781600319360112610208578035906024918235936001600160a01b0392838616809603610ad9576106616115e7565b8215610ac4578515610aaf57609b548310610a9a5760a55494610684848761162b565b60995410610a8b57846098541683519687916278744560e21b8352828560209a8b935afa801561098b578a90610a5c575b6106bf925061162b565b8560a15416908451630ca0ede560e41b815288818681865afa908115610a52578b91610a25575b5087609e541690898c8689518095819363019c8a3b60e11b83528b8301525afa918215610a1b579086918d936109e4575b508a8a609c54168951938480926318160ddd60e01b82525afa9182156109da578d926109a7575b5069d3c21bcecceda100000091828102928184041490151715610995579261076c8b93610772938996611669565b9061162b565b928651928380926312b02af160e31b82525afa90811561098b578a9161095e575b50810390811161094c576107a7858261162b565b90609a5480921161092c5750508590606486609d5416938a865195869485936323b872dd60e01b8552339085015230908401528860448401525af1801561092257610905575b5084865260a6845280862091600183018054906001600160801b039485831692815460a2548110806108fc575b610895575b505060a254905584831690838203610891577f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d495610860836108789561164e565b166001600160801b031982541617905560a55461162b565b60a5558660a25494609d5416958351928352820152a480f35b8980fd5b936108b49192948c5260a78a52868c2054908882169160801c90611669565b908682169182036108f8576108ef916108cf9160801c61164e565b82546001600160801b031660809190911b6001600160801b031916178255565b8891388061081f565b8a80fd5b5084151561081a565b61091b90853d871161037b5761036f818361158e565b50386107ed565b82513d89823e3d90fd5b606495929193945194636cba476560e01b86528501528301526044820152fd5b50634e487b7160e01b88526011825287fd5b90508781813d8311610984575b610975818361158e565b81010312610891575138610793565b503d61096b565b85513d8c823e3d90fd5b634e487b7160e01b8d5260118752858dfd5b9091508a81813d83116109d3575b6109bf818361158e565b810103126109cf5751903861073e565b8c80fd5b503d6109b5565b88513d8f823e3d90fd5b8b809294508193503d8311610a14575b6109fe818361158e565b81010312610a10578590519138610717565b8b80fd5b503d6109f4565b87513d8e823e3d90fd5b90508881813d8311610a4b575b610a3c818361158e565b810103126108f85751386106e6565b503d610a32565b86513d8d823e3d90fd5b508782813d8311610a84575b610a72818361158e565b81010312610891576106bf91516106b5565b503d610a68565b5090516321af65c160e11b8152fd5b60238592519163b80480b160e01b8352820152fd5b60228592519163b80480b160e01b8352820152fd5b60218592519163b80480b160e01b8352820152fd5b8680fd5b50346102085782600319360112610208576001600160a01b03609754163303610b42575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610b2d6115e7565b600160ff19606554161760655551338152a180f35b90516304e1fa9f60e01b8152fd5b83823461022b57602036600319011261022b57356001600160a01b03811680910361022b57610b7d61143e565b6001600160601b0360a01b60a154161760a15580f35b50503461022b578160031936011261022b5760209060ff6065541690519015158152f35b50346102085782600319360112610208576001600160a01b03609754163303610b42576065549060ff821615610c1c575060ff1916606555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b5091903461022b5760209081600319360112610208576001600160801b038435818116808203610fd9576001600160a01b039182609754163303610fc95760655460ff811615610f88575b508115610f715760a55491848316928303610f0d57821115610f6a57905b8382168015610f5a57609b5490858216908282036108915790808794939210610f52575b5082610cef85846116ec565b161115610f4a575b82610d01916116ec565b1660a55582811691610d158360a45461162b565b60a4556098541691858160448a8a89519788948593636e553f6560e01b85528401523060248401525af1928315610f40578793610f11575b50838316928303610ad957908291610d68869460a35461162b565b60a3557f996c81bb856ed13ee8b426c49c5470c8182f6ec9ef1e06745504d5c60bcc65c160a2549485928151908152858a820152a260a55492848416938403610f0d57875260a786528487208054610e1293928690610dc99083831661164e565b16906001600160801b03191617905560a254875260a78652610df285882091825460801c61164e565b81546001600160801b031660809190911b6001600160801b031916179055565b15610e1b578380f35b6060907fc69cec55f6364843f1bd00b1f28399f11345b53d1f2577e1048d34d216932c2760a25492839283885260a78752858820541660a45460a3549087519283528883015286820152a28360a4558360a3556000198114610efa5760010160a2556065549360ff851615610ec257507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa929360ff191660655551338152a1803880808380f35b82606492519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b634e487b7160e01b845260118552602484fd5b8780fd5b9092508581813d8311610f39575b610f29818361158e565b81010312610ad957519138610d4d565b503d610f1f565b85513d89823e3d90fd5b915081610cf7565b935038610ce3565b8551637ad2d1db60e11b81528990fd5b5080610cbf565b845163b80480b160e01b8152808901869052602490fd5b600190610f936115e7565b60ff1916176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258868651338152a138610ca1565b84516304e1fa9f60e01b81528890fd5b8580fd5b50503461022b578160031936011261022b57602090609b549051908152f35b5034610208576020366003190112610208577fe926d7299feb4b516b5458f5eb2f94d6af102302a936cb45f0b8d287b502a21b91602091359061103d61143e565b81609b5551908152a180f35b5034610208576020366003190112610208577f5bef582ebcec9e1d9d25b394bd74fc6e24eb636dbfd45ea67b1056fedd88fc4991602091359061108a61143e565b81609a5551908152a180f35b5090346102085760a0366003190112610208578135906001600160a01b038083168093036113745760243590808216809203610fd95760443593818516809503610ad957606435828116809103610f0d57608435928084168094036113705788549760ff8960081c161595868097611363575b801561134c575b156112f25760ff198a81166001178c5599876112e1575b5061114160ff8c5460081c1661113c816114e0565b6114e0565b61114a33611496565b6111768b549a60ff8c60081c1690611161826114e0565b61116a826114e0565b606554166065556114e0565b6001600160601b0360a01b9485609d541617609d558885609e541617609e558460a054161760a055865197633c5103f760e11b895260209889818481855afa908c82156112d6578b93928692906112b9575b501686609c541617609c5588519283809263fbfa77cf60e01b82525afa9081156112af57928593928995927f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e97948d91611282575b501682609f541617609f5581609854161760985560975416176097558451908152a1600160a25561124c578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a13880808380f35b6112a29150873d89116112a8575b61129a818361158e565b8101906115b0565b3861121d565b503d611290565b87513d8c823e3d90fd5b6112d09150843d86116112a85761129a818361158e565b386111c8565b8a51903d90823e3d90fd5b61ffff1916610101178b5538611127565b875162461bcd60e51b8152602081840152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156111105750600160ff8b1614611110565b50600160ff8b1610611109565b8880fd5b8480fd5b50503461022b57602036600319011261022b57806060926001600160a01b0361139f611423565b828480516113ac81611540565b828152826020820152015216815260a660205220908080516113cd81611540565b6001845494858352015490602081016001600160801b039384928385168352019260801c8352845195865251166020850152511690820152f35b84903461022b578160031936011261022b57602090609a548152f35b600435906001600160a01b038216820361143957565b600080fd5b6001600160a01b0360335416330361145257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603354906001600160a01b0380911691826001600160601b0360a01b821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156114e757565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6060810190811067ffffffffffffffff82111761155c57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761155c57604052565b90601f8019910116810190811067ffffffffffffffff82111761155c57604052565b9081602091031261143957516001600160a01b03811681036114395790565b90816020910312611439575180151581036114395790565b60ff606554166115f357565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9190820180921161163857565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b038080941691160191821161163857565b9160001982840992828102928380861095039480860395146116de57848311156114395782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505080925015611439570490565b6001600160801b03918216908216039190821161163857565b906117196117123361186a565b333361193e565b6001600160a01b0380609854169060408051916370a0823160e01b83523360048401526020958684602481885afa93841561185f57600094611830575b508315611825576000916064889285519485938492635d043b2960e11b845289600485015216988960248401523360448401525af190811561181a576000916117cd575b5090817f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c5929682519485528401523392a3565b908682813d8311611813575b6117e3818361158e565b810103126104255750517f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c561179a565b503d6117d9565b82513d6000823e3d90fd5b506000955050505050565b90938782813d8311611858575b611847818361158e565b810103126104255750519238611756565b503d61183d565b83513d6000823e3d90fd5b906001600160a01b0360009216825260a660205260408220916040519261189084611540565b6040600182549283875201546001600160801b039283821696602081019288845260801c9384910152829660a25482109081611934575b506118d4575b5050505050565b8461191093949597505260a76020526020846040882092604051936118f885611572565b54938285169485825260801c93849101525116611669565b9182169182036119305761192592935061162b565b9038808080806118cd565b8380fd5b90501515386118c7565b909291926001600160a01b03809116918215611acb578415611ab25781169060009482865260209160a683526040908188206001810190898254916001600160801b0392838116878260801c93549460a254861080611aa9575b611a64575b50505050905081861691868303610a10578116828110611a4d57508692610df28c95936119c9936116ec565b60985416604484518094819363a9059cbb60e01b83528b60048401528860248401525af18015611a43577f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a9596979850611a26575b5051908152a3565b611a3c90843d861161037b5761036f818361158e565b5038611a1e565b82513d8a823e3d90fd5b6024908651906307f885ff60e21b82526004820152fd5b611a7f9395815260a78c522054908582169160801c90611669565b8381169081036109cf57611a929161164e565b906001600160801b0319168355803880878e61199d565b50821515611998565b60405163b80480b160e01b815260116004820152602490fd5b60405163b80480b160e01b815260106004820152602490fdfea164736f6c6343000812000a';

type DnGmxBatchingManagerGlpConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxBatchingManagerGlpConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxBatchingManagerGlp__factory extends ContractFactory {
  constructor(...args: DnGmxBatchingManagerGlpConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxBatchingManagerGlp> {
    return super.deploy(overrides || {}) as Promise<DnGmxBatchingManagerGlp>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxBatchingManagerGlp {
    return super.attach(address) as DnGmxBatchingManagerGlp;
  }
  override connect(signer: Signer): DnGmxBatchingManagerGlp__factory {
    return super.connect(signer) as DnGmxBatchingManagerGlp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxBatchingManagerGlpInterface {
    return new utils.Interface(_abi) as DnGmxBatchingManagerGlpInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxBatchingManagerGlp {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxBatchingManagerGlp;
  }
}
