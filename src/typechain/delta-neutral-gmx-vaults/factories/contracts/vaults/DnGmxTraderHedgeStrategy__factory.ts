/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  DnGmxTraderHedgeStrategy,
  DnGmxTraderHedgeStrategyInterface,
} from '../../../contracts/vaults/DnGmxTraderHedgeStrategy';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'traderOIHedgeBps',
        type: 'uint256',
      },
    ],
    name: 'InvalidTraderOIHedgeBps',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'btcTraderOIHedge',
        type: 'int128',
      },
      {
        internalType: 'int128',
        name: 'ethTraderOIHedge',
        type: 'int128',
      },
    ],
    name: 'InvalidTraderOIHedges',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'msgSender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'authorisedKeeperAddress',
        type: 'address',
      },
    ],
    name: 'OnlyKeeperAllowed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldKeeper',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'traderOIHedgeBps',
        type: 'uint256',
      },
    ],
    name: 'TraderOIHedgeBpsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int256',
        name: 'btcTraderOIHedge',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'ethTraderOIHedge',
        type: 'int256',
      },
    ],
    name: 'TraderOIHedgesUpdated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'btcTraderOIHedge',
    outputs: [
      {
        internalType: 'int128',
        name: '',
        type: 'int128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ethTraderOIHedge',
    outputs: [
      {
        internalType: 'int128',
        name: '',
        type: 'int128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'glp',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'glpManager',
    outputs: [
      {
        internalType: 'contract IGlpManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gmxVault',
    outputs: [
      {
        internalType: 'contract IVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
      {
        internalType: 'contract IVault',
        name: '_gmxVault',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '_juniorVault',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_glp',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_weth',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_wbtc',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'juniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: '_btcTraderOIHedge',
        type: 'int128',
      },
      {
        internalType: 'int128',
        name: '_ethTraderOIHedge',
        type: 'int128',
      },
    ],
    name: 'overrideTraderOIHedges',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_traderOIHedgeBps',
        type: 'uint16',
      },
    ],
    name: 'setTraderOIHedgeBps',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'setTraderOIHedges',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'traderOIHedgeBps',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wbtc',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'weth',
    outputs: [
      {
        internalType: 'contract IERC20Metadata',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '';

type DnGmxTraderHedgeStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxTraderHedgeStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxTraderHedgeStrategy__factory extends ContractFactory {
  constructor(...args: DnGmxTraderHedgeStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DnGmxTraderHedgeStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DnGmxTraderHedgeStrategy__factory {
    return super.connect(runner) as DnGmxTraderHedgeStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxTraderHedgeStrategyInterface {
    return new Interface(_abi) as DnGmxTraderHedgeStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DnGmxTraderHedgeStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DnGmxTraderHedgeStrategy;
  }
}
