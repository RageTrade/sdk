/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxBatchingManager,
  DnGmxBatchingManagerInterface,
} from '../../../contracts/vaults/DnGmxBatchingManager';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoUsdcBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchStake',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'claimer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetsReceived',
        type: 'uint256',
      },
    ],
    name: 'ClaimedAndRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThresholdGmx',
        type: 'uint256',
      },
    ],
    name: 'ThresholdsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'VaultDeposit',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'claimAndRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpReceived',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'depositUsdc',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVaultGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchStake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalUsdc',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundUsdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract BatchingManagerBypass',
        name: '_bypass',
        type: 'address',
      },
    ],
    name: 'setBypass',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThresholdGmxBps',
        type: 'uint256',
      },
    ],
    name: 'setThresholds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThresholdGmxBps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'usdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'usdcBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpStaked',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundUsdcBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611e58806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638d10001711610104578063ab504ad5116100a2578063cc2a9a5b11610071578063cc2a9a5b14610438578063dae115f61461044b578063e9667336146104ce578063f2fde38b146104e157600080fd5b8063ab504ad514610401578063aced166114610414578063bf9571f114610427578063ca0ede501461042f57600080fd5b806395815788116100de57806395815788146103bf57806399c6d2de146103c8578063aa88fdc3146103db578063aad3ec96146103ee57600080fd5b80638d100017146103575780638da5cb5b1461038757806395693f26146103ac57600080fd5b8063584150751161017157806369026e881161014b57806369026e881461032b578063715018a614610333578063748747e61461033b5780638a19c8bc1461034e57600080fd5b806358415075146103045780635c7f3c711461030d5780635c975abb1461031557600080fd5b806310684667116101ad57806310684667146102a9578063180282b3146102df5780633f955131146102e95780635157ced5146102fc57600080fd5b80630124b05a146101d457806301df331d146101f05780630ba36dcd14610203575b600080fd5b6101dd60fd5481565b6040519081526020015b60405180910390f35b6101dd6101fe366004611b8d565b6104f4565b610276610211366004611bbd565b6040805160608082018352600080835260208084018290529284018190526001600160a01b039490941684526101088252928290208251938401835280548452600101546001600160801b0380821692850192909252600160801b9004169082015290565b60408051825181526020808401516001600160801b039081169183019190915292820151909216908201526060016101e7565b6101dd6102b7366004611bbd565b6001600160a01b0316600090815261010860205260409020600101546001600160801b031690565b6102e761076d565b005b6102e76102f7366004611bda565b61084a565b6102e761088e565b6101dd60fe5481565b6102e76108c1565b60655460ff1660405190151581526020016101e7565b6102e761096c565b6102e7610997565b6102e7610349366004611bbd565b6109a9565b610105546101dd565b61010554610106546101075461036c92919083565b604080519384526020840192909252908201526060016101e7565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101e7565b6101dd6103ba366004611bbd565b6109ff565b610106546101dd565b6101dd6103d6366004611bf3565b610b5d565b60fc54610394906001600160a01b031681565b6102e76103fc366004611c28565b610cda565b6101dd61040f366004611bbd565b610ce9565b60fb54610394906001600160a01b031681565b6102e7610dce565b610107546101dd565b6102e7610446366004611c54565b610e53565b6104a7610459366004611bda565b604080518082019091526000808252602082015250600090815261010960209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b6040805182516001600160801b0390811682526020938401511692810192909252016101e7565b6102e76104dc366004611bbd565b610f80565b6102e76104ef366004611bbd565b610fab565b60006104fe611021565b826105245760405163b80480b160e01b8152602160048201526024015b60405180910390fd5b6001600160a01b03821661054e5760405163b80480b160e01b81526022600482015260240161051b565b610100546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca9190611cd6565b506001600160a01b03821660009081526101086020526040902060018101548154610105546001600160801b03909216918110801561061257506000826001600160801b0316115b156106a4576000818152610109602052604090208054600185015461065691610651916001600160801b0390811691600160801b810482169116611067565b61111b565b60018501805460109061067a908490600160801b90046001600160801b0316611d0e565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060009250505b6101055483556106b38661111b565b6106bd9083611d0e565b6001840180546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790556106f18661111b565b6001600160801b0316610105600201600082825461070f9190611d39565b9091555050610100546101055460408051898152602081018890526001600160a01b03898116941692917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a450505092915050565b60655460ff161561078057610780611136565b60fe54156108405760fe8054600090915560ff5460fc5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af11580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080a9190611cd6565b506040518181527fabf360404ae6ccd945919fc14edb22686b6941aeee15d786c7047e4a0107eba59060200160405180910390a1505b610848611188565b565b61085261136f565b60fd8190556040518181527fe926d7299feb4b516b5458f5eb2f94d6af102302a936cb45f0b8d287b502a21b906020015b60405180910390a150565b60fb546001600160a01b031633146108b9576040516304e1fa9f60e01b815260040160405180910390fd5b610848611136565b6108c9611021565b60fb546001600160a01b031633146108f4576040516304e1fa9f60e01b815260040160405180910390fd5b60fc60009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561094457600080fd5b505af1158015610958573d6000803e3d6000fd5b505050506109646113c9565b610848611537565b60fb546001600160a01b03163314610964576040516304e1fa9f60e01b815260040160405180910390fd5b61099f61136f565b6108486000611574565b6109b161136f565b60fb80546001600160a01b0319166001600160a01b0383169081179091556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e90602001610883565b6000610a143333610a0f33610ce9565b6115c6565b60fc546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a819190611d51565b905080610a915750600092915050565b60fc54604051635d043b2960e11b8152600481018390526001600160a01b0385811660248301523360448301529091169063ba087652906064016020604051808303816000875af1158015610aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0e9190611d51565b60408051838152602081018390529193506001600160a01b0385169133917f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c5910160405180910390a350919050565b6000610b67611021565b60fc546001600160a01b03163314610b925760405163edd7338f60e01b815260040160405180910390fd5b6001600160a01b038416610bbc5760405163b80480b160e01b81526030600482015260240161051b565b82610bdd5760405163b80480b160e01b81526031600482015260240161051b565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190611cd6565b50610c6084848461180b565b9050610c6b8161111b565b6001600160801b031660fe6000828254610c859190611d39565b9091555050604080518481526020810183905233916001600160a01b038716916000917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a49392505050565b610ce53383836115c6565b5050565b6001600160a01b03811660009081526101086020908152604091829020825160608101845281548082526001909201546001600160801b0380821694830194909452600160801b900490921692820183905261010554118015610d595750600081602001516001600160801b0316115b15610dc8578051600090815261010960209081526040918290208251808401909352546001600160801b03808216808552600160801b909204811684840181905292850151610db19361065193919092169190611067565b610dc4906001600160801b031684611d39565b9250505b50919050565b610dd661136f565b60ff5460fc5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610e2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e509190611cd6565b50565b600054610100900460ff1615808015610e735750600054600160ff909116105b80610e8d5750303b158015610e8d575060005460ff166001145b610ef05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161051b565b6000805460ff191660011790558015610f13576000805461ff0019166101001790555b610f1b611914565b610f23611943565b610f31878787878787611972565b8015610f77576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b610f8861136f565b61010480546001600160a01b0319166001600160a01b0392909216919091179055565b610fb361136f565b6001600160a01b0381166110185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161051b565b610e5081611574565b60655460ff16156108485760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161051b565b6000808060001985870985870292508281108382030391505080600014156110a1576000841161109657600080fd5b508290049050611114565b8084116110ad57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b806001600160801b038116811461113157600080fd5b919050565b61113e611ac3565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6101065461119257565b60ff54610104546101065460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af11580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112119190611cd6565b506101045461010654604051636e553f6560e01b815260048101919091523060248201526000916001600160a01b031690636e553f65906044016020604051808303816000875af115801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e9190611d51565b905060405180604001604052806112aa6101056002015461111b565b6001600160801b031681526020016112c18361111b565b6001600160801b039081169091526101058054600090815261010960209081526040918290208551958201518516600160801b029590941694909417909255546101075461010654835191825293810193909352908201839052907fc69cec55f6364843f1bd00b1f28399f11345b53d1f2577e1048d34d216932c279060600160405180910390a26000610107819055610106819055610105805490919061136890611d6a565b9091555050565b6033546001600160a01b031633146108485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051b565b6101075480611404576040517fff57c67200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61010254610100546040516340d3096b60e11b81526001600160a01b03918216600482015260009291909116906381a612d690602401602060405180830381865afa158015611457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147b9190611d51565b905060006114cc60fd546127106114929190611d85565b6114a18464e8d4a51000611d9c565b6114ab9190611d9c565b6114c46127106c0c9f2c9cd04674edea40000000611d9c565b859190611067565b610100549091506114e7906001600160a01b0316848361180b565b6101068190556101055460405190917f48c3ff184c57818bf226589be0a871b387827c42b767756992efc70db2cd0edb9161152a91878252602082015260400190565b60405180910390a2505050565b61153f611021565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861116b3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166115f05760405163b80480b160e01b81526010600482015260240161051b565b806116115760405163b80480b160e01b81526011600482015260240161051b565b6001600160a01b03831660009081526101086020526040902060018101548154610105546001600160801b0380841693600160801b90041691908110801561166257506000836001600160801b0316115b156116c557600081815261010960205260409020805461169c90610651906001600160801b0387811691600160801b810482169116611067565b6116a69084611d0e565b6001860180546fffffffffffffffffffffffffffffffff191690559250505b506116cf8461111b565b6001600160801b0316816001600160801b0316101561170c576040516307f885ff60e21b81526001600160801b038216600482015260240161051b565b6117158461111b565b61171f9082611dbb565b6001840180546001600160801b03928316600160801b02921691909117905560fc5460405163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015611791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b59190611cd6565b50846001600160a01b0316866001600160a01b03167f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a866040516117fb91815260200190565b60405180910390a3505050505050565b6101015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905260009185169063095ea7b3906044016020604051808303816000875af1158015611861573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118859190611cd6565b506101035460405163364e231160e01b81526001600160a01b0386811660048301526024820186905260448201859052600060648301529091169063364e2311906084016020604051808303816000875af11580156118e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190c9190611d51565b949350505050565b600054610100900460ff1661193b5760405162461bcd60e51b815260040161051b90611de3565b610848611b15565b600054610100900460ff1661196a5760405162461bcd60e51b815260040161051b90611de3565b610848611b45565b600054610100900460ff166119995760405162461bcd60e51b815260040161051b90611de3565b60ff80546001600160a01b038089166001600160a01b0319928316179092556101008054888416908316179055610101805486841690831681179091556101038054938816939092169290921790556040805163fbfa77cf60e01b8152905163fbfa77cf916004808201926020929091908290030181865afa158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a479190611e2e565b61010280546001600160a01b03199081166001600160a01b039384161790915560fc8054821685841617905560fb805490911691831691821790556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9060200160405180910390a1505060016101055550505050565b60655460ff166108485760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161051b565b600054610100900460ff16611b3c5760405162461bcd60e51b815260040161051b90611de3565b61084833611574565b600054610100900460ff16611b6c5760405162461bcd60e51b815260040161051b90611de3565b6065805460ff19169055565b6001600160a01b0381168114610e5057600080fd5b60008060408385031215611ba057600080fd5b823591506020830135611bb281611b78565b809150509250929050565b600060208284031215611bcf57600080fd5b813561111481611b78565b600060208284031215611bec57600080fd5b5035919050565b600080600060608486031215611c0857600080fd5b8335611c1381611b78565b95602085013595506040909401359392505050565b60008060408385031215611c3b57600080fd5b8235611c4681611b78565b946020939093013593505050565b60008060008060008060c08789031215611c6d57600080fd5b8635611c7881611b78565b95506020870135611c8881611b78565b94506040870135611c9881611b78565b93506060870135611ca881611b78565b92506080870135611cb881611b78565b915060a0870135611cc881611b78565b809150509295509295509295565b600060208284031215611ce857600080fd5b8151801515811461111457600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001600160801b03808316818516808303821115611d3057611d30611cf8565b01949350505050565b60008219821115611d4c57611d4c611cf8565b500190565b600060208284031215611d6357600080fd5b5051919050565b6000600019821415611d7e57611d7e611cf8565b5060010190565b600082821015611d9757611d97611cf8565b500390565b6000816000190483118215151615611db657611db6611cf8565b500290565b60006001600160801b0383811690831681811015611ddb57611ddb611cf8565b039392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611e4057600080fd5b815161111481611b7856fea164736f6c634300080a000a';

type DnGmxBatchingManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxBatchingManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxBatchingManager__factory extends ContractFactory {
  constructor(...args: DnGmxBatchingManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxBatchingManager> {
    return super.deploy(overrides || {}) as Promise<DnGmxBatchingManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxBatchingManager {
    return super.attach(address) as DnGmxBatchingManager;
  }
  override connect(signer: Signer): DnGmxBatchingManager__factory {
    return super.connect(signer) as DnGmxBatchingManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxBatchingManagerInterface {
    return new utils.Interface(_abi) as DnGmxBatchingManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxBatchingManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxBatchingManager;
  }
}
