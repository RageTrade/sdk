/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxBatchingManager,
  DnGmxBatchingManagerInterface,
} from '../../../contracts/vaults/DnGmxBatchingManager';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositCapBreached',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoUsdcBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchStake',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'claimer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetsReceived',
        type: 'uint256',
      },
    ],
    name: 'ClaimedAndRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'DepositCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'partialGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'partialShareAmount',
        type: 'uint256',
      },
    ],
    name: 'PartialBatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThresholdGmx',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minUsdcConversionAmount',
        type: 'uint256',
      },
    ],
    name: 'ThresholdsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'VaultDeposit',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'claimAndRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpReceived',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'depositUsdc',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVaultGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'usdcAmountToConvert',
        type: 'uint128',
      },
    ],
    name: 'executeBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minUsdcConversionAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rescueFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalUsdc',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpDepositPending',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundSharesMinted',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundUsdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_depositCap',
        type: 'uint256',
      },
    ],
    name: 'setDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThresholdGmxBps',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minUsdcConversionAmount',
        type: 'uint256',
      },
    ],
    name: 'setThresholds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThresholdGmxBps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'usdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'usdcBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpDepositPending',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundSharesMinted',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpStaked',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundUsdcBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461001657611d0b908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630124b05a146114755750806301df331d1461124f5780630ba36dcd146111c0578063106846671461117d5780632eaa4c681461115e5780634968856c14610cd15780635157ced514610c3257806352920587146109ed57806358415075146109ce5780635c975abb146109aa57806369026e88146109375780637146d2f314610918578063715018a6146108ba578063748747e61461084d57806386651203146108005780638a19c8bc146107e15780638d100017146107a05780638da5cb5b1461077857806395693f26146107525780639581578814610733578063aa88fdc31461070b578063aad3ec96146106e2578063ab504ad5146106b5578063aced16611461068d578063ae4127861461066e578063bf9571f1146105d9578063ca0ede50146105ba578063cc2a9a5b146102f5578063dae115f614610290578063dbd5edc71461026d578063e3064a77146102175763f2fde38b1461018357600080fd5b346102135760203660031901126102135761019c6114a7565b916101a56114bd565b6001600160a01b038316156101c157836101be84611515565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346102135780600319360112610213577fd081f5afbf5e2859f2be3d6c573e1cdd6c8fb93b18ec6145427882fe51507b6a91356024356102576114bd565b8160995580609c5582519182526020820152a180f35b50503461028c578160031936011261028c57602090609b549051908152f35b5080fd5b50346102135760203660031901126102135791819281602084516102b3816115f1565b828152015235815260a9602052208151906102cd826115f1565b546001600160801b0390602082821693848152019060801c8152835192835251166020820152f35b50346102135760c03660031901126102135761030f6114a7565b610317611491565b91604435916001600160a01b038084168094036105b657606435928184168094036105b257608435948286168096036105ad5760a435948386168096036105ad5789549760ff8960081c16159889809a6105a0575b8015610589575b1561052f579489948c999460ff9994838c9a958f9a8a6103b68f8f6103e694821994600186831617835561051e575b505460081c166103b18161155f565b61155f565b6103bf33611515565b8d549e8f60081c16906103d18261155f565b6103da8261155f565b6065541660655561155f565b816001600160601b0360a01b971687609d541617609d551685609e541617609e55609f54918186841617609f558560a154161760a15588519283809263fbfa77cf60e01b825260209c8d9516175afa908115610514579088949392918b916104d4575b50948392917f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e96168260a054161760a05581609854161760985560975416176097558451908152a1600160a35561049e578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a18180808380f35b8581939692503d831161050d575b6104ec818361160d565b810103126105095751908382168203610509578793909183610449565b8980fd5b503d6104e2565b87513d8c823e3d90fd5b61ffff1916610101178155386103a2565b8a5162461bcd60e51b8152602081870152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156103735750600160ff821614610373565b50600160ff82161061036c565b600080fd5b8780fd5b8680fd5b50503461028c578160031936011261028c5760209060a7549051908152f35b5090346102135782600319360112610213576105f36114bd565b60206001600160a01b0392604484609d5416946098541691868551968794859363095ea7b360e01b855284015260001960248401525af1908115610665575061063a575080f35b61065a9060203d811161065e575b610652818361160d565b81019061162f565b5080f35b503d610648565b513d84823e3d90fd5b50503461028c578160031936011261028c5760209060a5549051908152f35b50503461028c578160031936011261028c576020906001600160a01b03609754169051908152f35b50503461028c57602036600319011261028c576020906106db6106d66114a7565b61194f565b9051908152f35b50503461028c57366003190112610708576101be6106fe6114a7565b6024359033611b35565b80fd5b50503461028c578160031936011261028c576020906001600160a01b03609854169051908152f35b50503461028c578160031936011261028c5760209060a6549051908152f35b50503461028c57602036600319011261028c576020906106db6107736114a7565b6117d7565b50503461028c578160031936011261028c576020906001600160a01b03603354169051908152f35b50503461028c578160031936011261028c5760a09060a3549060a4549060a55460a6549160a754938151958652602086015284015260608301526080820152f35b50503461028c578160031936011261028c5760209060a3549051908152f35b5034610213576020366003190112610213577f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f99160209135906108416114bd565b81609b5551908152a180f35b50503461028c57602036600319011261028c5760207f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e916001600160a01b036108946114a7565b61089c6114bd565b1690816001600160601b0360a01b609754161760975551908152a180f35b83346107085780600319360112610708576108d36114bd565b60006001600160a01b036033546001600160601b0360a01b8116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461028c578160031936011261028c57602090609c549051908152f35b50346102135782600319360112610213576001600160a01b0360975416330361099c575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610987611647565b600160ff19606554161760655551338152a180f35b90516304e1fa9f60e01b8152fd5b50503461028c578160031936011261028c5760209060ff6065541690519015158152f35b50503461028c578160031936011261028c57602090609a549051908152f35b509034610213578260031936011261021357610a076114bd565b6001600160a01b0391838360ab5416803b1561028c57819060e485518094819363185b800160e11b83528188840152816024840152600160448401526001606484015260016084840152600160a48401528160c48401525af18015610c2857610bfa575b5060aa5482516370a0823160e01b81523083820152602094918216908581602481855afa908115610bf0578791610bc3575b506024868460a054168751928380926340d3096b60e11b8252878a8301525afa908115610bb9578891610b8c575b5060995490612710918203918211610b795792879492610afc610af6610b0294610b3f9a999761193c565b826116c9565b91611a23565b918782609d541692609854169186519788958694859363a9059cbb60e01b85528401602090939291936001600160a01b0360408201951681520152565b03925af1908115610b705750610b53578280f35b81610b6992903d1061065e57610652818361160d565b5038808280f35b513d85823e3d90fd5b634e487b7160e01b895260118652602489fd5b90508681813d8311610bb2575b610ba3818361160d565b810103126105ad575138610acb565b503d610b99565b86513d8a823e3d90fd5b90508581813d8311610be9575b610bda818361160d565b810103126105ad575138610a9d565b503d610bd0565b85513d89823e3d90fd5b67ffffffffffffffff8195929511610c155782529238610a6b565b634e487b7160e01b825260418552602482fd5b83513d87823e3d90fd5b50346102135782600319360112610213576001600160a01b0360975416330361099c576065549060ff821615610c97575060ff1916606555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b509134610708576020918260031936011261028c578335936001600160801b0380861680870361115a576001600160a01b03968760975416330361114a5760655460ff811615611109575b5081156110f25760a754918383169283036105b6578211156110eb57905b8282169788156110d857609c5484811681810361103957808a9b9a999a106110d0575b5084610d698585611b1c565b1611156110c7575b83610d7c8484611b1c565b1660a7558060a0541681609e54169087519a8b80926340d3096b60e11b8252848a83015260249d8e915afa9081156110bd578a91611090575b508585169064e8d4a510009081810291818304149015171561107e576099549061271091820391821161106c57610af6610df4949392610afc9261193c565b918483169283036110395782918891610e118b969560a65461168b565b60a6557f48c3ff184c57818bf226589be0a871b387827c42b767756992efc70db2cd0edb8960a3549281519081528686820152a26098541660448b89519687938492636e553f6560e01b8452878c85015230908401525af1928315610bb957889361103d575b508383169283036105b257908291610e92879460a55461168b565b60a5557f996c81bb856ed13ee8b426c49c5470c8182f6ec9ef1e06745504d5c60bcc65c160a3549485928151908152858b820152a260a7549284841693840361103957885260a987528588208054610f3c93928690610ef3908383166116ae565b16906001600160801b03191617905560a354885260a98752610f1c86892091825460801c6116ae565b81546001600160801b031660809190911b6001600160801b031916179055565b15610f45578480f35b6060907fc69cec55f6364843f1bd00b1f28399f11345b53d1f2577e1048d34d216932c2760a35492839283895260a98852868920541660a65460a5549088519283528983015287820152a28460a6558460a55560001981146110275760010160a3556065549060ff821615610fee57507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa93945060ff191660655551338152a180388080808480f35b825162461bcd60e51b81529081018490526014818701527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b634e487b7160e01b8552601182528585fd5b8880fd5b9092508681813d8311611065575b611055818361160d565b810103126105b257519138610e77565b503d61104b565b634e487b7160e01b8c52601189528c8cfd5b634e487b7160e01b8b52601188528b8bfd5b90508881813d83116110b6575b6110a7818361160d565b81010312610509575138610db5565b503d61109d565b88513d8c823e3d90fd5b91508091610d71565b935038610d5d565b8551600162541cc760e11b031981528590fd5b5080610d3a565b845163b80480b160e01b8152808501869052602490fd5b600190611114611647565b60ff1916176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258878651338152a138610d1c565b84516304e1fa9f60e01b81528490fd5b8480fd5b50503461028c578160031936011261028c5760209060a4549051908152f35b50503461028c57602036600319011261028c576001600160801b036001826020946001600160a01b036111ae6114a7565b16815260a88652200154169051908152f35b50503461028c57602036600319011261028c57806060926001600160a01b036111e76114a7565b828480516111f4816115bf565b828152826020820152015216815260a86020522090808051611215816115bf565b6001845494858352015490602081016001600160801b039384928385168352019260801c8352845195865251166020850152511690820152f35b5091903461028c578060031936011261028c57823561126c611491565b90611275611647565b801561145e576001600160a01b0380921692831561144857609c548210611432576112a28260a75461168b565b609b541061142357849583609e96959654168251916323b872dd60e01b835233908301523060248301528360448301528160648160209889945af18015611419576113fc575b5084865260a8845280862091600183018054906001600160801b039485831692815460a3548110806113f3575b61138c575b505060a354905584831690838203610509577f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d49561135b83611373956116ae565b166001600160801b031982541617905560a75461168b565b60a7558660a35494609e5416958351928352820152a480f35b936113ab9192948c5260a98a52868c2054908882169160801c90611754565b908682169182036113ef576113e6916113c69160801c6116ae565b82546001600160801b031660809190911b6001600160801b031916178255565b8891388061131a565b8a80fd5b50841515611315565b61141290853d871161065e57610652818361160d565b50386112e8565b82513d89823e3d90fd5b516321af65c160e11b81528590fd5b5163b80480b160e01b8152602381870152602490fd5b5163b80480b160e01b8152602281870152602490fd5b825163b80480b160e01b8152602181870152602490fd5b84903461028c578160031936011261028c576020906099548152f35b602435906001600160a01b03821682036105ad57565b600435906001600160a01b03821682036105ad57565b6001600160a01b036033541633036114d157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603354906001600160a01b0380911691826001600160601b0360a01b821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561156657565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6060810190811067ffffffffffffffff8211176115db57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176115db57604052565b90601f8019910116810190811067ffffffffffffffff8211176115db57604052565b908160209103126105ad575180151581036105ad5790565b60ff6065541661165357565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9190820180921161169857565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b038080941691160191821161169857565b9091906000198382098382029182808310920394828603926000961461173a576e01ed09bead87c0378d8e640000000091838311156105b6577f36ad57f70d53bfc9205b47e7312aad36a7c9c41a4e9edb77b936c32b9a0540a99596500990828211900360de1b910360221c170290565b5050506e01ed09bead87c0378d8e64000000009192500490565b9160001982840992828102928380861095039480860395146117c957848311156105ad5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b5050809250156105ad570490565b906117eb6117e43361194f565b3333611b35565b6001600160a01b0380609854169060408051916370a0823160e01b83523360048401526020958684602481885afa93841561193157600094611902575b5083156118f7576000916064889285519485938492635d043b2960e11b845289600485015216988960248401523360448401525af19081156118ec5760009161189f575b5090817f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c5929682519485528401523392a3565b908682813d83116118e5575b6118b5818361160d565b810103126107085750517f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c561186c565b503d6118ab565b82513d6000823e3d90fd5b506000955050505050565b90938782813d831161192a575b611919818361160d565b810103126107085750519238611828565b503d61190f565b83513d6000823e3d90fd5b8181029291811591840414171561169857565b906001600160a01b0360009216825260a8602052604082209160405192611975846115bf565b6040600182549283875201546001600160801b039283821696602081019288845260801c9384910152829660a35482109081611a19575b506119b9575b5050505050565b846119f593949597505260a96020526020846040882092604051936119dd856115f1565b54938285169485825260801c93849101525116611754565b918216918203611a1557611a0a92935061168b565b9038808080806119b2565b8380fd5b90501515386119ac565b609f5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905260209493600093909290811691868160448188875af18015611b1157608492889594928792611af4575b5060a15416604051978895869463364e231160e01b86526004860152602485015260448401528160648401525af1928315611ae7578193611ab6575b50505090565b9091809350813d8311611ae0575b611ace818361160d565b81010312610708575051388080611ab0565b503d611ac4565b50604051903d90823e3d90fd5b611b0a90873d891161065e57610652818361160d565b5038611a74565b6040513d87823e3d90fd5b6001600160801b03918216908216039190821161169857565b9092916001600160a01b0393848116928315611ce5578215611ccc5785169160009583875260209260a8845260409182892060018101908a8254916001600160801b0392838116888260801c93549460a354861080611cc3575b611c7a575b50505050905081871691878303611c76578116828110611c5f575092611bc48793610f1c611bfb97948b97611b1c565b60985416908b865180968195829463a9059cbb60e01b845260048401602090939291936001600160a01b0360408201951681520152565b03925af18015611c55577f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a9596979850611c38575b5051908152a3565b611c4e90843d861161065e57610652818361160d565b5038611c30565b82513d8a823e3d90fd5b6024908751906307f885ff60e21b82526004820152fd5b8c80fd5b611c959395815260a98d522054908582169160801c90611754565b838116908103611cbf57611ca8916116ae565b906001600160801b0319168355803880888f611b94565b8d80fd5b50821515611b8f565b60405163b80480b160e01b815260116004820152602490fd5b60405163b80480b160e01b815260106004820152602490fdfea164736f6c6343000812000a';

type DnGmxBatchingManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxBatchingManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxBatchingManager__factory extends ContractFactory {
  constructor(...args: DnGmxBatchingManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxBatchingManager> {
    return super.deploy(overrides || {}) as Promise<DnGmxBatchingManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxBatchingManager {
    return super.attach(address) as DnGmxBatchingManager;
  }
  override connect(signer: Signer): DnGmxBatchingManager__factory {
    return super.connect(signer) as DnGmxBatchingManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxBatchingManagerInterface {
    return new utils.Interface(_abi) as DnGmxBatchingManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxBatchingManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxBatchingManager;
  }
}
