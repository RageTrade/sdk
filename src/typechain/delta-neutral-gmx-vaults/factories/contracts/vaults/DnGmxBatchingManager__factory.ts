/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  DnGmxBatchingManager,
  DnGmxBatchingManagerInterface,
} from '../../../contracts/vaults/DnGmxBatchingManager';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotVault',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoUsdcBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchStake',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'claimer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetsReceived',
        type: 'uint256',
      },
    ],
    name: 'ClaimedAndRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThresholdGmx',
        type: 'uint256',
      },
    ],
    name: 'ThresholdsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'VaultDeposit',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'claimAndRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpReceived',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minUSDG',
        type: 'uint256',
      },
    ],
    name: 'depositToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'depositUsdc',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVaultGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'executeBatchStake',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalUsdc',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundUsdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IBatchingManagerBypass',
        name: '_bypass',
        type: 'address',
      },
    ],
    name: 'setBypass',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThresholdGmxBps',
        type: 'uint256',
      },
    ],
    name: 'setThresholds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThresholdGmxBps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'usdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'usdcBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpStaked',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundUsdcBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611e22806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80638d10001711610104578063ab504ad5116100a2578063cc2a9a5b11610071578063cc2a9a5b14610430578063dae115f614610443578063e9667336146104c5578063f2fde38b146104d857600080fd5b8063ab504ad5146103fa578063aced16611461040d578063bf9571f114610420578063ca0ede501461042857600080fd5b806395815788116100de57806395815788146103b957806399c6d2de146103c1578063aa88fdc3146103d4578063aad3ec96146103e757600080fd5b80638d100017146103545780638da5cb5b1461038157806395693f26146103a657600080fd5b8063584150751161017157806369026e881161014b57806369026e8814610329578063715018a614610331578063748747e6146103395780638a19c8bc1461034c57600080fd5b806358415075146103025780635c7f3c711461030b5780635c975abb1461031357600080fd5b806310684667116101ad57806310684667146102aa578063180282b3146102df5780633f955131146102e75780635157ced5146102fa57600080fd5b80630124b05a146101d457806301df331d146101f05780630ba36dcd14610205575b600080fd5b6101dd60995481565b6040519081526020015b60405180910390f35b6102036101fe366004611b57565b6104eb565b005b610277610213366004611b87565b6040805160608082018352600080835260208084018290529284018190526001600160a01b0394909416845260a48252928290208251938401835280548452600101546001600160801b0380821692850192909252600160801b9004169082015290565b60408051825181526020808401516001600160801b039081169183019190915292820151909216908201526060016101e7565b6101dd6102b8366004611b87565b6001600160a01b0316600090815260a460205260409020600101546001600160801b031690565b610203610758565b6102036102f5366004611ba4565b610835565b610203610879565b6101dd609a5481565b6102036108ac565b60655460ff1660405190151581526020016101e7565b610203610957565b610203610982565b610203610347366004611b87565b610994565b60a1546101dd565b60a15460a25460a35461036692919083565b604080519384526020840192909252908201526060016101e7565b6033546001600160a01b03165b6040516001600160a01b0390911681526020016101e7565b6101dd6103b4366004611b87565b6109ea565b60a2546101dd565b6101dd6103cf366004611bbd565b610b48565b60985461038e906001600160a01b031681565b6102036103f5366004611bf2565b610cc5565b6101dd610408366004611b87565b610cd4565b60975461038e906001600160a01b031681565b610203610db6565b60a3546101dd565b61020361043e366004611c1e565b610e3b565b61049e610451366004611ba4565b604080518082019091526000808252602082015250600090815260a560209081526040918290208251808401909352546001600160801b038082168452600160801b909104169082015290565b6040805182516001600160801b0390811682526020938401511692810192909252016101e7565b6102036104d3366004611b87565b610f68565b6102036104e6366004611b87565b610f92565b6104f3611008565b816105195760405163b80480b160e01b8152602160048201526024015b60405180910390fd5b6001600160a01b0381166105435760405163b80480b160e01b815260226004820152602401610510565b609c546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190611ca0565b506001600160a01b038116600090815260a4602052604090206001810154815460a1546001600160801b03909216918110801561060457506000826001600160801b0316115b1561069557600081815260a5602052604090208054600185015461064791610642916001600160801b0390811691600160801b81048216911661104e565b611102565b60018501805460109061066b908490600160801b90046001600160801b0316611cd8565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060009250505b60a15483556106a385611102565b6106ad9083611cd8565b6001840180546fffffffffffffffffffffffffffffffff19166001600160801b03929092169190911790556106e185611102565b6001600160801b031660a160020160008282546106fe9190611d03565b9091555050609c5460a15460408051888152600060208201526001600160a01b03888116941692917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a45050505050565b60655460ff161561076b5761076b61111d565b609a541561082b57609a80546000909155609b5460985460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af11580156107d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f59190611ca0565b506040518181527fabf360404ae6ccd945919fc14edb22686b6941aeee15d786c7047e4a0107eba59060200160405180910390a1505b61083361116f565b565b61083d611349565b60998190556040518181527fe926d7299feb4b516b5458f5eb2f94d6af102302a936cb45f0b8d287b502a21b906020015b60405180910390a150565b6097546001600160a01b031633146108a4576040516304e1fa9f60e01b815260040160405180910390fd5b61083361111d565b6108b4611008565b6097546001600160a01b031633146108df576040516304e1fa9f60e01b815260040160405180910390fd5b609860009054906101000a90046001600160a01b03166001600160a01b031663138cc18f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561092f57600080fd5b505af1158015610943573d6000803e3d6000fd5b5050505061094f6113a3565b61083361150b565b6097546001600160a01b0316331461094f576040516304e1fa9f60e01b815260040160405180910390fd5b61098a611349565b6108336000611548565b61099c611349565b609780546001600160a01b0319166001600160a01b0383169081179091556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9060200161086e565b60006109ff33336109fa33610cd4565b61159a565b6098546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190611d1b565b905080610a7c5750600092915050565b609854604051635d043b2960e11b8152600481018390526001600160a01b0385811660248301523360448301529091169063ba087652906064016020604051808303816000875af1158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190611d1b565b60408051838152602081018390529193506001600160a01b0385169133917f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c5910160405180910390a350919050565b6000610b52611008565b6098546001600160a01b03163314610b7d5760405163edd7338f60e01b815260040160405180910390fd5b6001600160a01b038416610ba75760405163b80480b160e01b815260306004820152602401610510565b82610bc85760405163b80480b160e01b815260316004820152602401610510565b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303816000875af1158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190611ca0565b50610c4b8484846117dc565b9050610c5681611102565b6001600160801b0316609a6000828254610c709190611d03565b9091555050604080518481526020810183905233916001600160a01b038716916000917f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4910160405180910390a49392505050565b610cd033838361159a565b5050565b6001600160a01b038116600090815260a46020908152604091829020825160608101845281548082526001909201546001600160801b0380821694830194909452600160801b900490921692820183905260a154118015610d425750600081602001516001600160801b0316115b15610db0578051600090815260a560209081526040918290208251808401909352546001600160801b03808216808552600160801b909204811684840181905292850151610d99936106429391909216919061104e565b610dac906001600160801b031684611d03565b9250505b50919050565b610dbe611349565b609b5460985460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e389190611ca0565b50565b600054610100900460ff1615808015610e5b5750600054600160ff909116105b80610e755750303b158015610e75575060005460ff166001145b610ed85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610510565b6000805460ff191660011790558015610efb576000805461ff0019166101001790555b610f036118e3565b610f0b611912565b610f19878787878787611941565b8015610f5f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b610f70611349565b60a080546001600160a01b0319166001600160a01b0392909216919091179055565b610f9a611349565b6001600160a01b038116610fff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610510565b610e3881611548565b60655460ff16156108335760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610510565b600080806000198587098587029250828110838203039150508060001415611088576000841161107d57600080fd5b5082900490506110fb565b80841161109457600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b806001600160801b038116811461111857600080fd5b919050565b611125611a8d565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60a25461117857565b609b5460a05460a25460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af11580156111d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f59190611ca0565b5060a05460a254604051636e553f6560e01b815260048101919091523060248201526000916001600160a01b031690636e553f65906044016020604051808303816000875af115801561124c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112709190611d1b565b9050604051806040016040528061128b60a160020154611102565b6001600160801b031681526020016112a283611102565b6001600160801b0390811690915260a18054600090815260a560209081526040918290208551958201518516600160801b0295909416949094179092555460a35460a254835191825293810193909352908201839052907fc69cec55f6364843f1bd00b1f28399f11345b53d1f2577e1048d34d216932c279060600160405180910390a2600060a381905560a281905560a1805490919061134290611d34565b9091555050565b6033546001600160a01b031633146108335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610510565b60a354806113dd576040517fff57c67200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b609e54609c546040516340d3096b60e11b81526001600160a01b03918216600482015260009291909116906381a612d690602401602060405180830381865afa15801561142e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114529190611d1b565b905060006114a36099546127106114699190611d4f565b6114788464e8d4a51000611d66565b6114829190611d66565b61149b6127106c0c9f2c9cd04674edea40000000611d66565b85919061104e565b609c549091506114bd906001600160a01b031684836117dc565b60a281905560a15460405190917f48c3ff184c57818bf226589be0a871b387827c42b767756992efc70db2cd0edb916114fe91878252602082015260400190565b60405180910390a2505050565b611513611008565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111523390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166115c45760405163b80480b160e01b815260106004820152602401610510565b806115e55760405163b80480b160e01b815260116004820152602401610510565b6001600160a01b038316600090815260a4602052604090206001810154815460a1546001600160801b0380841693600160801b90041691908110801561163457506000836001600160801b0316115b1561169657600081815260a560205260409020805461166d90610642906001600160801b0387811691600160801b81048216911661104e565b6116779084611cd8565b6001860180546fffffffffffffffffffffffffffffffff191690559250505b506116a084611102565b6001600160801b0316816001600160801b031610156116dd576040516307f885ff60e21b81526001600160801b0382166004820152602401610510565b6116e684611102565b6116f09082611d85565b6001840180546001600160801b03928316600160801b02921691909117905560985460405163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af1158015611762573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117869190611ca0565b50846001600160a01b0316866001600160a01b03167f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a866040516117cc91815260200190565b60405180910390a3505050505050565b609d5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905260009185169063095ea7b3906044016020604051808303816000875af1158015611831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118559190611ca0565b50609f5460405163364e231160e01b81526001600160a01b0386811660048301526024820186905260448201859052600060648301529091169063364e2311906084016020604051808303816000875af11580156118b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118db9190611d1b565b949350505050565b600054610100900460ff1661190a5760405162461bcd60e51b815260040161051090611dad565b610833611adf565b600054610100900460ff166119395760405162461bcd60e51b815260040161051090611dad565b610833611b0f565b600054610100900460ff166119685760405162461bcd60e51b815260040161051090611dad565b609b80546001600160a01b038089166001600160a01b031992831617909255609c8054888416908316179055609d80548684169083168117909155609f8054938816939092169290921790556040805163fbfa77cf60e01b8152905163fbfa77cf916004808201926020929091908290030181865afa1580156119ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a139190611df8565b609e80546001600160a01b03199081166001600160a01b03938416179091556098805482168584161790556097805490911691831691821790556040519081527f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e9060200160405180910390a15050600160a15550505050565b60655460ff166108335760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610510565b600054610100900460ff16611b065760405162461bcd60e51b815260040161051090611dad565b61083333611548565b600054610100900460ff16611b365760405162461bcd60e51b815260040161051090611dad565b6065805460ff19169055565b6001600160a01b0381168114610e3857600080fd5b60008060408385031215611b6a57600080fd5b823591506020830135611b7c81611b42565b809150509250929050565b600060208284031215611b9957600080fd5b81356110fb81611b42565b600060208284031215611bb657600080fd5b5035919050565b600080600060608486031215611bd257600080fd5b8335611bdd81611b42565b95602085013595506040909401359392505050565b60008060408385031215611c0557600080fd5b8235611c1081611b42565b946020939093013593505050565b60008060008060008060c08789031215611c3757600080fd5b8635611c4281611b42565b95506020870135611c5281611b42565b94506040870135611c6281611b42565b93506060870135611c7281611b42565b92506080870135611c8281611b42565b915060a0870135611c9281611b42565b809150509295509295509295565b600060208284031215611cb257600080fd5b815180151581146110fb57600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001600160801b03808316818516808303821115611cfa57611cfa611cc2565b01949350505050565b60008219821115611d1657611d16611cc2565b500190565b600060208284031215611d2d57600080fd5b5051919050565b6000600019821415611d4857611d48611cc2565b5060010190565b600082821015611d6157611d61611cc2565b500390565b6000816000190483118215151615611d8057611d80611cc2565b500290565b60006001600160801b0383811690831681811015611da557611da5611cc2565b039392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611e0a57600080fd5b81516110fb81611b4256fea164736f6c634300080a000a';

type DnGmxBatchingManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxBatchingManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxBatchingManager__factory extends ContractFactory {
  constructor(...args: DnGmxBatchingManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DnGmxBatchingManager> {
    return super.deploy(overrides || {}) as Promise<DnGmxBatchingManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DnGmxBatchingManager {
    return super.attach(address) as DnGmxBatchingManager;
  }
  override connect(signer: Signer): DnGmxBatchingManager__factory {
    return super.connect(signer) as DnGmxBatchingManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxBatchingManagerInterface {
    return new utils.Interface(_abi) as DnGmxBatchingManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DnGmxBatchingManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DnGmxBatchingManager;
  }
}
