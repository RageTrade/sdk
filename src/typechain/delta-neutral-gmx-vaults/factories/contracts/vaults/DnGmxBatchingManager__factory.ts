/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  ContractDeployTransaction,
  ContractRunner,
} from 'ethers';
import type { NonPayableOverrides } from '../../../common';
import type {
  DnGmxBatchingManager,
  DnGmxBatchingManagerInterface,
} from '../../../contracts/vaults/DnGmxBatchingManager';

const _abi = [
  {
    inputs: [],
    name: 'CallerNotKeeper',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CallerNotVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositCapBreached',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'InsufficientShares',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'errorCode',
        type: 'uint256',
      },
    ],
    name: 'InvalidInput',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoUsdcBalance',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userShareAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userUsdcAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'userGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'BatchStake',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'claimer',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assetsReceived',
        type: 'uint256',
      },
    ],
    name: 'ClaimedAndRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newDepositCap',
        type: 'uint256',
      },
    ],
    name: 'DepositCapUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'glpStaked',
        type: 'uint256',
      },
    ],
    name: 'DepositToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'newKeeper',
        type: 'address',
      },
    ],
    name: 'KeeperUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'rewardsHarvestingRouter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'weth',
        type: 'address',
      },
    ],
    name: 'ParamsV1Updated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'partialGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'partialShareAmount',
        type: 'uint256',
      },
    ],
    name: 'PartialBatchDeposit',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'claimAmount',
        type: 'uint256',
      },
    ],
    name: 'SharesClaimed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThresholdGmx',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minUsdcConversionAmount',
        type: 'uint256',
      },
    ],
    name: 'ThresholdsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claim',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'claimAndRedeem',
    outputs: [
      {
        internalType: 'uint256',
        name: 'glpReceived',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currentRound',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'depositUsdc',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVault',
    outputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dnGmxJuniorVaultGlpBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'usdcAmountToConvert',
        type: 'uint128',
      },
    ],
    name: 'executeBatch',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'grantAllowances',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_sGlp',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_usdc',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
      {
        internalType: 'contract IGlpManager',
        name: '_glpManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'keeper',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minUsdcConversionAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rescueFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'round',
        type: 'uint256',
      },
    ],
    name: 'roundDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint128',
            name: 'totalUsdc',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'totalShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.RoundDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpDepositPending',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundGlpStaked',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundSharesMinted',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'roundUsdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_depositCap',
        type: 'uint256',
      },
    ],
    name: 'setDepositCap',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_keeper',
        type: 'address',
      },
    ],
    name: 'setKeeper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_weth',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_rewardsHarvestingRouter',
        type: 'address',
      },
    ],
    name: 'setParamsV1',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThresholdGmxBps',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minUsdcConversionAmount',
        type: 'uint256',
      },
    ],
    name: 'setThresholds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThresholdGmxBps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'unclaimedShares',
    outputs: [
      {
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpauseDeposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'usdcBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'userDeposits',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'round',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'usdcBalance',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'unclaimedShares',
            type: 'uint128',
          },
        ],
        internalType: 'struct IDnGmxBatchingManager.UserDeposit',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultBatchingState',
    outputs: [
      {
        internalType: 'uint256',
        name: 'currentRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpDepositPending',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundSharesMinted',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundGlpStaked',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'roundUsdcBalance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x6080806040523461001657611d99908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630124b05a146115035750806301df331d146112dd5780630ba36dcd1461124e578063106846671461120b5780632eaa4c68146111ec5780634968856c14610d5f5780635157ced514610cc05780635292058714610a7b5780635841507514610a5c5780635c975abb14610a3857806369026e88146109c55780637146d2f3146109a6578063715018a614610948578063748747e6146108db578063866512031461088e5780638a19c8bc1461086f5780638d1000171461082e5780638da5cb5b1461080657806395693f26146107e057806395815788146107c1578063aa88fdc314610799578063aad3ec9614610770578063ab504ad514610743578063aced16611461071b578063ae412786146106fc578063bf9571f114610667578063ca0ede5014610648578063cc2a9a5b14610383578063dae115f61461031e578063dbd5edc7146102ff578063de14663f14610278578063e3064a77146102225763f2fde38b1461018e57600080fd5b3461021e57602036600319011261021e576101a7611535565b916101b061154b565b6001600160a01b038316156101cc57836101c9846115a3565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50903461021e578060031936011261021e577fd081f5afbf5e2859f2be3d6c573e1cdd6c8fb93b18ec6145427882fe51507b6a913560243561026261154b565b8160995580609c5582519182526020820152a180f35b5050346102fb57806003193601126102fb577f663be3f1df488fdf556f58b750b3b4f39121d6b4462d263d3f8ee9732b68ad9460206102b5611535565b6102bd61151f565b936102c661154b565b6001600160a01b03809216916001600160601b0360a01b95838760aa54161760aa5516809560ab54161760ab5551908152a280f35b5080fd5b5050346102fb57816003193601126102fb57602090609b549051908152f35b503461021e57602036600319011261021e5791819281602084516103418161167f565b828152015235815260a96020522081519061035b8261167f565b546001600160801b0390602082821693848152019060801c8152835192835251166020820152f35b503461021e5760c036600319011261021e5761039d611535565b6103a561151f565b91604435916001600160a01b038084168094036106445760643592818416809403610640576084359482861680960361063b5760a4359483861680960361063b5789549760ff8960081c16159889809a61062e575b8015610617575b156105bd579489948c999460ff9994838c9a958f9a8a6104448f8f6104749482199460018683161783556105ac575b505460081c1661043f816115ed565b6115ed565b61044d336115a3565b8d549e8f60081c169061045f826115ed565b610468826115ed565b606554166065556115ed565b816001600160601b0360a01b971687609d541617609d551685609e541617609e55609f54918186841617609f558560a154161760a15588519283809263fbfa77cf60e01b825260209c8d9516175afa9081156105a2579088949392918b91610562575b50948392917f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e96168260a054161760a05581609854161760985560975416176097558451908152a1600160a35561052c578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989261ff00191684555160018152a18180808380f35b8581939692503d831161059b575b61057a818361169b565b8101031261059757519083821682036105975787939091836104d7565b8980fd5b503d610570565b87513d8c823e3d90fd5b61ffff191661010117815538610430565b8a5162461bcd60e51b8152602081870152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156104015750600160ff821614610401565b50600160ff8216106103fa565b600080fd5b8780fd5b8680fd5b5050346102fb57816003193601126102fb5760209060a7549051908152f35b50903461021e578260031936011261021e5761068161154b565b60206001600160a01b0392604484609d5416946098541691868551968794859363095ea7b360e01b855284015260001960248401525af19081156106f357506106c8575080f35b6106e89060203d81116106ec575b6106e0818361169b565b8101906116bd565b5080f35b503d6106d6565b513d84823e3d90fd5b5050346102fb57816003193601126102fb5760209060a5549051908152f35b5050346102fb57816003193601126102fb576020906001600160a01b03609754169051908152f35b5050346102fb5760203660031901126102fb57602090610769610764611535565b6119dd565b9051908152f35b5050346102fb57366003190112610796576101c961078c611535565b6024359033611bc3565b80fd5b5050346102fb57816003193601126102fb576020906001600160a01b03609854169051908152f35b5050346102fb57816003193601126102fb5760209060a6549051908152f35b5050346102fb5760203660031901126102fb57602090610769610801611535565b611865565b5050346102fb57816003193601126102fb576020906001600160a01b03603354169051908152f35b5050346102fb57816003193601126102fb5760a09060a3549060a4549060a55460a6549160a754938151958652602086015284015260608301526080820152f35b5050346102fb57816003193601126102fb5760209060a3549051908152f35b503461021e57602036600319011261021e577f333b26cca69716ad4680ddb07663f5bfb4f06045671f336af9a83690a3ae00f99160209135906108cf61154b565b81609b5551908152a180f35b5050346102fb5760203660031901126102fb5760207f0425bcd291db1d48816f2a98edc7ecaf6dd5c64b973d9e4b3b6b750763dc6c2e916001600160a01b03610922611535565b61092a61154b565b1690816001600160601b0360a01b609754161760975551908152a180f35b833461079657806003193601126107965761096161154b565b60006001600160a01b036033546001600160601b0360a01b8116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102fb57816003193601126102fb57602090609c549051908152f35b503461021e578260031936011261021e576001600160a01b03609754163303610a2a575060207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610a156116d5565b600160ff19606554161760655551338152a180f35b90516304e1fa9f60e01b8152fd5b5050346102fb57816003193601126102fb5760209060ff6065541690519015158152f35b5050346102fb57816003193601126102fb57602090609a549051908152f35b50903461021e578260031936011261021e57610a9561154b565b6001600160a01b0391838360ab5416803b156102fb57819060e485518094819363185b800160e11b83528188840152816024840152600160448401526001606484015260016084840152600160a48401528160c48401525af18015610cb657610c88575b5060aa5482516370a0823160e01b81523083820152602094918216908581602481855afa908115610c7e578791610c51575b506024868460a054168751928380926340d3096b60e11b8252878a8301525afa908115610c47578891610c1a575b5060995490612710918203918211610c075792879492610b8a610b84610b9094610bcd9a99976119ca565b82611757565b91611ab1565b918782609d541692609854169186519788958694859363a9059cbb60e01b85528401602090939291936001600160a01b0360408201951681520152565b03925af1908115610bfe5750610be1578280f35b81610bf792903d106106ec576106e0818361169b565b5038808280f35b513d85823e3d90fd5b634e487b7160e01b895260118652602489fd5b90508681813d8311610c40575b610c31818361169b565b8101031261063b575138610b59565b503d610c27565b86513d8a823e3d90fd5b90508581813d8311610c77575b610c68818361169b565b8101031261063b575138610b2b565b503d610c5e565b85513d89823e3d90fd5b67ffffffffffffffff8195929511610ca35782529238610af9565b634e487b7160e01b825260418552602482fd5b83513d87823e3d90fd5b503461021e578260031936011261021e576001600160a01b03609754163303610a2a576065549060ff821615610d25575060ff1916606555513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b606490602084519162461bcd60e51b8352820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152fd5b50913461079657602091826003193601126102fb578335936001600160801b038086168087036111e8576001600160a01b0396876097541633036111d85760655460ff811615611197575b5081156111805760a754918383169283036106445782111561117957905b82821697881561116657609c548481168181036110c757808a9b9a999a1061115e575b5084610df78585611baa565b161115611155575b83610e0a8484611baa565b1660a7558060a0541681609e54169087519a8b80926340d3096b60e11b8252848a83015260249d8e915afa90811561114b578a9161111e575b508585169064e8d4a510009081810291818304149015171561110c57609954906127109182039182116110fa57610b84610e82949392610b8a926119ca565b918483169283036110c75782918891610e9f8b969560a654611719565b60a6557f48c3ff184c57818bf226589be0a871b387827c42b767756992efc70db2cd0edb8960a3549281519081528686820152a26098541660448b89519687938492636e553f6560e01b8452878c85015230908401525af1928315610c475788936110cb575b5083831692830361064057908291610f20879460a554611719565b60a5557f996c81bb856ed13ee8b426c49c5470c8182f6ec9ef1e06745504d5c60bcc65c160a3549485928151908152858b820152a260a754928484169384036110c757885260a987528588208054610fca93928690610f819083831661173c565b16906001600160801b03191617905560a354885260a98752610faa86892091825460801c61173c565b81546001600160801b031660809190911b6001600160801b031916179055565b15610fd3578480f35b6060907fc69cec55f6364843f1bd00b1f28399f11345b53d1f2577e1048d34d216932c2760a35492839283895260a98852868920541660a65460a5549088519283528983015287820152a28460a6558460a55560001981146110b55760010160a3556065549060ff82161561107c57507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa93945060ff191660655551338152a180388080808480f35b825162461bcd60e51b81529081018490526014818701527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b634e487b7160e01b8552601182528585fd5b8880fd5b9092508681813d83116110f3575b6110e3818361169b565b8101031261064057519138610f05565b503d6110d9565b634e487b7160e01b8c52601189528c8cfd5b634e487b7160e01b8b52601188528b8bfd5b90508881813d8311611144575b611135818361169b565b81010312610597575138610e43565b503d61112b565b88513d8c823e3d90fd5b91508091610dff565b935038610deb565b8551600162541cc760e11b031981528590fd5b5080610dc8565b845163b80480b160e01b8152808501869052602490fd5b6001906111a26116d5565b60ff1916176065557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258878651338152a138610daa565b84516304e1fa9f60e01b81528490fd5b8480fd5b5050346102fb57816003193601126102fb5760209060a4549051908152f35b5050346102fb5760203660031901126102fb576001600160801b036001826020946001600160a01b0361123c611535565b16815260a88652200154169051908152f35b5050346102fb5760203660031901126102fb57806060926001600160a01b03611275611535565b828480516112828161164d565b828152826020820152015216815260a860205220908080516112a38161164d565b6001845494858352015490602081016001600160801b039384928385168352019260801c8352845195865251166020850152511690820152f35b509190346102fb57806003193601126102fb5782356112fa61151f565b906113036116d5565b80156114ec576001600160a01b038092169283156114d657609c5482106114c0576113308260a754611719565b609b54106114b157849583609e96959654168251916323b872dd60e01b835233908301523060248301528360448301528160648160209889945af180156114a75761148a575b5084865260a8845280862091600183018054906001600160801b039485831692815460a354811080611481575b61141a575b505060a354905584831690838203610597577f3b7ce5782971bc1c2a722cba69f6f8bccbe8dd1a68d213ea39f1b681726092d4956113e9836114019561173c565b166001600160801b031982541617905560a754611719565b60a7558660a35494609e5416958351928352820152a480f35b936114399192948c5260a98a52868c2054908882169160801c906117e2565b9086821691820361147d57611474916114549160801c61173c565b82546001600160801b031660809190911b6001600160801b031916178255565b889138806113a8565b8a80fd5b508415156113a3565b6114a090853d87116106ec576106e0818361169b565b5038611376565b82513d89823e3d90fd5b516321af65c160e11b81528590fd5b5163b80480b160e01b8152602381870152602490fd5b5163b80480b160e01b8152602281870152602490fd5b825163b80480b160e01b8152602181870152602490fd5b8490346102fb57816003193601126102fb576020906099548152f35b602435906001600160a01b038216820361063b57565b600435906001600160a01b038216820361063b57565b6001600160a01b0360335416330361155f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603354906001600160a01b0380911691826001600160601b0360a01b821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b156115f457565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6060810190811067ffffffffffffffff82111761166957604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761166957604052565b90601f8019910116810190811067ffffffffffffffff82111761166957604052565b9081602091031261063b5751801515810361063b5790565b60ff606554166116e157565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b9190820180921161172657565b634e487b7160e01b600052601160045260246000fd5b9190916001600160801b038080941691160191821161172657565b909190600019838209838202918280831092039482860392600096146117c8576e01ed09bead87c0378d8e64000000009183831115610644577f36ad57f70d53bfc9205b47e7312aad36a7c9c41a4e9edb77b936c32b9a0540a99596500990828211900360de1b910360221c170290565b5050506e01ed09bead87c0378d8e64000000009192500490565b916000198284099282810292838086109503948086039514611857578483111561063b5782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b50508092501561063b570490565b90611879611872336119dd565b3333611bc3565b6001600160a01b0380609854169060408051916370a0823160e01b83523360048401526020958684602481885afa9384156119bf57600094611990575b508315611985576000916064889285519485938492635d043b2960e11b845289600485015216988960248401523360448401525af190811561197a5760009161192d575b5090817f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c5929682519485528401523392a3565b908682813d8311611973575b611943818361169b565b810103126107965750517f95534f7b5fe41df8a8d92f85b3ba5483590a5f2eff1ec5fb1e712e90846056c56118fa565b503d611939565b82513d6000823e3d90fd5b506000955050505050565b90938782813d83116119b8575b6119a7818361169b565b8101031261079657505192386118b6565b503d61199d565b83513d6000823e3d90fd5b8181029291811591840414171561172657565b906001600160a01b0360009216825260a8602052604082209160405192611a038461164d565b6040600182549283875201546001600160801b039283821696602081019288845260801c9384910152829660a35482109081611aa7575b50611a47575b5050505050565b84611a8393949597505260a9602052602084604088209260405193611a6b8561167f565b54938285169485825260801c938491015251166117e2565b918216918203611aa357611a98929350611719565b903880808080611a40565b8380fd5b9050151538611a3a565b609f5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905260209493600093909290811691868160448188875af18015611b9f57608492889594928792611b82575b5060a15416604051978895869463364e231160e01b86526004860152602485015260448401528160648401525af1928315611b75578193611b44575b50505090565b9091809350813d8311611b6e575b611b5c818361169b565b81010312610796575051388080611b3e565b503d611b52565b50604051903d90823e3d90fd5b611b9890873d89116106ec576106e0818361169b565b5038611b02565b6040513d87823e3d90fd5b6001600160801b03918216908216039190821161172657565b9092916001600160a01b0393848116928315611d73578215611d5a5785169160009583875260209260a8845260409182892060018101908a8254916001600160801b0392838116888260801c93549460a354861080611d51575b611d08575b50505050905081871691878303611d04578116828110611ced575092611c528793610faa611c8997948b97611baa565b60985416908b865180968195829463a9059cbb60e01b845260048401602090939291936001600160a01b0360408201951681520152565b03925af18015611ce3577f5c88b328c5b2ad9ebdf6ff97006b8557bd45f26293da0252d9a34931c684007a9596979850611cc6575b5051908152a3565b611cdc90843d86116106ec576106e0818361169b565b5038611cbe565b82513d8a823e3d90fd5b6024908751906307f885ff60e21b82526004820152fd5b8c80fd5b611d239395815260a98d522054908582169160801c906117e2565b838116908103611d4d57611d369161173c565b906001600160801b0319168355803880888f611c22565b8d80fd5b50821515611c1d565b60405163b80480b160e01b815260116004820152602490fd5b60405163b80480b160e01b815260106004820152602490fdfea164736f6c6343000812000a';

type DnGmxBatchingManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DnGmxBatchingManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DnGmxBatchingManager__factory extends ContractFactory {
  constructor(...args: DnGmxBatchingManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DnGmxBatchingManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DnGmxBatchingManager__factory {
    return super.connect(runner) as DnGmxBatchingManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DnGmxBatchingManagerInterface {
    return new Interface(_abi) as DnGmxBatchingManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DnGmxBatchingManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DnGmxBatchingManager;
  }
}
