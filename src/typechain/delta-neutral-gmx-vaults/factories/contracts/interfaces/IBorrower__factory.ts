/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, ContractRunner } from 'ethers';
import type {
  IBorrower,
  IBorrowerInterface,
} from '../../../contracts/interfaces/IBorrower';

const _abi = [
  {
    inputs: [],
    name: 'getUsdcBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'harvestFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IBorrower__factory {
  static readonly abi = _abi;
  static createInterface(): IBorrowerInterface {
    return new Interface(_abi) as IBorrowerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IBorrower {
    return new Contract(address, _abi, runner) as unknown as IBorrower;
  }
}
