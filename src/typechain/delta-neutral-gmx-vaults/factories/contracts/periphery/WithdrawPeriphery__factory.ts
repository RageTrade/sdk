/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  WithdrawPeriphery,
  WithdrawPeripheryInterface,
} from '../../../contracts/periphery/WithdrawPeriphery';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'juniorVault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'rewardRouter',
        type: 'address',
      },
    ],
    name: 'AddressesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'SlippageThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokensReceived',
        type: 'uint256',
      },
    ],
    name: 'TokenRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokensReceived',
        type: 'uint256',
      },
    ],
    name: 'TokenWithdrawn',
    type: 'event',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'sharesAmount',
        type: 'uint256',
      },
    ],
    name: 'redeemToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
    ],
    name: 'setAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'setSlippageThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'sGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'withdrawToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610c6990816100618239f35b600080fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816301e336671461061f575080630d71bdc3146104e9578063414604361461049b578063715018a61461043e5780638da5cb5b1461041857806390107afe146101695780639024350b146101465763f2fde38b1461007c57600080fd5b34610142576020366003190112610142578135916001600160a01b039182841680940361013e576100ab610746565b83156100ec57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b8382346101655781600319360112610165576020906001549051908152f35b5080fd5b503461014257806003193601126101425781356001600160a01b0380821680920361013e5760243590808216809203610344576101a4610746565b6bffffffffffffffffffffffff60a01b90838260085416176008558451956338d52e0f60e01b875260209687818381895afa90811561040e579083918a916103f1575b50169283818354161782558651633c5103f760e11b815288818481885afa9081156103ad579084918b916103d4575b5016816002541617600255865162af394d60e81b815288818481885afa9081156103ad579084918b916103b7575b5016816003541617600355848160075416176007558651633e9b6c6f60e21b815288818481895afa9081156103ad579084918b91610390575b50169283826006541617600655875163fbfa77cf60e01b815289818581885afa9081156103865791604493918b9695938d91610359575b5016906005541617600555898851958694859363095ea7b360e01b855284015260001960248401525af1801561034f57610318575b507fc651c70f44278e4b6b346230d2fcc09308ad801d6dc8b9c055f45581b3609075938351928352820152a180f35b8481813d8311610348575b61032d818361079e565b8101031261034457518015150361013e57386102e9565b8580fd5b503d610323565b84513d88823e3d90fd5b6103799150873d891161037f575b610371818361079e565b8101906107d6565b386102b4565b503d610367565b89513d8d823e3d90fd5b6103a791508a3d8c1161037f57610371818361079e565b3861027d565b88513d8c823e3d90fd5b6103ce91508a3d8c1161037f57610371818361079e565b38610244565b6103eb91508a3d8c1161037f57610371818361079e565b38610216565b6104089150893d8b1161037f57610371818361079e565b386101e7565b87513d8b823e3d90fd5b8382346101655781600319360112610165576001600160a01b0360209254169051908152f35b8334610498578060031936011261049857610457610746565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b509034610142576020366003190112610142577fad3d2e36d644de683c6608bea35a9e25bef4ded83b5939c6d8f9c5ab390d89fc9160209135906104dd610746565b8160015551908152a180f35b50829034610165576104fa3661070c565b6008548451635d043b2960e11b8152968701828152306020828101919091523360408301526001600160a01b0398939795949392909183918a169082908890829060600103925af19384156106145780946105be575b5050602095816105b56105847faf219bb2d8b6e55ecf684938952e9dcbd4b6c03408b707d0bfa9294a80d19542948661081e565b809888519485941697339785909493926060926001600160a01b036080840197168352602083015260408201520152565b0390a351908152f35b909193506020823d821161060c575b816105da6020938361079e565b8101031261049857505191857faf219bb2d8b6e55ecf684938952e9dcbd4b6c03408b707d0bfa9294a80d19542610550565b3d91506105cd565b8551903d90823e3d90fd5b8492915034610142576106313661070c565b600854632d182be560e21b8552968401818152306020828101919091523360408301526001600160a01b0398929592909183918a169082908a90829060600103925af19586156106145780966106b6575b5050602095816105b56105847f404880c9d28e6a46410558be4f9ef718f83c8ebd7a61c8c9057aa51ebff8217f948661081e565b909195506020823d8211610704575b816106d26020938361079e565b8101031261049857505193857f404880c9d28e6a46410558be4f9ef718f83c8ebd7a61c8c9057aa51ebff8217f610682565b3d91506106c5565b6060906003190112610741576001600160a01b0390600435828116810361074157916024359081168103610741579060443590565b600080fd5b6001600160a01b0360005416330361075a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b90601f8019910116810190811067ffffffffffffffff8211176107c057604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261074157516001600160a01b03811681036107415790565b8181029291811591840414171561080857565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03918260035416916040928351809581946370a0823160e01b83526004933085850152602096879160249a8b915afa928315610b4a57600093610b1b575b508786836006541689519283809263019c8a3b60e11b825260008a8301525afa908115610b1057908591600091610ae0575b508784600254168a51938480926318160ddd60e01b82525afa918215610a6557600092610ab1575b5069d3c21bcecceda100000091828102928184041490151715610a1a57906108e491610b55565b82878160055416978b8b5180948193637092736960e11b8352169a8b8b8301525afa908115610a6557600091610a84575b506001549161271092830390838211610a705790610932916107f5565b90828102928184041490151715610a1a579061094e9185610be7565b875163313ce56760e01b8152878187818a5afa908115610a6557600091610a2e575b5060ff60051991160160ff8111610a1a5760ff16604d8111610a1a57926000926109a4608496938a999896600a0a906107f5565b8260075416938b519c8d998a986303cea95560e21b8a5289015287015260448601521660648401525af1918215610a1057506000916109e4575b50905090565b82813d8311610a09575b6109f8818361079e565b8101031261049857505180386109de565b503d6109ee565b513d6000823e3d90fd5b89601187634e487b7160e01b600052526000fd5b8881813d8311610a5e575b610a43818361079e565b8101031261016557519060ff82168203610498575038610970565b503d610a39565b89513d6000823e3d90fd5b8b601189634e487b7160e01b600052526000fd5b908882813d8311610aaa575b610a9a818361079e565b8101031261049857505138610915565b503d610a90565b90918882813d8311610ad9575b610ac8818361079e565b8101031261049857505190386108bd565b503d610abe565b91508782813d8311610b09575b610af7818361079e565b81010312610498575084905138610895565b503d610aed565b88513d6000823e3d90fd5b90928682813d8311610b43575b610b32818361079e565b810103126104985750519138610863565b503d610b28565b87513d6000823e3d90fd5b906c0c9f2c9cd04674edea40000000906000198284099282810292838086109503948086039514610bd957848311156107415782910981806000031680920460028082600302188083028203028083028203028083028203028083028203028083028203028092029003029360018380600003040190848311900302920304170290565b505080925015610741570490565b916000198284099282810292838086109503948086039514610bd95784831115610741578291098180600003168092046002808260030218808302820302808302820302808302820302808302820302808302820302809202900302936001838060000304019084831190030292030417029056fea164736f6c6343000812000a';

type WithdrawPeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawPeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawPeriphery__factory extends ContractFactory {
  constructor(...args: WithdrawPeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawPeriphery> {
    return super.deploy(overrides || {}) as Promise<WithdrawPeriphery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawPeriphery {
    return super.attach(address) as WithdrawPeriphery;
  }
  override connect(signer: Signer): WithdrawPeriphery__factory {
    return super.connect(signer) as WithdrawPeriphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawPeripheryInterface {
    return new utils.Interface(_abi) as WithdrawPeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawPeriphery {
    return new Contract(address, _abi, signerOrProvider) as WithdrawPeriphery;
  }
}
