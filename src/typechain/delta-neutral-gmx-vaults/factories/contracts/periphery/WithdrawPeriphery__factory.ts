/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  WithdrawPeriphery,
  WithdrawPeripheryInterface,
} from '../../../contracts/periphery/WithdrawPeriphery';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'juniorVault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'rewardRouter',
        type: 'address',
      },
    ],
    name: 'AddressesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'SlippageThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokensReceived',
        type: 'uint256',
      },
    ],
    name: 'TokenRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'assets',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'shares',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokensReceived',
        type: 'uint256',
      },
    ],
    name: 'TokenWithdrawn',
    type: 'event',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'sharesAmount',
        type: 'uint256',
      },
    ],
    name: 'redeemToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
    ],
    name: 'setAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'setSlippageThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'sGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'withdrawToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610eb38061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e357806390107afe146100fe5780639024350b14610111578063f2fde38b1461011a57600080fd5b806301e336671461008d5780630d71bdc3146100b357806341460436146100c6578063715018a6146100db575b600080fd5b6100a061009b366004610c17565b61012d565b6040519081526020015b60405180910390f35b6100a06100c1366004610c17565b61021c565b6100d96100d4366004610c58565b6102ff565b005b6100d9610342565b6000546040516001600160a01b0390911681526020016100aa565b6100d961010c366004610c71565b610356565b6100a060015481565b6100d9610128366004610caa565b6106c1565b600854604051632d182be560e21b81526004810183905230602482015233604482015260009182916001600160a01b039091169063b460af94906064016020604051808303816000875af1158015610189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ad9190610cc7565b90506101b9858561073f565b604080516001600160a01b038881168252602082018790529181018490526060810183905291935085169033907f404880c9d28e6a46410558be4f9ef718f83c8ebd7a61c8c9057aa51ebff8217f906080015b60405180910390a3509392505050565b600854604051635d043b2960e11b81526004810183905230602482015233604482015260009182916001600160a01b039091169063ba087652906064016020604051808303816000875af1158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190610cc7565b90506102a8858561073f565b604080516001600160a01b038881168252602082018590529181018690526060810183905291935085169033907faf219bb2d8b6e55ecf684938952e9dcbd4b6c03408b707d0bfa9294a80d195429060800161020c565b61030761097f565b60018190556040518181527fad3d2e36d644de683c6608bea35a9e25bef4ded83b5939c6d8f9c5ab390d89fc9060200160405180910390a150565b61034a61097f565b61035460006109d9565b565b61035e61097f565b600880546001600160a01b0319166001600160a01b038416908117909155604080516338d52e0f60e01b815290516338d52e0f916004808201926020929091908290030181865afa1580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db9190610ce0565b600480546001600160a01b0319166001600160a01b0392909216918217815560408051633c5103f760e11b815290516378a207ee928281019260209291908290030181865afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190610ce0565b600280546001600160a01b0319166001600160a01b03928316179055600480546040805162af394d60e81b81529051919093169263af394d0092818101926020929091908290030181865afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190610ce0565b600380546001600160a01b03199081166001600160a01b0393841617909155600780549091168383161790556004805460408051633e9b6c6f60e21b81529051919093169263fa6db1bc92818101926020929091908290030181865afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610ce0565b600680546001600160a01b0319166001600160a01b039290921691821790556040805163fbfa77cf60e01b8152905163fbfa77cf916004808201926020929091908290030181865afa1580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e79190610ce0565b600580546001600160a01b0319166001600160a01b039283161790556004805460065460405163095ea7b360e01b81529084169281019290925260001960248301529091169063095ea7b3906044016020604051808303816000875af1158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190610cfd565b50604080516001600160a01b038085168252831660208201527fc651c70f44278e4b6b346230d2fcc09308ad801d6dc8b9c055f45581b3609075910160405180910390a15050565b6106c961097f565b6001600160a01b0381166107335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61073c816109d9565b50565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190610cc7565b905060006107be6000610a29565b600554604051637092736960e11b81526001600160a01b0388811660048301529293506000929091169063e124e6d290602401602060405180830381865afa15801561080e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108329190610cc7565b905060006108676001546127106108499190610d35565b6108539085610d4c565b61085f61271085610d4c565b869190610b4e565b90506006876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190610d6b565b6108d79190610d8e565b6108e290600a610e97565b6108ec9082610d4c565b6007546040516303cea95560e21b81526001600160a01b038a8116600483015260248201889052604482018490528981166064830152929350911690630f3aa554906084016020604051808303816000875af1158015610950573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109749190610cc7565b979650505050505050565b6000546001600160a01b031633146103545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161072a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60065460405163019c8a3b60e11b8152821515600482015260009182916001600160a01b0390911690630339147690602401602060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190610cc7565b90506000600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b179190610cc7565b9050610b466c0c9f2c9cd04674edea40000000610b3e8369d3c21bcecceda1000000610d4c565b849190610b4e565b949350505050565b600080806000198587098587029250828110838203039150508060001415610b885760008411610b7d57600080fd5b508290049050610bfb565b808411610b9457600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6001600160a01b038116811461073c57600080fd5b600080600060608486031215610c2c57600080fd5b8335610c3781610c02565b92506020840135610c4781610c02565b929592945050506040919091013590565b600060208284031215610c6a57600080fd5b5035919050565b60008060408385031215610c8457600080fd5b8235610c8f81610c02565b91506020830135610c9f81610c02565b809150509250929050565b600060208284031215610cbc57600080fd5b8135610bfb81610c02565b600060208284031215610cd957600080fd5b5051919050565b600060208284031215610cf257600080fd5b8151610bfb81610c02565b600060208284031215610d0f57600080fd5b81518015158114610bfb57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610d4757610d47610d1f565b500390565b6000816000190483118215151615610d6657610d66610d1f565b500290565b600060208284031215610d7d57600080fd5b815160ff81168114610bfb57600080fd5b600060ff821660ff841680821015610da857610da8610d1f565b90039392505050565b600181815b80851115610dec578160001904821115610dd257610dd2610d1f565b80851615610ddf57918102915b93841c9390800290610db6565b509250929050565b600082610e0357506001610e91565b81610e1057506000610e91565b8160018114610e265760028114610e3057610e4c565b6001915050610e91565b60ff841115610e4157610e41610d1f565b50506001821b610e91565b5060208310610133831016604e8410600b8410161715610e6f575081810a610e91565b610e798383610db1565b8060001904821115610e8d57610e8d610d1f565b0290505b92915050565b6000610bfb60ff841683610df456fea164736f6c634300080a000a';

type WithdrawPeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawPeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawPeriphery__factory extends ContractFactory {
  constructor(...args: WithdrawPeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawPeriphery> {
    return super.deploy(overrides || {}) as Promise<WithdrawPeriphery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawPeriphery {
    return super.attach(address) as WithdrawPeriphery;
  }
  override connect(signer: Signer): WithdrawPeriphery__factory {
    return super.connect(signer) as WithdrawPeriphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawPeripheryInterface {
    return new utils.Interface(_abi) as WithdrawPeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawPeriphery {
    return new Contract(address, _abi, signerOrProvider) as WithdrawPeriphery;
  }
}
