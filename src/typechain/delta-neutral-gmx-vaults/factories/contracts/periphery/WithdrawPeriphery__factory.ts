/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  WithdrawPeriphery,
  WithdrawPeripheryInterface,
} from '../../../contracts/periphery/WithdrawPeriphery';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'juniorVault',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'rewardRouter',
        type: 'address',
      },
    ],
    name: 'AddressesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newSlippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'SlippageThresholdUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sharesAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokensRecevied',
        type: 'uint256',
      },
    ],
    name: 'TokenRedeemed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sGlpAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokensRecevied',
        type: 'uint256',
      },
    ],
    name: 'TokenWithdrawn',
    type: 'event',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'sharesAmount',
        type: 'uint256',
      },
    ],
    name: 'redeemToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IDnGmxJuniorVault',
        name: '_dnGmxJuniorVault',
        type: 'address',
      },
      {
        internalType: 'contract IRewardRouterV2',
        name: '_rewardRouter',
        type: 'address',
      },
    ],
    name: 'setAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_slippageThreshold',
        type: 'uint256',
      },
    ],
    name: 'setSlippageThreshold',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'slippageThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'sGlpAmount',
        type: 'uint256',
      },
    ],
    name: 'withdrawToken',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cf58061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806390107afe1161005b57806390107afe146100eb5780639024350b146100fe578063b78c9d7314610107578063f2fde38b1461011a57600080fd5b806321754d9e1461008d57806341460436146100b3578063715018a6146100c85780638da5cb5b146100d0575b600080fd5b6100a061009b366004610b84565b61012d565b6040519081526020015b60405180910390f35b6100c66100c1366004610bd5565b610215565b005b6100c6610258565b6000546040516001600160a01b0390911681526020016100aa565b6100c66100f9366004610bee565b61026c565b6100a060015481565b6100a0610115366004610b84565b6105d7565b6100c6610128366004610c27565b6106b3565b600854604051632d182be560e21b8152600481018390523060248201526001600160a01b038681166044830152600092169063b460af94906064016020604051808303816000875af1158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab9190610c44565b506101b68484610731565b604080516001600160a01b0387811682526020820186905291810183905291925080851691908716907f7ec90ada0dee6c6d3ea251a8236eb33077411c39b9c26fc24045ae009599def3906060015b60405180910390a3949350505050565b61021d6108ec565b60018190556040518181527fad3d2e36d644de683c6608bea35a9e25bef4ded83b5939c6d8f9c5ab390d89fc9060200160405180910390a150565b6102606108ec565b61026a6000610946565b565b6102746108ec565b600880546001600160a01b0319166001600160a01b038416908117909155604080516338d52e0f60e01b815290516338d52e0f916004808201926020929091908290030181865afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f19190610c5d565b600480546001600160a01b0319166001600160a01b0392909216918217815560408051633c5103f760e11b815290516378a207ee928281019260209291908290030181865afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c9190610c5d565b600280546001600160a01b0319166001600160a01b03928316179055600480546040805162af394d60e81b81529051919093169263af394d0092818101926020929091908290030181865afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed9190610c5d565b600380546001600160a01b03199081166001600160a01b0393841617909155600780549091168383161790556004805460408051633e9b6c6f60e21b81529051919093169263fa6db1bc92818101926020929091908290030181865afa15801561045b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047f9190610c5d565b600680546001600160a01b0319166001600160a01b039290921691821790556040805163fbfa77cf60e01b8152905163fbfa77cf916004808201926020929091908290030181865afa1580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610c5d565b600580546001600160a01b0319166001600160a01b039283161790556004805460065460405163095ea7b360e01b81529084169281019290925260001960248301529091169063095ea7b3906044016020604051808303816000875af115801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f9190610c7a565b50604080516001600160a01b038085168252831660208201527fc651c70f44278e4b6b346230d2fcc09308ad801d6dc8b9c055f45581b3609075910160405180910390a15050565b600854604051635d043b2960e11b8152600481018390523060248201526001600160a01b038681166044830152600092169063ba087652906064016020604051808303816000875af1158015610631573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106559190610c44565b506106608484610731565b604080516001600160a01b0387811682526020820186905291810183905291925080851691908716907f6a35b5ae6350a53f285d0640563e2cecd691e98111694bfef06cc02495ce8add90606001610205565b6106bb6108ec565b6001600160a01b0381166107255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61072e81610946565b50565b6003546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a29190610c44565b905060006107b06000610996565b600554604051637092736960e11b81526001600160a01b0388811660048301529293506000929091169063e124e6d290602401602060405180830381865afa158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190610c44565b905060006108596001546103e861083b9190610cb2565b6108459085610cc9565b6108516103e885610cc9565b869190610abb565b6007546040516303cea95560e21b81526001600160a01b038a8116600483015260248201889052604482018490528981166064830152929350911690630f3aa554906084016020604051808303816000875af11580156108bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e19190610c44565b979650505050505050565b6000546001600160a01b0316331461026a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161071c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60065460405163019c8a3b60e11b8152821515600482015260009182916001600160a01b0390911690630339147690602401602060405180830381865afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a099190610c44565b90506000600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a849190610c44565b9050610ab36c0c9f2c9cd04674edea40000000610aab8369d3c21bcecceda1000000610cc9565b849190610abb565b949350505050565b600080806000198587098587029250828110838203039150508060001415610af55760008411610aea57600080fd5b508290049050610b68565b808411610b0157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6001600160a01b038116811461072e57600080fd5b60008060008060808587031215610b9a57600080fd5b8435610ba581610b6f565b93506020850135610bb581610b6f565b92506040850135610bc581610b6f565b9396929550929360600135925050565b600060208284031215610be757600080fd5b5035919050565b60008060408385031215610c0157600080fd5b8235610c0c81610b6f565b91506020830135610c1c81610b6f565b809150509250929050565b600060208284031215610c3957600080fd5b8135610b6881610b6f565b600060208284031215610c5657600080fd5b5051919050565b600060208284031215610c6f57600080fd5b8151610b6881610b6f565b600060208284031215610c8c57600080fd5b81518015158114610b6857600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610cc457610cc4610c9c565b500390565b6000816000190483118215151615610ce357610ce3610c9c565b50029056fea164736f6c634300080a000a';

type WithdrawPeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawPeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WithdrawPeriphery__factory extends ContractFactory {
  constructor(...args: WithdrawPeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WithdrawPeriphery> {
    return super.deploy(overrides || {}) as Promise<WithdrawPeriphery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WithdrawPeriphery {
    return super.attach(address) as WithdrawPeriphery;
  }
  override connect(signer: Signer): WithdrawPeriphery__factory {
    return super.connect(signer) as WithdrawPeriphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawPeripheryInterface {
    return new utils.Interface(_abi) as WithdrawPeripheryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WithdrawPeriphery {
    return new Contract(address, _abi, signerOrProvider) as WithdrawPeriphery;
  }
}
