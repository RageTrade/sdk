/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ClearingHouse, ClearingHouseInterface } from '../ClearingHouse';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'initRealToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'isRealTokenAlreadyInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'realTokenInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615b09806200019a6000396000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c80637cc2f4f51161015c578063b7902303116100ce578063e1f1671311610087578063e1f167131461076b578063e67ed1df1461077e578063eb7c987d14610791578063ee6cd5ee1461083c578063fcd0a5061461084f578063fe6f083a1461086257600080fd5b8063b7902303146106ee578063d257be2b14610701578063d38bfff414610714578063dac42a9614610727578063dbc0c0851461073a578063dbd035ff1461074b57600080fd5b806394c8c71d1161012057806394c8c71d1461061257806398f5c527146106255780639dca362f14610638578063a26f7ca714610640578063a4063dbc14610653578063a5cf7688146106d657600080fd5b80637cc2f4f5146105085780637f64d6631461051b57806384088b651461052e5780638ce25a931461056357806393420cf41461056c57600080fd5b80633fc42d80116102005780635aa6e675116101b95780635aa6e675146104885780635c318ad91461049f5780635c975abb146104b257806364f36801146104bf57806373cceb9d146104d25780637938d8a3146104f557600080fd5b80633fc42d80146103b157806342be9fca146103e457806343233d2e146103f75780634e10b6e3146104265780635616847614610449578063569634d31461047557600080fd5b80632a66e9ca116102525780632a66e9ca1461032a5780632afaea371461033d57806332a72d981461035057806336fadead14610378578063393590291461038b5780633d56a35e1461039e57600080fd5b8063127fec131461028f57806316c38b3c146102bf5780631e2eaeaf146102d457806321df4c0e146102f4578063261f806714610317575b600080fd5b60d8546102a2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102d26102cd36600461476d565b610875565b005b6102e66102e236600461478a565b5490565b6040519081526020016102b6565b61030761030236600461478a565b6108d3565b6040516102b694939291906147db565b6102d261032536600461497d565b61091e565b6102d26103383660046149ac565b61096d565b6102d261034b3660046149f5565b610a30565b61036361035e366004614a7f565b610b98565b604080519283526020830191909152016102b6565b6102d2610386366004614b2e565b610d91565b6102d26103993660046149f5565b610e07565b60d6546102a2906001600160a01b031681565b6103d46103bf36600461497d565b60d26020526000908152604090205460ff1681565b60405190151581526020016102b6565b6102e66103f2366004614b67565b610f63565b6102a2610405366004614b89565b63ffffffff166000908152606660205260409020546001600160a01b031690565b6103d461043436600461497d565b60d06020526000908152604090205460ff1681565b6103d461045736600461497d565b6001600160a01b0316600090815260d0602052604090205460ff1690565b6102e661048336600461478a565b610fe7565b6000546201000090046001600160a01b03166102a2565b6102d26104ad366004614ba6565b610ffa565b60d5546103d49060ff1681565b6102d26104cd366004614b2e565b611063565b6103d46104e036600461497d565b60d16020526000908152604090205460ff1681565b6102d2610503366004614b67565b6110d9565b6102e6610516366004614bf7565b611203565b6102d261052936600461497d565b61121c565b61054161053c366004614c65565b6112ea565b60408051825181526020808401519082015291810151908201526060016102b6565b6102e660d35481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff80821683526201000082048116838701908152600160201b9092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102b6565b610541610620366004614ca4565b61131c565b6102d2610633366004614cf6565b6113cb565b6102e66114a6565b6102d261064e366004614d67565b611545565b61066661066136600461497d565b6115bd565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e0016102b6565b60d5546102a29061010090046001600160a01b031681565b60d7546102a2906001600160a01b031681565b61036361070f36600461497d565b611699565b6102d261072236600461497d565b6116cd565b6103d4610735366004614b89565b61178f565b6001546001600160a01b03166102a2565b61075e610759366004614dcc565b6117be565b6040516102b69190614e57565b6102d2610779366004614e9b565b6117e9565b61036361078c366004614f10565b61193f565b61080661079f366004614b89565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff16908201526060016102b6565b61036361084a366004614f35565b611966565b6102d261085d366004614f75565b611ad8565b6102e6610870366004614fc0565b611ba9565b6001546001600160a01b031633148015906108a257506000546001600160a01b0362010000909104163314155b156108c057604051636bd1573560e11b815260040160405180910390fd5b60d5805460ff1916911515919091179055565b600081815260d46020526040812080546001600160a01b031691906060908190610901606882016064611be5565b9250610911600182016064611d67565b9597909650929493505050565b60d6546001600160a01b03163314610949576040516385734f3160e01b815260040160405180910390fd5b6001600160a01b0316600090815260d060205260409020805460ff19166001179055565b60d6546001600160a01b03163314610998576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff8082166000908152606660205260408120549293506109d3926001600160a01b0316916120a716565b6109df576109df61500a565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390610a288282615149565b505050505050565b60d55460ff1615610a54576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610a9357604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610a9e846120b8565b9050610ac8333085610ab785546001600160a01b031690565b6001600160a01b031692919061214e565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610b2c57600080fd5b505af4158015610b40573d6000803e3d6000fd5b50508254604080518981526001600160a01b03909216602083015281018690527fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75925060600190505b60405180910390a15050505050565b60d554600090819060ff1615610bc1576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314610bfb57604051630504a20d60e01b8152336004820152602401610a8a565b6000610c06866121b9565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc29190615237565b90945092506000610cd284612250565b606b54909150811015610cfb576040516312b6b5cd60e11b815260048101829052602401610a8a565b60208601516001600160a01b031615801590610d1957508560600151155b15610d865785604001518015610d4057508551610d3590612250565b610d3e85612250565b145b80610d6957508560400151158015610d6957508551610d5e90612250565b610d6786612250565b145b610d86576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610dbe57506000546001600160a01b0362010000909104163314155b15610ddc57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b60d55460ff1615610e2b576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610e6557604051630504a20d60e01b8152336004820152602401610a8a565b6000610e70846120b8565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610edd57600080fd5b505af4158015610ef1573d6000803e3d6000fd5b50505050610f1b3384610f0b84546001600160a01b031690565b6001600160a01b0316919061226b565b8054604080518781526001600160a01b03909216602083015281018490527fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690606001610b89565b6000818015610fc95760005a9050610f7b604461229b565b610f8585856122c7565b92506000815a610f959190615271565b905080831115610fc257604051634010928f60e01b81526004810184905260248101829052604401610a8a565b5050610fe0565b610fd3604461229b565b610fdd84846122c7565b91505b5092915050565b6000610ff48260006122c7565b92915050565b6001546001600160a01b0316331480159061102757506000546001600160a01b0362010000909104163314155b1561104557604051636bd1573560e11b815260040160405180910390fd5b8360686110528282615288565b5050606a92909255606b5560695550565b6001546001600160a01b0316331480159061109057506000546001600160a01b0362010000909104163314155b156110ae57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d260205260409020805460ff1916911515919091179055565b60d55460ff16156110fd576040516313d0ff5960e31b815260040160405180910390fd5b600082815260d46020526040902080546001600160a01b0316331461113757604051630504a20d60e01b8152336004820152602401610a8a565b604051634042e78f60e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91634042e78f910160006040518083038186803b15801561119057600080fd5b505af41580156111a4573d6000803e3d6000fd5b505060d5546111c5925061010090046001600160a01b03169050338461226b565b60408051848152602081018490527fb8635fe5938466cc626f7c214bf818f090e2b736368828f448cd2b379cf0174e910160405180910390a1505050565b6000611213858585856000612414565b95945050505050565b6001546001600160a01b0316331480159061124957506000546001600160a01b0362010000909104163314155b1561126757604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661128e5760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b61130e60405180606001604052806000815260200160008152602001600081525090565b611213858585856000612523565b61134060405180606001604052806000815260200160008152602001600081525090565b8180156113a75760005a905061135660a461229b565b6113638888888888612523565b92506000815a6113739190615271565b9050808311156113a057604051634010928f60e01b81526004810184905260248101829052604401610a8a565b50506113c1565b6113b160a461229b565b6113be8787878787612523565b91505b5095945050505050565b600054610100900460ff16806113e4575060005460ff16155b6114005760405162461bcd60e51b8152600401610a8a906152f6565b600054610100900460ff16158015611422576000805461ffff19166101011790555b60d680546001600160a01b03199081166001600160a01b038981169190911790925560d58054610100600160a81b0319166101008985160217905560d78054821687841617905560d8805482168584161790556067805490911691851691909117905561148d61267a565b8015610a28576000805461ff0019169055505050505050565b60d55460009060ff16156114cd576040516313d0ff5960e31b815260040160405180910390fd5b5060d3546114dc816001615344565b60d355600081815260d4602090815260409182902080546001600160a01b031916339081178255600182018590558351908152918201849052917f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3910160405180910390a15090565b6001546001600160a01b0316331480159061157257506000546001600160a01b0362010000909104163314155b1561159057604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216600090815260646020526040902081906002016115b78282615091565b50505050565b611602604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff600160201b8504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b6000806116b06001600160a01b0384166064612685565b91506116c66001600160a01b03841660646126b2565b9050915091565b6000546001600160a01b03620100009091041633146116ff57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166117265760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff8082166000908152606660205260408120549091610ff4916001600160a01b03169083906120a716565b606060208251028201602001825b818110156117e15760200180515481526117cc565b509192915050565b6000805b8281101561190c5760008484838181106118095761180961535c565b905060200201602081019061181e919061497d565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561185d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118819190615372565b90507f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c48585848181106118b6576118b661535c565b90506020020160208101906118cb919061497d565b604080516001600160a01b039092168252602082018490520160405180910390a16118f68184615344565b92505080806119049061538b565b9150506117ed565b5061193a6119226001546001600160a01b031690565b60d55461010090046001600160a01b0316908361226b565b505050565b600082815260d460205260408120819061195b908460646126ca565b909590945092505050565b60d554600090819060ff161561198f576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b031633146119c957604051630504a20d60e01b8152336004820152602401610a8a565b60006119d4866121b9565b90506119e6608086016060870161497d565b6001600160a01b031615611a1d57611a1d81611a08608088016060890161497d565b611a1860a0890160808a016153a6565b612720565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611a5b90859085908a906064906004016153d2565b6040805180830381865af4158015611a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9b9190615237565b90945092506000611aaf82868660646127c2565b606b54909150811015610d86576040516312b6b5cd60e11b815260048101829052602401610a8a565b6001546001600160a01b03163314801590611b0557506000546001600160a01b0362010000909104163314155b15611b2357604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611bce5760005a9050611bc160a461229b565b6113638888888888612414565b611bd860a461229b565b6113be8787878787612414565b60606000611bf284612802565b90508067ffffffffffffffff811115611c0d57611c0d614a2d565b604051908082528060200260200182016040528015611c5257816020015b6040805180820190915260008082526020820152815260200190600190039081611c2b5790505b50915060005b81811015611d5f57600184016000868360088110611c7857611c7861535c565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611cc657611cc661535c565b60209081029190910101516001600160a01b039091169052600185016000868360088110611cf657611cf661535c565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002054838281518110611d3f57611d3f61535c565b602090810291909101810151015280611d578161538b565b915050611c58565b505092915050565b600381015463ffffffff16600090815260028301602052604081205490606090611d9360018601612802565b90508067ffffffffffffffff811115611dae57611dae614a2d565b604051908082528060200260200182016040528015611e1a57816020015b611e076040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b815260200190600190039081611dcc5790505b50915060005b8181101561209e57846002016000876001018360088110611e4357611e4361535c565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611e9157611e9161535c565b60209081029190910101516001600160a01b039091169052600286016000600188018360088110611ec457611ec461535c565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154838281518110611f1057611f1061535c565b60200260200101516020018181525050856002016000876001018360088110611f3b57611f3b61535c565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010154838281518110611f8757611f8761535c565b60200260200101516040018181525050856002016000876001018360088110611fb257611fb261535c565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060020154838281518110611ffe57611ffe61535c565b6020026020010151606001818152505061206a86600201600088600101846008811061202c5761202c61535c565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060030161286c565b83828151811061207c5761207c61535c565b60200260200101516080018190525080806120969061538b565b915050611e20565b50509250929050565b6001600160a01b0390811691161490565b63ffffffff8082166000908152606560205260408120916120db918391612df016565b156121015760405163b087c8c360e01b815263ffffffff83166004820152602401610a8a565b80546001600160a01b0316600090815260d2602052604090205460ff1661214957805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610a8a565b919050565b6040516001600160a01b03808516602483015283166044820152606481018290526115b79085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612e03565b63ffffffff8082166000908152606660205260408120546001600160a01b0316916121e69183916120a716565b1561220c5760405163b087c8c360e01b815263ffffffff83166004820152602401610a8a565b6001600160a01b038116600090815260d1602052604090205460ff1661214957604051631079472960e21b81526001600160a01b0382166004820152602401610a8a565b600080821361226757612262826154a4565b610ff4565b5090565b6040516001600160a01b03831660248201526044810182905261193a90849063a9059cbb60e01b90606401612182565b3681106122c457604051634219202560e01b815236600482015260248101829052604401610a8a565b50565b60d55460009060ff16156122ee576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d4602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383836040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123849190615237565b9093509050600061239582856154c1565b60d5549091506123b49061010090046001600160a01b0316338661226b565b6123bd82612ed5565b6040805187815233602082015290810182905260608101859052608081018390527f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060a00160405180910390a150505092915050565b60d55460009060ff161561243b576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d46020526040812090612453876121b9565b90506000606a546124649190615344565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b1580156124e357600080fd5b505af41580156124f7573d6000803e3d6000fd5b505060d554612518925061010090046001600160a01b03169050338561226b565b505095945050505050565b61254760405180606001604052806000815260200160008152602001600081525090565b60d55460ff161561256b576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff161115612592576040516348d69f3560e01b815260040160405180910390fd5b600085815260d460205260408120906125aa866121b9565b600089815260d46020526040808220905163487e8af160e01b815260048101869052602481019190915261ffff881660448201526001600160a01b0383166064828101919091526084820183905260a48201529192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af19060c401608060405180830381865af415801561263d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126619190615502565b9450905061266e81612ed5565b50505095945050505050565b336122c48180612f66565b60006126ab61269d6001600160a01b0385168461306e565b6001600160a01b0316613100565b9392505050565b60006126ab61269d6001600160a01b0385168461317c565b6000806126d785846131ba565b91506126eb600186018560028601866131e6565b600286015490915063ffffffff1615612718578260050154811261270f5780612715565b82600501545b90505b935093915050565b60006127366001600160a01b038516606461333b565b90506000836001600160a01b0316826001600160a01b0316116127625761275d828561557b565b61276c565b61276c848361557b565b905061271061277f8561ffff86166155a3565b61278991906155e8565b6001600160a01b0316816001600160a01b031611156127bb576040516307a1db0760e01b815260040160405180910390fd5b5050505050565b60006127cd83612250565b6127f86127e36001600160a01b038816856126b2565b600160801b6127f188612250565b9190613361565b61121391906154c1565b6000805b60088160ff16101561286357828160ff16600881106128275761282761535c565b60088104919091015460079091166004026101000a900463ffffffff166128515760ff1692915050565b8061285b8161560e565b915050612806565b50600892915050565b60606000612879836133a3565b90508067ffffffffffffffff81111561289457612894614a2d565b60405190808252806020026020018201604052801561292457816020015b6129116040805161012081019091528060008152602001600060020b8152602001600060020b815260200160006001600160801b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816128b25790505b50915060005b81811015612de95760018401600085836005811061294a5761294a61535c565b600580820492909201549190066006026101000a900465ffffffffffff168152602081019190915260400160002054835160ff909116908490839081106129935761299361535c565b60200260200101516000019060028111156129b0576129b06147a3565b908160028111156129c3576129c36147a3565b9052506001840160008583600581106129de576129de61535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160019054906101000a900460020b838281518110612a3d57612a3d61535c565b60209081029190910181015160029290920b910152600184016000858360058110612a6a57612a6a61535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160049054906101000a900460020b838281518110612ac957612ac961535c565b602090810291909101015160029190910b604090910152600184016000858360058110612af857612af861535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160079054906101000a90046001600160801b0316838281518110612b5d57612b5d61535c565b60209081029190910101516001600160801b03909116606090910152600184016000858360058110612b9157612b9161535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060010154838281518110612be357612be361535c565b602090810291909101015160800152600184016000858360058110612c0a57612c0a61535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060020154838281518110612c5c57612c5c61535c565b602090810291909101015160a00152600184016000858360058110612c8357612c8361535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060030154838281518110612cd557612cd561535c565b602090810291909101015160c00152600184016000858360058110612cfc57612cfc61535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060040154838281518110612d4e57612d4e61535c565b602090810291909101015160e00152600184016000858360058110612d7557612d7561535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060050154838281518110612dc757612dc761535c565b6020908102919091010151610100015280612de18161538b565b91505061292a565b5050919050565b90546001600160a01b0391821691161490565b6000612e58826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661341a9092919063ffffffff16565b80519091501561193a5780806020019051810190612e76919061562e565b61193a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a8a565b6000811315612f005760d75460d5546122c4916001600160a01b03610100909204821691168361226b565b60d7546001600160a01b031663379607f5612f1a836154a4565b6040518263ffffffff1660e01b8152600401612f3891815260200190565b600060405180830381600087803b158015612f5257600080fd5b505af11580156127bb573d6000803e3d6000fd5b600054610100900460ff1680612f7f575060005460ff16155b612f9b5760405162461bcd60e51b8152600401610a8a906152f6565b600054610100900460ff16158015612fbd576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801561193a576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152600160201b820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa1580156130dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ab919061564b565b60006401000276a36001600160a01b038316108061313b575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561316457604051635d236c4560e01b81526001600160a01b0383166004820152602401610a8a565b610ff46001600160a01b03831680600160401b613429565b6001600160a01b0380831660009081526020839052604081206002810154905491926126ab92169063ffffffff600160201b9091048116906134d716565b60006131cd6001840160028401846134f8565b90506131dc6068840183613606565b6126ab90826154c1565b600080808080805b60088160ff16101561331957896001018160ff16600881106132125761321261535c565b60088104919091015460079091166004026101000a900463ffffffff1661323857613319565b60008860008c6001018460ff16600881106132555761325561535c565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b031691506132a2908c908c9084908c906136cc16565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff16156132ef576132dc84876154c1565b95506132e883866154c1565b9450613306565b6132f98484613787565b61330390886154c1565b96505b50806133118161560e565b9150506131ee565b506133248484613787565b61332e90866154c1565b9998505050505050505050565b6001600160a01b0380831660009081526020839052604081205490916126ab911661379e565b6000613387600085126133745784613380565b61338085600019615668565b8484613429565b905060008412156126ab5761339b816154a4565b949350505050565b6000805b60058160ff16101561341157828160ff16600581106133c8576133c861535c565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156133ff5760ff1692915050565b806134098161560e565b9150506133a7565b50600592915050565b606061339b8484600085613828565b600080806000198587098587029250828110838203039150508060001415613463576000841161345857600080fd5b5082900490506126ab565b80841161346f57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806134ed6001600160a01b03851684613950565b9050610fdd81613b6c565b6000805b60088160ff1610156135df576000856001018260ff16600881106135225761352261535c565b60088104919091015460079091166004026101000a900463ffffffff1690508061354c57506135df565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b039091169161358a90829084908990613e9e16565b61359490866154c1565b945060006135ab6001600160a01b0384168861317c565b90506135bc6003830182858a613ec2565b6135c690876154c1565b95505050505080806135d79061560e565b9150506134fc565b50600382015463ffffffff16600090815260028501602052604090205461339b90826154c1565b60008060005b60088160ff1610156136c45760008560ff83166008811061362f5761362f61535c565b60088104919091015460079091166004026101000a900463ffffffff1690508061365957506136c4565b63ffffffff8116600090815260018601602052604090206136a361367c82613eef565b63ffffffff808516600090815260018b0160205260409020549190600160801b9061336116565b6136ad90856154c1565b9350505080806136bc9061560e565b91505061360c565b509392505050565b63ffffffff8083166000908152600286016020526040812090918291908290613702906001600160a01b0388169087906126b216565b9050600061371a6001600160a01b0388168988613efd565b8354909150600061372d60038601613f57565b905061375661ffff8416620186a06127f187600160801b8261374f888a6154c1565b6000613787565b965061377761ffff8416620186a06127f187600160801b8261374f896154a4565b9550505050505094509492505050565b600081831315613798575081610ff4565b50919050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156137df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061380391906156ed565b509496509294505050506001600160a01b03831615159050613798576126ab81613b6c565b6060824710156138895760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a8a565b843b6138d75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a8a565b600080866001600160a01b031685876040516138f391906157bb565b60006040518083038185875af1925050503d8060008114613930576040519150601f19603f3d011682016040523d82523d6000602084013e613935565b606091505b5091509150613945828286613fd2565b979650505050505050565b600063ffffffff8216613979576040516351a4d88160e01b815260006004820152602401610a8a565b60408051600280825260608201835260009260208301908036833701905050905082816000815181106139ae576139ae61535c565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106139dd576139dd61535c565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90613a1e9084906004016157d7565b600060405180830381865afa925050508015613a5c57506040513d6000823e601f3d908101601f19168201604052613a599190810190615884565b60015b613ad157836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ac291906156ed565b50939650610fe0945050505050565b600082600081518110613ae657613ae661535c565b602002602001015183600181518110613b0157613b0161535c565b6020026020010151613b139190615950565b90506000613b2763ffffffff8816836159a0565b905060008260060b128015613b4d5750613b4763ffffffff8816836159de565b60060b15155b15613b605780613b5c81615a00565b9150505b9450610ff49350505050565b60008060008360020b12613b83578260020b613b8b565b8260020b6000035b9050620d89e8811115613bc45760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610a8a565b600060018216613bd857600160801b613bea565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613c1e576ffff97272373d413259a46990580e213a0260801c5b6004821615613c3d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613c5c576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613c7b576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613c9a576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613cb9576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613cd8576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613cf8576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613d18576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613d38576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613d58576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613d78576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613d98576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613db8576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613dd8576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613df9576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613e19576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613e38576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613e55576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613e76578060001981613e7257613e726155d2565b0490505b600160201b810615613e89576001613e8c565b60005b60ff16602082901c0192505050919050565b600080613eb46001600160a01b038516846126b2565b90506112138585838661400b565b6001600160a01b038281166000908152602083905260408120600101549091611213918791879116614038565b6000610ff461269d836140d4565b60008215613f2b57506001600160a01b03831660009081526020829052604090206002015461ffff166126ab565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff166126ab565b6000805b6005811015613798576000838260058110613f7857613f7861535c565b600580820492909201549190066006026101000a900465ffffffffffff1660008181526001860160205260409020909150613fb290614166565b613fbc9084615344565b9250508080613fca9061538b565b915050613f5b565b60608315613fe15750816126ab565b825115613ff15782518084602001fd5b8160405162461bcd60e51b8152600401610a8a9190615a24565b6001600160a01b0383811660009081526020839052604081206001015490916112139187918691166141bd565b6000805b60058110156136c45760008582600581106140595761405961535c565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff166000141561409057506136c4565b65ffffffffffff8116600090815260018701602052604090206140b49086866141e7565b6140be90846154c1565b92505080806140cc9061538b565b91505061403c565b60006140ea82600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015614142573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff4919061564b565b8054600090819061417e90610100900460020b613b6c565b835490915060009061419990600160201b900460020b613b6c565b845490915061339b9083908390600160381b90046001600160801b03166001614300565b82546000906141d19084600160801b613361565b90506141dd84836143b5565b61339b90826154c1565b600080806141f5868661443a565b91509150600061420d866001600160a01b0316613100565b90508161421f8483600160801b613361565b61422991906154c1565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015614291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142b59190615a57565b90506142d66142d182606001518761450490919063ffffffff16565b61453b565b6142e090836154c1565b815160408301519193506142f69187919061454d565b61121390836154c1565b6000836001600160a01b0316856001600160a01b03161115614320579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661435357600080fd5b8361438957866001600160a01b03166143768383896001600160a01b0316613429565b81614383576143836155d2565b04613945565b6139456143a08383896001600160a01b0316614587565b886001600160a01b0316808204910615150190565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156143f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061441a9190615372565b9050600061443182866002015487600101546145c7565b611213906154a4565b81546000908190819061445490610100900460020b613b6c565b855490915060009061446f90600160201b900460020b613b6c565b9050846001600160a01b03808416908216101561448d5750816144aa565b816001600160a01b0316866001600160a01b031611156144aa5750805b86546144cf906142d19083908590600160381b90046001600160801b03166000614300565b94506144f86142d184838a60000160079054906101000a90046001600160801b031660006145e2565b93505050509250929050565b815460058301546000916126ab91600160381b9091046001600160801b031690600160801b906145349086615271565b9190613429565b6000600160ff1b821061226757600080fd5b600283015460038401546004850154855460009361457e9387938793600160381b90046001600160801b0316614652565b61339b906154a4565b6000614594848484613429565b9050600082806145a6576145a66155d2565b84860911156126ab5760001981106145bd57600080fd5b6001019392505050565b600061339b6145d68486615abd565b8390600160801b61467a565b6000836001600160a01b0316856001600160a01b03161115614602579293925b8161462f5761462a836001600160801b03168686036001600160a01b0316600160601b613429565b611213565b611213836001600160801b03168686036001600160a01b0316600160601b614587565b600061394582600160801b6146698888888d61470b565b614673908a615abd565b9190614730565b600060018180808088121561469c57921592614695886154a4565b92506146a0565b8792505b60008712156146bc579215926146b5876154a4565b91506146c0565b8691505b60008612156146df579215926146d886600019615668565b90506146e2565b50845b6146ed838383613429565b945083614700576146fd856154a4565b94505b505050509392505050565b600061472661471a8684615abd565b8590600160801b61467a565b61121390846154c1565b600061473d848484613361565b905060008112156126ab5761339b600019826154c1565b80151581146122c457600080fd5b803561214981614754565b60006020828403121561477f57600080fd5b81356126ab81614754565b60006020828403121561479c57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106147d757634e487b7160e01b600052602160045260246000fd5b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b81811015614837578651805187168452850151858401529584019591830191600101614810565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561495457848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b8083101561493f5783516148c28382516147b9565b8b8101518060020b8d850152508a81015160020b8b84015260608101516148f460608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a840193506001830192506148ad565b509a89019a945050509086019060010161485a565b50909e9d5050505050505050505050505050565b6001600160a01b03811681146122c457600080fd5b60006020828403121561498f57600080fd5b81356126ab81614968565b600060e0828403121561379857600080fd5b60008061010083850312156149c057600080fd5b82356149cb81614968565b91506149da846020850161499a565b90509250929050565b63ffffffff811681146122c457600080fd5b600080600060608486031215614a0a57600080fd5b833592506020840135614a1c816149e3565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715614a6c57614a6c614a2d565b604052919050565b803561214981614968565b600080600083850360c0811215614a9557600080fd5b843593506020850135614aa7816149e3565b92506080603f1982011215614abb57600080fd5b506040516080810181811067ffffffffffffffff82111715614adf57614adf614a2d565b604090815285013581526060850135614af781614968565b60208201526080850135614b0a81614754565b604082015260a0850135614b1d81614754565b606082015292959194509192509050565b60008060408385031215614b4157600080fd5b8235614b4c81614968565b91506020830135614b5c81614754565b809150509250929050565b60008060408385031215614b7a57600080fd5b50508035926020909101359150565b600060208284031215614b9b57600080fd5b81356126ab816149e3565b60008060008084860360c0811215614bbd57600080fd5b6060811215614bcb57600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b81146122c457600080fd5b60008060008060808587031215614c0d57600080fd5b843593506020850135614c1f816149e3565b92506040850135614c2f81614be8565b91506060850135614c3f81614be8565b939692955090935050565b61ffff811681146122c457600080fd5b803561214981614c4a565b60008060008060808587031215614c7b57600080fd5b84359350602085013592506040850135614c94816149e3565b91506060850135614c3f81614c4a565b600080600080600060a08688031215614cbc57600080fd5b85359450602086013593506040860135614cd5816149e3565b92506060860135614ce581614c4a565b949793965091946080013592915050565b600080600080600060a08688031215614d0e57600080fd5b8535614d1981614968565b94506020860135614d2981614968565b93506040860135614d3981614968565b92506060860135614d4981614968565b91506080860135614d5981614968565b809150509295509295909350565b60008082840360c0811215614d7b57600080fd5b8335614d8681614968565b925060a0601f1982011215614d9a57600080fd5b506020830190509250929050565b600067ffffffffffffffff821115614dc257614dc2614a2d565b5060051b60200190565b60006020808385031215614ddf57600080fd5b823567ffffffffffffffff811115614df657600080fd5b8301601f81018513614e0757600080fd5b8035614e1a614e1582614da8565b614a43565b81815260059190911b82018301908381019087831115614e3957600080fd5b928401925b8284101561394557833582529284019290840190614e3e565b6020808252825182820181905260009190848201906040850190845b81811015614e8f57835183529284019291840191600101614e73565b50909695505050505050565b60008060208385031215614eae57600080fd5b823567ffffffffffffffff80821115614ec657600080fd5b818501915085601f830112614eda57600080fd5b813581811115614ee957600080fd5b8660208260051b8501011115614efe57600080fd5b60209290920196919550909350505050565b60008060408385031215614f2357600080fd5b823591506020830135614b5c81614754565b60008060006101208486031215614f4b57600080fd5b833592506020840135614f5d816149e3565b9150614f6c856040860161499a565b90509250925092565b600080600060608486031215614f8a57600080fd5b8335614f9581614968565b92506020840135614fa581614968565b91506040840135614fb5816149e3565b809150509250925092565b600080600080600060a08688031215614fd857600080fd5b853594506020860135614fea816149e3565b93506040860135614ffa81614be8565b92506060860135614ce581614be8565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008135610ff481614968565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b813561509c81614c4a565b815461ffff191661ffff82161782555060208201356150ba81614c4a565b815463ffff00001916601082901b63ffff0000161782555060408201356150e0816149e3565b815467ffffffff000000008260201b1691508167ffffffff00000000198216178355606084013561511081614754565b68ffffffffff00000000199190911690911790151560401b60ff60401b16178155608082013561513f81614968565b61193a818361504d565b813561515481614968565b61515e8183615020565b50602082013561516d81614968565b61517a8160018401615020565b5060028101604083013561518d81614c4a565b815461ffff191661ffff82161782555060608301356151ab81614c4a565b815463ffff00001916601082901b63ffff0000161782555060808301356151d1816149e3565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a085013561520181614754565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815561193a61523160c08501615040565b8261504d565b6000806040838503121561524a57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000828210156152835761528361525b565b500390565b813561529381614c4a565b815461ffff191661ffff82161782555060208201356152b181614c4a565b815463ffff00001916601082901b63ffff0000161782555060408201356152d781614c4a565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600082198211156153575761535761525b565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561538457600080fd5b5051919050565b600060001982141561539f5761539f61525b565b5060010190565b6000602082840312156153b857600080fd5b81356126ab81614c4a565b80356003811061214957600080fd5b8481526001600160a01b0384166020820152610140810183356153f481614be8565b60020b6040830152602084013561540a81614be8565b60020b60608301526040840135600f81900b811461542757600080fd5b6154366080840182600f0b9052565b5061544360608501614a74565b6001600160a01b031660a083015261545d60808501614c5a565b61ffff1660c083015261547260a08501614762565b151560e083015261548560c085016153c3565b6154936101008401826147b9565b508261012083015295945050505050565b6000600160ff1b8214156154ba576154ba61525b565b5060000390565b600080821280156001600160ff1b03849003851316156154e3576154e361525b565b600160ff1b83900384128116156154fc576154fc61525b565b50500190565b600080828403608081121561551657600080fd5b835192506060601f198201121561552c57600080fd5b506040516060810181811067ffffffffffffffff8211171561555057615550614a2d565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b038381169083168181101561559b5761559b61525b565b039392505050565b60006001600160a01b03828116848216811515828404821116156155c9576155c961525b565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b0383811680615602576156026155d2565b92169190910492915050565b600060ff821660ff8114156156255761562561525b565b60010192915050565b60006020828403121561564057600080fd5b81516126ab81614754565b60006020828403121561565d57600080fd5b81516126ab81614968565b60006001600160ff1b038184138284138082168684048611161561568e5761568e61525b565b600160ff1b60008712828116878305891216156156ad576156ad61525b565b600087129250878205871284841616156156c9576156c961525b565b878505871281841616156156df576156df61525b565b505050929093029392505050565b600080600080600080600060e0888a03121561570857600080fd5b875161571381614968565b602089015190975061572481614be8565b604089015190965061573581614c4a565b606089015190955061574681614c4a565b608089015190945061575781614c4a565b60a089015190935060ff8116811461576e57600080fd5b60c089015190925061577f81614754565b8091505092959891949750929550565b60005b838110156157aa578181015183820152602001615792565b838111156115b75750506000910152565b600082516157cd81846020870161578f565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015614e8f57835163ffffffff16835292840192918401916001016157f3565b600082601f83011261582657600080fd5b81516020615836614e1583614da8565b82815260059290921b8401810191818101908684111561585557600080fd5b8286015b8481101561587957805161586c81614968565b8352918301918301615859565b509695505050505050565b6000806040838503121561589757600080fd5b825167ffffffffffffffff808211156158af57600080fd5b818501915085601f8301126158c357600080fd5b815160206158d3614e1583614da8565b82815260059290921b840181019181810190898411156158f257600080fd5b948201945b838610156159205785518060060b81146159115760008081fd5b825294820194908201906158f7565b9188015191965090935050508082111561593957600080fd5b5061594685828601615815565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561597b5761597b61525b565b81667fffffffffffff0183138116156159965761599661525b565b5090039392505050565b60008160060b8360060b806159b7576159b76155d2565b667fffffffffffff198214600019821416156159d5576159d561525b565b90059392505050565b60008260060b806159f1576159f16155d2565b808360060b0791505092915050565b60008160020b627fffff19811415615a1a57615a1a61525b565b6000190192915050565b6020815260008251806020840152615a4381604085016020870161578f565b601f01601f19169190910160400192915050565b600060808284031215615a6957600080fd5b6040516080810181811067ffffffffffffffff82111715615a8c57615a8c614a2d565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60008083128015600160ff1b850184121615615adb57615adb61525b565b6001600160ff1b0384018313811615615af657615af661525b565b5050039056fea164736f6c634300080a000a';

type ClearingHouseConstructorParams =
  | [linkLibraryAddresses: ClearingHouseLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouse__factory extends ContractFactory {
  constructor(...args: ClearingHouseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouse__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouse> {
    return super.deploy(overrides || {}) as Promise<ClearingHouse>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouse {
    return super.attach(address) as ClearingHouse;
  }
  connect(signer: Signer): ClearingHouse__factory {
    return super.connect(signer) as ClearingHouse__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseInterface {
    return new utils.Interface(_abi) as ClearingHouseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouse {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouse;
  }
}

export interface ClearingHouseLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
