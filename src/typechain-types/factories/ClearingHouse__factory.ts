/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ClearingHouse, ClearingHouseInterface } from '../ClearingHouse';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountNetProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountNetProfit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b61540c806200019a6000396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80638ce25a9311610151578063d38bfff4116100c3578063e3d41c1811610087578063e3d41c1814610706578063e67ed1df14610719578063eb7c987d1461072c578063ee6cd5ee146107d7578063fcd0a506146107ea578063fe6f083a146107fd57600080fd5b8063d38bfff41461069c578063dac42a96146106af578063dbc0c085146106c2578063dbd035ff146106d3578063e1f16713146106f357600080fd5b80639dca362f116101155780639dca362f146105c0578063a26f7ca7146105c8578063a4063dbc146105db578063a5cf76881461065e578063b790230314610676578063d257be2b1461068957600080fd5b80638ce25a93146104d857806393420cf4146104e157806394c8c71d1461058757806398f5c5271461059a5780639cd1be58146105ad57600080fd5b806342be9fca116101ea5780635c975abb116101ae5780635c975abb1461043a57806364f368011461044757806373cceb9d1461045a5780637cc2f4f51461047d5780637f64d6631461049057806384088b65146104a357600080fd5b806342be9fca146103bb57806343233d2e146103ce578063569634d3146103fd5780635aa6e675146104105780635c318ad91461042757600080fd5b80632afaea371161023c5780632afaea371461031457806332a72d981461032757806336fadead1461034f57806339359029146103625780633d56a35e146103755780633fc42d801461038857600080fd5b8063127fec131461027957806316c38b3c146102a95780631e2eaeaf146102be57806321df4c0e146102de5780632a66e9ca14610301575b600080fd5b60d75461028c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102bc6102b7366004613d1b565b610810565b005b6102d06102cc366004613d38565b5490565b6040519081526020016102a0565b6102f16102ec366004613d38565b61086e565b6040516102a09493929190613d73565b6102bc61030f366004613f27565b610912565b6102bc610322366004613f70565b6109d5565b61033a610335366004614066565b610b36565b604080519283526020830191909152016102a0565b6102bc61035d366004614114565b610d2f565b6102bc610370366004613f70565b610da5565b60d55461028c906001600160a01b031681565b6103ab61039636600461414d565b60d16020526000908152604090205460ff1681565b60405190151581526020016102a0565b6102d06103c936600461416a565b610efb565b61028c6103dc36600461418c565b63ffffffff166000908152606660205260409020546001600160a01b031690565b6102bc61040b366004613d38565b610f7f565b6000546201000090046001600160a01b031661028c565b6102bc6104353660046141a9565b610f8e565b60d4546103ab9060ff1681565b6102bc610455366004614114565b610ff7565b6103ab61046836600461414d565b60d06020526000908152604090205460ff1681565b6102bc61048b3660046141fa565b61106d565b6102bc61049e36600461414d565b611082565b6104b66104b1366004614268565b611150565b60408051825181526020808401519082015291810151908201526060016102a0565b6102d060d25481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff80821683526201000082048116838701908152600160201b9092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102a0565b6104b66105953660046142a7565b61118b565b6102bc6105a83660046142f9565b61123a565b6102bc6105bb36600461416a565b611315565b6102d06114aa565b6102bc6105d636600461436a565b61154c565b6105ee6105e936600461414d565b6115c4565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e0016102a0565b60d45461028c9061010090046001600160a01b031681565b60d65461028c906001600160a01b031681565b61033a61069736600461414d565b6116a0565b6102bc6106aa36600461414d565b6116d4565b6103ab6106bd36600461418c565b611796565b6001546001600160a01b031661028c565b6106e66106e13660046143ce565b6117cb565b6040516102a09190614458565b6102bc61070136600461449c565b6117f9565b6102d0610714366004613d38565b61194f565b61033a610727366004614510565b611968565b6107a161073a36600461418c565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff16908201526060016102a0565b61033a6107e5366004614535565b61198f565b6102bc6107f8366004614575565b611b01565b6102d061080b3660046145c0565b611bd2565b6001546001600160a01b0316331480159061083d57506000546001600160a01b0362010000909104163314155b1561085b57604051636bd1573560e11b815260040160405180910390fd5b60d4805460ff1916911515919091179055565b600081815260d3602052604080822090516330977c6d60e21b81526004810191909152606460248201528190606090819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c25df1b490604401600060405180830381865af41580156108db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109039190810190614819565b93509350935093509193509193565b60d5546001600160a01b0316331461093d576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff808216600090815260666020526040812054929350610978926001600160a01b031691611c0e16565b6109845761098461491f565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526064909152902083906109cd8282614a5e565b505050505050565b60d45460ff16156109f9576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d36020526040902080546001600160a01b03163314610a3857604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610a45846001611c1f565b9050610a6f333085610a5e85546001600160a01b031690565b6001600160a01b0316929190611cbb565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610ad357600080fd5b505af4158015610ae7573d6000803e3d6000fd5b505082546040518681526001600160a01b0390911692508791507fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75906020015b60405180910390a35050505050565b60d454600090819060ff1615610b5f576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d36020526040902080546001600160a01b03163314610b9957604051630504a20d60e01b8152336004820152602401610a2f565b6000610ba486611d26565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c609190614b4c565b90945092506000610c7084611dc2565b606b54909150811015610c99576040516312b6b5cd60e11b815260048101829052602401610a2f565b60208601516001600160a01b031615801590610cb757508560600151155b15610d245785604001518015610cde57508551610cd390611dc2565b610cdc85611dc2565b145b80610d0757508560400151158015610d0757508551610cfc90611dc2565b610d0586611dc2565b145b610d24576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610d5c57506000546001600160a01b0362010000909104163314155b15610d7a57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d060205260409020805460ff1916911515919091179055565b60d45460ff1615610dc9576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d36020526040902080546001600160a01b03163314610e0357604051630504a20d60e01b8152336004820152602401610a2f565b6000610e10846000611c1f565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610e7d57600080fd5b505af4158015610e91573d6000803e3d6000fd5b50505050610ebb3384610eab84546001600160a01b031690565b6001600160a01b03169190611ddd565b80546040518481526001600160a01b039091169086907fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690602001610b27565b6000818015610f615760005a9050610f136044611e0d565b610f1d8585611e3a565b92506000815a610f2d9190614b86565b905080831115610f5a57604051634010928f60e01b81526004810184905260248101829052604401610a2f565b5050610f78565b610f6b6044611e0d565b610f758484611e3a565b91505b5092915050565b610f8a816000611e3a565b5050565b6001546001600160a01b03163314801590610fbb57506000546001600160a01b0362010000909104163314155b15610fd957604051636bd1573560e11b815260040160405180910390fd5b836068610fe68282614b9d565b5050606a92909255606b5560695550565b6001546001600160a01b0316331480159061102457506000546001600160a01b0362010000909104163314155b1561104257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b61107b848484846000611f7e565b5050505050565b6001546001600160a01b031633148015906110af57506000546001600160a01b0362010000909104163314155b156110cd57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166110f45760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b61117460405180606001604052806000815260200160008152602001600081525090565b61118285858585600061208d565b95945050505050565b6111af60405180606001604052806000815260200160008152602001600081525090565b8180156112165760005a90506111c560a4611e0d565b6111d2888888888861208d565b92506000815a6111e29190614b86565b90508083111561120f57604051634010928f60e01b81526004810184905260248101829052604401610a2f565b5050611230565b61122060a4611e0d565b61122d878787878761208d565b91505b5095945050505050565b600054610100900460ff1680611253575060005460ff16155b61126f5760405162461bcd60e51b8152600401610a2f90614c0b565b600054610100900460ff16158015611291576000805461ffff19166101011790555b60d580546001600160a01b03199081166001600160a01b038981169190911790925560d48054610100600160a81b0319166101008985160217905560d68054821687841617905560d780548216858416179055606780549091169185169190911790556112fc6121e4565b80156109cd576000805461ff0019169055505050505050565b60d45460ff1615611339576040516313d0ff5960e31b815260040160405180910390fd5b806113705760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610a2f565b600082815260d36020526040902080546001600160a01b031633146113aa57604051630504a20d60e01b8152336004820152602401610a2f565b60405163f632b1e360e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163f632b1e3910160006040518083038186803b15801561140357600080fd5b505af4158015611417573d6000803e3d6000fd5b5050505060008213156114465760d4546114419061010090046001600160a01b0316333085611cbb565b61146b565b61146b3361145384614c59565b60d45461010090046001600160a01b03169190611ddd565b827fb4604a31ce2914796ae6383c67cee47a3cb969b59a7dba0d06edcab53ff96a848360405161149d91815260200190565b60405180910390a2505050565b60d45460009060ff16156114d1576040516313d0ff5960e31b815260040160405180910390fd5b5060d2546114e0816001614c76565b60d255600081815260d360205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3906115409085815260200190565b60405180910390a25090565b6001546001600160a01b0316331480159061157957506000546001600160a01b0362010000909104163314155b1561159757604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216600090815260646020526040902081906002016115be82826149a6565b50505050565b611609604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff600160201b8504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b6000806116b76001600160a01b03841660646121ef565b91506116cd6001600160a01b038416606461221c565b9050915091565b6000546001600160a01b036201000090910416331461170657604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661172d5760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff80821660009081526066602052604081205490916117c5916001600160a01b0316908390611c0e16565b92915050565b606060208251028201602001602083015b818110156117f15780515481526020016117dc565b509192915050565b6000805b8281101561191c57600084848381811061181957611819614c8e565b905060200201602081019061182e919061414d565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561186d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118919190614ca4565b90508484838181106118a5576118a5614c8e565b90506020020160208101906118ba919061414d565b6001600160a01b03167f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c4826040516118f491815260200190565b60405180910390a26119068184614c76565b925050808061191490614cbd565b9150506117fd565b5061194a6119326001546001600160a01b031690565b60d45461010090046001600160a01b03169083611ddd565b505050565b600081815260d3602052604081206117c5906064612234565b600082815260d360205260408120819061198490846064612247565b909590945092505050565b60d454600090819060ff16156119b8576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d36020526040902080546001600160a01b031633146119f257604051630504a20d60e01b8152336004820152602401610a2f565b60006119fd86611d26565b9050611a0f608086016060870161414d565b6001600160a01b031615611a4657611a4681611a31608088016060890161414d565b611a4160a0890160808a01614cd8565b61229d565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611a8490859085908a90606490600401614d00565b6040805180830381865af4158015611aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac49190614b4c565b90945092506000611ad88286866064612338565b606b54909150811015610d24576040516312b6b5cd60e11b815260048101829052602401610a2f565b6001546001600160a01b03163314801590611b2e57506000546001600160a01b0362010000909104163314155b15611b4c57604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611bf75760005a9050611bea60a4611e0d565b6111d28888888888611f7e565b611c0160a4611e0d565b61122d8787878787611f7e565b6001600160a01b0390811691161490565b63ffffffff808316600090815260656020526040812091611c4291839161237816565b15611c685760405163b087c8c360e01b815263ffffffff84166004820152602401610a2f565b818015611c8f575080546001600160a01b0316600090815260d1602052604090205460ff16155b156117c557805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610a2f565b6040516001600160a01b03808516602483015283166044820152606481018290526115be9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261238b565b63ffffffff8082166000908152606660205260408120546001600160a01b031691611d53918391611c0e16565b15611d795760405163b087c8c360e01b815263ffffffff83166004820152602401610a2f565b6001600160a01b038116600090815260d0602052604090205460ff16611dbd57604051631079472960e21b81526001600160a01b0382166004820152602401610a2f565b919050565b6000808213611dd957611dd482614c59565b6117c5565b5090565b6040516001600160a01b03831660248201526044810182905261194a90849063a9059cbb60e01b90606401611cef565b36811015611e3757604051634219202560e01b815236600482015260248101829052604401610a2f565b50565b60d45460009060ff1615611e61576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d3602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383836040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015611ed3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ef79190614b4c565b90935090506000611f088285614dd2565b60d454909150611f279061010090046001600160a01b03163386611ddd565b611f308261245d565b6040805182815260208101869052908101839052339087907f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060600160405180910390a350505092915050565b60d45460009060ff1615611fa5576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d36020526040812090611fbd87611d26565b90506000606a54611fce9190614c76565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b15801561204d57600080fd5b505af4158015612061573d6000803e3d6000fd5b505060d454612082925061010090046001600160a01b031690503385611ddd565b505095945050505050565b6120b160405180606001604052806000815260200160008152602001600081525090565b60d45460ff16156120d5576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff1611156120fc576040516348d69f3560e01b815260040160405180910390fd5b600085815260d3602052604081209061211486611d26565b600089815260d36020526040808220905163487e8af160e01b815260048101869052602481019190915261ffff881660448201526001600160a01b0383166064828101919091526084820183905260a48201529192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af19060c401608060405180830381865af41580156121a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121cb9190614e13565b945090506121d88161245d565b50505095945050505050565b33611e3781806124ee565b60006122156122076001600160a01b038516846125f6565b6001600160a01b0316612688565b9392505050565b60006122156122076001600160a01b03851684612704565b6000612215600184016002840184612742565b6000806122548584612858565b91506122686001860185600286018661287d565b600286015490915063ffffffff1615612295578260050154811261228c5780612292565b82600501545b90505b935093915050565b60006122b36001600160a01b03851660646129d2565b90506000836001600160a01b0316826001600160a01b0316116122df576122da8285614e8b565b6122e9565b6122e98483614e8b565b90506127106122fc8561ffff8616614eb3565b6123069190614ef8565b6001600160a01b0316816001600160a01b0316111561107b576040516307a1db0760e01b815260040160405180910390fd5b600061234383611dc2565b61236e6123596001600160a01b0388168561221c565b600160801b61236788611dc2565b91906129f8565b6111829190614dd2565b90546001600160a01b0391821691161490565b60006123e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a329092919063ffffffff16565b80519091501561194a57808060200190518101906123fe9190614f1e565b61194a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a2f565b60008113156124885760d65460d454611e37916001600160a01b036101009092048216911683611ddd565b60d6546001600160a01b031663379607f56124a283614c59565b6040518263ffffffff1660e01b81526004016124c091815260200190565b600060405180830381600087803b1580156124da57600080fd5b505af115801561107b573d6000803e3d6000fd5b600054610100900460ff1680612507575060005460ff16155b6125235760405162461bcd60e51b8152600401610a2f90614c0b565b600054610100900460ff16158015612545576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801561194a576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152600160201b820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa158015612664573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122159190614f3b565b60006401000276a36001600160a01b03831610806126c3575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156126ec57604051635d236c4560e01b81526001600160a01b0383166004820152602401610a2f565b6117c56001600160a01b03831680600160401b612a41565b6001600160a01b03808316600090815260208390526040812060028101549054919261221592169063ffffffff600160201b909104811690612aef16565b6000805b60088160ff161015612829576000856001018260ff166008811061276c5761276c614c8e565b60088104919091015460079091166004026101000a900463ffffffff169050806127965750612829565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b03909116916127d490829084908990612b1016565b6127de9086614dd2565b945060006127f56001600160a01b03841688612704565b90506128066003830182858a612b34565b6128109087614dd2565b955050505050808061282190614f58565b915050612746565b50600382015463ffffffff1660009081526002850160205260409020546128509082614dd2565b949350505050565b60006128648383612234565b90506128736068840183612b61565b6122159082614dd2565b600080808080805b60088160ff1610156129b057896001018160ff16600881106128a9576128a9614c8e565b60088104919091015460079091166004026101000a900463ffffffff166128cf576129b0565b60008860008c6001018460ff16600881106128ec576128ec614c8e565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b03169150612939908c908c9084908c90612c2716565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff1615612986576129738487614dd2565b955061297f8386614dd2565b945061299d565b6129908484612ce2565b61299a9088614dd2565b96505b50806129a881614f58565b915050612885565b506129bb8484612ce2565b6129c59086614dd2565b9998505050505050505050565b6001600160a01b0380831660009081526020839052604081205490916122159116612cf9565b6000612a1e60008512612a0b5784612a17565b612a1785600019614f78565b8484612a41565b905060008412156122155761285081614c59565b60606128508484600085612d83565b600080806000198587098587029250828110838203039150508060001415612a7b5760008411612a7057600080fd5b508290049050612215565b808411612a8757600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080612b056001600160a01b03851684612eab565b9050610f75816130c7565b600080612b266001600160a01b0385168461221c565b9050611182858583866133f9565b6001600160a01b038281166000908152602083905260408120600101549091611182918791879116613426565b60008060005b60088160ff161015612c1f5760008560ff831660088110612b8a57612b8a614c8e565b60088104919091015460079091166004026101000a900463ffffffff16905080612bb45750612c1f565b63ffffffff811660009081526001860160205260409020612bfe612bd7826134c2565b63ffffffff808516600090815260018b0160205260409020549190600160801b906129f816565b612c089085614dd2565b935050508080612c1790614f58565b915050612b67565b509392505050565b63ffffffff8083166000908152600286016020526040812090918291908290612c5d906001600160a01b03881690879061221c16565b90506000612c756001600160a01b03881689886134d0565b83549091506000612c886003860161352a565b9050612cb161ffff8416620186a061236787600160801b82612caa888a614dd2565b6000612ce2565b9650612cd261ffff8416620186a061236787600160801b82612caa89614c59565b9550505050505094509492505050565b600081831315612cf35750816117c5565b50919050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612d3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d5e9190614ffd565b509496509294505050506001600160a01b03831615159050612cf357612215816130c7565b606082471015612de45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a2f565b843b612e325760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a2f565b600080866001600160a01b03168587604051612e4e91906150cb565b60006040518083038185875af1925050503d8060008114612e8b576040519150601f19603f3d011682016040523d82523d6000602084013e612e90565b606091505b5091509150612ea08282866135a5565b979650505050505050565b600063ffffffff8216612ed4576040516351a4d88160e01b815260006004820152602401610a2f565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110612f0957612f09614c8e565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110612f3857612f38614c8e565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90612f799084906004016150e7565b600060405180830381865afa925050508015612fb757506040513d6000823e601f3d908101601f19168201604052612fb49190810190615189565b60015b61302c57836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612ff9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301d9190614ffd565b50939650610f78945050505050565b60008260008151811061304157613041614c8e565b60200260200101518360018151811061305c5761305c614c8e565b602002602001015161306e9190615254565b9050600061308263ffffffff8816836152a4565b905060008260060b1280156130a857506130a263ffffffff8816836152e2565b60060b15155b156130bb57806130b781615304565b9150505b94506117c59350505050565b60008060008360020b126130de578260020b6130e6565b8260020b6000035b9050620d89e881111561311f5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610a2f565b60006001821661313357600160801b613145565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613179576ffff97272373d413259a46990580e213a0260801c5b6004821615613198576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156131b7576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156131d6576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156131f5576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613214576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613233576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613253576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613273576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613293576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156132b3576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156132d3576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156132f3576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613313576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613333576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613354576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613374576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613393576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156133b0576b048a170391f7dc42444e8fa20260801c5b60008460020b13156133d15780600019816133cd576133cd614ee2565b0490505b600160201b8106156133e45760016133e7565b60005b60ff16602082901c0192505050919050565b6001600160a01b0383811660009081526020839052604081206001015490916111829187918691166135de565b6000805b6005811015612c1f57600085826005811061344757613447614c8e565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff166000141561347e5750612c1f565b65ffffffffffff8116600090815260018701602052604090206134a2908686613608565b6134ac9084614dd2565b92505080806134ba90614cbd565b91505061342a565b60006117c561220783613797565b600082156134fe57506001600160a01b03831660009081526020829052604090206002015461ffff16612215565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff16612215565b6000805b6005811015612cf357600083826005811061354b5761354b614c8e565b600580820492909201549190066006026101000a900465ffffffffffff166000818152600186016020526040902090915061358590613829565b61358f9084614c76565b925050808061359d90614cbd565b91505061352e565b606083156135b4575081612215565b8251156135c45782518084602001fd5b8160405162461bcd60e51b8152600401610a2f9190615328565b82546000906135f29084600160801b6129f8565b90506135fe8483613880565b6128509082614dd2565b600080600061368c613683856001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136759190614f3b565b6001600160a01b0316612cf9565b87906000613905565b9150915060006136a4866001600160a01b0316612688565b9050816136b68483600160801b6129f8565b6136c09190614dd2565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015613728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061374c919061535b565b905061376d6137688260600151876139ce90919063ffffffff16565b613a05565b6137779083614dd2565b8151604083015191935061378d91879190613a17565b6111829083614dd2565b60006137ad82600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015613805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c59190614f3b565b8054600090819061384190610100900460020b6130c7565b835490915060009061385c90600160201b900460020b6130c7565b84549091506128509083908390600160381b90046001600160801b03166001613a51565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138e59190614ca4565b905060006138fc8286600201548760010154613b06565b61118290614c59565b82546000908190819061391f90610100900460020b6130c7565b865490915060009061393a90600160201b900460020b6130c7565b9050856001600160a01b038084169082161015613958575081613975565b816001600160a01b0316876001600160a01b031611156139755750805b8754613999906137689083908590600160381b90046001600160801b03168a613a51565b94506139c161376884838b60000160079054906101000a90046001600160801b03168a613b21565b9350505050935093915050565b8154600583015460009161221591600160381b9091046001600160801b031690600160801b906139fe9086614b86565b9190612a41565b6000600160ff1b8210611dd957600080fd5b6002830154600384015460048501548554600093613a489387938793600160381b90046001600160801b0316613b91565b61285090614c59565b6000836001600160a01b0316856001600160a01b03161115613a71579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b038686038116908716613aa457600080fd5b83613ada57866001600160a01b0316613ac78383896001600160a01b0316612a41565b81613ad457613ad4614ee2565b04612ea0565b612ea0613af18383896001600160a01b0316613bb9565b886001600160a01b0316808204910615150190565b6000612850613b1584866153c0565b8390600160801b613bf9565b6000836001600160a01b0316856001600160a01b03161115613b41579293925b81613b6e57613b69836001600160801b03168686036001600160a01b0316600160601b612a41565b611182565b611182836001600160801b03168686036001600160a01b0316600160601b613bb9565b6000612ea082600160801b613ba88888888d613c53565b613bb2908a6153c0565b9190613c78565b6000613bc6848484612a41565b905060008280613bd857613bd8614ee2565b8486091115612215576000198110613bef57600080fd5b6001019392505050565b60006001818080613c0a8885613cb6565b94509250613c188785613cb6565b94509150613c268685613cb6565b94509050613c35838383612a41565b945083613c4857613c4585614c59565b94505b505050509392505050565b6000613c6e613c6286846153c0565b8590600160801b613bf9565b6111829084614dd2565b6000613c858484846129f8565b9050600081128015613ca55750613ca5613c9e85613ce0565b8484613ceb565b156122155761285060001982614dd2565b6000806000841215613cd557911591613cce84614c59565b9150613cd9565b8391505b5092909150565b60006117c582611dc2565b6000818385098015612c1f57506001949350505050565b8015158114611e3757600080fd5b8035611dbd81613d02565b600060208284031215613d2d57600080fd5b813561221581613d02565b600060208284031215613d4a57600080fd5b5035919050565b60038110613d6f57634e487b7160e01b600052602160045260246000fd5b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b81811015613dcf578651805187168452850151858401529584019591830191600101613da8565b5050878103606089015288518082528382019550600581901b82018401848b0160005b83811015613eec57848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b80831015613ed7578351613e5a838251613d51565b8b8101518060020b8d850152508a81015160020b8b8401526060810151613e8c60608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a84019350600183019250613e45565b509a89019a9450505090860190600101613df2565b50909e9d5050505050505050505050505050565b6001600160a01b0381168114611e3757600080fd5b600060e08284031215612cf357600080fd5b6000806101008385031215613f3b57600080fd5b8235613f4681613f00565b9150613f558460208501613f15565b90509250929050565b63ffffffff81168114611e3757600080fd5b600080600060608486031215613f8557600080fd5b833592506020840135613f9781613f5e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715613fe057613fe0613fa8565b60405290565b60405161012081016001600160401b0381118282101715613fe057613fe0613fa8565b604080519081016001600160401b0381118282101715613fe057613fe0613fa8565b604051601f8201601f191681016001600160401b038111828210171561405357614053613fa8565b604052919050565b8035611dbd81613f00565b600080600083850360c081121561407c57600080fd5b84359350602085013561408e81613f5e565b92506080603f19820112156140a257600080fd5b50604051608081018181106001600160401b03821117156140c5576140c5613fa8565b6040908152850135815260608501356140dd81613f00565b602082015260808501356140f081613d02565b604082015260a085013561410381613d02565b606082015292959194509192509050565b6000806040838503121561412757600080fd5b823561413281613f00565b9150602083013561414281613d02565b809150509250929050565b60006020828403121561415f57600080fd5b813561221581613f00565b6000806040838503121561417d57600080fd5b50508035926020909101359150565b60006020828403121561419e57600080fd5b813561221581613f5e565b60008060008084860360c08112156141c057600080fd5b60608112156141ce57600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b8114611e3757600080fd5b6000806000806080858703121561421057600080fd5b84359350602085013561422281613f5e565b92506040850135614232816141eb565b91506060850135614242816141eb565b939692955090935050565b61ffff81168114611e3757600080fd5b8035611dbd8161424d565b6000806000806080858703121561427e57600080fd5b8435935060208501359250604085013561429781613f5e565b915060608501356142428161424d565b600080600080600060a086880312156142bf57600080fd5b853594506020860135935060408601356142d881613f5e565b925060608601356142e88161424d565b949793965091946080013592915050565b600080600080600060a0868803121561431157600080fd5b853561431c81613f00565b9450602086013561432c81613f00565b9350604086013561433c81613f00565b9250606086013561434c81613f00565b9150608086013561435c81613f00565b809150509295509295909350565b60008082840360c081121561437e57600080fd5b833561438981613f00565b925060a0601f198201121561439d57600080fd5b506020830190509250929050565b60006001600160401b038211156143c4576143c4613fa8565b5060051b60200190565b600060208083850312156143e157600080fd5b82356001600160401b038111156143f757600080fd5b8301601f8101851361440857600080fd5b803561441b614416826143ab565b61402b565b81815260059190911b8201830190838101908783111561443a57600080fd5b928401925b82841015612ea05783358252928401929084019061443f565b6020808252825182820181905260009190848201906040850190845b8181101561449057835183529284019291840191600101614474565b50909695505050505050565b600080602083850312156144af57600080fd5b82356001600160401b03808211156144c657600080fd5b818501915085601f8301126144da57600080fd5b8135818111156144e957600080fd5b8660208260051b85010111156144fe57600080fd5b60209290920196919550909350505050565b6000806040838503121561452357600080fd5b82359150602083013561414281613d02565b6000806000610120848603121561454b57600080fd5b83359250602084013561455d81613f5e565b915061456c8560408601613f15565b90509250925092565b60008060006060848603121561458a57600080fd5b833561459581613f00565b925060208401356145a581613f00565b915060408401356145b581613f5e565b809150509250925092565b600080600080600060a086880312156145d857600080fd5b8535945060208601356145ea81613f5e565b935060408601356145fa816141eb565b925060608601356142e8816141eb565b60038110611e3757600080fd5b8051611dbd8161460a565b8051611dbd816141eb565b80516001600160801b0381168114611dbd57600080fd5b600082601f83011261465557600080fd5b81516020614665614416836143ab565b82815260059290921b8401810191818101908684111561468457600080fd5b8286015b8481101561480e5780516001600160401b03808211156146a757600080fd5b9088019060a0828b03601f190112156146bf57600080fd5b6146c7613fbe565b868301516146d481613f00565b80825250604083015187820152606083015160408201526080830151606082015260a08301518281111561470757600080fd5b8084019350508a603f84011261471c57600080fd5b86830151915061472e614416836143ab565b82815261012092830284016040019288820191908d85111561474f57600080fd5b6040860195505b848610156147f85780868f03121561476d57600080fd5b614775613fe6565b61477e87614617565b815261478b8b8801614622565b8b82015261479b60408801614622565b60408201526147ac6060880161462d565b60608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e08201526101008701516101008201528084525089830192508086019550614756565b5060808301525085525050918301918301614688565b509695505050505050565b6000806000806080858703121561482f57600080fd5b845161483a81613f00565b8094505060208086015193506040808701516001600160401b038082111561486157600080fd5b818901915089601f83011261487557600080fd5b8151614883614416826143ab565b81815260069190911b8301850190858101908c8311156148a257600080fd5b938601935b828510156148eb5785858e0312156148bf5760008081fd5b6148c7614009565b85516148d281613f00565b81528588015188820152825293850193908601906148a7565b60608c0151909850955050508084111561490457600080fd5b50505061491387828801614644565b91505092959194509250565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b600081356117c581613f00565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b81356149b18161424d565b815461ffff191661ffff82161782555060208201356149cf8161424d565b815463ffff00001916601082901b63ffff0000161782555060408201356149f581613f5e565b815467ffffffff000000008260201b1691508167ffffffff000000001982161783556060840135614a2581613d02565b68ffffffffff00000000199190911690911790151560401b60ff60401b161781556080820135614a5481613f00565b61194a8183614962565b8135614a6981613f00565b614a738183614935565b506020820135614a8281613f00565b614a8f8160018401614935565b50600281016040830135614aa28161424d565b815461ffff191661ffff8216178255506060830135614ac08161424d565b815463ffff00001916601082901b63ffff000016178255506080830135614ae681613f5e565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135614b1681613d02565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815561194a614b4660c08501614955565b82614962565b60008060408385031215614b5f57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600082821015614b9857614b98614b70565b500390565b8135614ba88161424d565b815461ffff191661ffff8216178255506020820135614bc68161424d565b815463ffff00001916601082901b63ffff000016178255506040820135614bec8161424d565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000600160ff1b821415614c6f57614c6f614b70565b5060000390565b60008219821115614c8957614c89614b70565b500190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614cb657600080fd5b5051919050565b6000600019821415614cd157614cd1614b70565b5060010190565b600060208284031215614cea57600080fd5b81356122158161424d565b8035611dbd8161460a565b8481526001600160a01b038416602082015261014081018335614d22816141eb565b60020b60408301526020840135614d38816141eb565b60020b60608301526040840135600f81900b8114614d5557600080fd5b614d646080840182600f0b9052565b50614d716060850161405b565b6001600160a01b031660a0830152614d8b6080850161425d565b61ffff1660c0830152614da060a08501613d10565b151560e0830152614db360c08501614cf5565b614dc1610100840182613d51565b508261012083015295945050505050565b600080821280156001600160ff1b0384900385131615614df457614df4614b70565b600160ff1b8390038412811615614e0d57614e0d614b70565b50500190565b6000808284036080811215614e2757600080fd5b835192506060601f1982011215614e3d57600080fd5b50604051606081018181106001600160401b0382111715614e6057614e60613fa8565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b0383811690831681811015614eab57614eab614b70565b039392505050565b60006001600160a01b0382811684821681151582840482111615614ed957614ed9614b70565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b0383811680614f1257614f12614ee2565b92169190910492915050565b600060208284031215614f3057600080fd5b815161221581613d02565b600060208284031215614f4d57600080fd5b815161221581613f00565b600060ff821660ff811415614f6f57614f6f614b70565b60010192915050565b60006001600160ff1b0381841382841380821686840486111615614f9e57614f9e614b70565b600160ff1b6000871282811687830589121615614fbd57614fbd614b70565b60008712925087820587128484161615614fd957614fd9614b70565b87850587128184161615614fef57614fef614b70565b505050929093029392505050565b600080600080600080600060e0888a03121561501857600080fd5b875161502381613f00565b6020890151909750615034816141eb565b60408901519096506150458161424d565b60608901519095506150568161424d565b60808901519094506150678161424d565b60a089015190935060ff8116811461507e57600080fd5b60c089015190925061508f81613d02565b8091505092959891949750929550565b60005b838110156150ba5781810151838201526020016150a2565b838111156115be5750506000910152565b600082516150dd81846020870161509f565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561449057835163ffffffff1683529284019291840191600101615103565b600082601f83011261513657600080fd5b81516020615146614416836143ab565b82815260059290921b8401810191818101908684111561516557600080fd5b8286015b8481101561480e57805161517c81613f00565b8352918301918301615169565b6000806040838503121561519c57600080fd5b82516001600160401b03808211156151b357600080fd5b818501915085601f8301126151c757600080fd5b815160206151d7614416836143ab565b82815260059290921b840181019181810190898411156151f657600080fd5b948201945b838610156152245785518060060b81146152155760008081fd5b825294820194908201906151fb565b9188015191965090935050508082111561523d57600080fd5b5061524a85828601615125565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561527f5761527f614b70565b81667fffffffffffff01831381161561529a5761529a614b70565b5090039392505050565b60008160060b8360060b806152bb576152bb614ee2565b667fffffffffffff198214600019821416156152d9576152d9614b70565b90059392505050565b60008260060b806152f5576152f5614ee2565b808360060b0791505092915050565b60008160020b627fffff1981141561531e5761531e614b70565b6000190192915050565b602081526000825180602084015261534781604085016020870161509f565b601f01601f19169190910160400192915050565b60006080828403121561536d57600080fd5b604051608081018181106001600160401b038211171561538f5761538f613fa8565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60008083128015600160ff1b8501841216156153de576153de614b70565b6001600160ff1b03840183138116156153f9576153f9614b70565b5050039056fea164736f6c634300080a000a';

type ClearingHouseConstructorParams =
  | [linkLibraryAddresses: ClearingHouseLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouse__factory extends ContractFactory {
  constructor(...args: ClearingHouseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouse__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouse> {
    return super.deploy(overrides || {}) as Promise<ClearingHouse>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouse {
    return super.attach(address) as ClearingHouse;
  }
  connect(signer: Signer): ClearingHouse__factory {
    return super.connect(signer) as ClearingHouse__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseInterface {
    return new utils.Interface(_abi) as ClearingHouseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouse {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouse;
  }
}

export interface ClearingHouseLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
