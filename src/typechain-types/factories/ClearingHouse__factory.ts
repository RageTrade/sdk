/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ClearingHouse, ClearingHouseInterface } from '../ClearingHouse';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'initRealToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'isRealTokenAlreadyInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'realTokenInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615b0c806200019a6000396000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c80637cc2f4f51161015c578063b7902303116100ce578063e1f1671311610087578063e1f167131461076b578063e67ed1df1461077e578063eb7c987d14610791578063ee6cd5ee1461083c578063fcd0a5061461084f578063fe6f083a1461086257600080fd5b8063b7902303146106ee578063d257be2b14610701578063d38bfff414610714578063dac42a9614610727578063dbc0c0851461073a578063dbd035ff1461074b57600080fd5b806394c8c71d1161012057806394c8c71d1461061257806398f5c527146106255780639dca362f14610638578063a26f7ca714610640578063a4063dbc14610653578063a5cf7688146106d657600080fd5b80637cc2f4f5146105085780637f64d6631461051b57806384088b651461052e5780638ce25a931461056357806393420cf41461056c57600080fd5b80633fc42d80116102005780635aa6e675116101b95780635aa6e675146104885780635c318ad91461049f5780635c975abb146104b257806364f36801146104bf57806373cceb9d146104d25780637938d8a3146104f557600080fd5b80633fc42d80146103b157806342be9fca146103e457806343233d2e146103f75780634e10b6e3146104265780635616847614610449578063569634d31461047557600080fd5b80632a66e9ca116102525780632a66e9ca1461032a5780632afaea371461033d57806332a72d981461035057806336fadead14610378578063393590291461038b5780633d56a35e1461039e57600080fd5b8063127fec131461028f57806316c38b3c146102bf5780631e2eaeaf146102d457806321df4c0e146102f4578063261f806714610317575b600080fd5b60d8546102a2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102d26102cd366004614770565b610875565b005b6102e66102e236600461478d565b5490565b6040519081526020016102b6565b61030761030236600461478d565b6108d3565b6040516102b694939291906147de565b6102d2610325366004614980565b61091e565b6102d26103383660046149af565b61096d565b6102d261034b3660046149f8565b610a30565b61036361035e366004614a82565b610b98565b604080519283526020830191909152016102b6565b6102d2610386366004614b31565b610d91565b6102d26103993660046149f8565b610e07565b60d6546102a2906001600160a01b031681565b6103d46103bf366004614980565b60d26020526000908152604090205460ff1681565b60405190151581526020016102b6565b6102e66103f2366004614b6a565b610f63565b6102a2610405366004614b8c565b63ffffffff166000908152606660205260409020546001600160a01b031690565b6103d4610434366004614980565b60d06020526000908152604090205460ff1681565b6103d4610457366004614980565b6001600160a01b0316600090815260d0602052604090205460ff1690565b6102e661048336600461478d565b610fe7565b6000546201000090046001600160a01b03166102a2565b6102d26104ad366004614ba9565b610ffa565b60d5546103d49060ff1681565b6102d26104cd366004614b31565b611063565b6103d46104e0366004614980565b60d16020526000908152604090205460ff1681565b6102d2610503366004614b6a565b6110d9565b6102e6610516366004614bfa565b611203565b6102d2610529366004614980565b61121c565b61054161053c366004614c68565b6112ea565b60408051825181526020808401519082015291810151908201526060016102b6565b6102e660d35481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff80821683526201000082048116838701908152600160201b9092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102b6565b610541610620366004614ca7565b61131c565b6102d2610633366004614cf9565b6113cb565b6102e66114a6565b6102d261064e366004614d6a565b611548565b610666610661366004614980565b6115c0565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e0016102b6565b60d5546102a29061010090046001600160a01b031681565b60d7546102a2906001600160a01b031681565b61036361070f366004614980565b61169c565b6102d2610722366004614980565b6116d0565b6103d4610735366004614b8c565b611792565b6001546001600160a01b03166102a2565b61075e610759366004614dcf565b6117c1565b6040516102b69190614e5a565b6102d2610779366004614e9e565b6117ec565b61036361078c366004614f13565b611942565b61080661079f366004614b8c565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff16908201526060016102b6565b61036361084a366004614f38565b611969565b6102d261085d366004614f78565b611adb565b6102e6610870366004614fc3565b611bac565b6001546001600160a01b031633148015906108a257506000546001600160a01b0362010000909104163314155b156108c057604051636bd1573560e11b815260040160405180910390fd5b60d5805460ff1916911515919091179055565b600081815260d46020526040812080546001600160a01b031691906060908190610901606882016064611be8565b9250610911600182016064611d6a565b9597909650929493505050565b60d6546001600160a01b03163314610949576040516385734f3160e01b815260040160405180910390fd5b6001600160a01b0316600090815260d060205260409020805460ff19166001179055565b60d6546001600160a01b03163314610998576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff8082166000908152606660205260408120549293506109d3926001600160a01b0316916120aa16565b6109df576109df61500d565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390610a28828261514c565b505050505050565b60d55460ff1615610a54576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610a9357604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610a9e846120bb565b9050610ac8333085610ab785546001600160a01b031690565b6001600160a01b0316929190612151565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610b2c57600080fd5b505af4158015610b40573d6000803e3d6000fd5b50508254604080518981526001600160a01b03909216602083015281018690527fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75925060600190505b60405180910390a15050505050565b60d554600090819060ff1615610bc1576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314610bfb57604051630504a20d60e01b8152336004820152602401610a8a565b6000610c06866121bc565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc2919061523a565b90945092506000610cd284612253565b606b54909150811015610cfb576040516312b6b5cd60e11b815260048101829052602401610a8a565b60208601516001600160a01b031615801590610d1957508560600151155b15610d865785604001518015610d4057508551610d3590612253565b610d3e85612253565b145b80610d6957508560400151158015610d6957508551610d5e90612253565b610d6786612253565b145b610d86576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610dbe57506000546001600160a01b0362010000909104163314155b15610ddc57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b60d55460ff1615610e2b576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610e6557604051630504a20d60e01b8152336004820152602401610a8a565b6000610e70846120bb565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610edd57600080fd5b505af4158015610ef1573d6000803e3d6000fd5b50505050610f1b3384610f0b84546001600160a01b031690565b6001600160a01b0316919061226e565b8054604080518781526001600160a01b03909216602083015281018490527fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690606001610b89565b6000818015610fc95760005a9050610f7b604461229e565b610f8585856122ca565b92506000815a610f959190615274565b905080831115610fc257604051634010928f60e01b81526004810184905260248101829052604401610a8a565b5050610fe0565b610fd3604461229e565b610fdd84846122ca565b91505b5092915050565b6000610ff48260006122ca565b92915050565b6001546001600160a01b0316331480159061102757506000546001600160a01b0362010000909104163314155b1561104557604051636bd1573560e11b815260040160405180910390fd5b836068611052828261528b565b5050606a92909255606b5560695550565b6001546001600160a01b0316331480159061109057506000546001600160a01b0362010000909104163314155b156110ae57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d260205260409020805460ff1916911515919091179055565b60d55460ff16156110fd576040516313d0ff5960e31b815260040160405180910390fd5b600082815260d46020526040902080546001600160a01b0316331461113757604051630504a20d60e01b8152336004820152602401610a8a565b604051634042e78f60e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91634042e78f910160006040518083038186803b15801561119057600080fd5b505af41580156111a4573d6000803e3d6000fd5b505060d5546111c5925061010090046001600160a01b03169050338461226e565b60408051848152602081018490527fb8635fe5938466cc626f7c214bf818f090e2b736368828f448cd2b379cf0174e910160405180910390a1505050565b6000611213858585856000612417565b95945050505050565b6001546001600160a01b0316331480159061124957506000546001600160a01b0362010000909104163314155b1561126757604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661128e5760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b61130e60405180606001604052806000815260200160008152602001600081525090565b611213858585856000612526565b61134060405180606001604052806000815260200160008152602001600081525090565b8180156113a75760005a905061135660a461229e565b6113638888888888612526565b92506000815a6113739190615274565b9050808311156113a057604051634010928f60e01b81526004810184905260248101829052604401610a8a565b50506113c1565b6113b160a461229e565b6113be8787878787612526565b91505b5095945050505050565b600054610100900460ff16806113e4575060005460ff16155b6114005760405162461bcd60e51b8152600401610a8a906152f9565b600054610100900460ff16158015611422576000805461ffff19166101011790555b60d680546001600160a01b03199081166001600160a01b038981169190911790925560d58054610100600160a81b0319166101008985160217905560d78054821687841617905560d8805482168584161790556067805490911691851691909117905561148d61267d565b8015610a28576000805461ff0019169055505050505050565b60d55460009060ff16156114cd576040516313d0ff5960e31b815260040160405180910390fd5b5060d3546114dc816001615347565b60d355600081815260d460205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea39061153c9085815260200190565b60405180910390a25090565b6001546001600160a01b0316331480159061157557506000546001600160a01b0362010000909104163314155b1561159357604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216600090815260646020526040902081906002016115ba8282615094565b50505050565b611605604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff600160201b8504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b6000806116b36001600160a01b0384166064612688565b91506116c96001600160a01b03841660646126b5565b9050915091565b6000546001600160a01b036201000090910416331461170257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166117295760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff8082166000908152606660205260408120549091610ff4916001600160a01b03169083906120aa16565b606060208251028201602001825b818110156117e45760200180515481526117cf565b509192915050565b6000805b8281101561190f57600084848381811061180c5761180c61535f565b90506020020160208101906118219190614980565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118849190615375565b90507f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c48585848181106118b9576118b961535f565b90506020020160208101906118ce9190614980565b604080516001600160a01b039092168252602082018490520160405180910390a16118f98184615347565b92505080806119079061538e565b9150506117f0565b5061193d6119256001546001600160a01b031690565b60d55461010090046001600160a01b0316908361226e565b505050565b600082815260d460205260408120819061195e908460646126cd565b909590945092505050565b60d554600090819060ff1615611992576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b031633146119cc57604051630504a20d60e01b8152336004820152602401610a8a565b60006119d7866121bc565b90506119e96080860160608701614980565b6001600160a01b031615611a2057611a2081611a0b6080880160608901614980565b611a1b60a0890160808a016153a9565b612723565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611a5e90859085908a906064906004016153d5565b6040805180830381865af4158015611a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9e919061523a565b90945092506000611ab282868660646127c5565b606b54909150811015610d86576040516312b6b5cd60e11b815260048101829052602401610a8a565b6001546001600160a01b03163314801590611b0857506000546001600160a01b0362010000909104163314155b15611b2657604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611bd15760005a9050611bc460a461229e565b6113638888888888612417565b611bdb60a461229e565b6113be8787878787612417565b60606000611bf584612805565b90508067ffffffffffffffff811115611c1057611c10614a30565b604051908082528060200260200182016040528015611c5557816020015b6040805180820190915260008082526020820152815260200190600190039081611c2e5790505b50915060005b81811015611d6257600184016000868360088110611c7b57611c7b61535f565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611cc957611cc961535f565b60209081029190910101516001600160a01b039091169052600185016000868360088110611cf957611cf961535f565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002054838281518110611d4257611d4261535f565b602090810291909101810151015280611d5a8161538e565b915050611c5b565b505092915050565b600381015463ffffffff16600090815260028301602052604081205490606090611d9660018601612805565b90508067ffffffffffffffff811115611db157611db1614a30565b604051908082528060200260200182016040528015611e1d57816020015b611e0a6040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b815260200190600190039081611dcf5790505b50915060005b818110156120a157846002016000876001018360088110611e4657611e4661535f565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611e9457611e9461535f565b60209081029190910101516001600160a01b039091169052600286016000600188018360088110611ec757611ec761535f565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154838281518110611f1357611f1361535f565b60200260200101516020018181525050856002016000876001018360088110611f3e57611f3e61535f565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010154838281518110611f8a57611f8a61535f565b60200260200101516040018181525050856002016000876001018360088110611fb557611fb561535f565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600201548382815181106120015761200161535f565b6020026020010151606001818152505061206d86600201600088600101846008811061202f5761202f61535f565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060030161286f565b83828151811061207f5761207f61535f565b60200260200101516080018190525080806120999061538e565b915050611e23565b50509250929050565b6001600160a01b0390811691161490565b63ffffffff8082166000908152606560205260408120916120de918391612df316565b156121045760405163b087c8c360e01b815263ffffffff83166004820152602401610a8a565b80546001600160a01b0316600090815260d2602052604090205460ff1661214c57805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610a8a565b919050565b6040516001600160a01b03808516602483015283166044820152606481018290526115ba9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612e06565b63ffffffff8082166000908152606660205260408120546001600160a01b0316916121e99183916120aa16565b1561220f5760405163b087c8c360e01b815263ffffffff83166004820152602401610a8a565b6001600160a01b038116600090815260d1602052604090205460ff1661214c57604051631079472960e21b81526001600160a01b0382166004820152602401610a8a565b600080821361226a57612265826154a7565b610ff4565b5090565b6040516001600160a01b03831660248201526044810182905261193d90849063a9059cbb60e01b90606401612185565b3681106122c757604051634219202560e01b815236600482015260248101829052604401610a8a565b50565b60d55460009060ff16156122f1576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d4602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383836040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612363573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612387919061523a565b9093509050600061239882856154c4565b60d5549091506123b79061010090046001600160a01b0316338661226e565b6123c082612ed8565b6040805187815233602082015290810182905260608101859052608081018390527f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060a00160405180910390a150505092915050565b60d55460009060ff161561243e576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d46020526040812090612456876121bc565b90506000606a546124679190615347565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b1580156124e657600080fd5b505af41580156124fa573d6000803e3d6000fd5b505060d55461251b925061010090046001600160a01b03169050338561226e565b505095945050505050565b61254a60405180606001604052806000815260200160008152602001600081525090565b60d55460ff161561256e576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff161115612595576040516348d69f3560e01b815260040160405180910390fd5b600085815260d460205260408120906125ad866121bc565b600089815260d46020526040808220905163487e8af160e01b815260048101869052602481019190915261ffff881660448201526001600160a01b0383166064828101919091526084820183905260a48201529192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af19060c401608060405180830381865af4158015612640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126649190615505565b9450905061267181612ed8565b50505095945050505050565b336122c78180612f69565b60006126ae6126a06001600160a01b03851684613071565b6001600160a01b0316613103565b9392505050565b60006126ae6126a06001600160a01b0385168461317f565b6000806126da85846131bd565b91506126ee600186018560028601866131e9565b600286015490915063ffffffff161561271b57826005015481126127125780612718565b82600501545b90505b935093915050565b60006127396001600160a01b038516606461333e565b90506000836001600160a01b0316826001600160a01b03161161276557612760828561557e565b61276f565b61276f848361557e565b90506127106127828561ffff86166155a6565b61278c91906155eb565b6001600160a01b0316816001600160a01b031611156127be576040516307a1db0760e01b815260040160405180910390fd5b5050505050565b60006127d083612253565b6127fb6127e66001600160a01b038816856126b5565b600160801b6127f488612253565b9190613364565b61121391906154c4565b6000805b60088160ff16101561286657828160ff166008811061282a5761282a61535f565b60088104919091015460079091166004026101000a900463ffffffff166128545760ff1692915050565b8061285e81615611565b915050612809565b50600892915050565b6060600061287c836133a6565b90508067ffffffffffffffff81111561289757612897614a30565b60405190808252806020026020018201604052801561292757816020015b6129146040805161012081019091528060008152602001600060020b8152602001600060020b815260200160006001600160801b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816128b55790505b50915060005b81811015612dec5760018401600085836005811061294d5761294d61535f565b600580820492909201549190066006026101000a900465ffffffffffff168152602081019190915260400160002054835160ff909116908490839081106129965761299661535f565b60200260200101516000019060028111156129b3576129b36147a6565b908160028111156129c6576129c66147a6565b9052506001840160008583600581106129e1576129e161535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160019054906101000a900460020b838281518110612a4057612a4061535f565b60209081029190910181015160029290920b910152600184016000858360058110612a6d57612a6d61535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160049054906101000a900460020b838281518110612acc57612acc61535f565b602090810291909101015160029190910b604090910152600184016000858360058110612afb57612afb61535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160079054906101000a90046001600160801b0316838281518110612b6057612b6061535f565b60209081029190910101516001600160801b03909116606090910152600184016000858360058110612b9457612b9461535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060010154838281518110612be657612be661535f565b602090810291909101015160800152600184016000858360058110612c0d57612c0d61535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060020154838281518110612c5f57612c5f61535f565b602090810291909101015160a00152600184016000858360058110612c8657612c8661535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060030154838281518110612cd857612cd861535f565b602090810291909101015160c00152600184016000858360058110612cff57612cff61535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060040154838281518110612d5157612d5161535f565b602090810291909101015160e00152600184016000858360058110612d7857612d7861535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060050154838281518110612dca57612dca61535f565b6020908102919091010151610100015280612de48161538e565b91505061292d565b5050919050565b90546001600160a01b0391821691161490565b6000612e5b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661341d9092919063ffffffff16565b80519091501561193d5780806020019051810190612e799190615631565b61193d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a8a565b6000811315612f035760d75460d5546122c7916001600160a01b03610100909204821691168361226e565b60d7546001600160a01b031663379607f5612f1d836154a7565b6040518263ffffffff1660e01b8152600401612f3b91815260200190565b600060405180830381600087803b158015612f5557600080fd5b505af11580156127be573d6000803e3d6000fd5b600054610100900460ff1680612f82575060005460ff16155b612f9e5760405162461bcd60e51b8152600401610a8a906152f9565b600054610100900460ff16158015612fc0576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801561193d576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152600160201b820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa1580156130df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ae919061564e565b60006401000276a36001600160a01b038316108061313e575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561316757604051635d236c4560e01b81526001600160a01b0383166004820152602401610a8a565b610ff46001600160a01b03831680600160401b61342c565b6001600160a01b0380831660009081526020839052604081206002810154905491926126ae92169063ffffffff600160201b9091048116906134da16565b60006131d06001840160028401846134fb565b90506131df6068840183613609565b6126ae90826154c4565b600080808080805b60088160ff16101561331c57896001018160ff16600881106132155761321561535f565b60088104919091015460079091166004026101000a900463ffffffff1661323b5761331c565b60008860008c6001018460ff16600881106132585761325861535f565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b031691506132a5908c908c9084908c906136cf16565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff16156132f2576132df84876154c4565b95506132eb83866154c4565b9450613309565b6132fc848461378a565b61330690886154c4565b96505b508061331481615611565b9150506131f1565b50613327848461378a565b61333190866154c4565b9998505050505050505050565b6001600160a01b0380831660009081526020839052604081205490916126ae91166137a1565b600061338a600085126133775784613383565b6133838560001961566b565b848461342c565b905060008412156126ae5761339e816154a7565b949350505050565b6000805b60058160ff16101561341457828160ff16600581106133cb576133cb61535f565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156134025760ff1692915050565b8061340c81615611565b9150506133aa565b50600592915050565b606061339e848460008561382b565b600080806000198587098587029250828110838203039150508060001415613466576000841161345b57600080fd5b5082900490506126ae565b80841161347257600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806134f06001600160a01b03851684613953565b9050610fdd81613b6f565b6000805b60088160ff1610156135e2576000856001018260ff16600881106135255761352561535f565b60088104919091015460079091166004026101000a900463ffffffff1690508061354f57506135e2565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b039091169161358d90829084908990613ea116565b61359790866154c4565b945060006135ae6001600160a01b0384168861317f565b90506135bf6003830182858a613ec5565b6135c990876154c4565b95505050505080806135da90615611565b9150506134ff565b50600382015463ffffffff16600090815260028501602052604090205461339e90826154c4565b60008060005b60088160ff1610156136c75760008560ff8316600881106136325761363261535f565b60088104919091015460079091166004026101000a900463ffffffff1690508061365c57506136c7565b63ffffffff8116600090815260018601602052604090206136a661367f82613ef2565b63ffffffff808516600090815260018b0160205260409020549190600160801b9061336416565b6136b090856154c4565b9350505080806136bf90615611565b91505061360f565b509392505050565b63ffffffff8083166000908152600286016020526040812090918291908290613705906001600160a01b0388169087906126b516565b9050600061371d6001600160a01b0388168988613f00565b8354909150600061373060038601613f5a565b905061375961ffff8416620186a06127f487600160801b82613752888a6154c4565b600061378a565b965061377a61ffff8416620186a06127f487600160801b82613752896154a7565b9550505050505094509492505050565b60008183131561379b575081610ff4565b50919050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156137e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061380691906156f0565b509496509294505050506001600160a01b0383161515905061379b576126ae81613b6f565b60608247101561388c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a8a565b843b6138da5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a8a565b600080866001600160a01b031685876040516138f691906157be565b60006040518083038185875af1925050503d8060008114613933576040519150601f19603f3d011682016040523d82523d6000602084013e613938565b606091505b5091509150613948828286613fd5565b979650505050505050565b600063ffffffff821661397c576040516351a4d88160e01b815260006004820152602401610a8a565b60408051600280825260608201835260009260208301908036833701905050905082816000815181106139b1576139b161535f565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106139e0576139e061535f565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90613a219084906004016157da565b600060405180830381865afa925050508015613a5f57506040513d6000823e601f3d908101601f19168201604052613a5c9190810190615887565b60015b613ad457836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ac591906156f0565b50939650610fe0945050505050565b600082600081518110613ae957613ae961535f565b602002602001015183600181518110613b0457613b0461535f565b6020026020010151613b169190615953565b90506000613b2a63ffffffff8816836159a3565b905060008260060b128015613b505750613b4a63ffffffff8816836159e1565b60060b15155b15613b635780613b5f81615a03565b9150505b9450610ff49350505050565b60008060008360020b12613b86578260020b613b8e565b8260020b6000035b9050620d89e8811115613bc75760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610a8a565b600060018216613bdb57600160801b613bed565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613c21576ffff97272373d413259a46990580e213a0260801c5b6004821615613c40576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613c5f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613c7e576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613c9d576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613cbc576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613cdb576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613cfb576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613d1b576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613d3b576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613d5b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613d7b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613d9b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613dbb576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613ddb576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613dfc576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613e1c576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613e3b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613e58576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613e79578060001981613e7557613e756155d5565b0490505b600160201b810615613e8c576001613e8f565b60005b60ff16602082901c0192505050919050565b600080613eb76001600160a01b038516846126b5565b90506112138585838661400e565b6001600160a01b03828116600090815260208390526040812060010154909161121391879187911661403b565b6000610ff46126a0836140d7565b60008215613f2e57506001600160a01b03831660009081526020829052604090206002015461ffff166126ae565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff166126ae565b6000805b600581101561379b576000838260058110613f7b57613f7b61535f565b600580820492909201549190066006026101000a900465ffffffffffff1660008181526001860160205260409020909150613fb590614169565b613fbf9084615347565b9250508080613fcd9061538e565b915050613f5e565b60608315613fe45750816126ae565b825115613ff45782518084602001fd5b8160405162461bcd60e51b8152600401610a8a9190615a27565b6001600160a01b0383811660009081526020839052604081206001015490916112139187918691166141c0565b6000805b60058110156136c757600085826005811061405c5761405c61535f565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff166000141561409357506136c7565b65ffffffffffff8116600090815260018701602052604090206140b79086866141ea565b6140c190846154c4565b92505080806140cf9061538e565b91505061403f565b60006140ed82600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015614145573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff4919061564e565b8054600090819061418190610100900460020b613b6f565b835490915060009061419c90600160201b900460020b613b6f565b845490915061339e9083908390600160381b90046001600160801b03166001614303565b82546000906141d49084600160801b613364565b90506141e084836143b8565b61339e90826154c4565b600080806141f8868661443d565b915091506000614210866001600160a01b0316613103565b9050816142228483600160801b613364565b61422c91906154c4565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015614294573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142b89190615a5a565b90506142d96142d482606001518761450790919063ffffffff16565b61453e565b6142e390836154c4565b815160408301519193506142f991879190614550565b61121390836154c4565b6000836001600160a01b0316856001600160a01b03161115614323579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661435657600080fd5b8361438c57866001600160a01b03166143798383896001600160a01b031661342c565b81614386576143866155d5565b04613948565b6139486143a38383896001600160a01b031661458a565b886001600160a01b0316808204910615150190565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156143f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061441d9190615375565b9050600061443482866002015487600101546145ca565b611213906154a7565b81546000908190819061445790610100900460020b613b6f565b855490915060009061447290600160201b900460020b613b6f565b9050846001600160a01b0380841690821610156144905750816144ad565b816001600160a01b0316866001600160a01b031611156144ad5750805b86546144d2906142d49083908590600160381b90046001600160801b03166000614303565b94506144fb6142d484838a60000160079054906101000a90046001600160801b031660006145e5565b93505050509250929050565b815460058301546000916126ae91600160381b9091046001600160801b031690600160801b906145379086615274565b919061342c565b6000600160ff1b821061226a57600080fd5b60028301546003840154600485015485546000936145819387938793600160381b90046001600160801b0316614655565b61339e906154a7565b600061459784848461342c565b9050600082806145a9576145a96155d5565b84860911156126ae5760001981106145c057600080fd5b6001019392505050565b600061339e6145d98486615ac0565b8390600160801b61467d565b6000836001600160a01b0316856001600160a01b03161115614605579293925b816146325761462d836001600160801b03168686036001600160a01b0316600160601b61342c565b611213565b611213836001600160801b03168686036001600160a01b0316600160601b61458a565b600061394882600160801b61466c8888888d61470e565b614676908a615ac0565b9190614733565b600060018180808088121561469f57921592614698886154a7565b92506146a3565b8792505b60008712156146bf579215926146b8876154a7565b91506146c3565b8691505b60008612156146e2579215926146db8660001961566b565b90506146e5565b50845b6146f083838361342c565b94508361470357614700856154a7565b94505b505050509392505050565b600061472961471d8684615ac0565b8590600160801b61467d565b61121390846154c4565b6000614740848484613364565b905060008112156126ae5761339e600019826154c4565b80151581146122c757600080fd5b803561214c81614757565b60006020828403121561478257600080fd5b81356126ae81614757565b60006020828403121561479f57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106147da57634e487b7160e01b600052602160045260246000fd5b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b8181101561483a578651805187168452850151858401529584019591830191600101614813565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561495757848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b808310156149425783516148c58382516147bc565b8b8101518060020b8d850152508a81015160020b8b84015260608101516148f760608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a840193506001830192506148b0565b509a89019a945050509086019060010161485d565b50909e9d5050505050505050505050505050565b6001600160a01b03811681146122c757600080fd5b60006020828403121561499257600080fd5b81356126ae8161496b565b600060e0828403121561379b57600080fd5b60008061010083850312156149c357600080fd5b82356149ce8161496b565b91506149dd846020850161499d565b90509250929050565b63ffffffff811681146122c757600080fd5b600080600060608486031215614a0d57600080fd5b833592506020840135614a1f816149e6565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715614a6f57614a6f614a30565b604052919050565b803561214c8161496b565b600080600083850360c0811215614a9857600080fd5b843593506020850135614aaa816149e6565b92506080603f1982011215614abe57600080fd5b506040516080810181811067ffffffffffffffff82111715614ae257614ae2614a30565b604090815285013581526060850135614afa8161496b565b60208201526080850135614b0d81614757565b604082015260a0850135614b2081614757565b606082015292959194509192509050565b60008060408385031215614b4457600080fd5b8235614b4f8161496b565b91506020830135614b5f81614757565b809150509250929050565b60008060408385031215614b7d57600080fd5b50508035926020909101359150565b600060208284031215614b9e57600080fd5b81356126ae816149e6565b60008060008084860360c0811215614bc057600080fd5b6060811215614bce57600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b81146122c757600080fd5b60008060008060808587031215614c1057600080fd5b843593506020850135614c22816149e6565b92506040850135614c3281614beb565b91506060850135614c4281614beb565b939692955090935050565b61ffff811681146122c757600080fd5b803561214c81614c4d565b60008060008060808587031215614c7e57600080fd5b84359350602085013592506040850135614c97816149e6565b91506060850135614c4281614c4d565b600080600080600060a08688031215614cbf57600080fd5b85359450602086013593506040860135614cd8816149e6565b92506060860135614ce881614c4d565b949793965091946080013592915050565b600080600080600060a08688031215614d1157600080fd5b8535614d1c8161496b565b94506020860135614d2c8161496b565b93506040860135614d3c8161496b565b92506060860135614d4c8161496b565b91506080860135614d5c8161496b565b809150509295509295909350565b60008082840360c0811215614d7e57600080fd5b8335614d898161496b565b925060a0601f1982011215614d9d57600080fd5b506020830190509250929050565b600067ffffffffffffffff821115614dc557614dc5614a30565b5060051b60200190565b60006020808385031215614de257600080fd5b823567ffffffffffffffff811115614df957600080fd5b8301601f81018513614e0a57600080fd5b8035614e1d614e1882614dab565b614a46565b81815260059190911b82018301908381019087831115614e3c57600080fd5b928401925b8284101561394857833582529284019290840190614e41565b6020808252825182820181905260009190848201906040850190845b81811015614e9257835183529284019291840191600101614e76565b50909695505050505050565b60008060208385031215614eb157600080fd5b823567ffffffffffffffff80821115614ec957600080fd5b818501915085601f830112614edd57600080fd5b813581811115614eec57600080fd5b8660208260051b8501011115614f0157600080fd5b60209290920196919550909350505050565b60008060408385031215614f2657600080fd5b823591506020830135614b5f81614757565b60008060006101208486031215614f4e57600080fd5b833592506020840135614f60816149e6565b9150614f6f856040860161499d565b90509250925092565b600080600060608486031215614f8d57600080fd5b8335614f988161496b565b92506020840135614fa88161496b565b91506040840135614fb8816149e6565b809150509250925092565b600080600080600060a08688031215614fdb57600080fd5b853594506020860135614fed816149e6565b93506040860135614ffd81614beb565b92506060860135614ce881614beb565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008135610ff48161496b565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b813561509f81614c4d565b815461ffff191661ffff82161782555060208201356150bd81614c4d565b815463ffff00001916601082901b63ffff0000161782555060408201356150e3816149e6565b815467ffffffff000000008260201b1691508167ffffffff00000000198216178355606084013561511381614757565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815560808201356151428161496b565b61193d8183615050565b81356151578161496b565b6151618183615023565b5060208201356151708161496b565b61517d8160018401615023565b5060028101604083013561519081614c4d565b815461ffff191661ffff82161782555060608301356151ae81614c4d565b815463ffff00001916601082901b63ffff0000161782555060808301356151d4816149e6565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a085013561520481614757565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815561193d61523460c08501615043565b82615050565b6000806040838503121561524d57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000828210156152865761528661525e565b500390565b813561529681614c4d565b815461ffff191661ffff82161782555060208201356152b481614c4d565b815463ffff00001916601082901b63ffff0000161782555060408201356152da81614c4d565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561535a5761535a61525e565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561538757600080fd5b5051919050565b60006000198214156153a2576153a261525e565b5060010190565b6000602082840312156153bb57600080fd5b81356126ae81614c4d565b80356003811061214c57600080fd5b8481526001600160a01b0384166020820152610140810183356153f781614beb565b60020b6040830152602084013561540d81614beb565b60020b60608301526040840135600f81900b811461542a57600080fd5b6154396080840182600f0b9052565b5061544660608501614a77565b6001600160a01b031660a083015261546060808501614c5d565b61ffff1660c083015261547560a08501614765565b151560e083015261548860c085016153c6565b6154966101008401826147bc565b508261012083015295945050505050565b6000600160ff1b8214156154bd576154bd61525e565b5060000390565b600080821280156001600160ff1b03849003851316156154e6576154e661525e565b600160ff1b83900384128116156154ff576154ff61525e565b50500190565b600080828403608081121561551957600080fd5b835192506060601f198201121561552f57600080fd5b506040516060810181811067ffffffffffffffff8211171561555357615553614a30565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b038381169083168181101561559e5761559e61525e565b039392505050565b60006001600160a01b03828116848216811515828404821116156155cc576155cc61525e565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b0383811680615605576156056155d5565b92169190910492915050565b600060ff821660ff8114156156285761562861525e565b60010192915050565b60006020828403121561564357600080fd5b81516126ae81614757565b60006020828403121561566057600080fd5b81516126ae8161496b565b60006001600160ff1b03818413828413808216868404861116156156915761569161525e565b600160ff1b60008712828116878305891216156156b0576156b061525e565b600087129250878205871284841616156156cc576156cc61525e565b878505871281841616156156e2576156e261525e565b505050929093029392505050565b600080600080600080600060e0888a03121561570b57600080fd5b87516157168161496b565b602089015190975061572781614beb565b604089015190965061573881614c4d565b606089015190955061574981614c4d565b608089015190945061575a81614c4d565b60a089015190935060ff8116811461577157600080fd5b60c089015190925061578281614757565b8091505092959891949750929550565b60005b838110156157ad578181015183820152602001615795565b838111156115ba5750506000910152565b600082516157d0818460208701615792565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015614e9257835163ffffffff16835292840192918401916001016157f6565b600082601f83011261582957600080fd5b81516020615839614e1883614dab565b82815260059290921b8401810191818101908684111561585857600080fd5b8286015b8481101561587c57805161586f8161496b565b835291830191830161585c565b509695505050505050565b6000806040838503121561589a57600080fd5b825167ffffffffffffffff808211156158b257600080fd5b818501915085601f8301126158c657600080fd5b815160206158d6614e1883614dab565b82815260059290921b840181019181810190898411156158f557600080fd5b948201945b838610156159235785518060060b81146159145760008081fd5b825294820194908201906158fa565b9188015191965090935050508082111561593c57600080fd5b5061594985828601615818565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561597e5761597e61525e565b81667fffffffffffff0183138116156159995761599961525e565b5090039392505050565b60008160060b8360060b806159ba576159ba6155d5565b667fffffffffffff198214600019821416156159d8576159d861525e565b90059392505050565b60008260060b806159f4576159f46155d5565b808360060b0791505092915050565b60008160020b627fffff19811415615a1d57615a1d61525e565b6000190192915050565b6020815260008251806020840152615a46816040850160208701615792565b601f01601f19169190910160400192915050565b600060808284031215615a6c57600080fd5b6040516080810181811067ffffffffffffffff82111715615a8f57615a8f614a30565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60008083128015600160ff1b850184121615615ade57615ade61525e565b6001600160ff1b0384018313811615615af957615af961525e565b5050039056fea164736f6c634300080a000a';

type ClearingHouseConstructorParams =
  | [linkLibraryAddresses: ClearingHouseLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouse__factory extends ContractFactory {
  constructor(...args: ClearingHouseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouse__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouse> {
    return super.deploy(overrides || {}) as Promise<ClearingHouse>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouse {
    return super.attach(address) as ClearingHouse;
  }
  connect(signer: Signer): ClearingHouse__factory {
    return super.connect(signer) as ClearingHouse__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseInterface {
    return new utils.Interface(_abi) as ClearingHouseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouse {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouse;
  }
}

export interface ClearingHouseLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
