/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ArbitrumFixFeeTest,
  ArbitrumFixFeeTestInterface,
} from '../ArbitrumFixFeeTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'txGasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'ExcessTxGasPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'val',
        type: 'uint256',
      },
    ],
    name: 'Uint',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'emitGasCostWei',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountNetProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountNetProfit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_txGasPriceLimit',
        type: 'uint256',
      },
    ],
    name: 'setTxGasPriceLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimGas',
        type: 'uint256',
      },
    ],
    name: 'testMethod',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txGasPriceLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615857806200019a6000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c80638ce25a9311610167578063d257be2b116100ce578063e3d41c1811610087578063e3d41c181461076a578063e67ed1df1461077d578063eb7c987d14610790578063ee6cd5ee1461083b578063fcd0a5061461084e578063fe6f083a1461086157600080fd5b8063d257be2b146106ed578063d38bfff414610700578063dac42a9614610713578063dbc0c08514610726578063dbd035ff14610737578063e1f167131461075757600080fd5b8063a26f7ca711610120578063a26f7ca714610611578063a4063dbc14610624578063a5cf7688146106a7578063b7902303146106bf578063cbef6d0e146106d2578063ce0a9a27146106e557600080fd5b80638ce25a931461052157806393420cf41461052a57806394c8c71d146105d057806398f5c527146105e35780639cd1be58146105f65780639dca362f1461060957600080fd5b806342be9fca1161020b57806364f36801116101c457806364f368011461047d57806373cceb9d146104905780637cc2f4f5146104b35780637ec6ba31146104c65780637f64d663146104d957806384088b65146104ec57600080fd5b806342be9fca146103f157806343233d2e14610404578063569634d3146104335780635aa6e675146104465780635c318ad91461045d5780635c975abb1461047057600080fd5b80632afaea371161025d5780632afaea371461034a57806332a72d981461035d57806336fadead1461038557806339359029146103985780633d56a35e146103ab5780633fc42d80146103be57600080fd5b8063127fec13146102a557806316c38b3c146102d55780631a1feae1146102ea5780631e2eaeaf1461030257806321df4c0e146103145780632a66e9ca14610337575b600080fd5b60d7546102b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102e86102e3366004614147565b610874565b005b6102f461013c5481565b6040519081526020016102cc565b6102f4610310366004614164565b5490565b610327610322366004614164565b6108d2565b6040516102cc949392919061419f565b6102e8610345366004614353565b610976565b6102e861035836600461439c565b610a39565b61037061036b366004614492565b610b9a565b604080519283526020830191909152016102cc565b6102e8610393366004614540565b610d93565b6102e86103a636600461439c565b610e09565b60d5546102b8906001600160a01b031681565b6103e16103cc366004614579565b60d16020526000908152604090205460ff1681565b60405190151581526020016102cc565b6102f46103ff366004614596565b610f5f565b6102b86104123660046145b8565b63ffffffff166000908152606660205260409020546001600160a01b031690565b6102e8610441366004614164565b611006565b6000546201000090046001600160a01b03166102b8565b6102e861046b3660046145d5565b611015565b60d4546103e19060ff1681565b6102e861048b366004614540565b61107e565b6103e161049e366004614579565b60d06020526000908152604090205460ff1681565b6102e86104c1366004614626565b6110f4565b6102e86104d4366004614164565b611109565b6102e86104e7366004614579565b61115a565b6104ff6104fa366004614694565b611228565b60408051825181526020808401519082015291810151908201526060016102cc565b6102f460d25481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff80821683526201000082048116838701908152600160201b9092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102cc565b6104ff6105de3660046146d3565b611263565b6102e86105f1366004614725565b611335565b6102e8610604366004614596565b611410565b6102f46115a5565b6102e861061f366004614796565b611647565b610637610632366004614579565b6116bf565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e0016102cc565b60d4546102b89061010090046001600160a01b031681565b60d6546102b8906001600160a01b031681565b6102e86106e0366004614164565b61179b565b6102e8611817565b6103706106fb366004614579565b611891565b6102e861070e366004614579565b6118c5565b6103e16107213660046145b8565b611987565b6001546001600160a01b03166102b8565b61074a6107453660046147fa565b6119bc565b6040516102cc9190614884565b6102e86107653660046148c8565b6119ea565b6102f4610778366004614164565b611b40565b61037061078b36600461493c565b611b59565b61080561079e3660046145b8565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff16908201526060016102cc565b610370610849366004614961565b611b80565b6102e861085c3660046149a1565b611cf2565b6102f461086f3660046149ec565b611dc3565b6001546001600160a01b031633148015906108a157506000546001600160a01b0362010000909104163314155b156108bf57604051636bd1573560e11b815260040160405180910390fd5b60d4805460ff1916911515919091179055565b600081815260d3602052604080822090516330977c6d60e21b81526004810191909152606460248201528190606090819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c25df1b490604401600060405180830381865af415801561093f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109679190810190614c45565b93509350935093509193509193565b60d5546001600160a01b031633146109a1576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff8082166000908152606660205260408120549293506109dc926001600160a01b031691611e1116565b6109e8576109e8614d4b565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390610a318282614e8a565b505050505050565b60d45460ff1615610a5d576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d36020526040902080546001600160a01b03163314610a9c57604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610aa9846001611e22565b9050610ad3333085610ac285546001600160a01b031690565b6001600160a01b0316929190611ebe565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610b3757600080fd5b505af4158015610b4b573d6000803e3d6000fd5b505082546040518681526001600160a01b0390911692508791507fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75906020015b60405180910390a35050505050565b60d454600090819060ff1615610bc3576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d36020526040902080546001600160a01b03163314610bfd57604051630504a20d60e01b8152336004820152602401610a93565b6000610c0886611f29565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610ca0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc49190614f78565b90945092506000610cd484611fc5565b606b54909150811015610cfd576040516312b6b5cd60e11b815260048101829052602401610a93565b60208601516001600160a01b031615801590610d1b57508560600151155b15610d885785604001518015610d4257508551610d3790611fc5565b610d4085611fc5565b145b80610d6b57508560400151158015610d6b57508551610d6090611fc5565b610d6986611fc5565b145b610d88576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610dc057506000546001600160a01b0362010000909104163314155b15610dde57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d060205260409020805460ff1916911515919091179055565b60d45460ff1615610e2d576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d36020526040902080546001600160a01b03163314610e6757604051630504a20d60e01b8152336004820152602401610a93565b6000610e74846000611e22565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610ee157600080fd5b505af4158015610ef5573d6000803e3d6000fd5b50505050610f1f3384610f0f84546001600160a01b031690565b6001600160a01b03169190611fe0565b80546040518481526001600160a01b039091169086907fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690602001610b8b565b6000818015610fe8576000610f72612010565b5a610f7d9190614fb2565b9050610f8960446120c8565b610f9385856120f5565b92506000610f9f612010565b5a610faa9190614fb2565b610fb49083614fca565b905080831115610fe157604051634010928f60e01b81526004810184905260248101829052604401610a93565b5050610fff565b610ff260446120c8565b610ffc84846120f5565b91505b5092915050565b6110118160006120f5565b5050565b6001546001600160a01b0316331480159061104257506000546001600160a01b0362010000909104163314155b1561106057604051636bd1573560e11b815260040160405180910390fd5b83606861106d8282614fe1565b5050606a92909255606b5560695550565b6001546001600160a01b031633148015906110ab57506000546001600160a01b0362010000909104163314155b156110c957604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b611102848484846000612241565b5050505050565b6001546001600160a01b0316331480159061113657506000546001600160a01b0362010000909104163314155b1561115457604051636bd1573560e11b815260040160405180910390fd5b61013c55565b6001546001600160a01b0316331480159061118757506000546001600160a01b0362010000909104163314155b156111a557604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166111cc5760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b61124c60405180606001604052806000815260200160008152602001600081525090565b61125a858585856000612357565b95945050505050565b61128760405180606001604052806000815260200160008152602001600081525090565b818015611311576000611298612010565b5a6112a39190614fb2565b90506112af60a46120c8565b6112bc8888888888612357565b925060006112c8612010565b5a6112d39190614fb2565b6112dd9083614fca565b90508083111561130a57604051634010928f60e01b81526004810184905260248101829052604401610a93565b505061132b565b61131b60a46120c8565b6113288787878787612357565b91505b5095945050505050565b600054610100900460ff168061134e575060005460ff16155b61136a5760405162461bcd60e51b8152600401610a939061504f565b600054610100900460ff1615801561138c576000805461ffff19166101011790555b60d580546001600160a01b03199081166001600160a01b038981169190911790925560d48054610100600160a81b0319166101008985160217905560d68054821687841617905560d780548216858416179055606780549091169185169190911790556113f76124c6565b8015610a31576000805461ff0019169055505050505050565b60d45460ff1615611434576040516313d0ff5960e31b815260040160405180910390fd5b8061146b5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610a93565b600082815260d36020526040902080546001600160a01b031633146114a557604051630504a20d60e01b8152336004820152602401610a93565b60405163f632b1e360e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163f632b1e3910160006040518083038186803b1580156114fe57600080fd5b505af4158015611512573d6000803e3d6000fd5b5050505060008213156115415760d45461153c9061010090046001600160a01b0316333085611ebe565b611566565b6115663361154e8461509d565b60d45461010090046001600160a01b03169190611fe0565b827fb4604a31ce2914796ae6383c67cee47a3cb969b59a7dba0d06edcab53ff96a848360405161159891815260200190565b60405180910390a2505050565b60d45460009060ff16156115cc576040516313d0ff5960e31b815260040160405180910390fd5b5060d2546115db816001614fb2565b60d255600081815260d360205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea39061163b9085815260200190565b60405180910390a25090565b6001546001600160a01b0316331480159061167457506000546001600160a01b0362010000909104163314155b1561169257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216600090815260646020526040902081906002016116b98282614dd2565b50505050565b611704604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff600160201b8504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b80801561180c5760006117ac612010565b5a6117b79190614fb2565b630134dd308055905060006117ca612010565b5a6117d59190614fb2565b6117df9083614fca565b9050808311156116b957604051634010928f60e01b81526004810184905260248101829052604401610a93565b630134dd3080555050565b7f8f21accdcc5a0fec3416e6dbb52459a9c52dbaea4711ff41eef306912a465ae56118406124d1565b60405161188791906040808252601d908201527f417262697472756d2e676574546f74616c4c31466565496e57656928290000006060820152602081019190915260800190565b60405180910390a1565b6000806118a86001600160a01b038416606461250f565b91506118be6001600160a01b038416606461253c565b9050915091565b6000546001600160a01b03620100009091041633146118f757604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661191e5760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff80821660009081526066602052604081205490916119b6916001600160a01b0316908390611e1116565b92915050565b606060208251028201602001602083015b818110156119e25780515481526020016119cd565b509192915050565b6000805b82811015611b0d576000848483818110611a0a57611a0a6150ba565b9050602002016020810190611a1f9190614579565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8291906150d0565b9050848483818110611a9657611a966150ba565b9050602002016020810190611aab9190614579565b6001600160a01b03167f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c482604051611ae591815260200190565b60405180910390a2611af78184614fb2565b9250508080611b05906150e9565b9150506119ee565b50611b3b611b236001546001600160a01b031690565b60d45461010090046001600160a01b03169083611fe0565b505050565b600081815260d3602052604081206119b6906064612554565b600082815260d3602052604081208190611b7590846064612567565b909590945092505050565b60d454600090819060ff1615611ba9576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d36020526040902080546001600160a01b03163314611be357604051630504a20d60e01b8152336004820152602401610a93565b6000611bee86611f29565b9050611c006080860160608701614579565b6001600160a01b031615611c3757611c3781611c226080880160608901614579565b611c3260a0890160808a01615104565b6125bd565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611c7590859085908a9060649060040161512c565b6040805180830381865af4158015611c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb59190614f78565b90945092506000611cc98286866064612658565b606b54909150811015610d88576040516312b6b5cd60e11b815260048101829052602401610a93565b6001546001600160a01b03163314801590611d1f57506000546001600160a01b0362010000909104163314155b15611d3d57604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611dfa576000611dd6612010565b5a611de19190614fb2565b9050611ded60a46120c8565b6112bc8888888888612241565b611e0460a46120c8565b6113288787878787612241565b6001600160a01b0390811691161490565b63ffffffff808316600090815260656020526040812091611e4591839161269816565b15611e6b5760405163b087c8c360e01b815263ffffffff84166004820152602401610a93565b818015611e92575080546001600160a01b0316600090815260d1602052604090205460ff16155b156119b657805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610a93565b6040516001600160a01b03808516602483015283166044820152606481018290526116b99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526126ab565b63ffffffff8082166000908152606660205260408120546001600160a01b031691611f56918391611e1116565b15611f7c5760405163b087c8c360e01b815263ffffffff83166004820152602401610a93565b6001600160a01b038116600090815260d0602052604090205460ff16611fc057604051631079472960e21b81526001600160a01b0382166004820152602401610a93565b919050565b6000808213611fdc57611fd78261509d565b6119b6565b5090565b6040516001600160a01b038316602482015260448101829052611b3b90849063a9059cbb60e01b90606401611ef2565b60408051600481526024810182526020810180516001600160e01b031663a94597ff60e01b17905290516000918291829160649161204e919061522a565b600060405180830381855afa9150503d8060008114612089576040519150601f19603f3d011682016040523d82523d6000602084013e61208e565b606091505b509150915081158061209f57508051155b156120ad5760009250505090565b808060200190518101906120c191906150d0565b9250505090565b368110156120f257604051634219202560e01b815236600482015260248101829052604401610a93565b50565b60d45460009060ff161561211c576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d3602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b238361214f8761277d565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ba9190614f78565b909350905060006121cb8285615246565b60d4549091506121ea9061010090046001600160a01b03163386611fe0565b6121f382612896565b6040805182815260208101869052908101839052339087907f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060600160405180910390a350505092915050565b60d45460009060ff1615612268576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d3602052604081209061228087611f29565b905061228b8461277d565b606a546122989190614fb2565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b15801561231757600080fd5b505af415801561232b573d6000803e3d6000fd5b505060d45461234c925061010090046001600160a01b031690503385611fe0565b505095945050505050565b61237b60405180606001604052806000815260200160008152602001600081525090565b60d45460ff161561239f576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff1611156123c6576040516348d69f3560e01b815260040160405180910390fd5b600085815260d360205260408120906123de86611f29565b600089815260d3602052604081209192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af190859089866124198b61277d565b60646040518763ffffffff1660e01b815260040161246c96959493929190958652602086019490945261ffff9290921660408501526001600160a01b03166060840152608083015260a082015260c00190565b608060405180830381865af4158015612489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ad9190615287565b945090506124ba81612896565b50505095945050505050565b336120f28180612927565b60408051600481526024810182526020810180516001600160e01b031663637bef0760e11b17905290516000918291829160649161204e919061522a565b60006125356125276001600160a01b03851684612a2f565b6001600160a01b0316612ac1565b9392505050565b60006125356125276001600160a01b03851684612b3d565b6000612535600184016002840184612b7b565b6000806125748584612c91565b915061258860018601856002860186612cb6565b600286015490915063ffffffff16156125b557826005015481126125ac57806125b2565b82600501545b90505b935093915050565b60006125d36001600160a01b0385166064612e0b565b90506000836001600160a01b0316826001600160a01b0316116125ff576125fa82856152ff565b612609565b61260984836152ff565b905061271061261c8561ffff8616615327565b612626919061536c565b6001600160a01b0316816001600160a01b03161115611102576040516307a1db0760e01b815260040160405180910390fd5b600061266383611fc5565b61268e6126796001600160a01b0388168561253c565b600160801b61268788611fc5565b9190612e31565b61125a9190615246565b90546001600160a01b0391821691161490565b6000612700826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e6b9092919063ffffffff16565b805190915015611b3b578080602001905181019061271e9190615392565b611b3b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a93565b60003a61013c548111156127b35761013c54604051638dfe587d60e01b8152610a93918391600401918252602082015260400190565b8215806127c9575060d7546001600160a01b0316155b156127d75760009150612890565b6000333214156127ec576127e96124d1565b90505b60006127f83a866153af565b60d754604051630e56d76760e31b815261012c600482015291925060009161286e916001600160a01b0316906372b6bb3890602401602060405180830381865afa15801561284a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061252791906153ce565b905061288a81600160801b6128838587614fb2565b9190612e7a565b94505050505b50919050565b60008113156128c15760d65460d4546120f2916001600160a01b036101009092048216911683611fe0565b60d6546001600160a01b031663379607f56128db8361509d565b6040518263ffffffff1660e01b81526004016128f991815260200190565b600060405180830381600087803b15801561291357600080fd5b505af1158015611102573d6000803e3d6000fd5b600054610100900460ff1680612940575060005460ff16155b61295c5760405162461bcd60e51b8152600401610a939061504f565b600054610100900460ff1615801561297e576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a38015611b3b576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152600160201b820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa158015612a9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253591906153ce565b60006401000276a36001600160a01b0383161080612afc575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15612b2557604051635d236c4560e01b81526001600160a01b0383166004820152602401610a93565b6119b66001600160a01b03831680600160401b612e7a565b6001600160a01b03808316600090815260208390526040812060028101549054919261253592169063ffffffff600160201b909104811690612f2816565b6000805b60088160ff161015612c62576000856001018260ff1660088110612ba557612ba56150ba565b60088104919091015460079091166004026101000a900463ffffffff16905080612bcf5750612c62565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b0390911691612c0d90829084908990612f4916565b612c179086615246565b94506000612c2e6001600160a01b03841688612b3d565b9050612c3f6003830182858a612f6d565b612c499087615246565b9550505050508080612c5a906153eb565b915050612b7f565b50600382015463ffffffff166000908152600285016020526040902054612c899082615246565b949350505050565b6000612c9d8383612554565b9050612cac6068840183612f9a565b6125359082615246565b600080808080805b60088160ff161015612de957896001018160ff1660088110612ce257612ce26150ba565b60088104919091015460079091166004026101000a900463ffffffff16612d0857612de9565b60008860008c6001018460ff1660088110612d2557612d256150ba565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b03169150612d72908c908c9084908c9061306016565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff1615612dbf57612dac8487615246565b9550612db88386615246565b9450612dd6565b612dc9848461311b565b612dd39088615246565b96505b5080612de1816153eb565b915050612cbe565b50612df4848461311b565b612dfe9086615246565b9998505050505050505050565b6001600160a01b038083166000908152602083905260408120549091612535911661312c565b6000612e5760008512612e445784612e50565b612e508560001961540b565b8484612e7a565b9050600084121561253557612c898161509d565b6060612c8984846000856131b6565b600080806000198587098587029250828110838203039150508060001415612eb45760008411612ea957600080fd5b508290049050612535565b808411612ec057600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080612f3e6001600160a01b038516846132de565b9050610ffc816134fa565b600080612f5f6001600160a01b0385168461253c565b905061125a8585838661382c565b6001600160a01b03828116600090815260208390526040812060010154909161125a918791879116613859565b60008060005b60088160ff1610156130585760008560ff831660088110612fc357612fc36150ba565b60088104919091015460079091166004026101000a900463ffffffff16905080612fed5750613058565b63ffffffff811660009081526001860160205260409020613037613010826138f5565b63ffffffff808516600090815260018b0160205260409020549190600160801b90612e3116565b6130419085615246565b935050508080613050906153eb565b915050612fa0565b509392505050565b63ffffffff8083166000908152600286016020526040812090918291908290613096906001600160a01b03881690879061253c16565b905060006130ae6001600160a01b0388168988613903565b835490915060006130c16003860161395d565b90506130ea61ffff8416620186a061268787600160801b826130e3888a615246565b600061311b565b965061310b61ffff8416620186a061268787600160801b826130e38961509d565b9550505050505094509492505050565b6000818313156128905750816119b6565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561316d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131919190615490565b509496509294505050506001600160a01b0383161515905061289057612535816134fa565b6060824710156132175760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a93565b843b6132655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a93565b600080866001600160a01b03168587604051613281919061522a565b60006040518083038185875af1925050503d80600081146132be576040519150601f19603f3d011682016040523d82523d6000602084013e6132c3565b606091505b50915091506132d38282866139d8565b979650505050505050565b600063ffffffff8216613307576040516351a4d88160e01b815260006004820152602401610a93565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061333c5761333c6150ba565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061336b5761336b6150ba565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd906133ac908490600401615532565b600060405180830381865afa9250505080156133ea57506040513d6000823e601f3d908101601f191682016040526133e791908101906155d4565b60015b61345f57836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561342c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134509190615490565b50939650610fff945050505050565b600082600081518110613474576134746150ba565b60200260200101518360018151811061348f5761348f6150ba565b60200260200101516134a1919061569f565b905060006134b563ffffffff8816836156ef565b905060008260060b1280156134db57506134d563ffffffff88168361572d565b60060b15155b156134ee57806134ea8161574f565b9150505b94506119b69350505050565b60008060008360020b12613511578260020b613519565b8260020b6000035b9050620d89e88111156135525760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610a93565b60006001821661356657600160801b613578565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156135ac576ffff97272373d413259a46990580e213a0260801c5b60048216156135cb576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156135ea576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613609576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613628576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613647576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613666576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613686576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156136a6576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156136c6576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156136e6576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613706576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613726576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613746576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613766576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613787576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156137a7576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156137c6576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156137e3576b048a170391f7dc42444e8fa20260801c5b60008460020b131561380457806000198161380057613800615356565b0490505b600160201b81061561381757600161381a565b60005b60ff16602082901c0192505050919050565b6001600160a01b03838116600090815260208390526040812060010154909161125a918791869116613a11565b6000805b600581101561305857600085826005811061387a5761387a6150ba565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff16600014156138b15750613058565b65ffffffffffff8116600090815260018701602052604090206138d5908686613a3b565b6138df9084615246565b92505080806138ed906150e9565b91505061385d565b60006119b661252783613bca565b6000821561393157506001600160a01b03831660009081526020829052604090206002015461ffff16612535565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff16612535565b6000805b600581101561289057600083826005811061397e5761397e6150ba565b600580820492909201549190066006026101000a900465ffffffffffff16600081815260018601602052604090209091506139b890613c5c565b6139c29084614fb2565b92505080806139d0906150e9565b915050613961565b606083156139e7575081612535565b8251156139f75782518084602001fd5b8160405162461bcd60e51b8152600401610a939190615773565b8254600090613a259084600160801b612e31565b9050613a318483613cb3565b612c899082615246565b6000806000613abf613ab6856001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613aa891906153ce565b6001600160a01b031661312c565b87906000613d38565b915091506000613ad7866001600160a01b0316612ac1565b905081613ae98483600160801b612e31565b613af39190615246565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015613b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b7f91906157a6565b9050613ba0613b9b826060015187613e0190919063ffffffff16565b613e31565b613baa9083615246565b81516040830151919350613bc091879190613e43565b61125a9083615246565b6000613be082600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015613c38573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b691906153ce565b80546000908190613c7490610100900460020b6134fa565b8354909150600090613c8f90600160201b900460020b6134fa565b8454909150612c899083908390600160381b90046001600160801b03166001613e7d565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015613cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d1891906150d0565b90506000613d2f8286600201548760010154613f32565b61125a9061509d565b825460009081908190613d5290610100900460020b6134fa565b8654909150600090613d6d90600160201b900460020b6134fa565b9050856001600160a01b038084169082161015613d8b575081613da8565b816001600160a01b0316876001600160a01b03161115613da85750805b8754613dcc90613b9b9083908590600160381b90046001600160801b03168a613e7d565b9450613df4613b9b84838b60000160079054906101000a90046001600160801b03168a613f4d565b9350505050935093915050565b8154600583015460009161253591600160381b9091046001600160801b031690600160801b906128839086614fca565b6000600160ff1b8210611fdc57600080fd5b6002830154600384015460048501548554600093613e749387938793600160381b90046001600160801b0316613fbd565b612c899061509d565b6000836001600160a01b0316856001600160a01b03161115613e9d579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b038686038116908716613ed057600080fd5b83613f0657866001600160a01b0316613ef38383896001600160a01b0316612e7a565b81613f0057613f00615356565b046132d3565b6132d3613f1d8383896001600160a01b0316613fe5565b886001600160a01b0316808204910615150190565b6000612c89613f41848661580b565b8390600160801b614025565b6000836001600160a01b0316856001600160a01b03161115613f6d579293925b81613f9a57613f95836001600160801b03168686036001600160a01b0316600160601b612e7a565b61125a565b61125a836001600160801b03168686036001600160a01b0316600160601b613fe5565b60006132d382600160801b613fd48888888d61407f565b613fde908a61580b565b91906140a4565b6000613ff2848484612e7a565b90506000828061400457614004615356565b848609111561253557600019811061401b57600080fd5b6001019392505050565b6000600181808061403688856140e2565b9450925061404487856140e2565b9450915061405286856140e2565b94509050614061838383612e7a565b945083614074576140718561509d565b94505b505050509392505050565b600061409a61408e868461580b565b8590600160801b614025565b61125a9084615246565b60006140b1848484612e31565b90506000811280156140d157506140d16140ca8561410c565b8484614117565b1561253557612c8960001982615246565b6000806000841215614101579115916140fa8461509d565b9150614105565b8391505b5092909150565b60006119b682611fc5565b600081838509801561305857506001949350505050565b80151581146120f257600080fd5b8035611fc08161412e565b60006020828403121561415957600080fd5b81356125358161412e565b60006020828403121561417657600080fd5b5035919050565b6003811061419b57634e487b7160e01b600052602160045260246000fd5b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b818110156141fb5786518051871684528501518584015295840195918301916001016141d4565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561431857848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b8083101561430357835161428683825161417d565b8b8101518060020b8d850152508a81015160020b8b84015260608101516142b860608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a84019350600183019250614271565b509a89019a945050509086019060010161421e565b50909e9d5050505050505050505050505050565b6001600160a01b03811681146120f257600080fd5b600060e0828403121561289057600080fd5b600080610100838503121561436757600080fd5b82356143728161432c565b91506143818460208501614341565b90509250929050565b63ffffffff811681146120f257600080fd5b6000806000606084860312156143b157600080fd5b8335925060208401356143c38161438a565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b038111828210171561440c5761440c6143d4565b60405290565b60405161012081016001600160401b038111828210171561440c5761440c6143d4565b604080519081016001600160401b038111828210171561440c5761440c6143d4565b604051601f8201601f191681016001600160401b038111828210171561447f5761447f6143d4565b604052919050565b8035611fc08161432c565b600080600083850360c08112156144a857600080fd5b8435935060208501356144ba8161438a565b92506080603f19820112156144ce57600080fd5b50604051608081018181106001600160401b03821117156144f1576144f16143d4565b6040908152850135815260608501356145098161432c565b6020820152608085013561451c8161412e565b604082015260a085013561452f8161412e565b606082015292959194509192509050565b6000806040838503121561455357600080fd5b823561455e8161432c565b9150602083013561456e8161412e565b809150509250929050565b60006020828403121561458b57600080fd5b81356125358161432c565b600080604083850312156145a957600080fd5b50508035926020909101359150565b6000602082840312156145ca57600080fd5b81356125358161438a565b60008060008084860360c08112156145ec57600080fd5b60608112156145fa57600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b81146120f257600080fd5b6000806000806080858703121561463c57600080fd5b84359350602085013561464e8161438a565b9250604085013561465e81614617565b9150606085013561466e81614617565b939692955090935050565b61ffff811681146120f257600080fd5b8035611fc081614679565b600080600080608085870312156146aa57600080fd5b843593506020850135925060408501356146c38161438a565b9150606085013561466e81614679565b600080600080600060a086880312156146eb57600080fd5b853594506020860135935060408601356147048161438a565b9250606086013561471481614679565b949793965091946080013592915050565b600080600080600060a0868803121561473d57600080fd5b85356147488161432c565b945060208601356147588161432c565b935060408601356147688161432c565b925060608601356147788161432c565b915060808601356147888161432c565b809150509295509295909350565b60008082840360c08112156147aa57600080fd5b83356147b58161432c565b925060a0601f19820112156147c957600080fd5b506020830190509250929050565b60006001600160401b038211156147f0576147f06143d4565b5060051b60200190565b6000602080838503121561480d57600080fd5b82356001600160401b0381111561482357600080fd5b8301601f8101851361483457600080fd5b8035614847614842826147d7565b614457565b81815260059190911b8201830190838101908783111561486657600080fd5b928401925b828410156132d35783358252928401929084019061486b565b6020808252825182820181905260009190848201906040850190845b818110156148bc578351835292840192918401916001016148a0565b50909695505050505050565b600080602083850312156148db57600080fd5b82356001600160401b03808211156148f257600080fd5b818501915085601f83011261490657600080fd5b81358181111561491557600080fd5b8660208260051b850101111561492a57600080fd5b60209290920196919550909350505050565b6000806040838503121561494f57600080fd5b82359150602083013561456e8161412e565b6000806000610120848603121561497757600080fd5b8335925060208401356149898161438a565b91506149988560408601614341565b90509250925092565b6000806000606084860312156149b657600080fd5b83356149c18161432c565b925060208401356149d18161432c565b915060408401356149e18161438a565b809150509250925092565b600080600080600060a08688031215614a0457600080fd5b853594506020860135614a168161438a565b93506040860135614a2681614617565b9250606086013561471481614617565b600381106120f257600080fd5b8051611fc081614a36565b8051611fc081614617565b80516001600160801b0381168114611fc057600080fd5b600082601f830112614a8157600080fd5b81516020614a91614842836147d7565b82815260059290921b84018101918181019086841115614ab057600080fd5b8286015b84811015614c3a5780516001600160401b0380821115614ad357600080fd5b9088019060a0828b03601f19011215614aeb57600080fd5b614af36143ea565b86830151614b008161432c565b80825250604083015187820152606083015160408201526080830151606082015260a083015182811115614b3357600080fd5b8084019350508a603f840112614b4857600080fd5b868301519150614b5a614842836147d7565b82815261012092830284016040019288820191908d851115614b7b57600080fd5b6040860195505b84861015614c245780868f031215614b9957600080fd5b614ba1614412565b614baa87614a43565b8152614bb78b8801614a4e565b8b820152614bc760408801614a4e565b6040820152614bd860608801614a59565b60608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e08201526101008701516101008201528084525089830192508086019550614b82565b5060808301525085525050918301918301614ab4565b509695505050505050565b60008060008060808587031215614c5b57600080fd5b8451614c668161432c565b8094505060208086015193506040808701516001600160401b0380821115614c8d57600080fd5b818901915089601f830112614ca157600080fd5b8151614caf614842826147d7565b81815260069190911b8301850190858101908c831115614cce57600080fd5b938601935b82851015614d175785858e031215614ceb5760008081fd5b614cf3614435565b8551614cfe8161432c565b8152858801518882015282529385019390860190614cd3565b60608c01519098509550505080841115614d3057600080fd5b505050614d3f87828801614a70565b91505092959194509250565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b600081356119b68161432c565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b8135614ddd81614679565b815461ffff191661ffff8216178255506020820135614dfb81614679565b815463ffff00001916601082901b63ffff000016178255506040820135614e218161438a565b815467ffffffff000000008260201b1691508167ffffffff000000001982161783556060840135614e518161412e565b68ffffffffff00000000199190911690911790151560401b60ff60401b161781556080820135614e808161432c565b611b3b8183614d8e565b8135614e958161432c565b614e9f8183614d61565b506020820135614eae8161432c565b614ebb8160018401614d61565b50600281016040830135614ece81614679565b815461ffff191661ffff8216178255506060830135614eec81614679565b815463ffff00001916601082901b63ffff000016178255506080830135614f128161438a565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135614f428161412e565b68ffffffffff00000000199190911690911790151560401b60ff60401b16178155611b3b614f7260c08501614d81565b82614d8e565b60008060408385031215614f8b57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b60008219821115614fc557614fc5614f9c565b500190565b600082821015614fdc57614fdc614f9c565b500390565b8135614fec81614679565b815461ffff191661ffff821617825550602082013561500a81614679565b815463ffff00001916601082901b63ffff00001617825550604082013561503081614679565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000600160ff1b8214156150b3576150b3614f9c565b5060000390565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156150e257600080fd5b5051919050565b60006000198214156150fd576150fd614f9c565b5060010190565b60006020828403121561511657600080fd5b813561253581614679565b8035611fc081614a36565b8481526001600160a01b03841660208201526101408101833561514e81614617565b60020b6040830152602084013561516481614617565b60020b60608301526040840135600f81900b811461518157600080fd5b6151906080840182600f0b9052565b5061519d60608501614487565b6001600160a01b031660a08301526151b760808501614689565b61ffff1660c08301526151cc60a0850161413c565b151560e08301526151df60c08501615121565b6151ed61010084018261417d565b508261012083015295945050505050565b60005b83811015615219578181015183820152602001615201565b838111156116b95750506000910152565b6000825161523c8184602087016151fe565b9190910192915050565b600080821280156001600160ff1b038490038513161561526857615268614f9c565b600160ff1b839003841281161561528157615281614f9c565b50500190565b600080828403608081121561529b57600080fd5b835192506060601f19820112156152b157600080fd5b50604051606081018181106001600160401b03821117156152d4576152d46143d4565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b038381169083168181101561531f5761531f614f9c565b039392505050565b60006001600160a01b038281168482168115158284048211161561534d5761534d614f9c565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b038381168061538657615386615356565b92169190910492915050565b6000602082840312156153a457600080fd5b81516125358161412e565b60008160001904831182151516156153c9576153c9614f9c565b500290565b6000602082840312156153e057600080fd5b81516125358161432c565b600060ff821660ff81141561540257615402614f9c565b60010192915050565b60006001600160ff1b038184138284138082168684048611161561543157615431614f9c565b600160ff1b600087128281168783058912161561545057615450614f9c565b6000871292508782058712848416161561546c5761546c614f9c565b8785058712818416161561548257615482614f9c565b505050929093029392505050565b600080600080600080600060e0888a0312156154ab57600080fd5b87516154b68161432c565b60208901519097506154c781614617565b60408901519096506154d881614679565b60608901519095506154e981614679565b60808901519094506154fa81614679565b60a089015190935060ff8116811461551157600080fd5b60c08901519092506155228161412e565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b818110156148bc57835163ffffffff168352928401929184019160010161554e565b600082601f83011261558157600080fd5b81516020615591614842836147d7565b82815260059290921b840181019181810190868411156155b057600080fd5b8286015b84811015614c3a5780516155c78161432c565b83529183019183016155b4565b600080604083850312156155e757600080fd5b82516001600160401b03808211156155fe57600080fd5b818501915085601f83011261561257600080fd5b81516020615622614842836147d7565b82815260059290921b8401810191818101908984111561564157600080fd5b948201945b8386101561566f5785518060060b81146156605760008081fd5b82529482019490820190615646565b9188015191965090935050508082111561568857600080fd5b5061569585828601615570565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156156ca576156ca614f9c565b81667fffffffffffff0183138116156156e5576156e5614f9c565b5090039392505050565b60008160060b8360060b8061570657615706615356565b667fffffffffffff1982146000198214161561572457615724614f9c565b90059392505050565b60008260060b8061574057615740615356565b808360060b0791505092915050565b60008160020b627fffff1981141561576957615769614f9c565b6000190192915050565b60208152600082518060208401526157928160408501602087016151fe565b601f01601f19169190910160400192915050565b6000608082840312156157b857600080fd5b604051608081018181106001600160401b03821117156157da576157da6143d4565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60008083128015600160ff1b85018412161561582957615829614f9c565b6001600160ff1b038401831381161561584457615844614f9c565b5050039056fea164736f6c634300080a000a';

type ArbitrumFixFeeTestConstructorParams =
  | [linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumFixFeeTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ArbitrumFixFeeTest__factory extends ContractFactory {
  constructor(...args: ArbitrumFixFeeTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ArbitrumFixFeeTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbitrumFixFeeTest> {
    return super.deploy(overrides || {}) as Promise<ArbitrumFixFeeTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ArbitrumFixFeeTest {
    return super.attach(address) as ArbitrumFixFeeTest;
  }
  connect(signer: Signer): ArbitrumFixFeeTest__factory {
    return super.connect(signer) as ArbitrumFixFeeTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumFixFeeTestInterface {
    return new utils.Interface(_abi) as ArbitrumFixFeeTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumFixFeeTest {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumFixFeeTest;
  }
}

export interface ArbitrumFixFeeTestLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
