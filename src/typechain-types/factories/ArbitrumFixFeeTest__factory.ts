/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ArbitrumFixFeeTest,
  ArbitrumFixFeeTestInterface,
} from '../ArbitrumFixFeeTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'txGasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'ExcessTxGasPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'val',
        type: 'uint256',
      },
    ],
    name: 'Uint',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'emitGasCostWei',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'initRealToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'isRealTokenAlreadyInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'realTokenInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_txGasPriceLimit',
        type: 'uint256',
      },
    ],
    name: 'setTxGasPriceLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimGas',
        type: 'uint256',
      },
    ],
    name: 'testMethod',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txGasPriceLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615140806200019a6000396000f3fe608060405234801561001057600080fd5b50600436106102bb5760003560e01c80637cc2f4f511610182578063b7902303116100e9578063dbc0c085116100a2578063eb7c987d1161007c578063eb7c987d146107e7578063ee6cd5ee14610892578063fcd0a506146108a5578063fe6f083a146108b857600080fd5b8063dbc0c085146107a3578063dbd035ff146107b4578063e1f16713146107d457600080fd5b8063b79023031461073c578063cbef6d0e1461074f578063ce0a9a2714610762578063d257be2b1461076a578063d38bfff41461077d578063dac42a961461079057600080fd5b806394c8c71d1161013b57806394c8c71d1461066057806398f5c527146106735780639dca362f14610686578063a26f7ca71461068e578063a4063dbc146106a1578063a5cf76881461072457600080fd5b80637cc2f4f5146105425780637ec6ba31146105555780637f64d6631461056857806384088b651461057b5780638ce25a93146105b057806393420cf4146105b957600080fd5b80633fc42d80116102265780635aa6e675116101df5780635aa6e675146104c25780635c318ad9146104d95780635c975abb146104ec57806364f36801146104f957806373cceb9d1461050c5780637938d8a31461052f57600080fd5b80633fc42d80146103eb57806342be9fca1461041e57806343233d2e146104315780634e10b6e3146104605780635616847614610483578063569634d3146104af57600080fd5b80632a66e9ca116102785780632a66e9ca146103645780632afaea371461037757806332a72d981461038a57806336fadead146103b257806339359029146103c55780633d56a35e146103d857600080fd5b8063127fec13146102c057806316c38b3c146102f05780631a1feae1146103055780631e2eaeaf1461031d57806321df4c0e1461032f578063261f806714610351575b600080fd5b60d8546102d3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6103036102fe366004613e51565b6108cb565b005b61030f61013d5481565b6040519081526020016102e7565b61030f61032b366004613e6e565b5490565b61034261033d366004613e6e565b610929565b6040516102e793929190613ebf565b61030361035f36600461405f565b61096f565b61030361037236600461408e565b6109be565b6103036103853660046140d7565b610a81565b61039d610398366004614161565b610be9565b604080519283526020830191909152016102e7565b6103036103c0366004614210565b610de2565b6103036103d33660046140d7565b610e58565b60d6546102d3906001600160a01b031681565b61040e6103f936600461405f565b60d26020526000908152604090205460ff1681565b60405190151581526020016102e7565b61030f61042c366004614249565b610fb4565b6102d361043f36600461426b565b63ffffffff166000908152606660205260409020546001600160a01b031690565b61040e61046e36600461405f565b60d06020526000908152604090205460ff1681565b61040e61049136600461405f565b6001600160a01b0316600090815260d0602052604090205460ff1690565b61030f6104bd366004613e6e565b61105b565b6000546201000090046001600160a01b03166102d3565b6103036104e7366004614288565b61106e565b60d55461040e9060ff1681565b610303610507366004614210565b6110d7565b61040e61051a36600461405f565b60d16020526000908152604090205460ff1681565b61030361053d366004614249565b61114d565b61030f6105503660046142d9565b611277565b610303610563366004613e6e565b611290565b61030361057636600461405f565b6112e1565b61058e610589366004614347565b6113af565b60408051825181526020808401519082015291810151908201526060016102e7565b61030f60d35481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff808216835262010000820481168387019081526401000000009092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102e7565b61058e61066e366004614386565b6113e1565b6103036106813660046143d8565b6114b3565b61030f61158e565b61030361069c366004614449565b61162d565b6106b46106af36600461405f565b6116a5565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e0016102e7565b60d5546102d39061010090046001600160a01b031681565b60d7546102d3906001600160a01b031681565b61030361075d366004613e6e565b611782565b6103036117fe565b61039d61077836600461405f565b611878565b61030361078b36600461405f565b6118ac565b61040e61079e36600461426b565b61196e565b6001546001600160a01b03166102d3565b6107c76107c23660046144ae565b61199d565b6040516102e79190614539565b6103036107e236600461457d565b6119c8565b61085c6107f536600461426b565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff16908201526060016102e7565b61039d6108a03660046145f2565b611b1e565b6103036108b3366004614632565b611c90565b61030f6108c636600461467d565b611d61565b6001546001600160a01b031633148015906108f857506000546001600160a01b0362010000909104163314155b1561091657604051636bd1573560e11b815260040160405180910390fd5b60d5805460ff1916911515919091179055565b600081815260d46020526040902080546001600160a01b0316906060908190610956606882016064611daf565b9250610966600182016064611f31565b93959294505050565b60d6546001600160a01b0316331461099a576040516385734f3160e01b815260040160405180910390fd5b6001600160a01b0316600090815260d060205260409020805460ff19166001179055565b60d6546001600160a01b031633146109e9576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff808216600090815260666020526040812054929350610a24926001600160a01b03169161224c16565b610a3057610a306146c7565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390610a798282614806565b505050505050565b60d55460ff1615610aa5576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610ae457604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610aef8461225d565b9050610b19333085610b0885546001600160a01b031690565b6001600160a01b03169291906122f3565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610b7d57600080fd5b505af4158015610b91573d6000803e3d6000fd5b50508254604080518981526001600160a01b03909216602083015281018690527fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75925060600190505b60405180910390a15050505050565b60d554600090819060ff1615610c12576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314610c4c57604051630504a20d60e01b8152336004820152602401610adb565b6000610c578661235e565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906148f4565b90945092506000610d23846123f5565b606b54909150811015610d4c576040516312b6b5cd60e11b815260048101829052602401610adb565b60208601516001600160a01b031615801590610d6a57508560600151155b15610dd75785604001518015610d9157508551610d86906123f5565b610d8f856123f5565b145b80610dba57508560400151158015610dba57508551610daf906123f5565b610db8866123f5565b145b610dd7576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610e0f57506000546001600160a01b0362010000909104163314155b15610e2d57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b60d55460ff1615610e7c576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610eb657604051630504a20d60e01b8152336004820152602401610adb565b6000610ec18461225d565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610f2e57600080fd5b505af4158015610f42573d6000803e3d6000fd5b50505050610f6c3384610f5c84546001600160a01b031690565b6001600160a01b03169190612410565b8054604080518781526001600160a01b03909216602083015281018490527fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690606001610bda565b600081801561103d576000610fc7612440565b5a610fd2919061492e565b9050610fde60446124f8565b610fe88585612524565b92506000610ff4612440565b5a610fff919061492e565b6110099083614946565b90508083111561103657604051634010928f60e01b81526004810184905260248101829052604401610adb565b5050611054565b61104760446124f8565b6110518484612524565b91505b5092915050565b6000611068826000612524565b92915050565b6001546001600160a01b0316331480159061109b57506000546001600160a01b0362010000909104163314155b156110b957604051636bd1573560e11b815260040160405180910390fd5b8360686110c6828261495d565b5050606a92909255606b5560695550565b6001546001600160a01b0316331480159061110457506000546001600160a01b0362010000909104163314155b1561112257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d260205260409020805460ff1916911515919091179055565b60d55460ff1615611171576040516313d0ff5960e31b815260040160405180910390fd5b600082815260d46020526040902080546001600160a01b031633146111ab57604051630504a20d60e01b8152336004820152602401610adb565b604051634042e78f60e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91634042e78f910160006040518083038186803b15801561120457600080fd5b505af4158015611218573d6000803e3d6000fd5b505060d554611239925061010090046001600160a01b031690503384612410565b60408051848152602081018490527fb8635fe5938466cc626f7c214bf818f090e2b736368828f448cd2b379cf0174e910160405180910390a1505050565b6000611287858585856000612679565b95945050505050565b6001546001600160a01b031633148015906112bd57506000546001600160a01b0362010000909104163314155b156112db57604051636bd1573560e11b815260040160405180910390fd5b61013d55565b6001546001600160a01b0316331480159061130e57506000546001600160a01b0362010000909104163314155b1561132c57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166113535760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6113d360405180606001604052806000815260200160008152602001600081525090565b61128785858585600061278f565b61140560405180606001604052806000815260200160008152602001600081525090565b81801561148f576000611416612440565b5a611421919061492e565b905061142d60a46124f8565b61143a888888888861278f565b92506000611446612440565b5a611451919061492e565b61145b9083614946565b90508083111561148857604051634010928f60e01b81526004810184905260248101829052604401610adb565b50506114a9565b61149960a46124f8565b6114a6878787878761278f565b91505b5095945050505050565b600054610100900460ff16806114cc575060005460ff16155b6114e85760405162461bcd60e51b8152600401610adb906149cb565b600054610100900460ff1615801561150a576000805461ffff19166101011790555b60d680546001600160a01b03199081166001600160a01b038981169190911790925560d58054610100600160a81b0319166101008985160217905560d78054821687841617905560d880548216858416179055606780549091169185169190911790556115756128fe565b8015610a79576000805461ff0019169055505050505050565b60d55460009060ff16156115b5576040516313d0ff5960e31b815260040160405180910390fd5b5060d3546115c481600161492e565b60d355600081815260d4602090815260409182902080546001600160a01b031916339081178255600182018590558351908152918201849052917f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3910160405180910390a15090565b6001546001600160a01b0316331480159061165a57506000546001600160a01b0362010000909104163314155b1561167857604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0382166000908152606460205260409020819060020161169f828261474e565b50505050565b6116ea604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff6401000000008504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b8080156117f3576000611793612440565b5a61179e919061492e565b630134dd308055905060006117b1612440565b5a6117bc919061492e565b6117c69083614946565b90508083111561169f57604051634010928f60e01b81526004810184905260248101829052604401610adb565b630134dd3080555050565b7f8f21accdcc5a0fec3416e6dbb52459a9c52dbaea4711ff41eef306912a465ae5611827612909565b60405161186e91906040808252601d908201527f417262697472756d2e676574546f74616c4c31466565496e57656928290000006060820152602081019190915260800190565b60405180910390a1565b60008061188f6001600160a01b0384166064612947565b91506118a56001600160a01b0384166064612974565b9050915091565b6000546001600160a01b03620100009091041633146118de57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166119055760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff8082166000908152606660205260408120549091611068916001600160a01b031690839061224c16565b606060208251028201602001825b818110156119c05760200180515481526119ab565b509192915050565b6000805b82811015611aeb5760008484838181106119e8576119e8614a19565b90506020020160208101906119fd919061405f565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a609190614a2f565b90507f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c4858584818110611a9557611a95614a19565b9050602002016020810190611aaa919061405f565b604080516001600160a01b039092168252602082018490520160405180910390a1611ad5818461492e565b9250508080611ae390614a48565b9150506119cc565b50611b19611b016001546001600160a01b031690565b60d55461010090046001600160a01b03169083612410565b505050565b60d554600090819060ff1615611b47576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314611b8157604051630504a20d60e01b8152336004820152602401610adb565b6000611b8c8661235e565b9050611b9e608086016060870161405f565b6001600160a01b031615611bd557611bd581611bc0608088016060890161405f565b611bd060a0890160808a01614a63565b61298c565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611c1390859085908a90606490600401614a8f565b6040805180830381865af4158015611c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5391906148f4565b90945092506000611c678286866064612a2e565b606b54909150811015610dd7576040516312b6b5cd60e11b815260048101829052602401610adb565b6001546001600160a01b03163314801590611cbd57506000546001600160a01b0362010000909104163314155b15611cdb57604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611d98576000611d74612440565b5a611d7f919061492e565b9050611d8b60a46124f8565b61143a8888888888612679565b611da260a46124f8565b6114a68787878787612679565b60606000611dbc84612a6e565b90508067ffffffffffffffff811115611dd757611dd761410f565b604051908082528060200260200182016040528015611e1c57816020015b6040805180820190915260008082526020820152815260200190600190039081611df55790505b50915060005b81811015611f2957600184016000868360088110611e4257611e42614a19565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611e9057611e90614a19565b60209081029190910101516001600160a01b039091169052600185016000868360088110611ec057611ec0614a19565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002054838281518110611f0957611f09614a19565b602090810291909101810151015280611f2181614a48565b915050611e22565b505092915050565b60606000611f4184600101612a6e565b90508067ffffffffffffffff811115611f5c57611f5c61410f565b604051908082528060200260200182016040528015611fc857816020015b611fb56040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b815260200190600190039081611f7a5790505b50915060005b81811015611f2957836002016000866001018360088110611ff157611ff1614a19565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b039091169084908390811061203f5761203f614a19565b60209081029190910101516001600160a01b03909116905260028501600060018701836008811061207257612072614a19565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600001548382815181106120be576120be614a19565b602002602001015160200181815250508460020160008660010183600881106120e9576120e9614a19565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000206001015483828151811061213557612135614a19565b6020026020010151604001818152505084600201600086600101836008811061216057612160614a19565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600201548382815181106121ac576121ac614a19565b602002602001015160600181815250506122188560020160008760010184600881106121da576121da614a19565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600301612ad8565b83828151811061222a5761222a614a19565b602002602001015160800181905250808061224490614a48565b915050611fce565b6001600160a01b0390811691161490565b63ffffffff80821660009081526065602052604081209161228091839161305c16565b156122a65760405163b087c8c360e01b815263ffffffff83166004820152602401610adb565b80546001600160a01b0316600090815260d2602052604090205460ff166122ee57805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610adb565b919050565b6040516001600160a01b038085166024830152831660448201526064810182905261169f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261306f565b63ffffffff8082166000908152606660205260408120546001600160a01b03169161238b91839161224c16565b156123b15760405163b087c8c360e01b815263ffffffff83166004820152602401610adb565b6001600160a01b038116600090815260d1602052604090205460ff166122ee57604051631079472960e21b81526001600160a01b0382166004820152602401610adb565b600080821361240c5761240782614b61565b611068565b5090565b6040516001600160a01b038316602482015260448101829052611b1990849063a9059cbb60e01b90606401612327565b60408051600481526024810182526020810180516001600160e01b031663a94597ff60e01b17905290516000918291829160649161247e9190614baa565b600060405180830381855afa9150503d80600081146124b9576040519150601f19603f3d011682016040523d82523d6000602084013e6124be565b606091505b50915091508115806124cf57508051155b156124dd5760009250505090565b808060200190518101906124f19190614a2f565b9250505090565b36811061252157604051634219202560e01b815236600482015260248101829052604401610adb565b50565b60d55460009060ff161561254b576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d4602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b238361257e87613141565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af41580156125c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e991906148f4565b909350905060006125fa8285614bc6565b60d5549091506126199061010090046001600160a01b03163386612410565b6126228261325a565b6040805187815233602082015290810182905260608101859052608081018390527f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060a00160405180910390a150505092915050565b60d55460009060ff16156126a0576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d460205260408120906126b88761235e565b90506126c384613141565b606a546126d0919061492e565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b15801561274f57600080fd5b505af4158015612763573d6000803e3d6000fd5b505060d554612784925061010090046001600160a01b031690503385612410565b505095945050505050565b6127b360405180606001604052806000815260200160008152602001600081525090565b60d55460ff16156127d7576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff1611156127fe576040516348d69f3560e01b815260040160405180910390fd5b600085815260d460205260408120906128168661235e565b600089815260d4602052604081209192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af190859089866128518b613141565b60646040518763ffffffff1660e01b81526004016128a496959493929190958652602086019490945261ffff9290921660408501526001600160a01b03166060840152608083015260a082015260c00190565b608060405180830381865af41580156128c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e59190614c07565b945090506128f28161325a565b50505095945050505050565b3361252181806132eb565b60408051600481526024810182526020810180516001600160e01b031663637bef0760e11b17905290516000918291829160649161247e9190614baa565b600061296d61295f6001600160a01b038516846133f3565b6001600160a01b0316613486565b9392505050565b600061296d61295f6001600160a01b03851684613502565b60006129a26001600160a01b0385166064613541565b90506000836001600160a01b0316826001600160a01b0316116129ce576129c98285614c80565b6129d8565b6129d88483614c80565b90506127106129eb8561ffff8616614ca8565b6129f59190614ced565b6001600160a01b0316816001600160a01b03161115612a27576040516307a1db0760e01b815260040160405180910390fd5b5050505050565b6000612a39836123f5565b612a64612a4f6001600160a01b03881685612974565b600160801b612a5d886123f5565b9190613567565b6112879190614bc6565b6000805b60088160ff161015612acf57828160ff1660088110612a9357612a93614a19565b60088104919091015460079091166004026101000a900463ffffffff16612abd5760ff1692915050565b80612ac781614d13565b915050612a72565b50600892915050565b60606000612ae5836135a9565b90508067ffffffffffffffff811115612b0057612b0061410f565b604051908082528060200260200182016040528015612b9057816020015b612b7d6040805161012081019091528060008152602001600060020b8152602001600060020b815260200160006001600160801b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081612b1e5790505b50915060005b8181101561305557600184016000858360058110612bb657612bb6614a19565b600580820492909201549190066006026101000a900465ffffffffffff168152602081019190915260400160002054835160ff90911690849083908110612bff57612bff614a19565b6020026020010151600001906002811115612c1c57612c1c613e87565b90816002811115612c2f57612c2f613e87565b905250600184016000858360058110612c4a57612c4a614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160019054906101000a900460020b838281518110612ca957612ca9614a19565b60209081029190910181015160029290920b910152600184016000858360058110612cd657612cd6614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160049054906101000a900460020b838281518110612d3557612d35614a19565b602090810291909101015160029190910b604090910152600184016000858360058110612d6457612d64614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160079054906101000a90046001600160801b0316838281518110612dc957612dc9614a19565b60209081029190910101516001600160801b03909116606090910152600184016000858360058110612dfd57612dfd614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060010154838281518110612e4f57612e4f614a19565b602090810291909101015160800152600184016000858360058110612e7657612e76614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060020154838281518110612ec857612ec8614a19565b602090810291909101015160a00152600184016000858360058110612eef57612eef614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060030154838281518110612f4157612f41614a19565b602090810291909101015160c00152600184016000858360058110612f6857612f68614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060040154838281518110612fba57612fba614a19565b602090810291909101015160e00152600184016000858360058110612fe157612fe1614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020019081526020016000206005015483828151811061303357613033614a19565b602090810291909101015161010001528061304d81614a48565b915050612b96565b5050919050565b90546001600160a01b0391821691161490565b60006130c4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166136209092919063ffffffff16565b805190915015611b1957808060200190518101906130e29190614d33565b611b195760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610adb565b60003a61013d548111156131775761013d54604051638dfe587d60e01b8152610adb918391600401918252602082015260400190565b82158061318d575060d8546001600160a01b0316155b1561319b5760009150613254565b6000333214156131b0576131ad612909565b90505b60006131bc3a86614d50565b60d854604051630e56d76760e31b815261012c6004820152919250600091613232916001600160a01b0316906372b6bb3890602401602060405180830381865afa15801561320e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061295f9190614d6f565b905061324e81600160801b613247858761492e565b919061362f565b94505050505b50919050565b60008113156132855760d75460d554612521916001600160a01b036101009092048216911683612410565b60d7546001600160a01b031663379607f561329f83614b61565b6040518263ffffffff1660e01b81526004016132bd91815260200190565b600060405180830381600087803b1580156132d757600080fd5b505af1158015612a27573d6000803e3d6000fd5b600054610100900460ff1680613304575060005460ff16155b6133205760405162461bcd60e51b8152600401610adb906149cb565b600054610100900460ff16158015613342576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a38015611b19576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152640100000000820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa158015613462573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061296d9190614d6f565b60006401000276a36001600160a01b03831610806134c1575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156134ea57604051635d236c4560e01b81526001600160a01b0383166004820152602401610adb565b6110686001600160a01b03831680600160401b61362f565b6001600160a01b03808316600090815260208390526040812060028101549054919261296d92169063ffffffff6401000000009091048116906136dd16565b6001600160a01b03808316600090815260208390526040812054909161296d91166136fe565b600061358d6000851261357a5784613586565b61358685600019614d8c565b848461362f565b9050600084121561296d576135a181614b61565b949350505050565b6000805b60058160ff16101561361757828160ff16600581106135ce576135ce614a19565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156136055760ff1692915050565b8061360f81614d13565b9150506135ad565b50600592915050565b60606135a18484600085613788565b600080806000198587098587029250828110838203039150508060001415613669576000841161365e57600080fd5b50829004905061296d565b80841161367557600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806136f36001600160a01b038516846138b0565b905061105181613acc565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561373f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137639190614e11565b509496509294505050506001600160a01b038316151590506132545761296d81613acc565b6060824710156137e95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610adb565b843b6138375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610adb565b600080866001600160a01b031685876040516138539190614baa565b60006040518083038185875af1925050503d8060008114613890576040519150601f19603f3d011682016040523d82523d6000602084013e613895565b606091505b50915091506138a5828286613dff565b979650505050505050565b600063ffffffff82166138d9576040516351a4d88160e01b815260006004820152602401610adb565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061390e5761390e614a19565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061393d5761393d614a19565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd9061397e908490600401614eb3565b600060405180830381865afa9250505080156139bc57506040513d6000823e601f3d908101601f191682016040526139b99190810190614f60565b60015b613a3157836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156139fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a229190614e11565b50939650611054945050505050565b600082600081518110613a4657613a46614a19565b602002602001015183600181518110613a6157613a61614a19565b6020026020010151613a73919061502c565b90506000613a8763ffffffff88168361507c565b905060008260060b128015613aad5750613aa763ffffffff8816836150ba565b60060b15155b15613ac05780613abc816150dc565b9150505b94506110689350505050565b60008060008360020b12613ae3578260020b613aeb565b8260020b6000035b9050620d89e8811115613b245760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610adb565b600060018216613b3857600160801b613b4a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613b7e576ffff97272373d413259a46990580e213a0260801c5b6004821615613b9d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613bbc576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613bdb576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613bfa576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613c19576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613c38576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613c58576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613c78576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613c98576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613cb8576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613cd8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613cf8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613d18576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613d38576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613d59576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613d79576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613d98576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613db5576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613dd6578060001981613dd257613dd2614cd7565b0490505b640100000000810615613dea576001613ded565b60005b60ff16602082901c0192505050919050565b60608315613e0e57508161296d565b825115613e1e5782518084602001fd5b8160405162461bcd60e51b8152600401610adb9190615100565b801515811461252157600080fd5b80356122ee81613e38565b600060208284031215613e6357600080fd5b813561296d81613e38565b600060208284031215613e8057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110613ebb57634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0384811682526060602080840182905285518483018190526000938783019290916080870190865b81811015613f175785518051861684528401518484015294830194604090920191600101613eee565b5050868103604088015287518082528282019450600581901b82018301838a0160005b8381101561403857848303601f190188528151805188168452868101518785015260408082015190850152898101518a85015260809081015160a0918501829052805191850182905287019060009060c08601905b80831015614023578351613fa4838251613e9d565b8a8101518060020b8c85015250604081015160020b60408401528d810151613fd68f8501826001600160801b03169052565b506080810151608084015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508984019350600183019250613f8f565b50998801999450505090850190600101613f3a565b50909c9b505050505050505050505050565b6001600160a01b038116811461252157600080fd5b60006020828403121561407157600080fd5b813561296d8161404a565b600060e0828403121561325457600080fd5b60008061010083850312156140a257600080fd5b82356140ad8161404a565b91506140bc846020850161407c565b90509250929050565b63ffffffff8116811461252157600080fd5b6000806000606084860312156140ec57600080fd5b8335925060208401356140fe816140c5565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561414e5761414e61410f565b604052919050565b80356122ee8161404a565b600080600083850360c081121561417757600080fd5b843593506020850135614189816140c5565b92506080603f198201121561419d57600080fd5b506040516080810181811067ffffffffffffffff821117156141c1576141c161410f565b6040908152850135815260608501356141d98161404a565b602082015260808501356141ec81613e38565b604082015260a08501356141ff81613e38565b606082015292959194509192509050565b6000806040838503121561422357600080fd5b823561422e8161404a565b9150602083013561423e81613e38565b809150509250929050565b6000806040838503121561425c57600080fd5b50508035926020909101359150565b60006020828403121561427d57600080fd5b813561296d816140c5565b60008060008084860360c081121561429f57600080fd5b60608112156142ad57600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b811461252157600080fd5b600080600080608085870312156142ef57600080fd5b843593506020850135614301816140c5565b92506040850135614311816142ca565b91506060850135614321816142ca565b939692955090935050565b61ffff8116811461252157600080fd5b80356122ee8161432c565b6000806000806080858703121561435d57600080fd5b84359350602085013592506040850135614376816140c5565b915060608501356143218161432c565b600080600080600060a0868803121561439e57600080fd5b853594506020860135935060408601356143b7816140c5565b925060608601356143c78161432c565b949793965091946080013592915050565b600080600080600060a086880312156143f057600080fd5b85356143fb8161404a565b9450602086013561440b8161404a565b9350604086013561441b8161404a565b9250606086013561442b8161404a565b9150608086013561443b8161404a565b809150509295509295909350565b60008082840360c081121561445d57600080fd5b83356144688161404a565b925060a0601f198201121561447c57600080fd5b506020830190509250929050565b600067ffffffffffffffff8211156144a4576144a461410f565b5060051b60200190565b600060208083850312156144c157600080fd5b823567ffffffffffffffff8111156144d857600080fd5b8301601f810185136144e957600080fd5b80356144fc6144f78261448a565b614125565b81815260059190911b8201830190838101908783111561451b57600080fd5b928401925b828410156138a557833582529284019290840190614520565b6020808252825182820181905260009190848201906040850190845b8181101561457157835183529284019291840191600101614555565b50909695505050505050565b6000806020838503121561459057600080fd5b823567ffffffffffffffff808211156145a857600080fd5b818501915085601f8301126145bc57600080fd5b8135818111156145cb57600080fd5b8660208260051b85010111156145e057600080fd5b60209290920196919550909350505050565b6000806000610120848603121561460857600080fd5b83359250602084013561461a816140c5565b9150614629856040860161407c565b90509250925092565b60008060006060848603121561464757600080fd5b83356146528161404a565b925060208401356146628161404a565b91506040840135614672816140c5565b809150509250925092565b600080600080600060a0868803121561469557600080fd5b8535945060208601356146a7816140c5565b935060408601356146b7816142ca565b925060608601356143c7816142ca565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b600081356110688161404a565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b81356147598161432c565b815461ffff191661ffff82161782555060208201356147778161432c565b815463ffff00001916601082901b63ffff00001617825550604082013561479d816140c5565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560608401356147cd81613e38565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815560808201356147fc8161404a565b611b19818361470a565b81356148118161404a565b61481b81836146dd565b50602082013561482a8161404a565b61483781600184016146dd565b5060028101604083013561484a8161432c565b815461ffff191661ffff82161782555060608301356148688161432c565b815463ffff00001916601082901b63ffff00001617825550608083013561488e816140c5565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a08501356148be81613e38565b68ffffffffff00000000199190911690911790151560401b60ff60401b16178155611b196148ee60c085016146fd565b8261470a565b6000806040838503121561490757600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561494157614941614918565b500190565b60008282101561495857614958614918565b500390565b81356149688161432c565b815461ffff191661ffff82161782555060208201356149868161432c565b815463ffff00001916601082901b63ffff0000161782555060408201356149ac8161432c565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215614a4157600080fd5b5051919050565b6000600019821415614a5c57614a5c614918565b5060010190565b600060208284031215614a7557600080fd5b813561296d8161432c565b8035600381106122ee57600080fd5b8481526001600160a01b038416602082015261014081018335614ab1816142ca565b60020b60408301526020840135614ac7816142ca565b60020b60608301526040840135600f81900b8114614ae457600080fd5b614af36080840182600f0b9052565b50614b0060608501614156565b6001600160a01b031660a0830152614b1a6080850161433c565b61ffff1660c0830152614b2f60a08501613e46565b151560e0830152614b4260c08501614a80565b614b50610100840182613e9d565b508261012083015295945050505050565b6000600160ff1b821415614b7757614b77614918565b5060000390565b60005b83811015614b99578181015183820152602001614b81565b8381111561169f5750506000910152565b60008251614bbc818460208701614b7e565b9190910192915050565b600080821280156001600160ff1b0384900385131615614be857614be8614918565b600160ff1b8390038412811615614c0157614c01614918565b50500190565b6000808284036080811215614c1b57600080fd5b835192506060601f1982011215614c3157600080fd5b506040516060810181811067ffffffffffffffff82111715614c5557614c5561410f565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b0383811690831681811015614ca057614ca0614918565b039392505050565b60006001600160a01b0382811684821681151582840482111615614cce57614cce614918565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b0383811680614d0757614d07614cd7565b92169190910492915050565b600060ff821660ff811415614d2a57614d2a614918565b60010192915050565b600060208284031215614d4557600080fd5b815161296d81613e38565b6000816000190483118215151615614d6a57614d6a614918565b500290565b600060208284031215614d8157600080fd5b815161296d8161404a565b60006001600160ff1b0381841382841380821686840486111615614db257614db2614918565b600160ff1b6000871282811687830589121615614dd157614dd1614918565b60008712925087820587128484161615614ded57614ded614918565b87850587128184161615614e0357614e03614918565b505050929093029392505050565b600080600080600080600060e0888a031215614e2c57600080fd5b8751614e378161404a565b6020890151909750614e48816142ca565b6040890151909650614e598161432c565b6060890151909550614e6a8161432c565b6080890151909450614e7b8161432c565b60a089015190935060ff81168114614e9257600080fd5b60c0890151909250614ea381613e38565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b8181101561457157835163ffffffff1683529284019291840191600101614ecf565b600082601f830112614f0257600080fd5b81516020614f126144f78361448a565b82815260059290921b84018101918181019086841115614f3157600080fd5b8286015b84811015614f55578051614f488161404a565b8352918301918301614f35565b509695505050505050565b60008060408385031215614f7357600080fd5b825167ffffffffffffffff80821115614f8b57600080fd5b818501915085601f830112614f9f57600080fd5b81516020614faf6144f78361448a565b82815260059290921b84018101918181019089841115614fce57600080fd5b948201945b83861015614ffc5785518060060b8114614fed5760008081fd5b82529482019490820190614fd3565b9188015191965090935050508082111561501557600080fd5b5061502285828601614ef1565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561505757615057614918565b81667fffffffffffff01831381161561507257615072614918565b5090039392505050565b60008160060b8360060b8061509357615093614cd7565b667fffffffffffff198214600019821416156150b1576150b1614918565b90059392505050565b60008260060b806150cd576150cd614cd7565b808360060b0791505092915050565b60008160020b627fffff198114156150f6576150f6614918565b6000190192915050565b602081526000825180602084015261511f816040850160208701614b7e565b601f01601f1916919091016040019291505056fea164736f6c634300080a000a';

type ArbitrumFixFeeTestConstructorParams =
  | [linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumFixFeeTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ArbitrumFixFeeTest__factory extends ContractFactory {
  constructor(...args: ArbitrumFixFeeTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ArbitrumFixFeeTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbitrumFixFeeTest> {
    return super.deploy(overrides || {}) as Promise<ArbitrumFixFeeTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ArbitrumFixFeeTest {
    return super.attach(address) as ArbitrumFixFeeTest;
  }
  connect(signer: Signer): ArbitrumFixFeeTest__factory {
    return super.connect(signer) as ArbitrumFixFeeTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumFixFeeTestInterface {
    return new utils.Interface(_abi) as ArbitrumFixFeeTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumFixFeeTest {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumFixFeeTest;
  }
}

export interface ArbitrumFixFeeTestLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
