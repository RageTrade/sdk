/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ArbitrumFixFeeTest,
  ArbitrumFixFeeTestInterface,
} from '../ArbitrumFixFeeTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'txGasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'ExcessTxGasPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'val',
        type: 'uint256',
      },
    ],
    name: 'Uint',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'emitGasCostWei',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'initRealToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'isRealTokenAlreadyInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'realTokenInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_txGasPriceLimit',
        type: 'uint256',
      },
    ],
    name: 'setTxGasPriceLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimGas',
        type: 'uint256',
      },
    ],
    name: 'testMethod',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txGasPriceLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615f74806200019a6000396000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c80637ec6ba3111610182578063cbef6d0e116100e9578063dbd035ff116100a2578063eb7c987d1161007c578063eb7c987d14610815578063ee6cd5ee146108c0578063fcd0a506146108d3578063fe6f083a146108e657600080fd5b8063dbd035ff146107cf578063e1f16713146107ef578063e67ed1df1461080257600080fd5b8063cbef6d0e1461076a578063ce0a9a271461077d578063d257be2b14610785578063d38bfff414610798578063dac42a96146107ab578063dbc0c085146107be57600080fd5b806398f5c5271161013b57806398f5c5271461068e5780639dca362f146106a1578063a26f7ca7146106a9578063a4063dbc146106bc578063a5cf76881461073f578063b79023031461075757600080fd5b80637ec6ba31146105715780637f64d6631461058457806384088b65146105975780638ce25a93146105cc57806393420cf4146105d557806394c8c71d1461067b57600080fd5b80633fc42d80116102415780635aa6e675116101fa57806364f36801116101d457806364f368011461051557806373cceb9d146105285780637938d8a31461054b5780637cc2f4f51461055e57600080fd5b80635aa6e675146104de5780635c318ad9146104f55780635c975abb1461050857600080fd5b80633fc42d801461040757806342be9fca1461043a57806343233d2e1461044d5780634e10b6e31461047c578063561684761461049f578063569634d3146104cb57600080fd5b80632a66e9ca116102935780632a66e9ca146103805780632afaea371461039357806332a72d98146103a657806336fadead146103ce57806339359029146103e15780633d56a35e146103f457600080fd5b8063127fec13146102db57806316c38b3c1461030b5780631a1feae1146103205780631e2eaeaf1461033857806321df4c0e1461034a578063261f80671461036d575b600080fd5b60d8546102ee906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61031e610319366004614bb9565b6108f9565b005b61032a61013d5481565b604051908152602001610302565b61032a610346366004614bd6565b5490565b61035d610358366004614bd6565b610957565b6040516103029493929190614c27565b61031e61037b366004614dc9565b6109a2565b61031e61038e366004614df8565b6109f1565b61031e6103a1366004614e41565b610ab4565b6103b96103b4366004614ecb565b610c1c565b60408051928352602083019190915201610302565b61031e6103dc366004614f7a565b610e15565b61031e6103ef366004614e41565b610e8b565b60d6546102ee906001600160a01b031681565b61042a610415366004614dc9565b60d26020526000908152604090205460ff1681565b6040519015158152602001610302565b61032a610448366004614fb3565b610fe7565b6102ee61045b366004614fd5565b63ffffffff166000908152606660205260409020546001600160a01b031690565b61042a61048a366004614dc9565b60d06020526000908152604090205460ff1681565b61042a6104ad366004614dc9565b6001600160a01b0316600090815260d0602052604090205460ff1690565b61032a6104d9366004614bd6565b61108e565b6000546201000090046001600160a01b03166102ee565b61031e610503366004614ff2565b6110a1565b60d55461042a9060ff1681565b61031e610523366004614f7a565b61110a565b61042a610536366004614dc9565b60d16020526000908152604090205460ff1681565b61031e610559366004614fb3565b611180565b61032a61056c366004615043565b6112aa565b61031e61057f366004614bd6565b6112c3565b61031e610592366004614dc9565b611314565b6105aa6105a53660046150b1565b6113e2565b6040805182518152602080840151908201529181015190820152606001610302565b61032a60d35481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff80821683526201000082048116838701908152600160201b9092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e001610302565b6105aa6106893660046150f0565b611414565b61031e61069c366004615142565b6114e6565b61032a6115c1565b61031e6106b73660046151b3565b611660565b6106cf6106ca366004614dc9565b6116d8565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e001610302565b60d5546102ee9061010090046001600160a01b031681565b60d7546102ee906001600160a01b031681565b61031e610778366004614bd6565b6117b4565b61031e611830565b6103b9610793366004614dc9565b6118aa565b61031e6107a6366004614dc9565b6118de565b61042a6107b9366004614fd5565b6119a0565b6001546001600160a01b03166102ee565b6107e26107dd366004615218565b6119cf565b60405161030291906152a3565b61031e6107fd3660046152e7565b6119fa565b6103b961081036600461535c565b611b50565b61088a610823366004614fd5565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff1690820152606001610302565b6103b96108ce366004615381565b611b77565b61031e6108e13660046153c1565b611ce9565b61032a6108f436600461540c565b611dba565b6001546001600160a01b0316331480159061092657506000546001600160a01b0362010000909104163314155b1561094457604051636bd1573560e11b815260040160405180910390fd5b60d5805460ff1916911515919091179055565b600081815260d46020526040812080546001600160a01b031691906060908190610985606882016064611e08565b9250610995600182016064611f8a565b9597909650929493505050565b60d6546001600160a01b031633146109cd576040516385734f3160e01b815260040160405180910390fd5b6001600160a01b0316600090815260d060205260409020805460ff19166001179055565b60d6546001600160a01b03163314610a1c576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff808216600090815260666020526040812054929350610a57926001600160a01b0316916122ca16565b610a6357610a63615456565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390610aac8282615595565b505050505050565b60d55460ff1615610ad8576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610b1757604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610b22846122db565b9050610b4c333085610b3b85546001600160a01b031690565b6001600160a01b0316929190612371565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610bb057600080fd5b505af4158015610bc4573d6000803e3d6000fd5b50508254604080518981526001600160a01b03909216602083015281018690527fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75925060600190505b60405180910390a15050505050565b60d554600090819060ff1615610c45576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314610c7f57604051630504a20d60e01b8152336004820152602401610b0e565b6000610c8a866123dc565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610d22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d469190615683565b90945092506000610d5684612473565b606b54909150811015610d7f576040516312b6b5cd60e11b815260048101829052602401610b0e565b60208601516001600160a01b031615801590610d9d57508560600151155b15610e0a5785604001518015610dc457508551610db990612473565b610dc285612473565b145b80610ded57508560400151158015610ded57508551610de290612473565b610deb86612473565b145b610e0a576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610e4257506000546001600160a01b0362010000909104163314155b15610e6057604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b60d55460ff1615610eaf576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610ee957604051630504a20d60e01b8152336004820152602401610b0e565b6000610ef4846122db565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610f6157600080fd5b505af4158015610f75573d6000803e3d6000fd5b50505050610f9f3384610f8f84546001600160a01b031690565b6001600160a01b0316919061248e565b8054604080518781526001600160a01b03909216602083015281018490527fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690606001610c0d565b6000818015611070576000610ffa6124be565b5a61100591906156bd565b90506110116044612576565b61101b85856125a2565b925060006110276124be565b5a61103291906156bd565b61103c90836156d5565b90508083111561106957604051634010928f60e01b81526004810184905260248101829052604401610b0e565b5050611087565b61107a6044612576565b61108484846125a2565b91505b5092915050565b600061109b8260006125a2565b92915050565b6001546001600160a01b031633148015906110ce57506000546001600160a01b0362010000909104163314155b156110ec57604051636bd1573560e11b815260040160405180910390fd5b8360686110f982826156ec565b5050606a92909255606b5560695550565b6001546001600160a01b0316331480159061113757506000546001600160a01b0362010000909104163314155b1561115557604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d260205260409020805460ff1916911515919091179055565b60d55460ff16156111a4576040516313d0ff5960e31b815260040160405180910390fd5b600082815260d46020526040902080546001600160a01b031633146111de57604051630504a20d60e01b8152336004820152602401610b0e565b604051634042e78f60e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91634042e78f910160006040518083038186803b15801561123757600080fd5b505af415801561124b573d6000803e3d6000fd5b505060d55461126c925061010090046001600160a01b03169050338461248e565b60408051848152602081018490527fb8635fe5938466cc626f7c214bf818f090e2b736368828f448cd2b379cf0174e910160405180910390a1505050565b60006112ba8585858560006126f7565b95945050505050565b6001546001600160a01b031633148015906112f057506000546001600160a01b0362010000909104163314155b1561130e57604051636bd1573560e11b815260040160405180910390fd5b61013d55565b6001546001600160a01b0316331480159061134157506000546001600160a01b0362010000909104163314155b1561135f57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166113865760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b61140660405180606001604052806000815260200160008152602001600081525090565b6112ba85858585600061280d565b61143860405180606001604052806000815260200160008152602001600081525090565b8180156114c25760006114496124be565b5a61145491906156bd565b905061146060a4612576565b61146d888888888861280d565b925060006114796124be565b5a61148491906156bd565b61148e90836156d5565b9050808311156114bb57604051634010928f60e01b81526004810184905260248101829052604401610b0e565b50506114dc565b6114cc60a4612576565b6114d9878787878761280d565b91505b5095945050505050565b600054610100900460ff16806114ff575060005460ff16155b61151b5760405162461bcd60e51b8152600401610b0e9061575a565b600054610100900460ff1615801561153d576000805461ffff19166101011790555b60d680546001600160a01b03199081166001600160a01b038981169190911790925560d58054610100600160a81b0319166101008985160217905560d78054821687841617905560d880548216858416179055606780549091169185169190911790556115a861297c565b8015610aac576000805461ff0019169055505050505050565b60d55460009060ff16156115e8576040516313d0ff5960e31b815260040160405180910390fd5b5060d3546115f78160016156bd565b60d355600081815260d4602090815260409182902080546001600160a01b031916339081178255600182018590558351908152918201849052917f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3910160405180910390a15090565b6001546001600160a01b0316331480159061168d57506000546001600160a01b0362010000909104163314155b156116ab57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216600090815260646020526040902081906002016116d282826154dd565b50505050565b61171d604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff600160201b8504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b8080156118255760006117c56124be565b5a6117d091906156bd565b630134dd308055905060006117e36124be565b5a6117ee91906156bd565b6117f890836156d5565b9050808311156116d257604051634010928f60e01b81526004810184905260248101829052604401610b0e565b630134dd3080555050565b7f8f21accdcc5a0fec3416e6dbb52459a9c52dbaea4711ff41eef306912a465ae5611859612987565b6040516118a091906040808252601d908201527f417262697472756d2e676574546f74616c4c31466565496e57656928290000006060820152602081019190915260800190565b60405180910390a1565b6000806118c16001600160a01b03841660646129c5565b91506118d76001600160a01b03841660646129f2565b9050915091565b6000546001600160a01b036201000090910416331461191057604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166119375760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff808216600090815260666020526040812054909161109b916001600160a01b03169083906122ca16565b606060208251028201602001825b818110156119f25760200180515481526119dd565b509192915050565b6000805b82811015611b1d576000848483818110611a1a57611a1a6157a8565b9050602002016020810190611a2f9190614dc9565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9291906157be565b90507f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c4858584818110611ac757611ac76157a8565b9050602002016020810190611adc9190614dc9565b604080516001600160a01b039092168252602082018490520160405180910390a1611b0781846156bd565b9250508080611b15906157d7565b9150506119fe565b50611b4b611b336001546001600160a01b031690565b60d55461010090046001600160a01b0316908361248e565b505050565b600082815260d4602052604081208190611b6c90846064612a0a565b909590945092505050565b60d554600090819060ff1615611ba0576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314611bda57604051630504a20d60e01b8152336004820152602401610b0e565b6000611be5866123dc565b9050611bf76080860160608701614dc9565b6001600160a01b031615611c2e57611c2e81611c196080880160608901614dc9565b611c2960a0890160808a016157f2565b612a60565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611c6c90859085908a9060649060040161581e565b6040805180830381865af4158015611c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cac9190615683565b90945092506000611cc08286866064612b02565b606b54909150811015610e0a576040516312b6b5cd60e11b815260048101829052602401610b0e565b6001546001600160a01b03163314801590611d1657506000546001600160a01b0362010000909104163314155b15611d3457604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611df1576000611dcd6124be565b5a611dd891906156bd565b9050611de460a4612576565b61146d88888888886126f7565b611dfb60a4612576565b6114d987878787876126f7565b60606000611e1584612b42565b90508067ffffffffffffffff811115611e3057611e30614e79565b604051908082528060200260200182016040528015611e7557816020015b6040805180820190915260008082526020820152815260200190600190039081611e4e5790505b50915060005b81811015611f8257600184016000868360088110611e9b57611e9b6157a8565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611ee957611ee96157a8565b60209081029190910101516001600160a01b039091169052600185016000868360088110611f1957611f196157a8565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002054838281518110611f6257611f626157a8565b602090810291909101810151015280611f7a816157d7565b915050611e7b565b505092915050565b600381015463ffffffff16600090815260028301602052604081205490606090611fb660018601612b42565b90508067ffffffffffffffff811115611fd157611fd1614e79565b60405190808252806020026020018201604052801561203d57816020015b61202a6040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b815260200190600190039081611fef5790505b50915060005b818110156122c157846002016000876001018360088110612066576120666157a8565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b03909116908490839081106120b4576120b46157a8565b60209081029190910101516001600160a01b0390911690526002860160006001880183600881106120e7576120e76157a8565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154838281518110612133576121336157a8565b6020026020010151602001818152505085600201600087600101836008811061215e5761215e6157a8565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600101548382815181106121aa576121aa6157a8565b602002602001015160400181815250508560020160008760010183600881106121d5576121d56157a8565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060020154838281518110612221576122216157a8565b6020026020010151606001818152505061228d86600201600088600101846008811061224f5761224f6157a8565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600301612bac565b83828151811061229f5761229f6157a8565b60200260200101516080018190525080806122b9906157d7565b915050612043565b50509250929050565b6001600160a01b0390811691161490565b63ffffffff8082166000908152606560205260408120916122fe91839161313016565b156123245760405163b087c8c360e01b815263ffffffff83166004820152602401610b0e565b80546001600160a01b0316600090815260d2602052604090205460ff1661236c57805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610b0e565b919050565b6040516001600160a01b03808516602483015283166044820152606481018290526116d29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613143565b63ffffffff8082166000908152606660205260408120546001600160a01b0316916124099183916122ca16565b1561242f5760405163b087c8c360e01b815263ffffffff83166004820152602401610b0e565b6001600160a01b038116600090815260d1602052604090205460ff1661236c57604051631079472960e21b81526001600160a01b0382166004820152602401610b0e565b600080821361248a57612485826158f0565b61109b565b5090565b6040516001600160a01b038316602482015260448101829052611b4b90849063a9059cbb60e01b906064016123a5565b60408051600481526024810182526020810180516001600160e01b031663a94597ff60e01b1790529051600091829182916064916124fc9190615939565b600060405180830381855afa9150503d8060008114612537576040519150601f19603f3d011682016040523d82523d6000602084013e61253c565b606091505b509150915081158061254d57508051155b1561255b5760009250505090565b8080602001905181019061256f91906157be565b9250505090565b36811061259f57604051634219202560e01b815236600482015260248101829052604401610b0e565b50565b60d55460009060ff16156125c9576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d4602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b23836125fc87613215565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612643573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126679190615683565b909350905060006126788285615955565b60d5549091506126979061010090046001600160a01b0316338661248e565b6126a08261332e565b6040805187815233602082015290810182905260608101859052608081018390527f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060a00160405180910390a150505092915050565b60d55460009060ff161561271e576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d46020526040812090612736876123dc565b905061274184613215565b606a5461274e91906156bd565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b1580156127cd57600080fd5b505af41580156127e1573d6000803e3d6000fd5b505060d554612802925061010090046001600160a01b03169050338561248e565b505095945050505050565b61283160405180606001604052806000815260200160008152602001600081525090565b60d55460ff1615612855576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff16111561287c576040516348d69f3560e01b815260040160405180910390fd5b600085815260d46020526040812090612894866123dc565b600089815260d4602052604081209192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af190859089866128cf8b613215565b60646040518763ffffffff1660e01b815260040161292296959493929190958652602086019490945261ffff9290921660408501526001600160a01b03166060840152608083015260a082015260c00190565b608060405180830381865af415801561293f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129639190615996565b945090506129708161332e565b50505095945050505050565b3361259f81806133bf565b60408051600481526024810182526020810180516001600160e01b031663637bef0760e11b1790529051600091829182916064916124fc9190615939565b60006129eb6129dd6001600160a01b038516846134c7565b6001600160a01b0316613559565b9392505050565b60006129eb6129dd6001600160a01b038516846135d5565b600080612a178584613613565b9150612a2b6001860185600286018661363f565b600286015490915063ffffffff1615612a585782600501548112612a4f5780612a55565b82600501545b90505b935093915050565b6000612a766001600160a01b0385166064613794565b90506000836001600160a01b0316826001600160a01b031611612aa257612a9d8285615a0f565b612aac565b612aac8483615a0f565b9050612710612abf8561ffff8616615a37565b612ac99190615a7c565b6001600160a01b0316816001600160a01b03161115612afb576040516307a1db0760e01b815260040160405180910390fd5b5050505050565b6000612b0d83612473565b612b38612b236001600160a01b038816856129f2565b600160801b612b3188612473565b91906137ba565b6112ba9190615955565b6000805b60088160ff161015612ba357828160ff1660088110612b6757612b676157a8565b60088104919091015460079091166004026101000a900463ffffffff16612b915760ff1692915050565b80612b9b81615aa2565b915050612b46565b50600892915050565b60606000612bb9836137fc565b90508067ffffffffffffffff811115612bd457612bd4614e79565b604051908082528060200260200182016040528015612c6457816020015b612c516040805161012081019091528060008152602001600060020b8152602001600060020b815260200160006001600160801b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200190600190039081612bf25790505b50915060005b8181101561312957600184016000858360058110612c8a57612c8a6157a8565b600580820492909201549190066006026101000a900465ffffffffffff168152602081019190915260400160002054835160ff90911690849083908110612cd357612cd36157a8565b6020026020010151600001906002811115612cf057612cf0614bef565b90816002811115612d0357612d03614bef565b905250600184016000858360058110612d1e57612d1e6157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160019054906101000a900460020b838281518110612d7d57612d7d6157a8565b60209081029190910181015160029290920b910152600184016000858360058110612daa57612daa6157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160049054906101000a900460020b838281518110612e0957612e096157a8565b602090810291909101015160029190910b604090910152600184016000858360058110612e3857612e386157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160079054906101000a90046001600160801b0316838281518110612e9d57612e9d6157a8565b60209081029190910101516001600160801b03909116606090910152600184016000858360058110612ed157612ed16157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060010154838281518110612f2357612f236157a8565b602090810291909101015160800152600184016000858360058110612f4a57612f4a6157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060020154838281518110612f9c57612f9c6157a8565b602090810291909101015160a00152600184016000858360058110612fc357612fc36157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060030154838281518110613015576130156157a8565b602090810291909101015160c0015260018401600085836005811061303c5761303c6157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020019081526020016000206004015483828151811061308e5761308e6157a8565b602090810291909101015160e001526001840160008583600581106130b5576130b56157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060050154838281518110613107576131076157a8565b6020908102919091010151610100015280613121816157d7565b915050612c6a565b5050919050565b90546001600160a01b0391821691161490565b6000613198826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166138739092919063ffffffff16565b805190915015611b4b57808060200190518101906131b69190615ac2565b611b4b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b0e565b60003a61013d5481111561324b5761013d54604051638dfe587d60e01b8152610b0e918391600401918252602082015260400190565b821580613261575060d8546001600160a01b0316155b1561326f5760009150613328565b60003332141561328457613281612987565b90505b60006132903a86615adf565b60d854604051630e56d76760e31b815261012c6004820152919250600091613306916001600160a01b0316906372b6bb3890602401602060405180830381865afa1580156132e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129dd9190615afe565b905061332281600160801b61331b85876156bd565b9190613882565b94505050505b50919050565b60008113156133595760d75460d55461259f916001600160a01b03610100909204821691168361248e565b60d7546001600160a01b031663379607f5613373836158f0565b6040518263ffffffff1660e01b815260040161339191815260200190565b600060405180830381600087803b1580156133ab57600080fd5b505af1158015612afb573d6000803e3d6000fd5b600054610100900460ff16806133d8575060005460ff16155b6133f45760405162461bcd60e51b8152600401610b0e9061575a565b600054610100900460ff16158015613416576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a38015611b4b576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152600160201b820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa158015613535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129eb9190615afe565b60006401000276a36001600160a01b0383161080613594575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156135bd57604051635d236c4560e01b81526001600160a01b0383166004820152602401610b0e565b61109b6001600160a01b03831680600160401b613882565b6001600160a01b0380831660009081526020839052604081206002810154905491926129eb92169063ffffffff600160201b90910481169061393016565b6000613626600184016002840184613951565b90506136356068840183613a5f565b6129eb9082615955565b600080808080805b60088160ff16101561377257896001018160ff166008811061366b5761366b6157a8565b60088104919091015460079091166004026101000a900463ffffffff1661369157613772565b60008860008c6001018460ff16600881106136ae576136ae6157a8565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b031691506136fb908c908c9084908c90613b2516565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff1615613748576137358487615955565b95506137418386615955565b945061375f565b6137528484613be0565b61375c9088615955565b96505b508061376a81615aa2565b915050613647565b5061377d8484613be0565b6137879086615955565b9998505050505050505050565b6001600160a01b0380831660009081526020839052604081205490916129eb9116613bf1565b60006137e0600085126137cd57846137d9565b6137d985600019615b1b565b8484613882565b905060008412156129eb576137f4816158f0565b949350505050565b6000805b60058160ff16101561386a57828160ff1660058110613821576138216157a8565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156138585760ff1692915050565b8061386281615aa2565b915050613800565b50600592915050565b60606137f48484600085613c7b565b6000808060001985870985870292508281108382030391505080600014156138bc57600084116138b157600080fd5b5082900490506129eb565b8084116138c857600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806139466001600160a01b03851684613da3565b905061108481613fbf565b6000805b60088160ff161015613a38576000856001018260ff166008811061397b5761397b6157a8565b60088104919091015460079091166004026101000a900463ffffffff169050806139a55750613a38565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b03909116916139e3908290849089906142f116565b6139ed9086615955565b94506000613a046001600160a01b038416886135d5565b9050613a156003830182858a614315565b613a1f9087615955565b9550505050508080613a3090615aa2565b915050613955565b50600382015463ffffffff1660009081526002850160205260409020546137f49082615955565b60008060005b60088160ff161015613b1d5760008560ff831660088110613a8857613a886157a8565b60088104919091015460079091166004026101000a900463ffffffff16905080613ab25750613b1d565b63ffffffff811660009081526001860160205260409020613afc613ad582614342565b63ffffffff808516600090815260018b0160205260409020549190600160801b906137ba16565b613b069085615955565b935050508080613b1590615aa2565b915050613a65565b509392505050565b63ffffffff8083166000908152600286016020526040812090918291908290613b5b906001600160a01b0388169087906129f216565b90506000613b736001600160a01b0388168988614350565b83549091506000613b86600386016143aa565b9050613baf61ffff8416620186a0612b3187600160801b82613ba8888a615955565b6000613be0565b9650613bd061ffff8416620186a0612b3187600160801b82613ba8896158f0565b9550505050505094509492505050565b60008183131561332857508161109b565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613c32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c569190615ba0565b509496509294505050506001600160a01b03831615159050613328576129eb81613fbf565b606082471015613cdc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b0e565b843b613d2a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b0e565b600080866001600160a01b03168587604051613d469190615939565b60006040518083038185875af1925050503d8060008114613d83576040519150601f19603f3d011682016040523d82523d6000602084013e613d88565b606091505b5091509150613d98828286614425565b979650505050505050565b600063ffffffff8216613dcc576040516351a4d88160e01b815260006004820152602401610b0e565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110613e0157613e016157a8565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110613e3057613e306157a8565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90613e71908490600401615c42565b600060405180830381865afa925050508015613eaf57506040513d6000823e601f3d908101601f19168201604052613eac9190810190615cef565b60015b613f2457836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613f159190615ba0565b50939650611087945050505050565b600082600081518110613f3957613f396157a8565b602002602001015183600181518110613f5457613f546157a8565b6020026020010151613f669190615dbb565b90506000613f7a63ffffffff881683615e0b565b905060008260060b128015613fa05750613f9a63ffffffff881683615e49565b60060b15155b15613fb35780613faf81615e6b565b9150505b945061109b9350505050565b60008060008360020b12613fd6578260020b613fde565b8260020b6000035b9050620d89e88111156140175760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610b0e565b60006001821661402b57600160801b61403d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615614071576ffff97272373d413259a46990580e213a0260801c5b6004821615614090576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156140af576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156140ce576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156140ed576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561410c576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561412b576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561414b576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561416b576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561418b576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156141ab576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156141cb576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156141eb576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561420b576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561422b576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561424c576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561426c576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561428b576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156142a8576b048a170391f7dc42444e8fa20260801c5b60008460020b13156142c95780600019816142c5576142c5615a66565b0490505b600160201b8106156142dc5760016142df565b60005b60ff16602082901c0192505050919050565b6000806143076001600160a01b038516846129f2565b90506112ba8585838661445e565b6001600160a01b0382811660009081526020839052604081206001015490916112ba91879187911661448b565b600061109b6129dd83614527565b6000821561437e57506001600160a01b03831660009081526020829052604090206002015461ffff166129eb565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff166129eb565b6000805b60058110156133285760008382600581106143cb576143cb6157a8565b600580820492909201549190066006026101000a900465ffffffffffff1660008181526001860160205260409020909150614405906145b9565b61440f90846156bd565b925050808061441d906157d7565b9150506143ae565b606083156144345750816129eb565b8251156144445782518084602001fd5b8160405162461bcd60e51b8152600401610b0e9190615e8f565b6001600160a01b0383811660009081526020839052604081206001015490916112ba918791869116614610565b6000805b6005811015613b1d5760008582600581106144ac576144ac6157a8565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff16600014156144e35750613b1d565b65ffffffffffff81166000908152600187016020526040902061450790868661463a565b6145119084615955565b925050808061451f906157d7565b91505061448f565b600061453d82600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015614595573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b9190615afe565b805460009081906145d190610100900460020b613fbf565b83549091506000906145ec90600160201b900460020b613fbf565b84549091506137f49083908390600160381b90046001600160801b03166001614753565b82546000906146249084600160801b6137ba565b90506146308483614808565b6137f49082615955565b60008080614648868661488d565b915091506000614660866001600160a01b0316613559565b9050816146728483600160801b6137ba565b61467c9190615955565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa1580156146e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906147089190615ec2565b905061472961472482606001518761495790919063ffffffff16565b614987565b6147339083615955565b8151604083015191935061474991879190614999565b6112ba9083615955565b6000836001600160a01b0316856001600160a01b03161115614773579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b0386860381169087166147a657600080fd5b836147dc57866001600160a01b03166147c98383896001600160a01b0316613882565b816147d6576147d6615a66565b04613d98565b613d986147f38383896001600160a01b03166149d3565b886001600160a01b0316808204910615150190565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015614849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061486d91906157be565b905060006148848286600201548760010154614a13565b6112ba906158f0565b8154600090819081906148a790610100900460020b613fbf565b85549091506000906148c290600160201b900460020b613fbf565b9050846001600160a01b0380841690821610156148e05750816148fd565b816001600160a01b0316866001600160a01b031611156148fd5750805b8654614922906147249083908590600160381b90046001600160801b03166000614753565b945061494b61472484838a60000160079054906101000a90046001600160801b03166000614a2e565b93505050509250929050565b815460058301546000916129eb91600160381b9091046001600160801b031690600160801b9061331b90866156d5565b6000600160ff1b821061248a57600080fd5b60028301546003840154600485015485546000936149ca9387938793600160381b90046001600160801b0316614a9e565b6137f4906158f0565b60006149e0848484613882565b9050600082806149f2576149f2615a66565b84860911156129eb576000198110614a0957600080fd5b6001019392505050565b60006137f4614a228486615f28565b8390600160801b614ac6565b6000836001600160a01b0316856001600160a01b03161115614a4e579293925b81614a7b57614a76836001600160801b03168686036001600160a01b0316600160601b613882565b6112ba565b6112ba836001600160801b03168686036001600160a01b0316600160601b6149d3565b6000613d9882600160801b614ab58888888d614b57565b614abf908a615f28565b9190614b7c565b6000600181808080881215614ae857921592614ae1886158f0565b9250614aec565b8792505b6000871215614b0857921592614b01876158f0565b9150614b0c565b8691505b6000861215614b2b57921592614b2486600019615b1b565b9050614b2e565b50845b614b39838383613882565b945083614b4c57614b49856158f0565b94505b505050509392505050565b6000614b72614b668684615f28565b8590600160801b614ac6565b6112ba9084615955565b6000614b898484846137ba565b905060008112156129eb576137f460001982615955565b801515811461259f57600080fd5b803561236c81614ba0565b600060208284031215614bcb57600080fd5b81356129eb81614ba0565b600060208284031215614be857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110614c2357634e487b7160e01b600052602160045260246000fd5b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b81811015614c83578651805187168452850151858401529584019591830191600101614c5c565b5050878103606089015288518082528382019550600581901b82018401848b0160005b83811015614da057848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b80831015614d8b578351614d0e838251614c05565b8b8101518060020b8d850152508a81015160020b8b8401526060810151614d4060608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a84019350600183019250614cf9565b509a89019a9450505090860190600101614ca6565b50909e9d5050505050505050505050505050565b6001600160a01b038116811461259f57600080fd5b600060208284031215614ddb57600080fd5b81356129eb81614db4565b600060e0828403121561332857600080fd5b6000806101008385031215614e0c57600080fd5b8235614e1781614db4565b9150614e268460208501614de6565b90509250929050565b63ffffffff8116811461259f57600080fd5b600080600060608486031215614e5657600080fd5b833592506020840135614e6881614e2f565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715614eb857614eb8614e79565b604052919050565b803561236c81614db4565b600080600083850360c0811215614ee157600080fd5b843593506020850135614ef381614e2f565b92506080603f1982011215614f0757600080fd5b506040516080810181811067ffffffffffffffff82111715614f2b57614f2b614e79565b604090815285013581526060850135614f4381614db4565b60208201526080850135614f5681614ba0565b604082015260a0850135614f6981614ba0565b606082015292959194509192509050565b60008060408385031215614f8d57600080fd5b8235614f9881614db4565b91506020830135614fa881614ba0565b809150509250929050565b60008060408385031215614fc657600080fd5b50508035926020909101359150565b600060208284031215614fe757600080fd5b81356129eb81614e2f565b60008060008084860360c081121561500957600080fd5b606081121561501757600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b811461259f57600080fd5b6000806000806080858703121561505957600080fd5b84359350602085013561506b81614e2f565b9250604085013561507b81615034565b9150606085013561508b81615034565b939692955090935050565b61ffff8116811461259f57600080fd5b803561236c81615096565b600080600080608085870312156150c757600080fd5b843593506020850135925060408501356150e081614e2f565b9150606085013561508b81615096565b600080600080600060a0868803121561510857600080fd5b8535945060208601359350604086013561512181614e2f565b9250606086013561513181615096565b949793965091946080013592915050565b600080600080600060a0868803121561515a57600080fd5b853561516581614db4565b9450602086013561517581614db4565b9350604086013561518581614db4565b9250606086013561519581614db4565b915060808601356151a581614db4565b809150509295509295909350565b60008082840360c08112156151c757600080fd5b83356151d281614db4565b925060a0601f19820112156151e657600080fd5b506020830190509250929050565b600067ffffffffffffffff82111561520e5761520e614e79565b5060051b60200190565b6000602080838503121561522b57600080fd5b823567ffffffffffffffff81111561524257600080fd5b8301601f8101851361525357600080fd5b8035615266615261826151f4565b614e8f565b81815260059190911b8201830190838101908783111561528557600080fd5b928401925b82841015613d985783358252928401929084019061528a565b6020808252825182820181905260009190848201906040850190845b818110156152db578351835292840192918401916001016152bf565b50909695505050505050565b600080602083850312156152fa57600080fd5b823567ffffffffffffffff8082111561531257600080fd5b818501915085601f83011261532657600080fd5b81358181111561533557600080fd5b8660208260051b850101111561534a57600080fd5b60209290920196919550909350505050565b6000806040838503121561536f57600080fd5b823591506020830135614fa881614ba0565b6000806000610120848603121561539757600080fd5b8335925060208401356153a981614e2f565b91506153b88560408601614de6565b90509250925092565b6000806000606084860312156153d657600080fd5b83356153e181614db4565b925060208401356153f181614db4565b9150604084013561540181614e2f565b809150509250925092565b600080600080600060a0868803121561542457600080fd5b85359450602086013561543681614e2f565b9350604086013561544681615034565b9250606086013561513181615034565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000813561109b81614db4565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b81356154e881615096565b815461ffff191661ffff821617825550602082013561550681615096565b815463ffff00001916601082901b63ffff00001617825550604082013561552c81614e2f565b815467ffffffff000000008260201b1691508167ffffffff00000000198216178355606084013561555c81614ba0565b68ffffffffff00000000199190911690911790151560401b60ff60401b16178155608082013561558b81614db4565b611b4b8183615499565b81356155a081614db4565b6155aa818361546c565b5060208201356155b981614db4565b6155c6816001840161546c565b506002810160408301356155d981615096565b815461ffff191661ffff82161782555060608301356155f781615096565b815463ffff00001916601082901b63ffff00001617825550608083013561561d81614e2f565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a085013561564d81614ba0565b68ffffffffff00000000199190911690911790151560401b60ff60401b16178155611b4b61567d60c0850161548c565b82615499565b6000806040838503121561569657600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600082198211156156d0576156d06156a7565b500190565b6000828210156156e7576156e76156a7565b500390565b81356156f781615096565b815461ffff191661ffff821617825550602082013561571581615096565b815463ffff00001916601082901b63ffff00001617825550604082013561573b81615096565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156157d057600080fd5b5051919050565b60006000198214156157eb576157eb6156a7565b5060010190565b60006020828403121561580457600080fd5b81356129eb81615096565b80356003811061236c57600080fd5b8481526001600160a01b03841660208201526101408101833561584081615034565b60020b6040830152602084013561585681615034565b60020b60608301526040840135600f81900b811461587357600080fd5b6158826080840182600f0b9052565b5061588f60608501614ec0565b6001600160a01b031660a08301526158a9608085016150a6565b61ffff1660c08301526158be60a08501614bae565b151560e08301526158d160c0850161580f565b6158df610100840182614c05565b508261012083015295945050505050565b6000600160ff1b821415615906576159066156a7565b5060000390565b60005b83811015615928578181015183820152602001615910565b838111156116d25750506000910152565b6000825161594b81846020870161590d565b9190910192915050565b600080821280156001600160ff1b0384900385131615615977576159776156a7565b600160ff1b8390038412811615615990576159906156a7565b50500190565b60008082840360808112156159aa57600080fd5b835192506060601f19820112156159c057600080fd5b506040516060810181811067ffffffffffffffff821117156159e4576159e4614e79565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b0383811690831681811015615a2f57615a2f6156a7565b039392505050565b60006001600160a01b0382811684821681151582840482111615615a5d57615a5d6156a7565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b0383811680615a9657615a96615a66565b92169190910492915050565b600060ff821660ff811415615ab957615ab96156a7565b60010192915050565b600060208284031215615ad457600080fd5b81516129eb81614ba0565b6000816000190483118215151615615af957615af96156a7565b500290565b600060208284031215615b1057600080fd5b81516129eb81614db4565b60006001600160ff1b0381841382841380821686840486111615615b4157615b416156a7565b600160ff1b6000871282811687830589121615615b6057615b606156a7565b60008712925087820587128484161615615b7c57615b7c6156a7565b87850587128184161615615b9257615b926156a7565b505050929093029392505050565b600080600080600080600060e0888a031215615bbb57600080fd5b8751615bc681614db4565b6020890151909750615bd781615034565b6040890151909650615be881615096565b6060890151909550615bf981615096565b6080890151909450615c0a81615096565b60a089015190935060ff81168114615c2157600080fd5b60c0890151909250615c3281614ba0565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b818110156152db57835163ffffffff1683529284019291840191600101615c5e565b600082601f830112615c9157600080fd5b81516020615ca1615261836151f4565b82815260059290921b84018101918181019086841115615cc057600080fd5b8286015b84811015615ce4578051615cd781614db4565b8352918301918301615cc4565b509695505050505050565b60008060408385031215615d0257600080fd5b825167ffffffffffffffff80821115615d1a57600080fd5b818501915085601f830112615d2e57600080fd5b81516020615d3e615261836151f4565b82815260059290921b84018101918181019089841115615d5d57600080fd5b948201945b83861015615d8b5785518060060b8114615d7c5760008081fd5b82529482019490820190615d62565b91880151919650909350505080821115615da457600080fd5b50615db185828601615c80565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615615de657615de66156a7565b81667fffffffffffff018313811615615e0157615e016156a7565b5090039392505050565b60008160060b8360060b80615e2257615e22615a66565b667fffffffffffff19821460001982141615615e4057615e406156a7565b90059392505050565b60008260060b80615e5c57615e5c615a66565b808360060b0791505092915050565b60008160020b627fffff19811415615e8557615e856156a7565b6000190192915050565b6020815260008251806020840152615eae81604085016020870161590d565b601f01601f19169190910160400192915050565b600060808284031215615ed457600080fd5b6040516080810181811067ffffffffffffffff82111715615ef757615ef7614e79565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60008083128015600160ff1b850184121615615f4657615f466156a7565b6001600160ff1b0384018313811615615f6157615f616156a7565b5050039056fea164736f6c634300080a000a';

type ArbitrumFixFeeTestConstructorParams =
  | [linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumFixFeeTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ArbitrumFixFeeTest__factory extends ContractFactory {
  constructor(...args: ArbitrumFixFeeTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ArbitrumFixFeeTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbitrumFixFeeTest> {
    return super.deploy(overrides || {}) as Promise<ArbitrumFixFeeTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ArbitrumFixFeeTest {
    return super.attach(address) as ArbitrumFixFeeTest;
  }
  connect(signer: Signer): ArbitrumFixFeeTest__factory {
    return super.connect(signer) as ArbitrumFixFeeTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumFixFeeTestInterface {
    return new utils.Interface(_abi) as ArbitrumFixFeeTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumFixFeeTest {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumFixFeeTest;
  }
}

export interface ArbitrumFixFeeTestLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
