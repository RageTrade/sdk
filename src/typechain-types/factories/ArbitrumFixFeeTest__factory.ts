/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ArbitrumFixFeeTest,
  ArbitrumFixFeeTestInterface,
} from '../ArbitrumFixFeeTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'collateralId',
        type: 'uint32',
      },
    ],
    name: 'CollateralDoesNotExist',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'collateralId',
        type: 'uint32',
      },
    ],
    name: 'CollateralNotAllowedForUse',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'txGasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'ExcessTxGasPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'incorrectAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'correctAddress',
        type: 'address',
      },
    ],
    name: 'IncorrectCollateralAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'invalidAddress',
        type: 'address',
      },
    ],
    name: 'InvalidCollateralAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IClearingHouseEnums.MulticallOperationType',
        name: 'multicallOperationType',
        type: 'uint8',
      },
    ],
    name: 'InvalidMulticallOperationType',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    name: 'KeeperFeeNotPositive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'PoolDoesNotExist',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'PoolNotAllowedForTrade',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'UV3PH_IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'ownerAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'AccountCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'isAllowedForDeposit',
            type: 'bool',
          },
        ],
        indexed: false,
        internalType: 'struct IClearingHouseStructures.CollateralSettings',
        name: 'cTokenInfo',
        type: 'tuple',
      },
    ],
    name: 'CollateralSettingsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint32',
        name: 'collateralId',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'MarginAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint32',
        name: 'collateralId',
        type: 'uint32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'MarginRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'paused',
        type: 'bool',
      },
    ],
    name: 'PausedUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'isAllowedForTrade',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        indexed: false,
        internalType: 'struct IClearingHouseStructures.PoolSettings',
        name: 'settings',
        type: 'tuple',
      },
    ],
    name: 'PoolSettingsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        indexed: false,
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'ProtocolSettingsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'val',
        type: 'uint256',
      },
    ],
    name: 'Uint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_defaultCollateralToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_defaultCollateralTokenOracle',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__initialize_ClearingHouse',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'collateralId',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'createAccountAndAddMargin',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'emitGasCostWei',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'getAccountInfo',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vQuoteBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'collateral',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouseStructures.CollateralDepositView[]',
        name: 'collateralDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Chkpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouseEnums.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType:
              'struct IClearingHouseStructures.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouseStructures.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'getAccountNetProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountNetProfit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'collateralId',
        type: 'uint32',
      },
    ],
    name: 'getCollateralInfo',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IERC20',
            name: 'token',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForDeposit',
                type: 'bool',
              },
            ],
            internalType: 'struct IClearingHouseStructures.CollateralSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Collateral',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'getNetTokenPosition',
    outputs: [
      {
        internalType: 'int256',
        name: 'netPosition',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'getPoolInfo',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapPrices',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'isPoolIdAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'targetAccountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vQuoteIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouseStructures.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'targetAccountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vQuoteIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouseStructures.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'enum IClearingHouseEnums.MulticallOperationType',
            name: 'operationType',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IClearingHouseStructures.MulticallOperation[]',
        name: 'operations',
        type: 'tuple[]',
      },
    ],
    name: 'multicallWithSingleMarginCheck',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'collateralId',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_txGasPriceLimit',
        type: 'uint256',
      },
    ],
    name: 'setTxGasPriceLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouseStructures.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vQuoteAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimGas',
        type: 'uint256',
      },
    ],
    name: 'testMethod',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txGasPriceLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'isAllowedForDeposit',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouseStructures.CollateralSettings',
        name: 'collateralSettings',
        type: 'tuple',
      },
    ],
    name: 'updateCollateralSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'isAllowedForTrade',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouseStructures.PoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updatePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'updateProtocolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouseEnums.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vQuoteAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063a0ba775790604401600060405180830381865af4158015610eaa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ed291908101906154c5565b93509350935093509193509193565b6000806000610ef8846001600160a01b031661286c565b9050610f0560648261288c565b9250610f12606482612922565b915050915091565b61019f546001600160a01b03163314801590610f42575061019e546001600160a01b03163314155b15610f6057604051636bd1573560e11b815260040160405180910390fd5b610f6a828261293f565b5050565b61019f546001600160a01b03163314801590610f96575061019e546001600160a01b03163314155b15610fb457604051636bd1573560e11b815260040160405180910390fd5b610fbc612b03565b565b6060816001600160401b03811115610fd857610fd8614401565b60405190808252806020026020018201604052801561100b57816020015b6060815260200190600190039081610ff65790505b50905060006110198561243b565b90506000805b8481101561161757600086868381811061103b5761103b6155cb565b905060200281019061104d91906155e1565b61105b906020810190615601565b600781111561106c5761106c614602565b14156110cb57600080878784818110611087576110876155cb565b905060200281019061109991906155e1565b6110a7906020810190615622565b8101906110b49190614d1d565b915091506110c489868484612481565b5050611605565b60018686838181106110df576110df6155cb565b90506020028101906110f191906155e1565b6110ff906020810190615601565b600781111561111057611110614602565b141561116a5760008087878481811061112b5761112b6155cb565b905060200281019061113d91906155e1565b61114b906020810190615622565b8101906111589190614d1d565b915091506110c4898684846000612754565b600286868381811061117e5761117e6155cb565b905060200281019061119091906155e1565b61119e906020810190615601565b60078111156111af576111af614602565b141561120e5760008686838181106111c9576111c96155cb565b90506020028101906111db91906155e1565b6111e9906020810190615622565b8101906111f6919061435d565b905061120484826000612b93565b6001925050611605565b6003868683818110611222576112226155cb565b905060200281019061123491906155e1565b611242906020810190615601565b600781111561125357611253614602565b14156112fd5760008087878481811061126e5761126e6155cb565b905060200281019061128091906155e1565b61128e906020810190615622565b81019061129b9190615668565b915091506000806112af878585600061258a565b604080516020810184905290810182905291935091506060016040516020818303038152906040528886815181106112e9576112e96155cb565b602002602001018190525050505050611605565b6004868683818110611311576113116155cb565b905060200281019061132391906155e1565b611331906020810190615601565b600781111561134257611342614602565b141561139e5760008087878481811061135d5761135d6155cb565b905060200281019061136f91906155e1565b61137d906020810190615622565b81019061138a9190615749565b915091506000806112af8785856000612ce0565b60058686838181106113b2576113b26155cb565b90506020028101906113c491906155e1565b6113d2906020810190615601565b60078111156113e3576113e3614602565b141561144d57600080600080898986818110611401576114016155cb565b905060200281019061141391906155e1565b611421906020810190615622565b81019061142e9190615777565b93509350935093506114438b85858585612dee565b5050505050611605565b6006868683818110611461576114616155cb565b905060200281019061147391906155e1565b611481906020810190615601565b600781111561149257611492614602565b14156114a9576114a3876000612ef3565b50611605565b60078686838181106114bd576114bd6155cb565b90506020028101906114cf91906155e1565b6114dd906020810190615601565b60078111156114ee576114ee614602565b14156115b957600080600088888581811061150b5761150b6155cb565b905060200281019061151d91906155e1565b61152b906020810190615622565b81019061153891906157c8565b60008d815260d16020526040808220858352908220949750929550909350611564929085908590613062565b6040805182516020808301919091528301518183015291015160608201526080016040516020818303038152906040528785815181106115a6576115a66155cb565b6020026020010181905250505050611605565b8585828181106115cb576115cb6155cb565b90506020028101906115dd91906155e1565b6115eb906020810190615601565b604051633164e52160e11b8152600401610ca8919061580a565b8061160f8161583a565b91505061101f565b5080156116895760405163651524ed60e01b8152600481018390526064602482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063651524ed9060440160006040518083038186803b15801561167057600080fd5b505af4158015611684573d6000803e3d6000fd5b505050505b60405163998c533560e01b8152600481018390526001602482015260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163998c5335910160006040518083038186803b1580156116e257600080fd5b505af41580156116f6573d6000803e3d6000fd5b5050505050505b9392505050565b600081801561178d5760006117176131a6565b5a6117229190615855565b905061172e604461325e565b6117388585612ef3565b925060006117446131a6565b5a61174f9190615855565b611759908361586d565b90508083111561178657604051634010928f60e01b81526004810184905260248101829052604401610ca8565b50506117a4565b611797604461325e565b6117a18484612ef3565b91505b5092915050565b63ffffffff81166000908152606460205260408120546117d3906001600160a01b031661287a565b92915050565b61013954610100900460ff166117f6576101395460ff16156117fa565b303b155b6118165760405162461bcd60e51b8152600401610ca890615884565b61013954610100900460ff1615801561183a57610139805461ffff19166101011790555b60d280546001600160a01b03199081166001600160a01b038a81169190911790925560668054821689841617905560d38054821687841617905560d48054821685841617905560678054909116858316179055604080516060810182529187168252603c60208301526001908201526118b490879061293f565b6118bc61328b565b6118c4613315565b80156118d757610139805461ff00191690555b50505050505050565b610f6a816000612ef3565b6118f9848484846000612dee565b5050505050565b61019f546001600160a01b03163314801590611928575061019e546001600160a01b03163314155b1561194657604051636bd1573560e11b815260040160405180910390fd5b6101a055565b61019f546001600160a01b03163314801590611974575061019e546001600160a01b03163314155b1561199257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166119b95760405163d92e233d60e01b815260040160405180910390fd5b61019f546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a361019f80546001600160a01b0319166001600160a01b0392909216919091179055565b611a3b60405180606001604052806000815260200160008152602001600081525090565b600085815260d16020526040808220868352908220611a5d9286908690613062565b95945050505050565b61019f546001600160a01b03163314801590611a8e575061019e546001600160a01b03163314155b15611aac57604051636bd1573560e11b815260040160405180910390fd5b610fbc61334a565b600082815260d160205260408082209051637188a1ed60e01b8152600481019190915263ffffffff8316602482015260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91637188a1ed9101602060405180830381865af4158015611b26573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fd91906158d2565b611b6e60405180606001604052806000815260200160008152602001600081525090565b818015611c0c576000611b7f6131a6565b5a611b8a9190615855565b9050611b9660a461325e565b600088815260d160205260408082208983529120611bb79190888888613062565b92506000611bc36131a6565b5a611bce9190615855565b611bd8908361586d565b905080831115611c0557604051634010928f60e01b81526004810184905260248101829052604401610ca8565b5050611c3a565b611c1660a461325e565b600087815260d160205260408082208883529120611c379190878787613062565b91505b5095945050505050565b61016c5460ff1615611c685760405162461bcd60e51b8152600401610ca89061512a565b6000611c738361243b565b9050611c8181836001612b93565b505050565b6000611c9561016c5460ff1690565b15611cb25760405162461bcd60e51b8152600401610ca89061512a565b5060d054611cc1816001615855565b60d055600081815260d160209081526040918290206bffffffffffffffffffffffff1933600160601b8102919091166bffffffffffffffffffffffff861617825592518481529092917f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3910160405180910390a25090565b6060816001600160401b03811115611d5357611d53614401565b604051908082528060200260200182016040528015611d8657816020015b6060815260200190600190039081611d715790505b50905060005b828110156117a45760008030868685818110611daa57611daa6155cb565b9050602002810190611dbc9190615622565b604051611dca9291906158eb565b600060405180830381855af49150503d8060008114611e05576040519150601f19603f3d011682016040523d82523d6000602084013e611e0a565b606091505b509150915081611e5657604481511015611e2357600080fd5b60048101905080806020019051810190611e3d91906158fb565b60405162461bcd60e51b8152600401610ca8919061598e565b80848481518110611e6957611e696155cb565b602002602001018190525050508080611e819061583a565b915050611d8c565b611ebc60408051808201825260008082528251606081018452818152602081810183905293810191909152909182015290565b5063ffffffff9081166000908152606560209081526040918290208251808401845281546001600160a01b03908116825284516060810186526001909301549081168352600160a01b810490951682840152600160c01b90940460ff1615159281019290925282015290565b808015611f99576000611f396131a6565b5a611f449190615855565b630134dd30805590506000611f576131a6565b5a611f629190615855565b611f6c908361586d565b905080831115610cca57604051634010928f60e01b81526004810184905260248101829052604401610ca8565b630134dd3080555050565b7f8f21accdcc5a0fec3416e6dbb52459a9c52dbaea4711ff41eef306912a465ae5611fcd6133a4565b60405161201491906040808252601d908201527f417262697472756d2e676574546f74616c4c31466565496e57656928290000006060820152602081019190915260800190565b60405180910390a1565b61019e546001600160a01b0316331461204a57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166120715760405163d92e233d60e01b815260040160405180910390fd5b61019e546040516001600160a01b038084169216907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8090600090a361019e80546001600160a01b0319166001600160a01b0392909216919091179055565b606060208251028201602001602083015b818110156120f55780515481526020016120e0565b509192915050565b6000805b8281101561222057600084848381811061211d5761211d6155cb565b905060200201602081019061213291906147b9565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015612171573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219591906158d2565b90508484838181106121a9576121a96155cb565b90506020020160208101906121be91906147b9565b6001600160a01b03167fa087657e3d85162090ffd700fbfdf5070d816f63aa5da00063f6ffd369c8a6db826040516121f891815260200190565b60405180910390a261220a8184615855565b92505080806122189061583a565b915050612101565b50611c8161223761019f546001600160a01b031690565b6066546001600160a01b031690836133e2565b600081815260d16020526040808220905163625915c360e11b815260048101919091526064602482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c4b22b8690604401602060405180830381865af41580156122b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d391906158d2565b60006122de611c86565b90506117d3818484610c84565b600082815260d16020526040808220905163031b5fcd60e21b815260048101919091528215156024820152606460448201819052829173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91630c6d7f3491016040805180830381865af415801561235a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061237e91906159a1565b909590945092505050565b60008061239961016c5460ff1690565b156123b65760405162461bcd60e51b8152600401610ca89061512a565b60006123c18661243b565b9050610d1781866123d7368890038801886159c5565b6001612ce0565b60008180156124155760006123f16131a6565b5a6123fc9190615855565b905061240860a461325e565b611bb78888888888612dee565b61241f60a461325e565b611c378787878787612dee565b6001600160a01b03163b151590565b600081815260d1602052604090208054600160601b90046001600160a01b0316331461247c57604051630504a20d60e01b8152336004820152602401610ca8565b919050565b61016c5460ff16156124a55760405162461bcd60e51b8152600401610ca89061512a565b60006124b2836000613445565b80549091506124cc906001600160a01b03163330856134d4565b604051637ef9c64360e11b81526004810185905263ffffffff841660248201526044810183905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063fdf38c869060640160006040518083038186803b15801561252a57600080fd5b505af415801561253e573d6000803e3d6000fd5b505050508263ffffffff16857f8ad78786fd90bf16daca318ca19c5c1f8b0e4b6a666538a76d128092d48514c28460405161257b91815260200190565b60405180910390a35050505050565b60008061259a61016c5460ff1690565b156125b75760405162461bcd60e51b8152600401610ca89061512a565b6125c08561350c565b60408051630a067b0f60e11b81526004810188905263ffffffff871660248201528551604482015260208601516001600160a01b031660648083019190915291860151151560848201526060860151151560a482015260c481019190915283151560e482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063140cf61e90610104016040805180830381865af4158015612662573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268691906159a1565b909250905060006126968261358f565b606b549091508110156126bf576040516312b6b5cd60e11b815260048101829052602401610ca8565b60208501516001600160a01b0316158015906126dd57508460600151155b1561274a5784604001518015612704575084516126f99061358f565b6127028361358f565b145b8061272d5750846040015115801561272d575084516127229061358f565b61272b8461358f565b145b61274a576040516307a1db0760e01b815260040160405180910390fd5b5094509492505050565b61016c5460ff16156127785760405162461bcd60e51b8152600401610ca89061512a565b6000612785846001613445565b6040516362b3b6bb60e11b81526004810187905263ffffffff8616602482015260448101859052606480820152831515608482015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c5676d769060a40160006040518083038186803b1580156127f457600080fd5b505af4158015612808573d6000803e3d6000fd5b5050825461282392506001600160a01b0316905033856133e2565b8363ffffffff16867fe0c7ec5663c36969e5662da59bc1ede9566e08300e34eb2da7746d9f262c5d808560405161285c91815260200190565b60405180910390a3505050505050565b600063ffffffff82166117d3565b60006001600160a01b038216156117d3565b63ffffffff8181166000908152602084905260408082206003810154915163dd86c10160e01b8152640100000000830490941660048501529192600160501b9091046001600160a01b03169063dd86c10190602401602060405180830381865afa1580156128fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a191906158d2565b60006116fd61293184846135aa565b6001600160a01b03166135ef565b6000612953836001600160a01b031661286c565b9050612967836001600160a01b031661287a565b15612988576040516376d8a93160e01b815260006004820152602401610ca8565b63ffffffff81166000908152606560205260409020546129b0906001600160a01b031661287a565b1580156129e9575063ffffffff8082166000908152606560205260409020546129e7916001600160a01b0390911690859061365c16565b155b15612a325763ffffffff81166000908152606560205260409081902054905163a5d4d0b560e01b81526001600160a01b0380861660048301529091166024820152604401610ca8565b6040805180820182526001600160a01b038581168252602080830186815263ffffffff868116600090815260658452869020945185546001600160a01b03191690851617855590518051600190950180549382015191870151959094166001600160c01b031990931692909217600160a01b92909116919091021760ff60c01b1916600160c01b92151592909202919091179055517f52983c04d8ccd4808cd0fcb24e6e48106ecb41e803d6270c6c94a15e3ebd08d290612af690859085906159e1565b60405180910390a1505050565b61016c5460ff16612b4d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ca8565b61016c805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001612014565b61016c5460ff1615612bb75760405162461bcd60e51b8152600401610ca89061512a565b81612bd557604051631f2a200560e01b815260040160405180910390fd5b60405163d25c4a6f60e01b815260048101849052602481018390526064604482018190528215159082015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063d25c4a6f9060840160006040518083038186803b158015612c3757600080fd5b505af4158015612c4b573d6000803e3d6000fd5b505050506000821315612c7557606654612c70906001600160a01b03163330856134d4565b612c95565b612c9533612c8284615a23565b6066546001600160a01b031691906133e2565b82546040518381526bffffffffffffffffffffffff909116907f34e55ef9f5cf05f9a666ce27e7dcee31bb2a4e21eccaa3ea58a8358117b1547a9060200160405180910390a2505050565b600080612cf061016c5460ff1690565b15612d0d5760405162461bcd60e51b8152600401610ca89061512a565b612d168561350c565b60608401516001600160a01b031615612d3c57612d3c8585606001518660800151613672565b60405163c27789d160e01b815260009073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c27789d190612d7f908a908a908a906064908b90600401615a40565b606060405180830381865af4158015612d9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dc09190615ae4565b606b54929550909350915081101561274a576040516312b6b5cd60e11b815260048101829052602401610ca8565b6000612dfd61016c5460ff1690565b15612e1a5760405162461bcd60e51b8152600401610ca89061512a565b600086815260d160205260409020612e318661350c565b612e3a83613704565b606a54612e479190615855565b604051637022478560e11b81526004810183905263ffffffff88166024820152600287810b604483015286900b6064808301919091526084820183905260a482015290925073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063e0448f0a9060c40160006040518083038186803b158015612ec357600080fd5b505af4158015612ed7573d6000803e3d6000fd5b5050606654611c3a92506001600160a01b0316905033846133e2565b6000612f0261016c5460ff1690565b15612f1f5760405162461bcd60e51b8152600401610ca89061512a565b600083815260d1602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6322e440c483612f5287613704565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612f99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbd91906159a1565b90935090506000612fce8285615b12565b905060008413612ff45760405163ef37dcc760e01b815260048101859052602401610ca8565b60665461300b906001600160a01b031633866133e2565b6130148261381b565b6040805182815260208101869052908101839052339087907fcfb6806c7e1accb0c7e5835aded9e714525c0588e5609d5ae1a3c8f6b68586a79060600160405180910390a350505092915050565b61308660405180606001604052806000815260200160008152602001600081525090565b61016c5460ff16156130aa5760405162461bcd60e51b8152600401610ca89061512a565b6127108361ffff1611156130d1576040516348d69f3560e01b815260040160405180910390fd5b6130da8461350c565b600073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__632a2d44e58789878961310389613704565b6040516001600160e01b031960e088901b1681526004810195909552602485019390935261ffff909116604484015263ffffffff16606483810191909152608483019190915260a4820152600160c482015260e401608060405180830381865af4158015613175573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131999190615b53565b92509050611c3a8161381b565b60408051600481526024810182526020810180516001600160e01b031663a94597ff60e01b1790529051600091829182916064916131e49190615bac565b600060405180830381855afa9150503d806000811461321f576040519150601f19603f3d011682016040523d82523d6000602084013e613224565b606091505b509150915081158061323557508051155b156132435760009250505090565b8080602001905181019061325791906158d2565b9250505090565b3681101561328857604051634219202560e01b815236600482015260248101829052604401610ca8565b50565b61013954610100900460ff166132a8576101395460ff16156132ac565b303b155b6132c85760405162461bcd60e51b8152600401610ca890615884565b61013954610100900460ff161580156132ec57610139805461ffff19166101011790555b6132f46138a7565b336132ff81806138cf565b50801561328857610139805461ff001916905550565b61013954610100900460ff1661333d5760405162461bcd60e51b8152600401610ca890615bbe565b61016c805460ff19169055565b61016c5460ff161561336e5760405162461bcd60e51b8152600401610ca89061512a565b61016c805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612b7b3390565b60408051600481526024810182526020810180516001600160e01b031663637bef0760e11b1790529051600091829182916064916131e49190615bac565b6040516001600160a01b038316602482015260448101829052611c8190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526139db565b63ffffffff82166000908152606560205260409020805461346e906001600160a01b031661287a565b1561349457604051636b9c1a9d60e01b815263ffffffff84166004820152602401610ca8565b811580156134ae57506001810154600160c01b900460ff16155b156117d35760405163122a1f1960e31b815263ffffffff84166004820152602401610ca8565b6040516001600160a01b0380851660248301528316604482015260648101829052610cca9085906323b872dd60e01b9060840161340e565b63ffffffff811660009081526064602052604090208054613535906001600160a01b031661287a565b1561355b5760405163b842f5a760e01b815263ffffffff83166004820152602401610ca8565b6003810154600160401b900460ff16610f6a5760405163587ee90160e11b815263ffffffff83166004820152602401610ca8565b60008082136135a6576135a182615a23565b6117d3565b5090565b63ffffffff808216600090815260208490526040812060038101546001820154929391926117a1926001600160a01b03909116916401000000009004811690613aad16565b60006401000276a36001600160a01b038316108061362a575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561365357604051635d236c4560e01b81526001600160a01b0383166004820152602401610ca8565b6117d382613ace565b60006001600160a01b03808416908316146116fd565b600061367f606485613ae8565b90506000836001600160a01b0316826001600160a01b0316116136ab576136a68285615c09565b6136b5565b6136b58483615c09565b90506127106136c88561ffff8616615c31565b6136d29190615c76565b6001600160a01b0316816001600160a01b031611156118f9576040516307a1db0760e01b815260040160405180910390fd5b60003a6101a05481111561373a576101a054604051638dfe587d60e01b8152610ca8918391600401918252602082015260400190565b821580613750575060d4546001600160a01b0316155b1561375e5760009150613815565b600033321415613773576137706133a4565b90505b600061377f3a86615c9c565b60d45460405163dd86c10160e01b815261012c60048201529192506000916001600160a01b039091169063dd86c10190602401602060405180830381865afa1580156137cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137f391906158d2565b905061380f81600160801b6138088587615855565b9190613b13565b94505050505b50919050565b60008113156138415760d354606654613288916001600160a01b039182169116836133e2565b60d3546001600160a01b031663379607f561385b83615a23565b6040518263ffffffff1660e01b815260040161387991815260200190565b600060405180830381600087803b15801561389357600080fd5b505af11580156118f9573d6000803e3d6000fd5b61013954610100900460ff16610fbc5760405162461bcd60e51b8152600401610ca890615bbe565b61013954610100900460ff166138ec576101395460ff16156138f0565b303b155b61390c5760405162461bcd60e51b8152600401610ca890615884565b61013954610100900460ff1615801561393057610139805461ffff19166101011790555b61019e80546001600160a01b0319166001600160a01b0385169081179091556040516000907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a361019f80546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a38015611c8157610139805461ff0019169055505050565b6000613a30826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613bc19092919063ffffffff16565b805190915015611c815780806020019051810190613a4e9190615cbb565b611c815760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ca8565b600080613ac36001600160a01b03851684613bd8565b90506117a181613df4565b60006117d36001600160a01b03831680600160401b613b13565b63ffffffff81166000908152602083905260408120600101546116fd906001600160a01b0316614127565b600080806000198587098587029250828110838203039150508060001415613b4d5760008411613b4257600080fd5b5082900490506116fd565b808411613b5957600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6060613bd084846000856141b1565b949350505050565b600063ffffffff8216613c0157604051636eb711b760e11b815260006004820152602401610ca8565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110613c3657613c366155cb565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110613c6557613c656155cb565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90613ca6908490600401615cd8565b600060405180830381865afa925050508015613ce457506040513d6000823e601f3d908101601f19168201604052613ce19190810190615d7a565b60015b613d5957836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d4a9190615e45565b509396506117a4945050505050565b600082600081518110613d6e57613d6e6155cb565b602002602001015183600181518110613d8957613d896155cb565b6020026020010151613d9b9190615ee7565b90506000613daf63ffffffff881683615f37565b905060008260060b128015613dd55750613dcf63ffffffff881683615f75565b60060b15155b15613de85780613de481615f97565b9150505b94506117d39350505050565b60008060008360020b12613e0b578260020b613e13565b8260020b6000035b9050620d89e8811115613e4c5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610ca8565b600060018216613e6057600160801b613e72565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613ea6576ffff97272373d413259a46990580e213a0260801c5b6004821615613ec5576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613ee4576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613f03576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613f22576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613f41576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613f60576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613f80576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613fa0576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613fc0576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613fe0576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615614000576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615614020576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615614040576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615614060576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615614081576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156140a1576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156140c0576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156140dd576b048a170391f7dc42444e8fa20260801c5b60008460020b13156140fe5780600019816140fa576140fa615c60565b0490505b640100000000810615614112576001614115565b60005b60ff16602082901c0192505050919050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015614168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061418c9190615e45565b509496509294505050506001600160a01b03831615159050613815576116fd81613df4565b6060824710156142125760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610ca8565b6001600160a01b0385163b6142695760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ca8565b600080866001600160a01b031685876040516142859190615bac565b60006040518083038185875af1925050503d80600081146142c2576040519150601f19603f3d011682016040523d82523d6000602084013e6142c7565b606091505b50915091506142d78282866142e2565b979650505050505050565b606083156142f15750816116fd565b8251156143015782518084602001fd5b8160405162461bcd60e51b8152600401610ca8919061598e565b60008060008084860360e081121561433257600080fd5b608081121561434057600080fd5b5093956080870135955060a0870135945060c08701359350915050565b60006020828403121561436f57600080fd5b5035919050565b63ffffffff8116811461328857600080fd5b60008082840360e081121561439c57600080fd5b83356143a781614376565b925060c0601f19820112156143bb57600080fd5b506020830190509250929050565b6000806000606084860312156143de57600080fd5b8335925060208401356143f081614376565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171561443957614439614401565b60405290565b60405160a081016001600160401b038111828210171561443957614439614401565b60405161012081016001600160401b038111828210171561443957614439614401565b604080519081016001600160401b038111828210171561443957614439614401565b60405160e081016001600160401b038111828210171561443957614439614401565b604051601f8201601f191681016001600160401b03811182821017156144f0576144f0614401565b604052919050565b6001600160a01b038116811461328857600080fd5b803561247c816144f8565b801515811461328857600080fd5b803561247c81614518565b60006080828403121561454357600080fd5b604051608081018181106001600160401b038211171561456557614565614401565b60405282358152905080602083013561457d816144f8565b6020820152604083013561459081614518565b604082015260608301356145a381614518565b6060919091015292915050565b600080600060c084860312156145c557600080fd5b8335925060208401356145d781614376565b91506145e68560408601614531565b90509250925092565b6000610120828403121561381557600080fd5b634e487b7160e01b600052602160045260246000fd5b6003811061462857614628614602565b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b81811015614688578651805187168452850151858401529584019591830191600101614661565b5050878103606089015288518082528382019550600581901b82018401848b0160005b838110156147a557848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b80831015614790578351614713838251614618565b8b8101518060020b8d850152508a81015160020b8b840152606081015161474560608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a840193506001830192506146fe565b509a89019a94505050908601906001016146ab565b50909e9d5050505050505050505050505050565b6000602082840312156147cb57600080fd5b81356116fd816144f8565b60008082840360808112156147ea57600080fd5b83356147f5816144f8565b92506060601f198201121561480957600080fd5b50614812614417565b6020840135614820816144f8565b8152604084013561483081614376565b6020820152606084013561484381614518565b6040820152919491935090915050565b60008083601f84011261486557600080fd5b5081356001600160401b0381111561487c57600080fd5b6020830191508360208260051b850101111561489757600080fd5b9250929050565b6000806000604084860312156148b357600080fd5b8335925060208401356001600160401b038111156148d057600080fd5b6148dc86828701614853565b9497909650939450505050565b60005b838110156149045781810151838201526020016148ec565b83811115610cca5750506000910152565b6000815180845261492d8160208601602086016148e9565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561499657603f19888603018452614984858351614915565b94509285019290850190600101614968565b5092979650505050505050565b600080604083850312156149b657600080fd5b50508035926020909101359150565b6000602082840312156149d757600080fd5b81356116fd81614376565b60008060008060008060c087890312156149fb57600080fd5b8635614a06816144f8565b95506020870135614a16816144f8565b94506040870135614a26816144f8565b93506060870135614a36816144f8565b92506080870135614a46816144f8565b915060a0870135614a56816144f8565b809150509295509295509295565b8060020b811461328857600080fd5b60008060008060808587031215614a8957600080fd5b843593506020850135614a9b81614376565b92506040850135614aab81614a64565b91506060850135614abb81614a64565b939692955090935050565b61ffff8116811461328857600080fd5b803561247c81614ac6565b60008060008060808587031215614af757600080fd5b84359350602085013592506040850135614b1081614376565b91506060850135614abb81614ac6565b60008060408385031215614b3357600080fd5b823591506020830135614b4581614376565b809150509250929050565b600080600080600060a08688031215614b6857600080fd5b85359450602086013593506040860135614b8181614376565b92506060860135614b9181614ac6565b949793965091946080013592915050565b60008060208385031215614bb557600080fd5b82356001600160401b03811115614bcb57600080fd5b614bd785828601614853565b90969095509350505050565b81516001600160a01b0316815260208083015160808301916117a49084018280516001600160a01b0316825260208082015163ffffffff16908301526040908101511515910152565b60006001600160401b03821115614c4557614c45614401565b5060051b60200190565b60006020808385031215614c6257600080fd5b82356001600160401b03811115614c7857600080fd5b8301601f81018513614c8957600080fd5b8035614c9c614c9782614c2c565b6144c8565b81815260059190911b82018301908381019087831115614cbb57600080fd5b928401925b828410156142d757833582529284019290840190614cc0565b6020808252825182820181905260009190848201906040850190845b81811015614d1157835183529284019291840191600101614cf5565b50909695505050505050565b60008060408385031215614d3057600080fd5b8235614d3b81614376565b946020939093013593505050565b60008060408385031215614d5c57600080fd5b823591506020830135614b4581614518565b6000806000838503610120811215614d8557600080fd5b843593506020850135614d9781614376565b925060e0603f1982011215614dab57600080fd5b506040840190509250925092565b600080600080600060a08688031215614dd157600080fd5b853594506020860135614de381614376565b93506040860135614df381614a64565b92506060860135614b9181614a64565b6001600160801b038116811461328857600080fd5b8135614e2381614ac6565b815461ffff191661ffff8216178255506020820135614e4181614ac6565b815463ffff00001916601082901b63ffff000016178255506040820135614e6781614ac6565b815465ffff000000008260201b1691508165ffff000000001982161783556060840135614e9381614e03565b75ffffffffffffffffffffffffffffffff0000000000008160301b168375ffffffffffffffffffffffffffffffffffff00000000198416171784555050505050565b60e081018535614ee481614ac6565b61ffff9081168352602087013590614efb82614ac6565b9081166020840152604087013590614f1282614ac6565b1660408301526060860135614f2681614e03565b6001600160801b03166060830152608082019490945260a081019290925260c090910152919050565b600081356117d381614518565b600081356117d3816144f8565b80547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b8135614fb281614ac6565b815461ffff191661ffff8216178255506020820135614fd081614ac6565b815463ffff00001916601082901b63ffff000016178255506040820135614ff681614376565b815467ffffffff000000008260201b1691508167ffffffff00000000198216178355606084013561502681614518565b68ffffffffff00000000199190911690911790151560401b60ff60401b16178155608082013561505581614518565b815460ff60481b191681151560481b60ff60481b161782555060a082013561507c816144f8565b611c818183614f69565b63ffffffff838116825260e082019083356150a081614ac6565b61ffff8082166020860152602086013591506150bb82614ac6565b166040848101919091528401356150d181614376565b166060838101919091528301356150e781614518565b80151560808401525060808301356150fe81614518565b80151560a08401525061511360a0840161450d565b6001600160a01b03811660c0840152509392505050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135615195816144f8565b61519f818361516a565b5060208201356151ae816144f8565b6151bb816001840161516a565b5060408201356151ca816144f8565b6151d7816002840161516a565b506003810160608301356151ea81614ac6565b815461ffff191661ffff821617825550608083013561520881614ac6565b815463ffff00001916601082901b63ffff0000161782555060a083013561522e81614376565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560c085013561525e81614518565b68ffffffffff00000000199190911690911790151560401b60ff60401b161781556152ac61528e60e08501614f4f565b82805460ff60481b191691151560481b60ff60481b16919091179055565b611c816152bc6101008501614f5c565b82614f69565b6003811061328857600080fd5b805161247c816152c2565b805161247c81614a64565b805161247c81614e03565b600082601f83011261530157600080fd5b81516020615311614c9783614c2c565b82815260059290921b8401810191818101908684111561533057600080fd5b8286015b848110156154ba5780516001600160401b038082111561535357600080fd5b9088019060a0828b03601f1901121561536b57600080fd5b61537361443f565b86830151615380816144f8565b80825250604083015187820152606083015160408201526080830151606082015260a0830151828111156153b357600080fd5b8084019350508a603f8401126153c857600080fd5b8683015191506153da614c9783614c2c565b82815261012092830284016040019288820191908d8511156153fb57600080fd5b6040860195505b848610156154a45780868f03121561541957600080fd5b615421614461565b61542a876152cf565b81526154378b88016152da565b8b820152615447604088016152da565b6040820152615458606088016152e5565b60608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e08201526101008701516101008201528084525089830192508086019550615402565b5060808301525085525050918301918301615334565b509695505050505050565b600080600080608085870312156154db57600080fd5b84516154e6816144f8565b8094505060208086015193506040808701516001600160401b038082111561550d57600080fd5b818901915089601f83011261552157600080fd5b815161552f614c9782614c2c565b81815260069190911b8301850190858101908c83111561554e57600080fd5b938601935b828510156155975785858e03121561556b5760008081fd5b615573614484565b855161557e816144f8565b8152858801518882015282529385019390860190615553565b60608c015190985095505050808411156155b057600080fd5b5050506155bf878288016152f0565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b60008235603e198336030181126155f757600080fd5b9190910192915050565b60006020828403121561561357600080fd5b8135600881106116fd57600080fd5b6000808335601e1984360301811261563957600080fd5b8301803591506001600160401b0382111561565357600080fd5b60200191503681900382131561489757600080fd5b60008060a0838503121561567b57600080fd5b823561568681614376565b91506156958460208501614531565b90509250929050565b803561247c816152c2565b600060e082840312156156bb57600080fd5b6156c36144a6565b905081356156d081614a64565b815260208201356156e081614a64565b60208201526040820135600f81900b81146156fa57600080fd5b604082015261570b6060830161450d565b606082015261571c60808301614ad6565b608082015261572d60a08301614526565b60a082015261573e60c0830161569e565b60c082015292915050565b600080610100838503121561575d57600080fd5b823561576881614376565b915061569584602085016156a9565b6000806000806080858703121561578d57600080fd5b843561579881614376565b935060208501356157a881614a64565b925060408501356157b881614a64565b9396929550929360600135925050565b6000806000606084860312156157dd57600080fd5b8335925060208401356157ef81614376565b915060408401356157ff81614ac6565b809150509250925092565b602081016008831061581e5761581e614602565b91905290565b634e487b7160e01b600052601160045260246000fd5b600060001982141561584e5761584e615824565b5060010190565b6000821982111561586857615868615824565b500190565b60008282101561587f5761587f615824565b500390565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000602082840312156158e457600080fd5b5051919050565b8183823760009101908152919050565b60006020828403121561590d57600080fd5b81516001600160401b038082111561592457600080fd5b818401915084601f83011261593857600080fd5b81518181111561594a5761594a614401565b61595d601f8201601f19166020016144c8565b915080825285602082850101111561597457600080fd5b6159858160208401602086016148e9565b50949350505050565b6020815260006116fd6020830184614915565b600080604083850312156159b457600080fd5b505080516020909101519092909150565b600060e082840312156159d757600080fd5b6116fd83836156a9565b6001600160a01b0383168152608081016116fd602083018480516001600160a01b0316825260208082015163ffffffff16908301526040908101511515910152565b6000600160ff1b821415615a3957615a39615824565b5060000390565b60006101608201905086825263ffffffff86166020830152845160020b6040830152602085015160020b60608301526040850151600f0b608083015260018060a01b0360608601511660a083015261ffff60808601511660c083015260a0850151615aaf60e084018215159052565b5060c0850151615ac3610100840182614618565b5083610120830152615ada61014083018415159052565b9695505050505050565b600080600060608486031215615af957600080fd5b8351925060208401519150604084015190509250925092565b600080821280156001600160ff1b0384900385131615615b3457615b34615824565b600160ff1b8390038412811615615b4d57615b4d615824565b50500190565b6000808284036080811215615b6757600080fd5b835192506060601f1982011215615b7d57600080fd5b50615b86614417565b602084015181526040840151602082015260608401516040820152809150509250929050565b600082516155f78184602087016148e9565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006001600160a01b0383811690831681811015615c2957615c29615824565b039392505050565b60006001600160a01b0382811684821681151582840482111615615c5757615c57615824565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b0383811680615c9057615c90615c60565b92169190910492915050565b6000816000190483118215151615615cb657615cb6615824565b500290565b600060208284031215615ccd57600080fd5b81516116fd81614518565b6020808252825182820181905260009190848201906040850190845b81811015614d1157835163ffffffff1683529284019291840191600101615cf4565b600082601f830112615d2757600080fd5b81516020615d37614c9783614c2c565b82815260059290921b84018101918181019086841115615d5657600080fd5b8286015b848110156154ba578051615d6d816144f8565b8352918301918301615d5a565b60008060408385031215615d8d57600080fd5b82516001600160401b0380821115615da457600080fd5b818501915085601f830112615db857600080fd5b81516020615dc8614c9783614c2c565b82815260059290921b84018101918181019089841115615de757600080fd5b948201945b83861015615e155785518060060b8114615e065760008081fd5b82529482019490820190615dec565b91880151919650909350505080821115615e2e57600080fd5b50615e3b85828601615d16565b9150509250929050565b600080600080600080600060e0888a031215615e6057600080fd5b8751615e6b816144f8565b6020890151909750615e7c81614a64565b6040890151909650615e8d81614ac6565b6060890151909550615e9e81614ac6565b6080890151909450615eaf81614ac6565b60a089015190935060ff81168114615ec657600080fd5b60c0890151909250615ed781614518565b8091505092959891949750929550565b60008160060b8360060b6000811281667fffffffffffff1901831281151615615f1257615f12615824565b81667fffffffffffff018313811615615f2d57615f2d615824565b5090039392505050565b60008160060b8360060b80615f4e57615f4e615c60565b667fffffffffffff19821460001982141615615f6c57615f6c615824565b90059392505050565b60008260060b80615f8857615f88615c60565b808360060b0791505092915050565b60008160020b627fffff19811415615fb157615fb1615824565b600019019291505056fea264697066735822122069a651a22e443b26dbea2c4839ab800b11ac035c4f18218116819a93505b3dc864736f6c634300080c0033496e697469616c697a61626c653a20636f6e747261637420697320616c726561';

type ArbitrumFixFeeTestConstructorParams =
  | [linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumFixFeeTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ArbitrumFixFeeTest__factory extends ContractFactory {
  constructor(...args: ArbitrumFixFeeTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ArbitrumFixFeeTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = 'ArbitrumFixFeeTest';
  }

  static linkBytecode(
    linkLibraryAddresses: ArbitrumFixFeeTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbitrumFixFeeTest> {
    return super.deploy(overrides || {}) as Promise<ArbitrumFixFeeTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ArbitrumFixFeeTest {
    return super.attach(address) as ArbitrumFixFeeTest;
  }
  connect(signer: Signer): ArbitrumFixFeeTest__factory {
    return super.connect(signer) as ArbitrumFixFeeTest__factory;
  }
  static readonly contractName: 'ArbitrumFixFeeTest';
  public readonly contractName: 'ArbitrumFixFeeTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumFixFeeTestInterface {
    return new utils.Interface(_abi) as ArbitrumFixFeeTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumFixFeeTest {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumFixFeeTest;
  }
}

export interface ArbitrumFixFeeTestLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
