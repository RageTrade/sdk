/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  Uint32L8ArrayTest,
  Uint32L8ArrayTestInterface,
} from '../Uint32L8ArrayTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'exclude',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'exists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
    ],
    name: 'getter',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getterAll',
    outputs: [
      {
        internalType: 'uint32[8]',
        name: '',
        type: 'uint32[8]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'include',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'length',
    outputs: [
      {
        internalType: 'uint8',
        name: 'len',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numberOfNonZeroElements',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'setter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061094c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634c84b36e1161005b5780634c84b36e146100fa578063557c1b5314610122578063817bbe1614610137578063dd6c35241461014a57600080fd5b806313c369ed1461008d5780631f7b6d32146100b5578063296eaea2146100cf5780633fc1d8ce146100e5575b600080fd5b6100a061009b3660046107bf565b61015d565b60405190151581526020015b60405180910390f35b6100bd61016f565b60405160ff90911681526020016100ac565b6100d761020a565b6040519081526020016100ac565b6100ed61021b565b6040516100ac91906107e1565b61010d61010836600461082a565b610281565b60405163ffffffff90911681526020016100ac565b6101356101303660046107bf565b6102bb565b005b6101356101453660046107bf565b6102c9565b610135610158366004610845565b6102d4565b60006101698183610318565b92915050565b6000805b6008811015610206576000816008811061018f5761018f610878565b60088104919091015460079091166004026101000a900463ffffffff16156101bf57816101bb816108a4565b9250505b600081600881106101d2576101d2610878565b60088104919091015460079091166004026101000a900463ffffffff161561020657806101fe816108c3565b915050610173565b5090565b60006102166000610332565b905090565b610223610787565b60408051610100810191829052906000906008908280855b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161023b5790505050505050905090565b6000808260ff166008811061029857610298610878565b600891828204019190066004029054906101000a900463ffffffff169050919050565b6102c66000826103a4565b50565b6102c6600082610501565b8060008360ff16600881106102eb576102eb610878565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055505050565b600060086103268484610711565b60ff1614159392505050565b6000805b600860ff8216101561039b57828160ff166008811061035757610357610878565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff166000036103895760ff1692915050565b80610393816108a4565b915050610336565b50600892915050565b8063ffffffff166000036103d357604051631d8b110f60e11b8152600060048201526024015b60405180910390fd5b600860005b600881101561047c578263ffffffff168482600881106103fa576103fa610878565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16036104275750505050565b600084826008811061043b5761043b610878565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff160361046a5780915061047c565b80610474816108c3565b9150506103d8565b5060071981016104c0576040517f4e99453600000000000000000000000000000000000000000000000000000000815263ffffffff831660048201526024016103ca565b818382600881106104d3576104d3610878565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b8063ffffffff1660000361052b57604051631d8b110f60e11b8152600060048201526024016103ca565b600860005b60088110156105eb578263ffffffff1684826008811061055257610552610878565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff160361057d578091505b83816008811061058f5761058f610878565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff166000036105d957600081116105c75760006105d2565b6105d26001826108dc565b90506105eb565b806105e3816108c3565b915050610530565b600881146105f95780610609565b610605600160086108f3565b60ff165b90506008821461070b5781810361065c57600084836008811061062e5761062e610878565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555061070b565b83816008811061066e5761066e610878565b600891828204019190066004029054906101000a900463ffffffff16600085846008811061069e5761069e610878565b600891828204019190066004028785600881106106bd576106bd610878565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff16021790555050505b50505050565b6000805b600860ff8216101561077d578263ffffffff16848260ff166008811061073d5761073d610878565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff160361076b579050610169565b80610775816108a4565b915050610715565b5060089392505050565b6040518061010001604052806008906020820280368337509192915050565b803563ffffffff811681146107ba57600080fd5b919050565b6000602082840312156107d157600080fd5b6107da826107a6565b9392505050565b6101008101818360005b600881101561081057815163ffffffff168352602092830192909101906001016107eb565b50505092915050565b803560ff811681146107ba57600080fd5b60006020828403121561083c57600080fd5b6107da82610819565b6000806040838503121561085857600080fd5b61086183610819565b915061086f602084016107a6565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff81036108ba576108ba61088e565b60010192915050565b6000600182016108d5576108d561088e565b5060010190565b6000828210156108ee576108ee61088e565b500390565b600060ff821660ff84168082101561090d5761090d61088e565b9003939250505056fea2646970667358221220cf64acccd9dbe7d1ebfbaa645bcf6c514a5d0ed24c71a2892778578d054da49b64736f6c634300080d0033';

type Uint32L8ArrayTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uint32L8ArrayTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uint32L8ArrayTest__factory extends ContractFactory {
  constructor(...args: Uint32L8ArrayTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Uint32L8ArrayTest';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Uint32L8ArrayTest> {
    return super.deploy(overrides || {}) as Promise<Uint32L8ArrayTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Uint32L8ArrayTest {
    return super.attach(address) as Uint32L8ArrayTest;
  }
  connect(signer: Signer): Uint32L8ArrayTest__factory {
    return super.connect(signer) as Uint32L8ArrayTest__factory;
  }
  static readonly contractName: 'Uint32L8ArrayTest';
  public readonly contractName: 'Uint32L8ArrayTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uint32L8ArrayTestInterface {
    return new utils.Interface(_abi) as Uint32L8ArrayTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Uint32L8ArrayTest {
    return new Contract(address, _abi, signerOrProvider) as Uint32L8ArrayTest;
  }
}
