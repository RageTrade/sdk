/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionSetTest,
  VTokenPositionSetTestInterface,
} from '../VTokenPositionSetTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'IllegalTicks',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'TokenInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getIsActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getPositionDetails',
    outputs: [
      {
        internalType: 'int256',
        name: 'balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumACkhpt',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'netTraderPosition',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'realizeFundingPaymentToAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmount',
        type: 'int256',
      },
    ],
    name: 'swapTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vTokenNotional',
        type: 'int256',
      },
    ],
    name: 'swapTokenNotional',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'balanceAdjustments',
        type: 'tuple',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'update',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620000209062000064565b604051809103906000f0801580156200003d573d6000803e3d6000fd5b5060d580546001600160a01b0319166001600160a01b039290921691909117905562000072565b61087d80620033f383390190565b61337180620000826000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637e7262d411610097578063ac210cc711610066578063ac210cc7146102cd578063bae7e5ed146102f8578063c74743ff1461030b578063f44d3bdb1461031e57600080fd5b80637e7262d4146101f257806388077639146102055780638ce7442614610218578063a4abe04d146102ba57600080fd5b806329ebaea8116100d357806329ebaea81461014e5780632a66e9ca1461019c5780633fd687a1146101af5780634bed187d146101df57600080fd5b806317ae1fc5146100fa57806319ab453c146101225780631ca4581814610137575b600080fd5b61010d6101083660046127c1565b610331565b60405190151581526020015b60405180910390f35b6101356101303660046127c1565b610344565b005b610140606c5481565b604051908152602001610119565b61018161015c3660046127c1565b63ffffffff166000908152607060205260409020805460028201546001909201549092565b60408051938452602084019290925290820152606001610119565b6101356101aa3660046127de565b610468565b6101356101bd3660046127c1565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6101356101ed366004612867565b6104ff565b6101356102003660046127c1565b610511565b6101356102133660046128e3565b61052d565b6003546040805160608101825260045461ffff808216835262010000820481166020840152600160201b909104169181019190915260055460065460075461026a946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e001610119565b6101356102c83660046127c1565b610551565b60d5546102e0906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61013561030636600461293d565b610570565b6101356103193660046129a0565b6105fb565b61013561032c3660046129a0565b610643565b600061033e606f83610688565b92915050565b61034f606e826106a3565b63ffffffff81166000908152606d602052604080822080546001600160a01b0319166001600160a01b038086169190911790915560d5548251636ba6e56560e11b81526063196004820152606460248201819052610fa06044830152600190820152925191169263d74dcaca926084808201939182900301818387803b1580156103d857600080fd5b505af11580156103ec573d6000803e3d6000fd5b505060d554604051636ba6e56560e11b8152603119600482015260326024820152610fa06044820152600160648201526001600160a01b03909116925063d74dcaca9150608401600060405180830381600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b5050505050565b8160006001600160a01b03821663ffffffff8082166000908152600260205260408120549293506104a3926001600160a01b0316916106b916565b6104af576104af6129cc565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835290829052902083906104f78282612a2d565b505050505050565b61050d606e838360006106ca565b5050565b60d55461050d90606e9083906001600160a01b031660006107ac565b84600461053a8282612b68565b5050600593909355600691909155600755606c5550565b60d55461056d90606e9083906001600160a01b0316600061081e565b50565b60006040518060e001604052808560020b81526020018460020b815260200183600f0b815260200160006001600160a01b03168152602001600061ffff168152602001600015158152602001600060028111156105cf576105cf612bd6565b905260d5549091506105f290606e90879084906001600160a01b0316600061093a565b50505050505050565b604080516080810182528281526000602082018190529181018290526060810182905260d55461063d92606e92869290916001600160a01b03909116906109cf565b50505050565b604080516080810182528281526000602082018190526001928201929092526060810182905260d55461063d92606e92869290916001600160a01b03909116906109cf565b60006106948383610af8565b60ff1660ff1415905092915050565b61050d600183016001600160a01b038316610b6f565b6001600160a01b0390811691161490565b60038101546001600160a01b03838116911681146106fa576106ed858484610cba565b6106fa6001860182610b6f565b63ffffffff81166000908152600286016020908152604082209086015181549192909183919061072b908490612c02565b90915550506040850151600182018054600090610749908490612c02565b9091555050600383015463ffffffff1660009081526002870160205260408120865181549192909183919061077f908490612c02565b9091555050815415801561079d5750600382015465ffffffffffff16155b156105f2576105f28786610ceb565b60006107d260405180606001604052806000815260200160008152602001600081525090565b85546107f4908686846107e88b8460008b610d73565b60030193929190610dfe565b610800868287866106ca565b610814858260200151836000015186610eab565b9695505050505050565b63ffffffff8316600090815260028501602090815260408083208151631dde605760e21b815291519093926001600160a01b03871692637779815c92600480830193928290030181865afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190612c59565b600384015463ffffffff90811660009081526002890160205260408120929350906108cd9085908890610ef416565b9050808260000160008282546108e39190612c02565b90915550506002840183905587546040517fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c91610928918a9060009081908790612c72565b60405180910390a15050505050505050565b6000808061094b8888600187610d73565b905061097160405180606001604052806000815260200160008152602001600081525090565b88546109859060038401908a8a8a86610f79565b61099189828a886106ca565b8660a00151156109b9576109b68882604001516109ad90612ca2565b8b919088610fd1565b50505b6020810151905190999098509650505050505050565b82516020840151604080860151905163bb152c5360e01b815260048101939093526001600160a01b03918216602484015215156044830152600091829185169063bb152c539060640160408051808303816000875af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190612cbf565b9092509050610a6882612ca2565b9150610a7381612ca2565b6040805160608101825282815260208101859052908101849052909150610a9c888289876106ca565b8754604080519182526001600160a01b03891660208301528101849052606081018390527f990ceea32d99a2be13d0832a6fe926be4aabf3b819cbf7d9638cbd5bcb1a49409060800160405180910390a1509550959350505050565b6000805b60088160ff161015610b65578263ffffffff16848260ff1660088110610b2457610b24612c43565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610b5357905061033e565b80610b5d81612ce3565b915050610afc565b5060ff9392505050565b63ffffffff8116610b9b57604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b6008811015610c4e578263ffffffff16848260088110610bc257610bc2612c43565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610bf05750505050565b816008148015610c3357506000848260088110610c0f57610c0f612c43565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b15610c3c578091505b80610c4681612d03565b915050610ba0565b508060081415610c7957604051630695727160e11b815263ffffffff83166004820152602401610b92565b81838260088110610c8c57610c8c612c43565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b6001600160a01b03808316600090815260208390526040902060010154610ce69185918591168461081e565b505050565b63ffffffff811660009081526002830160205260409020546001600160a01b0382169015801590610d3d575063ffffffff8116600090815260028401602052604090206003015465ffffffffffff1615155b15610d665760405163aeed59dd60e01b81526001600160a01b0383166004820152602401610b92565b610ce6600184018261102e565b60038101546000906001600160a01b03858116911614610de0578215610da257610d9d85856106a3565b610de0565b610db8600186016001600160a01b038616610688565b610de0576040516319a4abb360e21b81526001600160a01b0385166004820152602401610b92565b50505063ffffffff1660009081526002919091016020526040902090565b60005b855465ffffffffffff16156104f757610e3460405180606001604052806000815260200160008152602001600081525090565b865465ffffffffffff16600090815260018801602052604090209150610e5e878787858886611214565b805183518490610e6f908390612c02565b9052506020808201519084018051610e88908390612c02565b9052506040808201519084018051610ea1908390612c02565b905250610e019050565b6000610eb683611245565b610ee1610ecc6001600160a01b03881685611260565b600160801b610eda88611245565b919061128d565b610eeb9190612c02565b95945050505050565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f599190612c59565b90506000610f7082866002015487600101546112cf565b610eeb90612ca2565b82516020840151600091610f8f918991906112ea565b60c0850151815491925090829060ff19166001836002811115610fb457610fb4612bd6565b021790555060408401516105f2908890889088908590888861136b565b6040805160808101825283815260006020808301829052828401829052606083018290526001600160a01b03878116835290859052928120600101549092839261102192899289929116876109cf565b9150915094509492505050565b63ffffffff811661105557604051633f16439160e01b815260006004820152602401610b92565b600860005b600881101561110e578263ffffffff1684826008811061107c5761107c612c43565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156110a8578091505b8381600881106110ba576110ba612c43565b60088104919091015460079091166004026101000a900463ffffffff166110fc57600081116110ea5760006110f5565b6110f5600182612d1e565b905061110e565b8061110681612d03565b91505061105a565b8160081461063d578181141561116057600084836008811061113257611132612c43565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555061063d565b83816008811061117257611172612c43565b600891828204019190066004029054906101000a900463ffffffff1660008584600881106111a2576111a2612c43565b600891828204019190066004028785600881106111c1576111c1612c43565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b82546104f79086908690869061123990600160381b90046001600160801b0316612d35565b8a93929190878761136b565b600080821361125c5761125782612ca2565b61033e565b5090565b60006112866112786001600160a01b038516846113f0565b6001600160a01b031661142e565b9392505050565b60006112b3600085126112a057846112ac565b6112ac85600019612d5c565b84846114ab565b90506000841215611286576112c781612ca2565b949350505050565b60006112c76112de8486612de1565b8390600160801b611559565b60008160020b8360020b1315611321576040516307981ccd60e01b8152600284810b600483015283900b6024820152604401610b92565b600061132e8585856115ea565b65ffffffffffff8116600090815260018701602052604090209250905061135482611600565b61136357611363828585611626565b509392505050565b61137984878786868661167d565b835460208201516040517f4926c62827d5760a170acd8b688ca78ac14a0e11ce80adb478f32409cc903105926113c8928a928a926101008104600290810b93600160201b909204900b91612c72565b60405180910390a18354600160381b90046001600160801b03166105f2576105f28785611947565b6001600160a01b03808316600090815260208390526040812060028101549054919261128692169063ffffffff600160201b9091048116906119c916565b60006401000276a36001600160a01b0383161080611469575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561149257604051635d236c4560e01b81526001600160a01b0383166004820152602401610b92565b61033e6001600160a01b03831680680100000000000000005b6000808060001985870985870292508281108382030391505080600014156114e557600084116114da57600080fd5b508290049050611286565b8084116114f157600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600060018180808088121561157b5792159261157488612ca2565b925061157f565b8792505b600087121561159b5792159261159487612ca2565b915061159f565b8691505b60008612156115be579215926115b786600019612d5c565b90506115c1565b50845b6115cc8383836114ab565b9450836115df576115dc85612ca2565b94505b505050509392505050565b601882901b62ffffff82160161128684826119ea565b8054600090610100900460020b15158061033e57505054600160201b900460020b151590565b61162f83611600565b1561164c5760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af11580156116ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117139190612e20565b919450925090506117278989898488611b42565b82846000018181516117399190612de1565b905250602084018051839190611750908390612de1565b90525088547fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a6990899089906101008104600290810b91600160201b810490910b908b9060ff1661179f89612ca2565b6117a88b612ca2565b6040516117bc989796959493929190612eac565b60405180910390a16000611839866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611807573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182b9190612f1c565b6001600160a01b0316611c77565b905060006118478b83611d0a565b5090508a600101548161185a9190612de1565b8660400181815161186b9190612c02565b905250506000600f88900b13156118d257895487908b906007906118a0908490600160381b90046001600160801b0316612f39565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828a6001018190555061193b565b600087600f0b121561193b576118ea87600019612f64565b8a548b9060079061190c908490600160381b90046001600160801b0316613002565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060008a600101819055505b50505050505050505050565b8054600160381b90046001600160801b0316156119a857805460405163042f31f360e01b81526101008204600290810b6004830152600160201b8304900b6024820152600160381b9091046001600160801b03166044820152606401610b92565b8054610ce69083906101008104600290810b91600160201b9004900b611dd4565b6000806119df6001600160a01b03851684611dea565b90506112c78161200d565b65ffffffffffff8116611a135760405163fda0966560e01b815260006004820152602401610b92565b600560005b6005811015611ad0578265ffffffffffff16848260058110611a3c57611a3c612c43565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff161415611a6e5750505050565b816005148015611ab557506000848260058110611a8d57611a8d612c43565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16145b15611abe578091505b80611ac881612d03565b915050611a18565b508060051415611afd57604051636d29aed360e01b815265ffffffffffff83166004820152602401610b92565b81838260058110611b1057611b10612c43565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050565b81516040830151600091611b589188919061233f565b90508082600001818151611b6c9190612c02565b9052506060830151600090611b8b90611b86908990612379565b6123b0565b90508083600001818151611b9f9190612c02565b90525086546040517fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c91611bed91899189916101008204600290810b92600160201b9004900b908890612c72565b60405180910390a186546040517f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c91611c4091899189916101008204600290810b92600160201b9004900b908790612c72565b60405180910390a1505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdc919061302a565b509496509294505050506001600160a01b03831615159050611d0457611d018161200d565b91505b50919050565b815460009081908190611d2490610100900460020b61200d565b8554909150600090611d3f90600160201b900460020b61200d565b9050846001600160a01b038084169082161015611d5d575081611d7a565b816001600160a01b0316866001600160a01b03161115611d7a5750805b8654611d9f90611b869083908590600160381b90046001600160801b031660006123c2565b9450611dc8611b8684838a60000160079054906101000a90046001600160801b03166000612482565b93505050509250929050565b601882901b62ffffff82160161128684826124f2565b600063ffffffff8216611e13576040516351a4d88160e01b815260006004820152602401610b92565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110611e4857611e48612c43565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110611e7757611e77612c43565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90611eb89084906004016130cc565b600060405180830381865afa925050508015611ef657506040513d6000823e601f3d908101601f19168201604052611ef391908101906131ae565b60015b611f6b57836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5c919061302a565b50939650612006945050505050565b600082600081518110611f8057611f80612c43565b602002602001015183600181518110611f9b57611f9b612c43565b6020026020010151611fad919061327a565b90506000611fc163ffffffff8816836132e0565b905060008260060b128015611fe75750611fe163ffffffff88168361331e565b60060b15155b15611ffa5780611ff681613340565b9150505b945061033e9350505050565b5092915050565b60008060008360020b12612024578260020b61202c565b8260020b6000035b9050620d89e88111156120655760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610b92565b60006001821661207957600160801b61208b565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156120bf576ffff97272373d413259a46990580e213a0260801c5b60048216156120de576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156120fd576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561211c576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561213b576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561215a576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615612179576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615612199576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156121b9576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156121d9576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156121f9576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612219576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612239576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612259576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615612279576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561229a576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156122ba576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156122d9576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156122f6576b048a170391f7dc42444e8fa20260801c5b60008460020b1315612317578060001981612313576123136132ca565b0490505b600160201b81061561232a57600161232d565b60005b60ff16602082901c0192505050919050565b60028301546003840154600485015485546000936123709387938793600160381b90046001600160801b03166126fb565b6112c790612ca2565b8154600583015460009161128691600160381b9091046001600160801b031690600160801b906123a99086612d1e565b91906114ab565b6000600160ff1b821061125c57600080fd5b6000836001600160a01b0316856001600160a01b031611156123e2579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661241557600080fd5b8361244b57866001600160a01b03166124388383896001600160a01b03166114ab565b81612445576124456132ca565b04612477565b6124776124628383896001600160a01b0316612723565b886001600160a01b0316808204910615150190565b979650505050505050565b6000836001600160a01b0316856001600160a01b031611156124a2579293925b816124cf576124ca836001600160801b03168686036001600160a01b0316600160601b6114ab565b610eeb565b610eeb836001600160801b03168686036001600160a01b0316600160601b612723565b65ffffffffffff811661251b5760405163fda0966560e01b815260006004820152602401610b92565b600560005b60058110156125e7578265ffffffffffff1684826005811061254457612544612c43565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff161415612574578091505b83816005811061258657612586612c43565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156125d557600081116125c35760006125ce565b6125ce600182612d1e565b90506125e7565b806125df81612d03565b915050612520565b8160051461063d578181141561263d57600084836005811061260b5761260b612c43565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff16021790555061063d565b83816005811061264f5761264f612c43565b600591828204019190066006029054906101000a900465ffffffffffff16600085846005811061268157612681612c43565b600591828204019190066006028785600581106126a0576126a0612c43565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050505050565b600061247782600160801b6127128888888d612763565b61271c908a612de1565b9190612788565b60006127308484846114ab565b905060008280612742576127426132ca565b848609111561128657600019811061275957600080fd5b6001019392505050565b600061277e6127728684612de1565b8590600160801b611559565b610eeb9084612c02565b600061279584848461128d565b90506000811215611286576112c760001982612c02565b6001600160a01b038116811461056d57600080fd5b6000602082840312156127d357600080fd5b8135611286816127ac565b6000808284036101008112156127f357600080fd5b83356127fe816127ac565b925060e0601f198201121561281257600080fd5b506020830190509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561285f5761285f612820565b604052919050565b600080828403608081121561287b57600080fd5b606081121561288957600080fd5b506040516060810181811067ffffffffffffffff821117156128ad576128ad612820565b604090815284358252602080860135908301528481013590820152915060608301356128d8816127ac565b809150509250929050565b600080600080600085870360e08112156128fc57600080fd5b606081121561290a57600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b8060020b811461056d57600080fd5b6000806000806080858703121561295357600080fd5b843561295e816127ac565b9350602085013561296e8161292e565b9250604085013561297e8161292e565b91506060850135600f81900b811461299557600080fd5b939692955090935050565b600080604083850312156129b357600080fd5b82356129be816127ac565b946020939093013593505050565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b61ffff8116811461056d57600080fd5b801515811461056d57600080fd5b6000813561033e816127ac565b8135612a38816127ac565b612a4281836129e2565b506020820135612a51816127ac565b612a5e81600184016129e2565b50600281016040830135612a7181612a02565b815461ffff191661ffff8216178255506060830135612a8f81612a02565b815463ffff00001916601082901b63ffff00001617825550608083013563ffffffff81168114612abe57600080fd5b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135612aee81612a12565b68ffffffffff00000000199190911690911790151560401b68ff000000000000000016178155610ce6612b2360c08501612a20565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b8135612b7381612a02565b815461ffff191661ffff8216178255506020820135612b9181612a02565b815463ffff00001916601082901b63ffff000016178255506040820135612bb781612a02565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615612c2457612c24612bec565b600160ff1b8390038412811615612c3d57612c3d612bec565b50500190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612c6b57600080fd5b5051919050565b9485526001600160a01b03939093166020850152600291820b6040850152900b6060830152608082015260a00190565b6000600160ff1b821415612cb857612cb8612bec565b5060000390565b60008060408385031215612cd257600080fd5b505080516020909101519092909150565b600060ff821660ff811415612cfa57612cfa612bec565b60010192915050565b6000600019821415612d1757612d17612bec565b5060010190565b600082821015612d3057612d30612bec565b500390565b600081600f0b60016001607f1b0319811415612d5357612d53612bec565b60000392915050565b60006001600160ff1b0381841382841380821686840486111615612d8257612d82612bec565b600160ff1b6000871282811687830589121615612da157612da1612bec565b60008712925087820587128484161615612dbd57612dbd612bec565b87850587128184161615612dd357612dd3612bec565b505050929093029392505050565b60008083128015600160ff1b850184121615612dff57612dff612bec565b6001600160ff1b0384018313811615612e1a57612e1a612bec565b50500390565b600080600083850360c0811215612e3657600080fd5b84519350602085015192506080603f1982011215612e5357600080fd5b506040516080810181811067ffffffffffffffff82111715612e7757612e77612820565b806040525060408501518152606085015160208201526080850151604082015260a08501516060820152809150509250925092565b8881526001600160a01b0388166020820152600287810b604083015286900b6060820152600f85900b6080820152610100810160038510612efd57634e487b7160e01b600052602160045260246000fd5b8460a08301528360c08301528260e08301529998505050505050505050565b600060208284031215612f2e57600080fd5b8151611286816127ac565b60006001600160801b03808316818516808303821115612f5b57612f5b612bec565b01949350505050565b600081600f0b83600f0b60016001607f1b03600082136000841383830485118282161615612f9457612f94612bec565b6f7fffffffffffffffffffffffffffffff196000851282811687830587121615612fc057612fc0612bec565b60008712925085820587128484161615612fdc57612fdc612bec565b85850587128184161615612ff257612ff2612bec565b5050509290910295945050505050565b60006001600160801b038381169083168181101561302257613022612bec565b039392505050565b600080600080600080600060e0888a03121561304557600080fd5b8751613050816127ac565b60208901519097506130618161292e565b604089015190965061307281612a02565b606089015190955061308381612a02565b608089015190945061309481612a02565b60a089015190935060ff811681146130ab57600080fd5b60c08901519092506130bc81612a12565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b8181101561310a57835163ffffffff16835292840192918401916001016130e8565b50909695505050505050565b600067ffffffffffffffff82111561313057613130612820565b5060051b60200190565b600082601f83011261314b57600080fd5b8151602061316061315b83613116565b612836565b82815260059290921b8401810191818101908684111561317f57600080fd5b8286015b848110156131a3578051613196816127ac565b8352918301918301613183565b509695505050505050565b600080604083850312156131c157600080fd5b825167ffffffffffffffff808211156131d957600080fd5b818501915085601f8301126131ed57600080fd5b815160206131fd61315b83613116565b82815260059290921b8401810191818101908984111561321c57600080fd5b948201945b8386101561324a5785518060060b811461323b5760008081fd5b82529482019490820190613221565b9188015191965090935050508082111561326357600080fd5b506132708582860161313a565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156132a5576132a5612bec565b81667fffffffffffff0183138116156132c0576132c0612bec565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b806132f7576132f76132ca565b667fffffffffffff1982146000198214161561331557613315612bec565b90059392505050565b60008260060b80613331576133316132ca565b808360060b0791505092915050565b60008160020b627fffff1981141561335a5761335a612bec565b600019019291505056fea164736f6c634300080a000a608060405234801561001057600080fd5b5061085d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637aba8e6811610097578063bb152c5311610066578063bb152c5314610209578063d440c42014610231578063d74dcaca14610253578063ea6e4e521461028c57600080fd5b80637aba8e68146101e557806397c71faf146101f6578063a3a1e7e9146101db578063a3c35e2c1461012057600080fd5b80634c2ebc58116100d35780634c2ebc58146101425780635e622abc146101a95780636719578c146101b05780637779815c146101db57600080fd5b80630d8f6f46146100fa5780632a99a7921461012057806333f9096314610140575b600080fd5b61010d610108366004610499565b6102bc565b6040519081526020015b60405180910390f35b61013361012e3660046104c9565b6102d1565b60405161011791906104fc565b005b610140610150366004610527565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b600061010d565b6002546101c3906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b600560821b61010d565b6101406101f336600461057c565b50565b61010d610204366004610499565b61034e565b61021c6102173660046105a9565b61035c565b60408051928352602083019190915201610117565b61024461023f3660046105f0565b6103a7565b60405161011793929190610632565b610140610261366004610676565b600293840b60009081526001602081815260408084209690970b835294909452939093209081550155565b61014061029a3660046106b8565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006102cb82610f9f196106f2565b92915050565b6102fc6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b60006102cb610fa083610777565b600080821561038557610fa0610371866107b3565b61037b9190610777565b915084905061039f565b61038e856107b3565b915061039c85610fa06106f2565b90505b935093915050565b6000806103d56040518060800160405280600081526020016000815260200160008152602001600081525090565b600084600f0b13156104015783600f0b600360008282546103f691906107d0565b9091555061041c9050565b83600f0b600360008282546104169190610811565b90915550505b600286810b60009081526001602090815260408083209389900b8352929052205461044c90600f86900b906106f2565b600287810b6000908152600160208181526040808420948b900b8452939052919020015490935061048290600f86900b906106f2565b915061048e86866102d1565b905093509350939050565b6000602082840312156104ab57600080fd5b5035919050565b8035600281900b81146104c457600080fd5b919050565b600080604083850312156104dc57600080fd5b6104e5836104b2565b91506104f3602084016104b2565b90509250929050565b81518152602080830151908201526040808301519082015260608083015190820152608081016102cb565b60008060008060008060c0878903121561054057600080fd5b610549876104b2565b9550610557602088016104b2565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060e0828403121561058e57600080fd5b50919050565b6001600160a01b03811681146101f357600080fd5b6000806000606084860312156105be57600080fd5b8335925060208401356105d081610594565b9150604084013580151581146105e557600080fd5b809150509250925092565b60008060006060848603121561060557600080fd5b61060e846104b2565b925061061c602085016104b2565b9150604084013580600f0b81146105e557600080fd5b8381526020810183905260c0810161066e6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806000806080858703121561068c57600080fd5b610695856104b2565b93506106a3602086016104b2565b93969395505050506040820135916060013590565b6000602082840312156106ca57600080fd5b81356106d581610594565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b0381841382841380821686840486111615610718576107186106dc565b600160ff1b6000871282811687830589121615610737576107376106dc565b60008712925087820587128484161615610753576107536106dc565b87850587128184161615610769576107696106dc565b505050929093029392505050565b60008261079457634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156107ae576107ae6106dc565b500590565b6000600160ff1b8214156107c9576107c96106dc565b5060000390565b600080821280156001600160ff1b03849003851316156107f2576107f26106dc565b600160ff1b839003841281161561080b5761080b6106dc565b50500190565b60008083128015600160ff1b85018412161561082f5761082f6106dc565b6001600160ff1b038401831381161561084a5761084a6106dc565b5050039056fea164736f6c634300080a000a';

type VTokenPositionSetTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionSetTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionSetTest__factory extends ContractFactory {
  constructor(...args: VTokenPositionSetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionSetTest> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionSetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VTokenPositionSetTest {
    return super.attach(address) as VTokenPositionSetTest;
  }
  connect(signer: Signer): VTokenPositionSetTest__factory {
    return super.connect(signer) as VTokenPositionSetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionSetTestInterface {
    return new utils.Interface(_abi) as VTokenPositionSetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionSetTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VTokenPositionSetTest;
  }
}
