/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionSetTest,
  VTokenPositionSetTestInterface,
} from '../VTokenPositionSetTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'IllegalTicks',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'TokenInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getIsActive',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getPositionDetails',
    outputs: [
      {
        internalType: 'int256',
        name: 'balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumACkhpt',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'netTraderPosition',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'realizeFundingPaymentToAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmount',
        type: 'int256',
      },
    ],
    name: 'swapTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vTokenNotional',
        type: 'int256',
      },
    ],
    name: 'swapTokenNotional',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'balanceAdjustments',
        type: 'tuple',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'update',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620000209062000064565b604051809103906000f0801580156200003d573d6000803e3d6000fd5b5060d580546001600160a01b0319166001600160a01b039290921691909117905562000072565b6108ec806200340e83390190565b61338c80620000826000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637e7262d411610097578063ac210cc711610066578063ac210cc7146102cd578063bae7e5ed146102f8578063c74743ff1461030b578063f44d3bdb1461031e57600080fd5b80637e7262d4146101f257806388077639146102055780638ce7442614610218578063a4abe04d146102ba57600080fd5b806329ebaea8116100d357806329ebaea81461014e5780632a66e9ca1461019c5780633fd687a1146101af5780634bed187d146101df57600080fd5b806317ae1fc5146100fa57806319ab453c146101225780631ca4581814610137575b600080fd5b61010d610108366004612824565b610331565b60405190151581526020015b60405180910390f35b610135610130366004612824565b610344565b005b610140606c5481565b604051908152602001610119565b61018161015c366004612824565b63ffffffff166000908152607060205260409020805460028201546001909201549092565b60408051938452602084019290925290820152606001610119565b6101356101aa366004612841565b610468565b6101356101bd366004612824565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6101356101ed3660046128ca565b6104ff565b610135610200366004612824565b610511565b610135610213366004612946565b61052d565b6003546040805160608101825260045461ffff808216835262010000820481166020840152600160201b909104169181019190915260055460065460075461026a946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e001610119565b6101356102c8366004612824565b610551565b60d5546102e0906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b6101356103063660046129a0565b610570565b610135610319366004612a03565b6105fb565b61013561032c366004612a03565b610643565b600061033e606f83610688565b92915050565b61034f606e826106a3565b63ffffffff81166000908152606d602052604080822080546001600160a01b0319166001600160a01b038086169190911790915560d5548251636ba6e56560e11b81526063196004820152606460248201819052610fa06044830152600190820152925191169263d74dcaca926084808201939182900301818387803b1580156103d857600080fd5b505af11580156103ec573d6000803e3d6000fd5b505060d554604051636ba6e56560e11b8152603119600482015260326024820152610fa06044820152600160648201526001600160a01b03909116925063d74dcaca9150608401600060405180830381600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b5050505050565b8160006001600160a01b03821663ffffffff8082166000908152600260205260408120549293506104a3926001600160a01b0316916106b916565b6104af576104af612a2f565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835290829052902083906104f78282612a90565b505050505050565b61050d606e838360006106ca565b5050565b60d55461050d90606e9083906001600160a01b031660006107ac565b84600461053a8282612bcb565b5050600593909355600691909155600755606c5550565b60d55461056d90606e9083906001600160a01b0316600061081e565b50565b60006040518060e001604052808560020b81526020018460020b815260200183600f0b815260200160006001600160a01b03168152602001600061ffff168152602001600015158152602001600060028111156105cf576105cf612c39565b905260d5549091506105f290606e90879084906001600160a01b03166000610948565b50505050505050565b604080516080810182528281526000602082018190529181018290526060810182905260d55461063d92606e92869290916001600160a01b03909116906109dd565b50505050565b604080516080810182528281526000602082018190526001928201929092526060810182905260d55461063d92606e92869290916001600160a01b03909116906109dd565b60006106948383610afc565b60ff1660ff1415905092915050565b61050d600183016001600160a01b038316610b73565b6001600160a01b0390811691161490565b60038101546001600160a01b03838116911681146106fa576106ed858484610cbe565b6106fa6001860182610b73565b63ffffffff81166000908152600286016020908152604082209086015181549192909183919061072b908490612c65565b90915550506040850151600182018054600090610749908490612c65565b9091555050600383015463ffffffff1660009081526002870160205260408120865181549192909183919061077f908490612c65565b9091555050815415801561079d5750600382015465ffffffffffff16155b156105f2576105f28786610cef565b60006107d260405180606001604052806000815260200160008152602001600081525090565b85546107f4908686846107e88b8460008b610d76565b60030193929190610e01565b610800868287866106ca565b610814858260200151836000015186610eae565b9695505050505050565b63ffffffff8316600090815260028501602090815260408083208151631dde605760e21b815291519093926001600160a01b03871692637779815c92600480830193928290030181865afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190612cbc565b600384015463ffffffff90811660009081526002890160205260408120929350906108cd9085908890610ef716565b9050808260000160008282546108e39190612c65565b909155505060028401839055875460408051600080825260208201529081018390526001600160a01b03891691907fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9060600160405180910390a35050505050505050565b600080806109598888600187610d76565b905061097f60405180606001604052806000815260200160008152602001600081525090565b88546109939060038401908a8a8a86610f7c565b61099f89828a886106ca565b8660a00151156109c7576109c48882604001516109bb90612cd5565b8b919088610fd4565b50505b6020810151905190999098509650505050505050565b82516020840151604080860151905163bb152c5360e01b815260048101939093526001600160a01b03918216602484015215156044830152600091829185169063bb152c539060640160408051808303816000875af1158015610a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a689190612cf2565b9092509050610a7682612cd5565b9150610a8181612cd5565b6040805160608101825282815260208101859052908101849052909150610aaa888289876106ca565b875460408051858152602081018590526001600160a01b038a1692917f990ceea32d99a2be13d0832a6fe926be4aabf3b819cbf7d9638cbd5bcb1a4940910160405180910390a3509550959350505050565b6000805b60088160ff161015610b69578263ffffffff16848260ff1660088110610b2857610b28612ca6565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610b5757905061033e565b80610b6181612d16565b915050610b00565b5060ff9392505050565b63ffffffff8116610b9f57604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b6008811015610c52578263ffffffff16848260088110610bc657610bc6612ca6565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610bf45750505050565b816008148015610c3757506000848260088110610c1357610c13612ca6565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b15610c40578091505b80610c4a81612d36565b915050610ba4565b508060081415610c7d57604051630695727160e11b815263ffffffff83166004820152602401610b96565b81838260088110610c9057610c90612ca6565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b6001600160a01b03808316600090815260208390526040902060010154610cea9185918591168461081e565b505050565b63ffffffff811660009081526002830160205260409020546001600160a01b03821690151580610d40575063ffffffff8116600090815260028401602052604090206003015465ffffffffffff1615155b15610d695760405163aeed59dd60e01b81526001600160a01b0383166004820152602401610b96565b610cea6001840182611031565b60038101546000906001600160a01b03858116911614610de3578215610da557610da085856106a3565b610de3565b610dbb600186016001600160a01b038616610688565b610de3576040516319a4abb360e21b81526001600160a01b0385166004820152602401610b96565b50505063ffffffff1660009081526002919091016020526040902090565b60005b855465ffffffffffff16156104f757610e3760405180606001604052806000815260200160008152602001600081525090565b865465ffffffffffff16600090815260018801602052604090209150610e61878787858886611217565b805183518490610e72908390612c65565b9052506020808201519084018051610e8b908390612c65565b9052506040808201519084018051610ea4908390612c65565b905250610e049050565b6000610eb983611248565b610ee4610ecf6001600160a01b03881685611263565b600160801b610edd88611248565b9190611290565b610eee9190612c65565b95945050505050565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c9190612cbc565b90506000610f7382866002015487600101546112d2565b610eee90612cd5565b82516020840151600091610f92918991906112ed565b60c0850151815491925090829060ff19166001836002811115610fb757610fb7612c39565b021790555060408401516105f2908890889088908590888861136e565b6040805160808101825283815260006020808301829052828401829052606083018290526001600160a01b03878116835290859052928120600101549092839261102492899289929116876109dd565b9150915094509492505050565b63ffffffff811661105857604051633f16439160e01b815260006004820152602401610b96565b600860005b6008811015611111578263ffffffff1684826008811061107f5761107f612ca6565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156110ab578091505b8381600881106110bd576110bd612ca6565b60088104919091015460079091166004026101000a900463ffffffff166110ff57600081116110ed5760006110f8565b6110f8600182612d51565b9050611111565b8061110981612d36565b91505061105d565b8160081461063d578181141561116357600084836008811061113557611135612ca6565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555061063d565b83816008811061117557611175612ca6565b600891828204019190066004029054906101000a900463ffffffff1660008584600881106111a5576111a5612ca6565b600891828204019190066004028785600881106111c4576111c4612ca6565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b82546104f79086908690869061123c90600160381b90046001600160801b0316612d68565b8a93929190878761136e565b600080821361125f5761125a82612cd5565b61033e565b5090565b600061128961127b6001600160a01b03851684611402565b6001600160a01b0316611440565b9392505050565b60006112b6600085126112a357846112af565b6112af85600019612d8f565b84846114bd565b90506000841215611289576112ca81612cd5565b949350505050565b60006112ca6112e18486612e14565b8390600160801b61156b565b60008160020b8360020b1315611324576040516307981ccd60e01b8152600284810b600483015283900b6024820152604401610b96565b60006113318585856115c5565b65ffffffffffff81166000908152600187016020526040902092509050611357826115db565b61136657611366828585611601565b509392505050565b61137c848787868686611658565b8354602082810151604080516101008504600290810b8252600160201b90950490940b9284019290925282820152516001600160a01b0387169188917f4926c62827d5760a170acd8b688ca78ac14a0e11ce80adb478f32409cc9031059181900360600190a38354600160381b90046001600160801b03166105f2576105f28785611929565b6001600160a01b03808316600090815260208390526040812060028101549054919261128992169063ffffffff600160201b9091048116906119ab16565b60006401000276a36001600160a01b038316108061147b575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156114a457604051635d236c4560e01b81526001600160a01b0383166004820152602401610b96565b61033e6001600160a01b03831680680100000000000000005b6000808060001985870985870292508281108382030391505080600014156114f757600084116114ec57600080fd5b508290049050611289565b80841161150357600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000600181808061157c88856119cc565b9450925061158a87856119cc565b9450915061159886856119cc565b945090506115a78383836114bd565b9450836115ba576115b785612cd5565b94505b505050509392505050565b601882901b62ffffff82160161128984826119f6565b8054600090610100900460020b15158061033e57505054600160201b900460020b151590565b61160a836115db565b156116275760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af11580156116ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ee9190612e53565b919450925090506117028989898488611b4e565b82846000018181516117149190612e14565b90525060208401805183919061172b908390612e14565b90525088546001600160a01b0388169089907fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a69906101008104600290810b91600160201b810490910b908b9060ff1661178389612cd5565b61178c8b612cd5565b60405161179e96959493929190612edf565b60405180910390a3600061181b866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180d9190612f37565b6001600160a01b0316611c9f565b9050600061182a8b8383611d32565b5060018c015490915061183d9082612e14565b8660400181815161184e9190612c65565b9052506000600f89900b13156118ab578a5488908c90600790611882908490600160381b90046001600160801b0316612f54565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061190a565b600088600f0b121561190a576118c388600019612f7f565b8b548c906007906118e5908490600160381b90046001600160801b031661301d565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b6119148482612c65565b8b600101819055505050505050505050505050565b8054600160381b90046001600160801b03161561198a57805460405163042f31f360e01b81526101008204600290810b6004830152600160201b8304900b6024820152600160381b9091046001600160801b03166044820152606401610b96565b8054610cea9083906101008104600290810b91600160201b9004900b611dfb565b6000806119c16001600160a01b03851684611e11565b90506112ca81612034565b60008060008412156119eb579115916119e484612cd5565b91506119ef565b8391505b5092909150565b65ffffffffffff8116611a1f5760405163fda0966560e01b815260006004820152602401610b96565b600560005b6005811015611adc578265ffffffffffff16848260058110611a4857611a48612ca6565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff161415611a7a5750505050565b816005148015611ac157506000848260058110611a9957611a99612ca6565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16145b15611aca578091505b80611ad481612d36565b915050611a24565b508060051415611b0957604051636d29aed360e01b815265ffffffffffff83166004820152602401610b96565b81838260058110611b1c57611b1c612ca6565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050565b81516040830151600091611b6491889190612366565b90508082600001818151611b789190612c65565b9052506060830151600090611b9790611b929089906123a0565b6123d7565b90508083600001818151611bab9190612c65565b9052508654604080516101008304600290810b8252600160201b90930490920b602083015281018390526001600160a01b0386169087907fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b602083015281018290526001600160a01b0386169087907f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c9060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d049190613045565b509496509294505050506001600160a01b03831615159050611d2c57611d2981612034565b91505b50919050565b825460009081908190611d4c90610100900460020b612034565b8654909150600090611d6790600160201b900460020b612034565b9050856001600160a01b038084169082161015611d85575081611da2565b816001600160a01b0316876001600160a01b03161115611da25750805b8754611dc690611b929083908590600160381b90046001600160801b03168a6123e9565b9450611dee611b9284838b60000160079054906101000a90046001600160801b03168a6124a9565b9350505050935093915050565b601882901b62ffffff8216016112898482612519565b600063ffffffff8216611e3a576040516351a4d88160e01b815260006004820152602401610b96565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110611e6f57611e6f612ca6565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110611e9e57611e9e612ca6565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90611edf9084906004016130e7565b600060405180830381865afa925050508015611f1d57506040513d6000823e601f3d908101601f19168201604052611f1a91908101906131c9565b60015b611f9257836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f839190613045565b5093965061202d945050505050565b600082600081518110611fa757611fa7612ca6565b602002602001015183600181518110611fc257611fc2612ca6565b6020026020010151611fd49190613295565b90506000611fe863ffffffff8816836132fb565b905060008260060b12801561200e575061200863ffffffff881683613339565b60060b15155b15612021578061201d8161335b565b9150505b945061033e9350505050565b5092915050565b60008060008360020b1261204b578260020b612053565b8260020b6000035b9050620d89e881111561208c5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610b96565b6000600182166120a057600160801b6120b2565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156120e6576ffff97272373d413259a46990580e213a0260801c5b6004821615612105576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615612124576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615612143576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615612162576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615612181576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156121a0576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156121c0576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156121e0576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615612200576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615612220576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615612240576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615612260576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615612280576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156122a0576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156122c1576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156122e1576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615612300576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561231d576b048a170391f7dc42444e8fa20260801c5b60008460020b131561233e57806000198161233a5761233a6132e5565b0490505b600160201b810615612351576001612354565b60005b60ff16602082901c0192505050919050565b60028301546003840154600485015485546000936123979387938793600160381b90046001600160801b0316612722565b6112ca90612cd5565b8154600583015460009161128991600160381b9091046001600160801b031690600160801b906123d09086612d51565b91906114bd565b6000600160ff1b821061125f57600080fd5b6000836001600160a01b0316856001600160a01b03161115612409579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661243c57600080fd5b8361247257866001600160a01b031661245f8383896001600160a01b03166114bd565b8161246c5761246c6132e5565b0461249e565b61249e6124898383896001600160a01b031661274a565b886001600160a01b0316808204910615150190565b979650505050505050565b6000836001600160a01b0316856001600160a01b031611156124c9579293925b816124f6576124f1836001600160801b03168686036001600160a01b0316600160601b6114bd565b610eee565b610eee836001600160801b03168686036001600160a01b0316600160601b61274a565b65ffffffffffff81166125425760405163fda0966560e01b815260006004820152602401610b96565b600560005b600581101561260e578265ffffffffffff1684826005811061256b5761256b612ca6565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16141561259b578091505b8381600581106125ad576125ad612ca6565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156125fc57600081116125ea5760006125f5565b6125f5600182612d51565b905061260e565b8061260681612d36565b915050612547565b8160051461063d578181141561266457600084836005811061263257612632612ca6565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff16021790555061063d565b83816005811061267657612676612ca6565b600591828204019190066006029054906101000a900465ffffffffffff1660008584600581106126a8576126a8612ca6565b600591828204019190066006028785600581106126c7576126c7612ca6565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050505050565b600061249e82600160801b6127398888888d61278a565b612743908a612e14565b91906127af565b60006127578484846114bd565b905060008280612769576127696132e5565b848609111561128957600019811061278057600080fd5b6001019392505050565b60006127a56127998684612e14565b8590600160801b61156b565b610eee9084612c65565b60006127bc848484611290565b90506000811280156127dc57506127dc6127d5856127ed565b84846127f8565b15611289576112ca60001982612c65565b600061033e82611248565b600081838509801561136657506001949350505050565b6001600160a01b038116811461056d57600080fd5b60006020828403121561283657600080fd5b81356112898161280f565b60008082840361010081121561285657600080fd5b83356128618161280f565b925060e0601f198201121561287557600080fd5b506020830190509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128c2576128c2612883565b604052919050565b60008082840360808112156128de57600080fd5b60608112156128ec57600080fd5b506040516060810181811067ffffffffffffffff8211171561291057612910612883565b6040908152843582526020808601359083015284810135908201529150606083013561293b8161280f565b809150509250929050565b600080600080600085870360e081121561295f57600080fd5b606081121561296d57600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b8060020b811461056d57600080fd5b600080600080608085870312156129b657600080fd5b84356129c18161280f565b935060208501356129d181612991565b925060408501356129e181612991565b91506060850135600f81900b81146129f857600080fd5b939692955090935050565b60008060408385031215612a1657600080fd5b8235612a218161280f565b946020939093013593505050565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b61ffff8116811461056d57600080fd5b801515811461056d57600080fd5b6000813561033e8161280f565b8135612a9b8161280f565b612aa58183612a45565b506020820135612ab48161280f565b612ac18160018401612a45565b50600281016040830135612ad481612a65565b815461ffff191661ffff8216178255506060830135612af281612a65565b815463ffff00001916601082901b63ffff00001617825550608083013563ffffffff81168114612b2157600080fd5b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135612b5181612a75565b68ffffffffff00000000199190911690911790151560401b68ff000000000000000016178155610cea612b8660c08501612a83565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b8135612bd681612a65565b815461ffff191661ffff8216178255506020820135612bf481612a65565b815463ffff00001916601082901b63ffff000016178255506040820135612c1a81612a65565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615612c8757612c87612c4f565b600160ff1b8390038412811615612ca057612ca0612c4f565b50500190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612cce57600080fd5b5051919050565b6000600160ff1b821415612ceb57612ceb612c4f565b5060000390565b60008060408385031215612d0557600080fd5b505080516020909101519092909150565b600060ff821660ff811415612d2d57612d2d612c4f565b60010192915050565b6000600019821415612d4a57612d4a612c4f565b5060010190565b600082821015612d6357612d63612c4f565b500390565b600081600f0b60016001607f1b0319811415612d8657612d86612c4f565b60000392915050565b60006001600160ff1b0381841382841380821686840486111615612db557612db5612c4f565b600160ff1b6000871282811687830589121615612dd457612dd4612c4f565b60008712925087820587128484161615612df057612df0612c4f565b87850587128184161615612e0657612e06612c4f565b505050929093029392505050565b60008083128015600160ff1b850184121615612e3257612e32612c4f565b6001600160ff1b0384018313811615612e4d57612e4d612c4f565b50500390565b600080600083850360c0811215612e6957600080fd5b84519350602085015192506080603f1982011215612e8657600080fd5b506040516080810181811067ffffffffffffffff82111715612eaa57612eaa612883565b806040525060408501518152606085015160208201526080850151604082015260a08501516060820152809150509250925092565b600287810b825286900b6020820152600f85900b604082015260c0810160038510612f1a57634e487b7160e01b600052602160045260246000fd5b8460608301528360808301528260a0830152979650505050505050565b600060208284031215612f4957600080fd5b81516112898161280f565b60006001600160801b03808316818516808303821115612f7657612f76612c4f565b01949350505050565b600081600f0b83600f0b60016001607f1b03600082136000841383830485118282161615612faf57612faf612c4f565b6f7fffffffffffffffffffffffffffffff196000851282811687830587121615612fdb57612fdb612c4f565b60008712925085820587128484161615612ff757612ff7612c4f565b8585058712818416161561300d5761300d612c4f565b5050509290910295945050505050565b60006001600160801b038381169083168181101561303d5761303d612c4f565b039392505050565b600080600080600080600060e0888a03121561306057600080fd5b875161306b8161280f565b602089015190975061307c81612991565b604089015190965061308d81612a65565b606089015190955061309e81612a65565b60808901519094506130af81612a65565b60a089015190935060ff811681146130c657600080fd5b60c08901519092506130d781612a75565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b8181101561312557835163ffffffff1683529284019291840191600101613103565b50909695505050505050565b600067ffffffffffffffff82111561314b5761314b612883565b5060051b60200190565b600082601f83011261316657600080fd5b8151602061317b61317683613131565b612899565b82815260059290921b8401810191818101908684111561319a57600080fd5b8286015b848110156131be5780516131b18161280f565b835291830191830161319e565b509695505050505050565b600080604083850312156131dc57600080fd5b825167ffffffffffffffff808211156131f457600080fd5b818501915085601f83011261320857600080fd5b8151602061321861317683613131565b82815260059290921b8401810191818101908984111561323757600080fd5b948201945b838610156132655785518060060b81146132565760008081fd5b8252948201949082019061323c565b9188015191965090935050508082111561327e57600080fd5b5061328b85828601613155565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156132c0576132c0612c4f565b81667fffffffffffff0183138116156132db576132db612c4f565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b80613312576133126132e5565b667fffffffffffff1982146000198214161561333057613330612c4f565b90059392505050565b60008260060b8061334c5761334c6132e5565b808360060b0791505092915050565b60008160020b627fffff1981141561337557613375612c4f565b600019019291505056fea164736f6c634300080a000a608060405234801561001057600080fd5b506108cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806386c8e9a7116100a2578063bb152c5311610071578063bb152c5314610263578063d440c4201461028b578063d74dcaca146102ad578063ea6e4e52146102e6578063fca6fbf21461031657600080fd5b806386c8e9a71461023a57806397c71faf14610250578063a3a1e7e91461021f578063a3c35e2c1461016457600080fd5b80634c2ebc58116100e95780634c2ebc58146101865780635e622abc146101ed5780636719578c146101f45780637779815c1461021f5780637aba8e681461022957600080fd5b806302dc99511461011b5780630d8f6f46146101435780632a99a7921461016457806333f9096314610184575b600080fd5b60015461012a9062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b610156610151366004610508565b61032f565b60405190815260200161013a565b610177610172366004610538565b610344565b60405161013a919061056b565b005b610184610194366004610596565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610156565b600354610207906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b600560821b610156565b6101846102373660046105eb565b50565b60015461012a906301000000900462ffffff1681565b61015661025e366004610508565b6103c1565b610276610271366004610618565b6103cf565b6040805192835260208301919091520161013a565b61029e61029936600461065f565b61041a565b60405161013a939291906106a1565b6101846102bb3660046106e5565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101846102f4366004610727565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60015461012a906601000000000000900462ffffff1681565b600061033e82610f9f19610761565b92915050565b61036f6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061033e610fa0836107e6565b60008082156103f857610fa06103e486610822565b6103ee91906107e6565b9150849050610412565b61040185610822565b915061040f85610fa0610761565b90505b935093915050565b6000806104486040518060800160405280600081526020016000815260200160008152602001600081525090565b600084600f0b13156104745783600f0b60046000828254610469919061083f565b9091555061048f9050565b83600f0b600460008282546104899190610880565b90915550505b600286810b6000908152602082815260408083209389900b835292905220546104bd90600f86900b90610761565b600287810b600090815260208281526040808320938a900b835292905220600101549093506104f190600f86900b90610761565b91506104fd8686610344565b905093509350939050565b60006020828403121561051a57600080fd5b5035919050565b8035600281900b811461053357600080fd5b919050565b6000806040838503121561054b57600080fd5b61055483610521565b915061056260208401610521565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161033e565b60008060008060008060c087890312156105af57600080fd5b6105b887610521565b95506105c660208801610521565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060e082840312156105fd57600080fd5b50919050565b6001600160a01b038116811461023757600080fd5b60008060006060848603121561062d57600080fd5b83359250602084013561063f81610603565b91506040840135801515811461065457600080fd5b809150509250925092565b60008060006060848603121561067457600080fd5b61067d84610521565b925061068b60208501610521565b9150604084013580600f0b811461065457600080fd5b8381526020810183905260c081016106dd6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080600080608085870312156106fb57600080fd5b61070485610521565b935061071260208601610521565b93969395505050506040820135916060013590565b60006020828403121561073957600080fd5b813561074481610603565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b03818413828413808216868404861116156107875761078761074b565b600160ff1b60008712828116878305891216156107a6576107a661074b565b600087129250878205871284841616156107c2576107c261074b565b878505871281841616156107d8576107d861074b565b505050929093029392505050565b60008261080357634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561081d5761081d61074b565b500590565b6000600160ff1b8214156108385761083861074b565b5060000390565b600080821280156001600160ff1b03849003851316156108615761086161074b565b600160ff1b839003841281161561087a5761087a61074b565b50500190565b60008083128015600160ff1b85018412161561089e5761089e61074b565b6001600160ff1b03840183138116156108b9576108b961074b565b5050039056fea164736f6c634300080a000a';

type VTokenPositionSetTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionSetTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionSetTest__factory extends ContractFactory {
  constructor(...args: VTokenPositionSetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionSetTest> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionSetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VTokenPositionSetTest {
    return super.attach(address) as VTokenPositionSetTest;
  }
  connect(signer: Signer): VTokenPositionSetTest__factory {
    return super.connect(signer) as VTokenPositionSetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionSetTestInterface {
    return new utils.Interface(_abi) as VTokenPositionSetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionSetTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VTokenPositionSetTest;
  }
}
