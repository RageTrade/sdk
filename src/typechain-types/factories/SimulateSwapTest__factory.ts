/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SimulateSwapTest,
  SimulateSwapTestInterface,
} from '../SimulateSwapTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'clearSwapCache',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'extendedFeeGrowthOutsideX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap1',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap2',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
        ],
        internalType: 'struct SimulateSwap.SwapCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.SwapState',
            name: 'state',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.StepComputations',
            name: 'step',
            type: 'tuple',
          },
        ],
        internalType: 'struct SimulateSwapTest.SwapStep[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint24',
        name: 'fee',
        type: 'uint24',
      },
    ],
    name: 'simulateSwap3',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vQuoteIn',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sqrtPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: 'sq',
        type: 'uint160',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040516200313e3803806200313e83398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b6130a2806200009c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063769042d511610066578063769042d5146101a9578063b83d2683146101bc578063bf0f9789146101dc578063e9ec4ebc146101ef578063fa461e33146101f957600080fd5b80631274ddd2146100a3578063195cd92c146100cf57806322d03d6d146100f757806348aaa8c01461010e5780636c54433514610163575b600080fd5b6100b66100b136600461276c565b61020c565b6040516100c694939291906128a7565b60405180910390f35b6100e26100dd36600461276c565b6104d5565b604080519283526020830191909152016100c6565b61010060085481565b6040519081526020016100c6565b61014361011c36600461292f565b60096020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016100c6565b6004546005546006546007546101819392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff1660608201526080016100c6565b6100e26101b736600461276c565b610575565b6101c4610593565b6040516001600160a01b0390911681526020016100c6565b6100e26101ea36600461295d565b610617565b6101f7610670565b005b6101f7610207366004612994565b61069e565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052819060005460609061025d906001600160a01b03168888886107bb610a9c565b6040805160c0810182526001546001600160a01b0381168252600160a01b8104600290810b602080850191909152600160b81b90920460ff168385015280546001600160801b0381166060850152600160801b810490910b6080840152600160981b900462ffffff1660a08301526003805484518184028101840190955280855295995093975090955090929060009084015b828210156104c657838290600052602060002090600a0201604051806040016040529081600082016040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160149054906101000a900460020b60020b60020b8152602001600382015481526020016004820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016004820160109054906101000a90046001600160801b03166001600160801b03166001600160801b0316815250508152602001600582016040518060e00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460ff161515151581526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282015481526020016003820154815260200160048201548152505081525050815260200190600101906102f0565b50505050905093509350935093565b60008054604080513360208083018290528351808403909101815282840193849052630251596160e31b90935284936001600160a01b03169263128acb089261052792918a918a918a91604401612a6c565b60408051808303816000875af1158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190612aa7565b91509150935093915050565b600080548190610569906001600160a01b03168686866107bb610a9c565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b9190612ae8565b50949695505050505050565b60008061056985858761064857610643600173fffd8963efd1fc6a506488495d951d5263988d26612b96565b610658565b6106586401000276a36001612bbe565b6000546001600160a01b0316929190876107bb610b1c565b600180546001600160c01b0319169055600280546001600160b01b031916905561069c600360006126b1565b565b6000546001600160a01b031633146106b557600080fd5b60006106c382840184612be9565b905060008513156107575760005460408051630dfe168160e01b815290516107579284926001600160a01b039091169189918391630dfe1681916004808201926020929091908290030181865afa158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190612c06565b6001600160a01b0316929190611231565b60008413156107b4576000546040805163d21220a760e01b815290516107b49284926001600160a01b03909116918891839163d21220a7916004808201926020929091908290030181865afa158015610722573d6000803e3d6000fd5b5050505050565b82600160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160176101000a81548160ff021916908360ff16021790555060608201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160010160106101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160136101000a81548162ffffff021916908362ffffff160217905550905050600360405180604001604052808481526020018381525090806001815401808255809150506001900390600052602060002090600a0201600090919091909150600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160146101000a81548162ffffff021916908360020b62ffffff1602179055506080820151816003015560a08201518160040160006101000a8154816001600160801b0302191690836001600160801b0316021790555060c08201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550505060208201518160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160176101000a81548160ff02191690831515021790555060608201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816002015560a0820151816003015560c082015181600401555050505050505050565b600080610b0e878787878b6001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b089190612c23565b88610b1c565b915091509550959350505050565b60008085610b3d57604051631f2a200560e01b815260040160405180910390fd5b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610bad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd19190612ae8565b5060ff1660408088019190915260029490940b6020808801919091526001600160a01b0395861687528451630d34328160e11b81529451958f1695631a68650295600480820196509294509092508290030181865afa158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c9190612c57565b6001600160801b03166060820152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd39190612c72565b60020b608082015262ffffff851660a082015287610d315780600001516001600160a01b0316866001600160a01b0316118015610d2c575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b610d63565b80600001516001600160a01b0316866001600160a01b0316108015610d6357506401000276a36001600160a01b038716115b610d9a5760405162461bcd60e51b815260206004820152600360248201526214d41360ea1b60448201526064015b60405180910390fd5b6000808813905060006040518060e001604052808a81526020016000815260200184600001516001600160a01b03168152602001846020015160020b81526020016000815260200160006001600160801b0316815260200184606001516001600160801b031681525090505b805115801590610e2c5750876001600160a01b031681604001516001600160a01b031614155b156111ec576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408201516001600160a01b03908116825260608301516080860151610e99928f1691635339c296918f611291565b1515604083015260020b60208201819052620d89e7191315610ec457620d89e7196020820152610ef8565b610ed1620d89e719612c8f565b60020b816020015160020b1315610ef857610eef620d89e719612c8f565b60020b60208201525b610f0581602001516114fd565b6001600160a01b031660608201526040820151610f7a908c610f3f578a6001600160a01b031683606001516001600160a01b031611610f59565b8a6001600160a01b031683606001516001600160a01b0316105b610f67578260600151610f69565b8a5b60c0850151855160a0890151611830565b60c085015260a084015260808301526001600160a01b031660408301528215610ff257610fb98160c001518260800151610fb49190612cb2565b611a22565b82518390610fc8908390612cca565b90525060a0810151610fd990611a22565b8260200151610fe89190612cca565b602083015261103d565b610fff8160a00151611a22565b8251839061100e908390612d09565b90525060c0810151608082015161102891610fb491612cb2565b82602001516110379190612d09565b60208301525b60c08201516001600160801b031615611085576110708160c00151600160801b8460c001516001600160801b0316611a38565b826080018181516110819190612cb2565b9052505b63ffffffff61128b8116908816146110a7576110a78b8584848b63ffffffff16565b80606001516001600160a01b031682604001516001600160a01b031614156111af5780604001511561118257602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038e169063f30dba939060240161010060405180830381865afa158015611125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111499190612d4a565b5050505050509150508b156111645761116181612df4565b90505b6111728360c0015182611aeb565b6001600160801b031660c0840152505b8a6111915780602001516111a2565b600181602001516111a29190612e1b565b60020b60608301526111e6565b80600001516001600160a01b031682604001516001600160a01b0316146111e6576111dd8260400151611b93565b60020b60608301525b50610e06565b8115158a15151461120d5760208101518151611208908b612cca565b61121f565b8051611219908a612cca565b81602001515b94509450505050965096945050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261128b908590611eac565b50505050565b6000808061129f8587612e79565b905060008660020b1280156112bf57506112b98587612eb3565b60020b15155b156112d257806112ce81612ed5565b9150505b83156113d7576000806112e483611f83565b90925090506000600160ff831681901b906112ff9082612ef9565b6113099190612cb2565b90506000818c8c866040518263ffffffff1660e01b8152600401611336919060019190910b815260200190565b602060405180830381865afa158015611353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113779190612f10565b1680151596509050856113a1578861139260ff851687612e1b565b61139c9190612f29565b6113cc565b886113ab82611fa0565b6113b59085612fb6565b6113c29060ff1687612e1b565b6113cc9190612f29565b9650505050506114f2565b6000806113ed6113e8846001612fd9565b611f83565b90925090506000611405600160ff841681901b612ef9565b1990506000818c8c866040518263ffffffff1660e01b8152600401611433919060019190910b815260200190565b602060405180830381865afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114749190612f10565b1680151596509050856114b4578861148d8460ff612fb6565b60ff1661149b876001612fd9565b6114a59190612fd9565b6114af9190612f29565b6114eb565b88836114bf83612041565b6114c99190612fb6565b60ff166114d7876001612fd9565b6114e19190612fd9565b6114eb9190612f29565b9650505050505b509550959350505050565b60008060008360020b12611514578260020b61151c565b8260020b6000035b9050620d89e88111156115555760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610d91565b60006001821661156957600160801b61157b565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156115af576ffff97272373d413259a46990580e213a0260801c5b60048216156115ce576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156115ed576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561160c576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561162b576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561164a576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611669576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611689576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156116a9576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156116c9576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156116e9576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611709576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611729576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611749576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611769576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561178a576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156117aa576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156117c9576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156117e6576b048a170391f7dc42444e8fa20260801c5b60008460020b131561180757806000198161180357611803612e63565b0490505b64010000000081061561181b57600161181e565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906118b55760006118698989620f42400362ffffff16620f4240611a38565b9050826118825761187d8c8c8c600161212b565b61188f565b61188f8b8d8c60016121a6565b95508581106118a0578a96506118af565b6118ac8c8b838661225d565b96505b506118ff565b816118cc576118c78b8b8b60006121a6565b6118d9565b6118d98a8c8b600061212b565b93508388600003106118ed578995506118ff565b6118fc8b8a8a600003856122a9565b95505b6001600160a01b038a81169087161482156119625780801561191e5750815b6119345761192f878d8c60016121a6565b611936565b855b9550808015611943575081155b61195957611954878d8c600061212b565b61195b565b845b94506119ac565b80801561196c5750815b6119825761197d8c888c600161212b565b611984565b855b9550808015611991575081155b6119a7576119a28c888c60006121a6565b6119a9565b845b94505b811580156119bc57508860000385115b156119c8578860000394505b8180156119e757508a6001600160a01b0316876001600160a01b031614155b156119f6578589039350611a13565b611a10868962ffffff168a620f42400362ffffff166122f5565b93505b50505095509550955095915050565b6000600160ff1b8210611a3457600080fd5b5090565b600080806000198587098587029250828110838203039150508060001415611a725760008411611a6757600080fd5b508290049050611ae4565b808411611a7e57600080fd5b60008486880960018619810187169687900496828603819004959092119093036000829003919091049092019190910291909117600260038502811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b60008082600f0b1215611b4157508082016001600160801b0380841690821610611b3c5760405162461bcd60e51b81526020600482015260026024820152614c5360f01b6044820152606401610d91565b611b8d565b826001600160801b03168284019150816001600160801b03161015611b8d5760405162461bcd60e51b81526020600482015260026024820152614c4160f01b6044820152606401610d91565b92915050565b60006401000276a36001600160a01b03831610801590611bcf575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b611bff5760405162461bcd60e51b81526020600482015260016024820152602960f91b6044820152606401610d91565b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110611c9357607f810383901c9150611c9d565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14611e9d57886001600160a01b0316611e82826114fd565b6001600160a01b03161115611e975781611e9f565b80611e9f565b815b9998505050505050505050565b6000611f01826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123359092919063ffffffff16565b805190915015611f7e5780806020019051810190611f1f9190613020565b611f7e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d91565b505050565b600281900b60081d6000611f9961010084612eb3565b9050915091565b6000808211611fae57600080fd5b600160801b8210611fc157608091821c91015b680100000000000000008210611fd957604091821c91015b6401000000008210611fed57602091821c91015b620100008210611fff57601091821c91015b610100821061201057600891821c91015b6010821061202057600491821c91015b6004821061203057600291821c91015b6002821061203c576001015b919050565b600080821161204f57600080fd5b5060ff6001600160801b0382161561206a57607f1901612072565b608082901c91505b67ffffffffffffffff82161561208b57603f1901612093565b604082901c91505b63ffffffff8216156120a857601f19016120b0565b602082901c91505b61ffff8216156120c357600f19016120cb565b601082901c91505b60ff8216156120dd57600719016120e5565b600882901c91505b600f8216156120f757600319016120ff565b600482901c91505b60038216156121115760011901612119565b600282901c91505b600182161561203c5760001901919050565b6000836001600160a01b0316856001600160a01b0316111561214b579293925b8161217857612173836001600160801b03168686036001600160a01b0316600160601b611a38565b61219b565b61219b836001600160801b03168686036001600160a01b0316600160601b6122f5565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156121c6579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166121f057600080fd5b8361222657866001600160a01b03166122138383896001600160a01b0316611a38565b8161222057612220612e63565b04612252565b61225261223d8383896001600160a01b03166122f5565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b03161161227457600080fd5b6000846001600160801b03161161228a57600080fd5b8161229c576121738585856001612344565b61219b8585856001612431565b600080856001600160a01b0316116122c057600080fd5b6000846001600160801b0316116122d657600080fd5b816122e8576121738585856000612431565b61219b8585856000612344565b6000612302848484611a38565b90506000828061231457612314612e63565b8486091115611ae457600019811061232b57600080fd5b6001019392505050565b606061219e848460008561252c565b600081156123bd5760006001600160a01b0384111561237a5761237584600160601b876001600160801b0316611a38565b612398565b6001600160801b038516606085901b8161239657612396612e63565b045b90506123b56123b06001600160a01b03881683612652565b612662565b91505061219e565b60006001600160a01b038411156123eb576123e684600160601b876001600160801b03166122f5565b612408565b612408606085901b6001600160801b038716808204910615150190565b905080866001600160a01b03161161241f57600080fd5b6001600160a01b03861603905061219e565b60008261243f57508361219e565b600160601b600160e01b03606085901b1682156124df576001600160a01b0386168481029085828161247357612473612e63565b0414156124a4578181018281106124a25761249883896001600160a01b0316836122f5565b935050505061219e565b505b6124d6826124cb878a6001600160a01b031686816124c4576124c4612e63565b0490612652565b808204910615150190565b9250505061219e565b6001600160a01b038616848102908582816124fc576124fc612e63565b0414801561250957508082115b61251257600080fd5b8082036124986123b0846001600160a01b038b16846122f5565b60608247101561258d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d91565b6001600160a01b0385163b6125e45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d91565b600080866001600160a01b03168587604051612600919061303d565b60006040518083038185875af1925050503d806000811461263d576040519150601f19603f3d011682016040523d82523d6000602084013e612642565b606091505b5091509150612252828286612678565b80820182811015611b8d57600080fd5b806001600160a01b038116811461203c57600080fd5b60608315612687575081611ae4565b8251156126975782518084602001fd5b8160405162461bcd60e51b8152600401610d919190613059565b50805460008255600a02906000526020600020908101906126d291906126d5565b50565b5b80821115611a34576000808255600182018190556002820180546001600160b81b031916905560038201819055600482018190556005820180546001600160c01b03191690556006820180546001600160a01b031916905560078201819055600882018190556009820155600a016126d6565b80151581146126d257600080fd5b6001600160a01b03811681146126d257600080fd5b60008060006060848603121561278157600080fd5b833561278c81612749565b92506020840135915060408401356127a381612757565b809150509250925092565b600081518084526020808501945080840160005b8381101561289c57815180518051895284810151858a01526040808201516001600160a01b0316908a015260608082015160020b908a0152608080820151908a015260a0808201516001600160801b03908116918b019190915260c091820151169089015283015161288760e089018260018060a01b03808251168352602082015160020b6020840152604082015115156040840152806060830151166060840152506080810151608083015260a081015160a083015260c081015160c08301525050565b506101c09690960195908201906001016127c2565b509495945050505050565b600061012086835285602084015260018060a01b038551166040840152602085015160020b606084015260ff60408601511660808401526001600160801b0360608601511660a0840152608085015160020b60c084015262ffffff60a08601511660e084015280610100840152612252818401856127ae565b8060020b81146126d257600080fd5b60006020828403121561294157600080fd5b8135611ae481612920565b62ffffff811681146126d257600080fd5b60008060006060848603121561297257600080fd5b833561297d81612749565b92506020840135915060408401356127a38161294c565b600080600080606085870312156129aa57600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156129d057600080fd5b818701915087601f8301126129e457600080fd5b8135818111156129f357600080fd5b886020828501011115612a0557600080fd5b95989497505060200194505050565b60005b83811015612a2f578181015183820152602001612a17565b8381111561128b5750506000910152565b60008151808452612a58816020860160208601612a14565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a06080820181905260009061225290830184612a40565b60008060408385031215612aba57600080fd5b505080516020909101519092909150565b805161ffff8116811461203c57600080fd5b805161203c81612749565b600080600080600080600060e0888a031215612b0357600080fd5b8751612b0e81612757565b6020890151909750612b1f81612920565b9550612b2d60408901612acb565b9450612b3b60608901612acb565b9350612b4960808901612acb565b925060a088015160ff81168114612b5f57600080fd5b60c0890151909250612b7081612749565b8091505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015612bb657612bb6612b80565b039392505050565b60006001600160a01b03828116848216808303821115612be057612be0612b80565b01949350505050565b600060208284031215612bfb57600080fd5b8135611ae481612757565b600060208284031215612c1857600080fd5b8151611ae481612757565b600060208284031215612c3557600080fd5b8151611ae48161294c565b80516001600160801b038116811461203c57600080fd5b600060208284031215612c6957600080fd5b611ae482612c40565b600060208284031215612c8457600080fd5b8151611ae481612920565b60008160020b627fffff19811415612ca957612ca9612b80565b60000392915050565b60008219821115612cc557612cc5612b80565b500190565b60008083128015600160ff1b850184121615612ce857612ce8612b80565b6001600160ff1b0384018313811615612d0357612d03612b80565b50500390565b600080821280156001600160ff1b0384900385131615612d2b57612d2b612b80565b600160ff1b8390038412811615612d4457612d44612b80565b50500190565b600080600080600080600080610100898b031215612d6757600080fd5b612d7089612c40565b9750602089015180600f0b8114612d8657600080fd5b80975050604089015195506060890151945060808901518060060b8114612dac57600080fd5b60a08a0151909450612dbd81612757565b60c08a015190935063ffffffff81168114612dd757600080fd5b9150612de560e08a01612add565b90509295985092959890939650565b600081600f0b6f7fffffffffffffffffffffffffffffff19811415612ca957612ca9612b80565b60008160020b8360020b6000811281627fffff1901831281151615612e4257612e42612b80565b81627fffff018313811615612e5957612e59612b80565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b80612e9057612e90612e63565b627fffff19821460001982141615612eaa57612eaa612b80565b90059392505050565b60008260020b80612ec657612ec6612e63565b808360020b0791505092915050565b60008160020b627fffff19811415612eef57612eef612b80565b6000190192915050565b600082821015612f0b57612f0b612b80565b500390565b600060208284031215612f2257600080fd5b5051919050565b60008160020b8360020b627fffff600082136000841383830485118282161615612f5557612f55612b80565b627fffff196000851282811687830587121615612f7457612f74612b80565b60008712925085820587128484161615612f9057612f90612b80565b85850587128184161615612fa657612fa6612b80565b5050509290910295945050505050565b600060ff821660ff841680821015612fd057612fd0612b80565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615612fff57612fff612b80565b82627fffff1903821281161561301757613017612b80565b50019392505050565b60006020828403121561303257600080fd5b8151611ae481612749565b6000825161304f818460208701612a14565b9190910192915050565b602081526000611ae46020830184612a4056fea2646970667358221220340566c8065a3cdc7ffa998f8c4ff929165999ae3e4169badfa09a0c9fa2c45164736f6c634300080c0033';

type SimulateSwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimulateSwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimulateSwapTest__factory extends ContractFactory {
  constructor(...args: SimulateSwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SimulateSwapTest';
  }

  deploy(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimulateSwapTest> {
    return super.deploy(vPool_, overrides || {}) as Promise<SimulateSwapTest>;
  }
  getDeployTransaction(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vPool_, overrides || {});
  }
  attach(address: string): SimulateSwapTest {
    return super.attach(address) as SimulateSwapTest;
  }
  connect(signer: Signer): SimulateSwapTest__factory {
    return super.connect(signer) as SimulateSwapTest__factory;
  }
  static readonly contractName: 'SimulateSwapTest';
  public readonly contractName: 'SimulateSwapTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimulateSwapTestInterface {
    return new utils.Interface(_abi) as SimulateSwapTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimulateSwapTest {
    return new Contract(address, _abi, signerOrProvider) as SimulateSwapTest;
  }
}
