/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SimulateSwapTest,
  SimulateSwapTestInterface,
} from '../SimulateSwapTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'clearSwapCache',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'extendedFeeGrowthOutsideX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap1',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap2',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'realPriceX128',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'virtualPriceX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
        ],
        internalType: 'struct SimulateSwapTest.SwapStep[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint24',
        name: 'fee',
        type: 'uint24',
      },
    ],
    name: 'simulateSwap3',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vQuoteIn',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sqrtPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: 'sq',
        type: 'uint160',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620031a9380380620031a983398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b61310d806200009c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063769042d511610066578063769042d5146101a9578063b83d2683146101bc578063bf0f9789146101dc578063e9ec4ebc146101ef578063fa461e33146101f957600080fd5b80631274ddd2146100a3578063195cd92c146100cf57806322d03d6d146100f757806348aaa8c01461010e5780636c54433514610163575b600080fd5b6100b66100b1366004612759565b61020c565b6040516100c69493929190612894565b60405180910390f35b6100e26100dd366004612759565b6104be565b604080519283526020830191909152016100c6565b610100600a5481565b6040519081526020016100c6565b61014361011c366004612944565b600b6020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016100c6565b6006546007546008546009546101819392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff1660608201526080016100c6565b6100e26101b7366004612759565b61055e565b6101c461057c565b6040516001600160a01b0390911681526020016100c6565b6100e26101ea366004612972565b610600565b6101f76106ef565b005b6101f76102073660046129a9565b610729565b60008061021761265a565b600054606090610235906001600160a01b0316888888610846610b3b565b60408051610100810182526001546001600160a01b0381168252600160a01b8104600290810b602080850191909152600160b81b90920460ff168385015280546001600160801b0381166060850152600160801b810490910b6080840152600160981b900462ffffff1660a083015260035460c083015260045460e08301526005805484518184028101840190955280855295995093975090955090929060009084015b828210156104af57838290600052602060002090600a0201604051806040016040529081600082016040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160149054906101000a900460020b60020b60020b8152602001600382015481526020016004820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016004820160109054906101000a90046001600160801b03166001600160801b03166001600160801b0316815250508152602001600582016040518060e00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460ff161515151581526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282015481526020016003820154815260200160048201548152505081525050815260200190600101906102d9565b50505050905093509350935093565b60008054604080513360208083018290528351808403909101815282840193849052630251596160e31b90935284936001600160a01b03169263128acb089261051092918a918a918a91604401612a81565b60408051808303816000875af115801561052e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105529190612abc565b91509150935093915050565b600080548190610552906001600160a01b0316868686610846610b3b565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190612afd565b50949695505050505050565b60008061060b61265a565b62ffffff841660a0820152600054604080516334324e9f60e21b815290516001600160a01b039092169163d0c93a7c916004808201926020929091908290030181865afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190612b95565b60020b60808201526106e28686816106ba576106b5600173fffd8963efd1fc6a506488495d951d5263988d26612bc8565b6106ca565b6106ca6401000276a36001612bf0565b6000546001600160a01b031692919085610846610b63565b9250925050935093915050565b600180546001600160c01b0319169055600280546001600160b01b03191690556000600381905560048190556107279060059061269e565b565b6000546001600160a01b0316331461074057600080fd5b600061074e82840184612c1b565b905060008513156107e25760005460408051630dfe168160e01b815290516107e29284926001600160a01b039091169189918391630dfe1681916004808201926020929091908290030181865afa1580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190612c38565b6001600160a01b03169291906112cb565b600084131561083f576000546040805163d21220a760e01b8152905161083f9284926001600160a01b03909116918891839163d21220a7916004808201926020929091908290030181865afa1580156107ad573d6000803e3d6000fd5b5050505050565b82600160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160176101000a81548160ff021916908360ff16021790555060608201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160010160106101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160136101000a81548162ffffff021916908362ffffff16021790555060c0820151816002015560e08201518160030155905050600560405180604001604052808481526020018381525090806001815401808255809150506001900390600052602060002090600a0201600090919091909150600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160146101000a81548162ffffff021916908360020b62ffffff1602179055506080820151816003015560a08201518160040160006101000a8154816001600160801b0302191690836001600160801b0316021790555060c08201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550505060208201518160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160176101000a81548160ff02191690831515021790555060608201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816002015560a0820151816003015560c082015181600401555050505050505050565b600080610b4661265a565b610b54888888888589610b63565b92509250509550959350505050565b60008085610b8457604051631f2a200560e01b815260040160405180910390fd5b876001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190612afd565b5060ff166040808b019190915260029490940b6020808b01919091526001600160a01b039586168a528451630d34328160e11b81529451958e1695631a68650295600480820196509294509092508290030181865afa158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190612c6c565b6001600160801b03166060850152608084015160020b610d6957876001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced9190612c87565b62ffffff1660a0850152604080516334324e9f60e21b815290516001600160a01b038a169163d0c93a7c9160048083019260209291908290030181865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190612b95565b60020b60808501525b86610db45783600001516001600160a01b0316856001600160a01b0316118015610daf575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038616105b610de6565b83600001516001600160a01b0316856001600160a01b0316108015610de657506401000276a36001600160a01b038616115b610e1d5760405162461bcd60e51b815260206004820152600360248201526214d41360ea1b60448201526064015b60405180910390fd5b6000808713905060006040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525090505b805115801590610eaf5750866001600160a01b031681604001516001600160a01b031614155b15611287576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408201516001600160a01b03908116825260608301516080890151610f1c928e1691635339c296918e61132b565b1515604083015260020b60208201819052620d89e7191315610f4757620d89e7196020820152610f7b565b610f54620d89e719612ca4565b60020b816020015160020b1315610f7b57610f72620d89e719612ca4565b60020b60208201525b610f888160200151611597565b6001600160a01b031660608201526040820151610ffd908b610fc257896001600160a01b031683606001516001600160a01b031611610fdc565b896001600160a01b031683606001516001600160a01b0316105b610fea578260600151610fec565b895b60c0850151855160a08c01516118b7565b60c085015260a084015260808301526001600160a01b0316604083015282156110755761103c8160c0015182608001516110379190612cc7565b611aa9565b8251839061104b908390612cdf565b90525060a081015161105c90611aa9565b826020015161106b9190612cdf565b60208301526110c0565b6110828160a00151611aa9565b82518390611091908390612d1e565b90525060c081015160808201516110ab9161103791612cc7565b82602001516110ba9190612d1e565b60208301525b60c08201516001600160801b031615611108576110f38160c00151600160801b8460c001516001600160801b0316611abf565b826080018181516111049190612cc7565b9052505b6111188a8884848a63ffffffff16565b80606001516001600160a01b031682604001516001600160a01b0316141561124a5780604001511561121d57602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa158015611196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ba9190612d5f565b5050505050509150508a156111d5576111d281612e09565b90505b600081600f0b126111f557808360c001516111f09190612e30565b61120d565b6111fe81612e09565b8360c0015161120d9190612e52565b6001600160801b031660c0840152505b8961122c57806020015161123d565b6001816020015161123d9190612e72565b60020b6060830152611281565b80600001516001600160a01b031682604001516001600160a01b031614611281576112788260400151611b73565b60020b60608301525b50610e89565b811515891515146112a857602081015181516112a3908a612cdf565b6112ba565b80516112b49089612cdf565b81602001515b935093505050965096945050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611325908590611e79565b50505050565b600080806113398587612ed0565b905060008660020b12801561135957506113538587612f0a565b60020b15155b1561136c578061136881612f2c565b9150505b83156114715760008061137e83611f50565b90925090506000600160ff831681901b906113999082612f50565b6113a39190612cc7565b90506000818c8c866040518263ffffffff1660e01b81526004016113d0919060019190910b815260200190565b602060405180830381865afa1580156113ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114119190612f67565b16801515965090508561143b578861142c60ff851687612e72565b6114369190612f80565b611466565b8861144582611f6d565b61144f908561300d565b61145c9060ff1687612e72565b6114669190612f80565b96505050505061158c565b600080611487611482846001613030565b611f50565b9092509050600061149f600160ff841681901b612f50565b1990506000818c8c866040518263ffffffff1660e01b81526004016114cd919060019190910b815260200190565b602060405180830381865afa1580156114ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150e9190612f67565b16801515965090508561154e57886115278460ff61300d565b60ff16611535876001613030565b61153f9190613030565b6115499190612f80565b611585565b88836115598361200e565b611563919061300d565b60ff16611571876001613030565b61157b9190613030565b6115859190612f80565b9650505050505b509550959350505050565b60008060008360020b126115ae578260020b6115b6565b8260020b6000035b9050620d89e88111156115dc576040516315e4079d60e11b815260040160405180910390fd5b6000600182166115f057600160801b611602565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611636576ffff97272373d413259a46990580e213a0260801c5b6004821615611655576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611674576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615611693576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156116b2576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156116d1576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156116f0576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611710576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611730576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611750576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611770576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611790576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156117b0576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156117d0576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156117f0576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611811576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611831576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611850576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561186d576b048a170391f7dc42444e8fa20260801c5b60008460020b131561188e57806000198161188a5761188a612eba565b0490505b6401000000008106156118a25760016118a5565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a16101581871280159061193c5760006118f08989620f42400362ffffff16620f4240611abf565b905082611909576119048c8c8c60016120f8565b611916565b6119168b8d8c6001612173565b9550858110611927578a9650611936565b6119338c8b838661222a565b96505b50611986565b816119535761194e8b8b8b6000612173565b611960565b6119608a8c8b60006120f8565b935083886000031061197457899550611986565b6119838b8a8a60000385612276565b95505b6001600160a01b038a81169087161482156119e9578080156119a55750815b6119bb576119b6878d8c6001612173565b6119bd565b855b95508080156119ca575081155b6119e0576119db878d8c60006120f8565b6119e2565b845b9450611a33565b8080156119f35750815b611a0957611a048c888c60016120f8565b611a0b565b855b9550808015611a18575081155b611a2e57611a298c888c6000612173565b611a30565b845b94505b81158015611a4357508860000385115b15611a4f578860000394505b818015611a6e57508a6001600160a01b0316876001600160a01b031614155b15611a7d578589039350611a9a565b611a97868962ffffff168a620f42400362ffffff166122c2565b93505b50505095509550955095915050565b6000600160ff1b8210611abb57600080fd5b5090565b600080806000198587098587029250828110838203039150508060001415611af95760008411611aee57600080fd5b508290049050611b6c565b808411611b0557600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60006401000276a36001600160a01b03831610801590611baf575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b611bcc576040516324c070df60e11b815260040160405180910390fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110611c6057607f810383901c9150611c6a565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14611e6a57886001600160a01b0316611e4f82611597565b6001600160a01b03161115611e645781611e6c565b80611e6c565b815b9998505050505050505050565b6000611ece826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123029092919063ffffffff16565b805190915015611f4b5780806020019051810190611eec9190613077565b611f4b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e14565b505050565b600281900b60081d6000611f6661010084612f0a565b9050915091565b6000808211611f7b57600080fd5b600160801b8210611f8e57608091821c91015b680100000000000000008210611fa657604091821c91015b6401000000008210611fba57602091821c91015b620100008210611fcc57601091821c91015b6101008210611fdd57600891821c91015b60108210611fed57600491821c91015b60048210611ffd57600291821c91015b60028210612009576001015b919050565b600080821161201c57600080fd5b5060ff6001600160801b0382161561203757607f190161203f565b608082901c91505b67ffffffffffffffff82161561205857603f1901612060565b604082901c91505b63ffffffff82161561207557601f190161207d565b602082901c91505b61ffff82161561209057600f1901612098565b601082901c91505b60ff8216156120aa57600719016120b2565b600882901c91505b600f8216156120c457600319016120cc565b600482901c91505b60038216156120de57600119016120e6565b600282901c91505b60018216156120095760001901919050565b6000836001600160a01b0316856001600160a01b03161115612118579293925b8161214557612140836001600160801b03168686036001600160a01b0316600160601b611abf565b612168565b612168836001600160801b03168686036001600160a01b0316600160601b6122c2565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115612193579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166121bd57600080fd5b836121f357866001600160a01b03166121e08383896001600160a01b0316611abf565b816121ed576121ed612eba565b0461221f565b61221f61220a8383896001600160a01b03166122c2565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b03161161224157600080fd5b6000846001600160801b03161161225757600080fd5b81612269576121408585856001612311565b61216885858560016123f7565b600080856001600160a01b03161161228d57600080fd5b6000846001600160801b0316116122a357600080fd5b816122b55761214085858560006123f7565b6121688585856000612311565b60006122cf848484611abf565b9050600082806122e1576122e1612eba565b8486091115611b6c5760001981106122f857600080fd5b6001019392505050565b606061216b84846000856124e5565b600081156123835760006001600160a01b038411156123475761234284600160601b876001600160801b0316611abf565b61235e565b61235e6001600160801b038616606086901b613094565b905061237b612376826001600160a01b038916612cc7565b61260b565b91505061216b565b60006001600160a01b038411156123b1576123ac84600160601b876001600160801b03166122c2565b6123ce565b6123ce606085901b6001600160801b038716808204910615150190565b905080866001600160a01b0316116123e557600080fd5b6001600160a01b03861603905061216b565b60008261240557508361216b565b600160601b600160e01b03606085901b168215612498576001600160a01b0386168481029085828161243957612439612eba565b04141561246a578181018281106124685761245e83896001600160a01b0316836122c2565b935050505061216b565b505b5061237b81856124836001600160a01b038a1683613094565b61248d9190612cc7565b808204910615150190565b6001600160a01b038616848102908582816124b5576124b5612eba565b041480156124c257508082115b6124cb57600080fd5b80820361245e612376846001600160a01b038b16846122c2565b6060824710156125465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e14565b6001600160a01b0385163b61259d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e14565b600080866001600160a01b031685876040516125b991906130a8565b60006040518083038185875af1925050503d80600081146125f6576040519150601f19603f3d011682016040523d82523d6000602084013e6125fb565b606091505b509150915061221f828286612621565b806001600160a01b038116811461200957600080fd5b60608315612630575081611b6c565b8251156126405782518084602001fd5b8160405162461bcd60e51b8152600401610e1491906130c4565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b50805460008255600a02906000526020600020908101906126bf91906126c2565b50565b5b80821115611abb576000808255600182018190556002820180546001600160b81b031916905560038201819055600482018190556005820180546001600160c01b03191690556006820180546001600160a01b031916905560078201819055600882018190556009820155600a016126c3565b80151581146126bf57600080fd5b6001600160a01b03811681146126bf57600080fd5b60008060006060848603121561276e57600080fd5b833561277981612736565b925060208401359150604084013561279081612744565b809150509250925092565b600081518084526020808501945080840160005b8381101561288957815180518051895284810151858a01526040808201516001600160a01b0316908a015260608082015160020b908a0152608080820151908a015260a0808201516001600160801b03908116918b019190915260c091820151169089015283015161287460e089018260018060a01b03808251168352602082015160020b6020840152604082015115156040840152806060830151166060840152506080810151608083015260a081015160a083015260c081015160c08301525050565b506101c09690960195908201906001016127af565b509495945050505050565b600061016086835285602084015260018060a01b038551166040840152602085015160020b606084015260ff604086015116608084015260608501516128e560a08501826001600160801b03169052565b5060808501516128fa60c085018260020b9052565b5060a085015162ffffff811660e08501525060c085015161010084015260e08501516101208401528061014084015261221f8184018561279b565b8060020b81146126bf57600080fd5b60006020828403121561295657600080fd5b8135611b6c81612935565b62ffffff811681146126bf57600080fd5b60008060006060848603121561298757600080fd5b833561299281612736565b925060208401359150604084013561279081612961565b600080600080606085870312156129bf57600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156129e557600080fd5b818701915087601f8301126129f957600080fd5b813581811115612a0857600080fd5b886020828501011115612a1a57600080fd5b95989497505060200194505050565b60005b83811015612a44578181015183820152602001612a2c565b838111156113255750506000910152565b60008151808452612a6d816020860160208601612a29565b601f01601f19169290920160200192915050565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a06080820181905260009061221f90830184612a55565b60008060408385031215612acf57600080fd5b505080516020909101519092909150565b805161ffff8116811461200957600080fd5b805161200981612736565b600080600080600080600060e0888a031215612b1857600080fd5b8751612b2381612744565b6020890151909750612b3481612935565b9550612b4260408901612ae0565b9450612b5060608901612ae0565b9350612b5e60808901612ae0565b925060a088015160ff81168114612b7457600080fd5b60c0890151909250612b8581612736565b8091505092959891949750929550565b600060208284031215612ba757600080fd5b8151611b6c81612935565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015612be857612be8612bb2565b039392505050565b60006001600160a01b03828116848216808303821115612c1257612c12612bb2565b01949350505050565b600060208284031215612c2d57600080fd5b8135611b6c81612744565b600060208284031215612c4a57600080fd5b8151611b6c81612744565b80516001600160801b038116811461200957600080fd5b600060208284031215612c7e57600080fd5b611b6c82612c55565b600060208284031215612c9957600080fd5b8151611b6c81612961565b60008160020b627fffff19811415612cbe57612cbe612bb2565b60000392915050565b60008219821115612cda57612cda612bb2565b500190565b60008083128015600160ff1b850184121615612cfd57612cfd612bb2565b6001600160ff1b0384018313811615612d1857612d18612bb2565b50500390565b600080821280156001600160ff1b0384900385131615612d4057612d40612bb2565b600160ff1b8390038412811615612d5957612d59612bb2565b50500190565b600080600080600080600080610100898b031215612d7c57600080fd5b612d8589612c55565b9750602089015180600f0b8114612d9b57600080fd5b80975050604089015195506060890151945060808901518060060b8114612dc157600080fd5b60a08a0151909450612dd281612744565b60c08a015190935063ffffffff81168114612dec57600080fd5b9150612dfa60e08a01612af2565b90509295985092959890939650565b600081600f0b6f7fffffffffffffffffffffffffffffff19811415612cbe57612cbe612bb2565b60006001600160801b03808316818516808303821115612c1257612c12612bb2565b60006001600160801b0383811690831681811015612be857612be8612bb2565b60008160020b8360020b6000811281627fffff1901831281151615612e9957612e99612bb2565b81627fffff018313811615612eb057612eb0612bb2565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b80612ee757612ee7612eba565b627fffff19821460001982141615612f0157612f01612bb2565b90059392505050565b60008260020b80612f1d57612f1d612eba565b808360020b0791505092915050565b60008160020b627fffff19811415612f4657612f46612bb2565b6000190192915050565b600082821015612f6257612f62612bb2565b500390565b600060208284031215612f7957600080fd5b5051919050565b60008160020b8360020b627fffff600082136000841383830485118282161615612fac57612fac612bb2565b627fffff196000851282811687830587121615612fcb57612fcb612bb2565b60008712925085820587128484161615612fe757612fe7612bb2565b85850587128184161615612ffd57612ffd612bb2565b5050509290910295945050505050565b600060ff821660ff84168082101561302757613027612bb2565b90039392505050565b60008160020b8360020b6000821282627fffff0382138115161561305657613056612bb2565b82627fffff1903821281161561306e5761306e612bb2565b50019392505050565b60006020828403121561308957600080fd5b8151611b6c81612736565b6000826130a3576130a3612eba565b500490565b600082516130ba818460208701612a29565b9190910192915050565b602081526000611b6c6020830184612a5556fea264697066735822122059c58bd48d4129e0651848a929bf42d90c2106ca8dc515112bbf9c98f36beb5464736f6c634300080c0033';

type SimulateSwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimulateSwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimulateSwapTest__factory extends ContractFactory {
  constructor(...args: SimulateSwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SimulateSwapTest';
  }

  deploy(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimulateSwapTest> {
    return super.deploy(vPool_, overrides || {}) as Promise<SimulateSwapTest>;
  }
  getDeployTransaction(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vPool_, overrides || {});
  }
  attach(address: string): SimulateSwapTest {
    return super.attach(address) as SimulateSwapTest;
  }
  connect(signer: Signer): SimulateSwapTest__factory {
    return super.connect(signer) as SimulateSwapTest__factory;
  }
  static readonly contractName: 'SimulateSwapTest';
  public readonly contractName: 'SimulateSwapTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimulateSwapTestInterface {
    return new utils.Interface(_abi) as SimulateSwapTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimulateSwapTest {
    return new Contract(address, _abi, signerOrProvider) as SimulateSwapTest;
  }
}
