/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SimulateSwapTest,
  SimulateSwapTestInterface,
} from '../SimulateSwapTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'clearSwapSteps',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'extendedFeeGrowthOutsideX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap1',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap2',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
          {
            internalType: 'uint256',
            name: 'realPriceX128',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'virtualPriceX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct SimulateSwap.Cache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.State',
            name: 'state',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.Step',
            name: 'step',
            type: 'tuple',
          },
        ],
        internalType: 'struct SimulateSwapTest.SwapStep[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint24',
        name: 'fee',
        type: 'uint24',
      },
    ],
    name: 'simulateSwap3',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vQuoteIn',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sqrtPrice',
    outputs: [
      {
        internalType: 'uint160',
        name: 'sq',
        type: 'uint160',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604051620033bd380380620033bd83398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b613321806200009c6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063769042d511610076578063bf0f97891161005b578063bf0f9789146101fc578063d750ba341461020f578063fa461e331461021957600080fd5b8063769042d5146101c9578063b83d2683146101dc57600080fd5b806322d03d6d116100a757806322d03d6d1461011757806348aaa8c01461012e5780636c5443351461018357600080fd5b80631274ddd2146100c3578063195cd92c146100ef575b600080fd5b6100d66100d1366004612930565b61022c565b6040516100e69493929190612a6c565b60405180910390f35b6101026100fd366004612930565b61049b565b604080519283526020830191909152016100e6565b61012060065481565b6040519081526020016100e6565b61016361013c366004612b1d565b60076020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016100e6565b6002546003546004546005546101a19392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff1660608201526080016100e6565b6101026101d7366004612930565b610554565b6101e4610580565b6040516001600160a01b0390911681526020016100e6565b61010261020a366004612b4b565b610604565b61021761071f565b005b610217610227366004612b82565b61072d565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052819060005460609061028c906001600160a01b031688888861087c610b3c565b6001805460408051602080840282018101909252828152969a509498509196509290915060009084015b8282101561048c57838290600052602060002090600a0201604051806040016040529081600082016040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160149054906101000a900460020b60020b60020b8152602001600382015481526020016004820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016004820160109054906101000a90046001600160801b03166001600160801b03166001600160801b0316815250508152602001600582016040518060e00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460ff161515151581526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282015481526020016003820154815260200160048201548152505081525050815260200190600101906102b6565b50505050905093509350935093565b600080546040805133602080830182905283518084039091018152828401938490527f128acb080000000000000000000000000000000000000000000000000000000090935284936001600160a01b03169263128acb089261050692918a918a918a91604401612c5a565b60408051808303816000875af1158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190612c94565b91509150935093915050565b600080548190610572906001600160a01b031686868661087c610b3c565b509197909650945050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156105d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f89190612cd5565b50949695505050505050565b604080516101008101825260008082526020808301829052828401829052606083018290526080830182905260c0830182905260e0830182905262ffffff851660a0840152815484516334324e9f60e21b8152945192948594936001600160a01b039092169263d0c93a7c926004808401938290030181865afa15801561068f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b39190612d6d565b60020b60808201526107118686816106e9576106e4600173fffd8963efd1fc6a506488495d951d5263988d26612da0565b6106f9565b6106f96401000276a36001612dc8565b6000546001600160a01b03169291908561087c610bd8565b509097909650945050505050565b61072b60016000612838565b565b6000546001600160a01b0316331461074457600080fd5b600061075282840184612df3565b905060008513156107ff57600054604080517f0dfe168100000000000000000000000000000000000000000000000000000000815290516107ff9284926001600160a01b039091169189918391630dfe1681916004808201926020929091908290030181865afa1580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ee9190612e10565b6001600160a01b03169291906113db565b600084131561087557600054604080517fd21220a700000000000000000000000000000000000000000000000000000000815290516108759284926001600160a01b03909116918891839163d21220a7916004808201926020929091908290030181865afa1580156107ca573d6000803e3d6000fd5b5050505050565b604080518082018252928352602080840192835260018054808201825560009190915293518051600a9095027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6810195909555808201517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7860155808301517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf88601805460608085015162ffffff908116740100000000000000000000000000000000000000009081027fffffffffffffffffff00000000000000000000000000000000000000000000009485166001600160a01b0397881617179094556080808701517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf98c015560a08088015160c0988901516001600160801b03908116600160801b029116177fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa8d0155995180517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb8d0180549a8301519b830151151577010000000000000000000000000000000000000000000000027fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff9c9095169097029990951694871694909417979097179790971696909617909155938401517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc870180549190921673ffffffffffffffffffffffffffffffffffffffff1991909116179055908201517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfd850155918101517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfe84015501517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cff909101555050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905281906040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152610bc589898989858a610bd8565b919b909a50909850909650945050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086600003610c4c576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84516001600160a01b0316600003610ce057886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc09190612cd5565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b0316600003610d6657886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d579190612e44565b6001600160801b031660608601525b846080015160020b600003610e5357886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610db3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd79190612e5f565b62ffffff1660a0860152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a9190612d6d565b60020b60808601525b87610e9d5784600001516001600160a01b0316866001600160a01b03161080610e98575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b610ece565b84600001516001600160a01b0316866001600160a01b03161180610ece57506401000276a36001600160a01b038716105b15610f15576040517f51b516ae0000000000000000000000000000000000000000000000000000000081526001600160a01b03871660048201526024015b60405180910390fd5b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b815115801590610fa55750866001600160a01b031682604001516001600160a01b031614155b15611395576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b03908116825260608401516080890151611012928e1691635339c296918e611469565b1515604083015260020b60208201819052620d89e719131561103d57620d89e7196020820152611071565b61104a620d89e719612e7c565b60020b816020015160020b131561107157611068620d89e719612e7c565b60020b60208201525b61107e81602001516116d5565b6001600160a01b0316606082015260408301516110f3908b6110b857896001600160a01b031683606001516001600160a01b0316116110d2565b896001600160a01b031683606001516001600160a01b0316105b6110e05782606001516110e2565b895b60c0860151865160a08c0151611a11565b60c085015260a084015260808301526001600160a01b03166040840152811561116b576111328160c00151826080015161112d9190612e9e565b611c03565b83518490611141908390612eb6565b90525060a081015161115290611c03565b83602001516111619190612eb6565b60208401526111b6565b6111788160a00151611c03565b83518490611187908390612f0e565b90525060c081015160808201516111a19161112d91612e9e565b83602001516111b09190612f0e565b60208401525b60c08301516001600160801b0316156111fe576111e98160c00151600160801b8560c001516001600160801b0316611c19565b836080018181516111fa9190612e9e565b9052505b61120e8a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b0316036113585780604001511561132b5760208101516040517ff30dba9300000000000000000000000000000000000000000000000000000000815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa1580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c89190612f66565b5050505050509150508a156112e3576112e081613010565b90505b600081600f0b1261130357808460c001516112fe9190613045565b61131b565b61130c81613010565b8460c0015161131b9190613067565b6001600160801b031660c0850152505b8961133a57806020015161134b565b6001816020015161134b9190613087565b60020b606084015261138f565b80600001516001600160a01b031683604001516001600160a01b03161461138f576113868360400151611ccc565b60020b60608401525b50610f7f565b801515891515146113b657602082015182516113b1908a612eb6565b6113c8565b81516113c29089612eb6565b82602001515b909b909a50919850909650505050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611463908590612007565b50505050565b6000808061147785876130e5565b905060008660020b1280156114975750611491858761311f565b60020b15155b156114aa57806114a681613141565b9150505b83156115af576000806114bc836120f1565b90925090506000600160ff831681901b906114d79082613164565b6114e19190612e9e565b90506000818c8c866040518263ffffffff1660e01b815260040161150e919060019190910b815260200190565b602060405180830381865afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f919061317b565b168015159650905085611579578861156a60ff851687613087565b6115749190613194565b6115a4565b886115838261210e565b61158d9085613221565b61159a9060ff1687613087565b6115a49190613194565b9650505050506116ca565b6000806115c56115c0846001613244565b6120f1565b909250905060006115dd600160ff841681901b613164565b1990506000818c8c866040518263ffffffff1660e01b815260040161160b919060019190910b815260200190565b602060405180830381865afa158015611628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164c919061317b565b16801515965090508561168c57886116658460ff613221565b60ff16611673876001613244565b61167d9190613244565b6116879190613194565b6116c3565b8883611697836121af565b6116a19190613221565b60ff166116af876001613244565b6116b99190613244565b6116c39190613194565b9650505050505b509550959350505050565b60008060008360020b126116ec578260020b6116f4565b8260020b6000035b9050620d89e8811115611733576040517f2bc80f3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160011660000361174a57600160801b61175c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611790576ffff97272373d413259a46990580e213a0260801c5b60048216156117af576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156117ce576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156117ed576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561180c576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561182b576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561184a576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561186a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561188a576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156118aa576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156118ca576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156118ea576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561190a576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561192a576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561194a576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561196b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561198b576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156119aa576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156119c7576b048a170391f7dc42444e8fa20260801c5b60008460020b13156119e85780600019816119e4576119e46130cf565b0490505b6401000000008106156119fc5760016119ff565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590611a96576000611a4a8989620f42400362ffffff16620f4240611c19565b905082611a6357611a5e8c8c8c6001612299565b611a70565b611a708b8d8c6001612314565b9550858110611a81578a9650611a90565b611a8d8c8b83866123dd565b96505b50611ae0565b81611aad57611aa88b8b8b6000612314565b611aba565b611aba8a8c8b6000612299565b9350838860000310611ace57899550611ae0565b611add8b8a8a60000385612429565b95505b6001600160a01b038a8116908716148215611b4357808015611aff5750815b611b1557611b10878d8c6001612314565b611b17565b855b9550808015611b24575081155b611b3a57611b35878d8c6000612299565b611b3c565b845b9450611b8d565b808015611b4d5750815b611b6357611b5e8c888c6001612299565b611b65565b855b9550808015611b72575081155b611b8857611b838c888c6000612314565b611b8a565b845b94505b81158015611b9d57508860000385115b15611ba9578860000394505b818015611bc857508a6001600160a01b0316876001600160a01b031614155b15611bd7578589039350611bf4565b611bf1868962ffffff168a620f42400362ffffff16612475565b93505b50505095509550955095915050565b6000600160ff1b8210611c1557600080fd5b5090565b6000808060001985870985870292508281108382030391505080600003611c525760008411611c4757600080fd5b508290049050611cc5565b808411611c5e57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60006401000276a36001600160a01b03831610801590611d08575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b611d3e576040517f4980e1be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110611ddf57607f810383901c9150611de9565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc5568101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14611ff857886001600160a01b0316611fdd826116d5565b6001600160a01b03161115611ff25781611ffa565b80611ffa565b815b9998505050505050505050565b600061205c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166124b59092919063ffffffff16565b8051909150156120ec578080602001905181019061207a919061328b565b6120ec5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610f0c565b505050565b600281900b60081d60006121076101008461311f565b9050915091565b600080821161211c57600080fd5b600160801b821061212f57608091821c91015b68010000000000000000821061214757604091821c91015b640100000000821061215b57602091821c91015b62010000821061216d57601091821c91015b610100821061217e57600891821c91015b6010821061218e57600491821c91015b6004821061219e57600291821c91015b600282106121aa576001015b919050565b60008082116121bd57600080fd5b5060ff6001600160801b038216156121d857607f19016121e0565b608082901c91505b67ffffffffffffffff8216156121f957603f1901612201565b604082901c91505b63ffffffff82161561221657601f190161221e565b602082901c91505b61ffff82161561223157600f1901612239565b601082901c91505b60ff82161561224b5760071901612253565b600882901c91505b600f821615612265576003190161226d565b600482901c91505b600382161561227f5760011901612287565b600282901c91505b60018216156121aa5760001901919050565b6000836001600160a01b0316856001600160a01b031611156122b9579293925b816122e6576122e1836001600160801b03168686036001600160a01b0316600160601b611c19565b612309565b612309836001600160801b03168686036001600160a01b0316600160601b612475565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115612334579293925b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b03868603811690871661237057600080fd5b836123a657866001600160a01b03166123938383896001600160a01b0316611c19565b816123a0576123a06130cf565b046123d2565b6123d26123bd8383896001600160a01b0316612475565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b0316116123f457600080fd5b6000846001600160801b03161161240a57600080fd5b8161241c576122e185858560016124c4565b61230985858560016125aa565b600080856001600160a01b03161161244057600080fd5b6000846001600160801b03161161245657600080fd5b81612468576122e185858560006125aa565b61230985858560006124c4565b6000612482848484611c19565b905060008280612494576124946130cf565b8486091115611cc55760001981106124ab57600080fd5b6001019392505050565b606061230c84846000856126ac565b600081156125365760006001600160a01b038411156124fa576124f584600160601b876001600160801b0316611c19565b612511565b6125116001600160801b038616606086901b6132a8565b905061252e612529826001600160a01b038916612e9e565b6127e9565b91505061230c565b60006001600160a01b038411156125645761255f84600160601b876001600160801b0316612475565b612581565b612581606085901b6001600160801b038716808204910615150190565b905080866001600160a01b03161161259857600080fd5b6001600160a01b03861603905061230c565b6000826000036125bb57508361230c565b7bffffffffffffffffffffffffffffffff000000000000000000000000606085901b16821561265f576001600160a01b03861684810290858281612601576126016130cf565b04036126315781810182811061262f5761262583896001600160a01b031683612475565b935050505061230c565b505b5061252e818561264a6001600160a01b038a16836132a8565b6126549190612e9e565b808204910615150190565b6001600160a01b0386168481029085828161267c5761267c6130cf565b0414801561268957508082115b61269257600080fd5b808203612625612529846001600160a01b038b1684612475565b6060824710156127245760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610f0c565b6001600160a01b0385163b61277b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f0c565b600080866001600160a01b0316858760405161279791906132bc565b60006040518083038185875af1925050503d80600081146127d4576040519150601f19603f3d011682016040523d82523d6000602084013e6127d9565b606091505b50915091506123d28282866127ff565b806001600160a01b03811681146121aa57600080fd5b6060831561280e575081611cc5565b82511561281e5782518084602001fd5b8160405162461bcd60e51b8152600401610f0c91906132d8565b50805460008255600a0290600052602060002090810190612859919061285c565b50565b5b80821115611c15576000808255600182018190556002820180547fffffffffffffffffff000000000000000000000000000000000000000000000016905560038201819055600482018190556005820180547fffffffffffffffff00000000000000000000000000000000000000000000000016905560068201805473ffffffffffffffffffffffffffffffffffffffff1916905560078201819055600882018190556009820155600a0161285d565b801515811461285957600080fd5b6001600160a01b038116811461285957600080fd5b60008060006060848603121561294557600080fd5b83356129508161290d565b92506020840135915060408401356129678161291b565b809150509250925092565b600081518084526020808501945080840160005b83811015612a6157815180518051895284810151858a01526040808201516001600160a01b0316908a015260608082015160020b908a0152608080820151908a015260a0808201516001600160801b03908116918b019190915260c0918201511690890152830151612a4c60e08901826001600160a01b03808251168352602082015160020b6020840152604082015115156040840152806060830151166060840152506080810151608083015260a081015160a083015260c081015160c08301525050565b506101c0969096019590820190600101612986565b509495945050505050565b60006101608683528560208401526001600160a01b038551166040840152602085015160020b606084015260ff60408601511660808401526060850151612abe60a08501826001600160801b03169052565b506080850151612ad360c085018260020b9052565b5060a085015162ffffff811660e08501525060c085015161010084015260e0850151610120840152806101408401526123d281840185612972565b8060020b811461285957600080fd5b600060208284031215612b2f57600080fd5b8135611cc581612b0e565b62ffffff8116811461285957600080fd5b600080600060608486031215612b6057600080fd5b8335612b6b8161290d565b925060208401359150604084013561296781612b3a565b60008060008060608587031215612b9857600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115612bbe57600080fd5b818701915087601f830112612bd257600080fd5b813581811115612be157600080fd5b886020828501011115612bf357600080fd5b95989497505060200194505050565b60005b83811015612c1d578181015183820152602001612c05565b838111156114635750506000910152565b60008151808452612c46816020860160208601612c02565b601f01601f19169290920160200192915050565b60006001600160a01b038088168352861515602084015285604084015280851660608401525060a060808301526123d260a0830184612c2e565b60008060408385031215612ca757600080fd5b505080516020909101519092909150565b805161ffff811681146121aa57600080fd5b80516121aa8161290d565b600080600080600080600060e0888a031215612cf057600080fd5b8751612cfb8161291b565b6020890151909750612d0c81612b0e565b9550612d1a60408901612cb8565b9450612d2860608901612cb8565b9350612d3660808901612cb8565b925060a088015160ff81168114612d4c57600080fd5b60c0890151909250612d5d8161290d565b8091505092959891949750929550565b600060208284031215612d7f57600080fd5b8151611cc581612b0e565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015612dc057612dc0612d8a565b039392505050565b60006001600160a01b03808316818516808303821115612dea57612dea612d8a565b01949350505050565b600060208284031215612e0557600080fd5b8135611cc58161291b565b600060208284031215612e2257600080fd5b8151611cc58161291b565b80516001600160801b03811681146121aa57600080fd5b600060208284031215612e5657600080fd5b611cc582612e2d565b600060208284031215612e7157600080fd5b8151611cc581612b3a565b60008160020b627fffff198103612e9557612e95612d8a565b60000392915050565b60008219821115612eb157612eb1612d8a565b500190565b600080831283600160ff1b01831281151615612ed457612ed4612d8a565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615612f0857612f08612d8a565b50500390565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615612f4857612f48612d8a565b82600160ff1b038412811615612f6057612f60612d8a565b50500190565b600080600080600080600080610100898b031215612f8357600080fd5b612f8c89612e2d565b9750602089015180600f0b8114612fa257600080fd5b80975050604089015195506060890151945060808901518060060b8114612fc857600080fd5b60a08a0151909450612fd98161291b565b60c08a015190935063ffffffff81168114612ff357600080fd5b915061300160e08a01612cca565b90509295985092959890939650565b600081600f0b7fffffffffffffffffffffffffffffffff800000000000000000000000000000008103612e9557612e95612d8a565b60006001600160801b03808316818516808303821115612dea57612dea612d8a565b60006001600160801b0383811690831681811015612dc057612dc0612d8a565b60008160020b8360020b6000811281627fffff19018312811516156130ae576130ae612d8a565b81627fffff0183138116156130c5576130c5612d8a565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160020b8360020b806130fc576130fc6130cf565b627fffff1982146000198214161561311657613116612d8a565b90059392505050565b60008260020b80613132576131326130cf565b808360020b0791505092915050565b60008160020b627fffff19810361315a5761315a612d8a565b6000190192915050565b60008282101561317657613176612d8a565b500390565b60006020828403121561318d57600080fd5b5051919050565b60008160020b8360020b627fffff6000821360008413838304851182821616156131c0576131c0612d8a565b627fffff1960008512828116878305871216156131df576131df612d8a565b600087129250858205871284841616156131fb576131fb612d8a565b8585058712818416161561321157613211612d8a565b5050509290910295945050505050565b600060ff821660ff84168082101561323b5761323b612d8a565b90039392505050565b60008160020b8360020b6000821282627fffff0382138115161561326a5761326a612d8a565b82627fffff1903821281161561328257613282612d8a565b50019392505050565b60006020828403121561329d57600080fd5b8151611cc58161290d565b6000826132b7576132b76130cf565b500490565b600082516132ce818460208701612c02565b9190910192915050565b602081526000611cc56020830184612c2e56fea2646970667358221220815eda4703ee6f947ccc6d679af35cbe889f9f31bbff6d24eb8d6231a1f3865764736f6c634300080d0033';

type SimulateSwapTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimulateSwapTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimulateSwapTest__factory extends ContractFactory {
  constructor(...args: SimulateSwapTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SimulateSwapTest';
  }

  deploy(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimulateSwapTest> {
    return super.deploy(vPool_, overrides || {}) as Promise<SimulateSwapTest>;
  }
  getDeployTransaction(
    vPool_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vPool_, overrides || {});
  }
  attach(address: string): SimulateSwapTest {
    return super.attach(address) as SimulateSwapTest;
  }
  connect(signer: Signer): SimulateSwapTest__factory {
    return super.connect(signer) as SimulateSwapTest__factory;
  }
  static readonly contractName: 'SimulateSwapTest';
  public readonly contractName: 'SimulateSwapTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimulateSwapTestInterface {
    return new utils.Interface(_abi) as SimulateSwapTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimulateSwapTest {
    return new Contract(address, _abi, signerOrProvider) as SimulateSwapTest;
  }
}
