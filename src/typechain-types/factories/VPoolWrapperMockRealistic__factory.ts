/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'value',
        type: 'uint128',
      },
    ],
    name: 'SafeCaseInt128Overflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCastInt256Overflow',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AccruedProtocolFeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'basePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
    ],
    name: 'LiquidityFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'basePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int256',
        name: 'vTokenIn',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'vBaseIn',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidityFees',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'protocolFees',
        type: 'uint256',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IClearingHouse',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVBase',
            name: 'vBase',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'UNISWAP_V3_DEFAULT_FEE_TIER',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: '__initialize_VPoolWrapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'basePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'basePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVBase',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmount',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmount',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'uniswapFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vBaseAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vBase',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506008805465ffffffffffff19169055614ba18061002f6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806386c8e9a71161010f578063bb152c53116100a2578063d9fe08d411610071578063d9fe08d4146104e9578063dbd035ff146104fc578063fa461e331461051c578063fca6fbf21461052f57600080fd5b8063bb152c53146104a7578063c04b98c4146104ba578063c5f1916c146104c3578063d3487997146104d657600080fd5b8063a3a1e7e9116100de578063a3a1e7e91461045a578063a3c35e2c14610462578063acfd792814610475578063adb618321461047e57600080fd5b806386c8e9a71461040b5780638b1e9781146104215780639bb1a99c14610434578063a34123a71461044757600080fd5b80632ad4f84b116101875780636719578c116101565780636719578c146103975780636c544335146103aa5780637779815c146103f05780637feedaa1146103f857600080fd5b80632ad4f84b1461030457806333f909631461033257806348aaa8c01461033a5780635e622abc1461038f57600080fd5b8063195cd92c116101c3578063195cd92c1461027a5780631dce5fcf146102a25780631e2eaeaf146102c45780632a99a792146102e457600080fd5b806302dc9951146101ea57806309e54e31146102195780630af9680014610249575b600080fd5b60035461020090600160a01b900462ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b610247610227366004614081565b6008805465ffffffffffff191665ffffffffffff92909216919091179055565b005b600054610262906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610210565b61028d6102883660046140cf565b610545565b60408051928352602083019190915201610210565b6102b56102b0366004614135565b6107ec565b60405161021093929190614175565b6102d66102d23660046141b1565b5490565b604051908152602001610210565b6102f76102f23660046141ca565b6109d1565b6040516102109190614203565b610247610312366004614081565b600b805465ffffffffffff191665ffffffffffff92909216919091179055565b610247610afd565b61036f61034836600461422e565b600a6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610210565b6102d6610ba2565b600354610262906001600160a01b031681565b6005546006546007546008546103c89392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff166060820152608001610210565b6005546102d6565b61024761040636600461425c565b610c21565b60035461020090600160b81b900462ffffff1681565b61024761042f36600461425c565b610d22565b600154610262906001600160a01b031681565b6102b5610455366004614135565b610e1c565b6102d6610fe6565b6102f76104703660046141ca565b611097565b6102d660045481565b600b546104909065ffffffffffff1681565b60405165ffffffffffff9091168152602001610210565b61028d6104b5366004614279565b611234565b6102d660095481565b600254610262906001600160a01b031681565b6102476104e43660046142f2565b611265565b6102476104f7366004614345565b61136d565b61050f61050a366004614373565b61159f565b6040516102109190614431565b61024761052a3660046142f2565b6115cd565b60035461020090600160d01b900462ffffff1681565b6000805481906201000090046001600160a01b0316331461057957604051638597d08b60e01b815260040160405180910390fd5b60008412156001600160a01b0384166105c857856105b5576105b0600173fffd8963efd1fc6a506488495d951d5263988d2661448b565b6105c5565b6105c56401000276a360016144b3565b93505b6105fa6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b85815260035461062f908390899062ffffff600160a01b8204811691600160b81b8104821691600160d01b9091041686611796565b80516003546000918291610654916001600160a01b03909116908b908a611841611a32565b6003548551604051630251596160e31b81523060048201528d1515602482015260448101919091526001600160a01b038b8116606483015260a06084830152600060a4830152939550919350919091169063128acb089060c40160408051808303816000875af11580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f091906144de565b6040850152602084018190528214801561070d5750826040015181145b61071957610719614502565b505060035461074d908390899062ffffff600160a01b8204811691600160b81b8104821691600160d01b9091041686611ab2565b8060800151600460008282546107639190614518565b909155506107719050611bc2565b7fb0ecd2f0335c5433548e5039eef18bcfbe9cd48abfb781dfa0cc522164cb876f81602001518260400151836060015184608001516040516107cc949392919093845260208401929092526040830152606082015260800190565b60405180910390a180602001518160400151935093505050935093915050565b60008061081a6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b0316331461084b57604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806108695750620d89e719600283900b125b80610885575061087c620d89e719614530565b60020b8160020b135b8061089c5750610896600a83614569565b60020b15155b806108b357506108ad600a82614569565b60020b15155b156108e45760405163957b5ed560e01b8152600283810b600483015282900b60248201526044015b60405180910390fd5b6108ec610afd565b61091d8888610903896001600160801b0316611d65565b600354610918906001600160a01b0316611da3565b611e14565b600354604051633c8a7d8d60e01b815230600482015260028b810b60248301528a900b60448201526001600160801b038916606482015260a06084820152600060a4820181905292955082916001600160a01b031690633c8a7d8d9060c40160408051808303816000875af115801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be91906144de565b909b909a50949850939650505050505050565b6109fc6040518060800160405280600081526020016000815260200160008152602001600081525090565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a91906145a8565b505060408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152939550929350610ab09250610fe6915050565b808252600554600654600754610ac593611f65565b604082015280518352600954610ae590600a908790879086908690611f95565b60608601526040850152602084015250909392505050565b60008054600154604051631e01a95960e11b81526001600160a01b039182166004820152839262010000900490911690633c0352b2906024016040805180830381865afa158015610b52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7691906144de565b91509150610b9e60006001610b92600b5465ffffffffffff1690565b600592919086866120ed565b5050565b600080546201000090046001600160a01b03163314610bd457604051638597d08b60e01b815260040160405180910390fd5b6001600454610be39190614640565b60016004556040518181529091507f889bbef14ccbbb6f97773359c9c09396f67ed97695236771816a304ec5d886119060200160405180910390a190565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c989190614657565b6001600160a01b0316336001600160a01b031614610cc957604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60d01b1916600160d01b62ffffff8416908102919091179091556040519081527f2edf7eef14cb246dab2aac555e300928981632918159d9e33fcaa24dcd38cb40906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d999190614657565b6001600160a01b0316336001600160a01b031614610dca57604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60b81b1916600160b81b62ffffff8416908102919091179091556040519081527f5e286c9a939d59334080ddf15517957037c2228384e26bb92a368ce44c531edd90602001610d17565b600080610e4a6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b03163314610e7b57604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b121580610e995750620d89e719600283900b125b80610eb55750610eac620d89e719614530565b60020b8160020b135b80610ecc5750610ec6600a83614569565b60020b15155b80610ee35750610edd600a82614569565b60020b15155b15610f0f5760405163957b5ed560e01b8152600283810b600483015282900b60248201526044016108db565b610f17610afd565b610f378888610f2e896001600160801b0316611d65565b61090390614674565b60035460405163a34123a760e01b815260028b810b60048301528a900b60248201526001600160801b038916604482015291945060009182916001600160a01b03169063a34123a79060640160408051808303816000875af1158015610fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc591906144de565b91509150819650809550610fd98a8a6121f0565b5050505093509350939050565b60008054600154604051631e01a95960e11b81526001600160a01b03918216600482015283928392620100009091041690633c0352b2906024016040805180830381865afa15801561103c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106091906144de565b6005546008549294509092506110909165ffffffffffff16611089600b5465ffffffffffff1690565b858561228d565b9250505090565b6110c26040518060800160405280600081526020016000815260200160008152602001600081525090565b82828060020b8260020b1215806110e05750620d89e719600283900b125b806110fc57506110f3620d89e719614530565b60020b8160020b135b80611113575061110d600a83614569565b60020b15155b8061112a5750611124600a82614569565b60020b15155b156111565760405163957b5ed560e01b8152600283810b600483015282900b60248201526044016108db565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa1580156111a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c491906145a8565b50506040805160808101825260055480825260065460208301526007549282019290925260085465ffffffffffff166060820152908a52600954949650945061121a93600a93508b92508a915086908690611f95565b606088015260408701526020860152509295945050505050565b60008061125960008612846112515761124c8761469b565b611253565b865b86610545565b91509150935093915050565b6003546001600160a01b03163314611290576040516308458b2b60e21b815260040160405180910390fd5b82156112fb576002546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156112e257600080fd5b505af11580156112f6573d6000803e3d6000fd5b505050505b8315611367576001546040516340c10f1960e01b8152336004820152602481018690526001600160a01b03909116906340c10f19906044015b600060405180830381600087803b15801561134e57600080fd5b505af1158015611362573d6000803e3d6000fd5b505050505b50505050565b600054610100900460ff1680611386575060005460ff16155b6113e95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108db565b600054610100900460ff1615801561140b576000805461ffff19166101011790555b61141860208301836146b8565b600080546001600160a01b0392909216620100000262010000600160b01b031990921691909117905561145160408301602084016146b8565b600180546001600160a01b0319166001600160a01b039290921691909117905561148160608301604084016146b8565b600280546001600160a01b0319166001600160a01b03929092169190911790556114b160808301606084016146b8565b600380546001600160a01b0319166001600160a01b03929092169190911790556114e160a083016080840161425c565b6003805462ffffff92909216600160b81b0262ffffff60b81b1990921691909117905561151460c0830160a0840161425c565b6003805462ffffff92909216600160d01b0262ffffff60d01b1990921691909117905561154760e0830160c0840161425c565b600360146101000a81548162ffffff021916908362ffffff16021790555061158a6000600161157d600b5465ffffffffffff1690565b60059291906001806120ed565b8015610b9e576000805461ff00191690555050565b606060208251028201602001602083015b818110156115c55780515481526020016115b0565b509192915050565b6003546001600160a01b031633146115f8576040516308458b2b60e21b815260040160405180910390fd5b60008413156116de57600360009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116789190614657565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018790529116906340c10f1990604401600060405180830381600087803b1580156116c557600080fd5b505af11580156116d9573d6000803e3d6000fd5b505050505b600083131561136757600360009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561173a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175e9190614657565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018690529116906340c10f1990604401611334565b85156117f75784156117b55780516117ae90856122af565b8152611839565b80516117c490600285856122f2565b608083018190526060830182905282516117ea9290916117e391614518565b600161241f565b8082526117ae90856122af565b8461180157611839565b805161181090600185856122f2565b6080830181905260608301829052825161183692909161182f91614518565b600061241f565b81525b505050505050565b60008085611858578260a001518360800151611863565b82608001518360a001515b91509150600061189661187583612464565b60035460009062ffffff600160b81b8204811691600160d01b9004166122f2565b50905060008560c001516001600160801b03161180156118b65750600083115b156119b75760008054600154604051631e01a95960e11b81526001600160a01b039182166004820152839262010000900490911690633c0352b2906024016040805180830381865afa158015611910573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193491906144de565b9150915061197f896119575761194986612464565b6119529061469b565b611960565b61196086612464565b8860c001516001600160801b0316610b92600b5465ffffffffffff1690565b60c087015161199e908490600160801b906001600160801b031661248d565b600960008282546119af9190614518565b909155505050505b83606001516001600160a01b031685604001516001600160a01b03161415611a2957836040015115611a2957602080850151604080516080810182526005548152600654938101939093526007549083015260085465ffffffffffff166060830152600954611a2992600a929161253b565b50505050505050565b600080611aa4878787878b6001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9e91906146d5565b886125bc565b915091509550959350505050565b8515611b3c578415611b0f57611acc816020015185612ce0565b60208201526040810151611ae390600085856122f2565b60808301819052606083018290526040830151611b059290916117e391614518565b6040820152611839565b611b1d816040015185612ce0565b6040820181905260808201516060830151611b05929161182f91614518565b84611b8557611b4f816040015185612ce0565b60408201819052611b6390600085856122f2565b60808301819052606083018290526040830151611b0592909161182f91614518565b611b93816020015185612ce0565b6020820152604081015160808201516060830151611bb592916117e391614518565b6040820152505050505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2f91906146f2565b90508015611c9657600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015611c7d57600080fd5b505af1158015611c91573d6000803e3d6000fd5b505050505b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611cdf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d0391906146f2565b90508015610b9e57600154604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015611d5157600080fd5b505af1158015611839573d6000803e3d6000fd5b60006001607f1b826001600160801b031610611d9f5760405163a9543f4d60e01b81526001600160801b03831660048201526024016108db565b5090565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0791906145a8565b5093979650505050505050565b611e3f6040518060800160405280600081526020016000815260200160008152602001600081525090565b60408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152600954600080600f87900b15611ee157835160208501516040860151600354611eaf93600a938e938c938e939291908b906001600160a01b0316612d07565b845160208601516040870151600354939550611ede93600a938d938c938e938b906001600160a01b0316612d07565b90505b611eeb8989611097565b9450600087600f0b1215611f59578115611f2957600289810b6000908152600a60205260408120818155600181018290559182018190556003909101555b8015611f5957600288810b6000908152600a60205260408120818155600181018290559182018190556003909101555b50505050949350505050565b6000611f80611f74868461470b565b8590600160801b612df1565b611f8a908461474a565b90505b949350505050565b600285810b60009081526020889052604080822087840b8352908220600182015482549483015487519495869586959493928692611fd69290918591611f65565b90506000846003015490508a60020b8d60020b131561202057828a60200151611fff919061470b565b9250818a60400151612011919061470b565b915061201d818a614640565b90505b6001840154845460028601548c5160009261203f929091859190611f65565b90506000866003015490508d60020b8f60020b1361208857828d60200151612067919061470b565b9250818d60400151612079919061470b565b9150612085818d614640565b90505b82868e60200151612099919061470b565b6120a3919061470b565b9a5081858e604001516120b6919061470b565b6120c0919061470b565b9950806120cd858e614640565b6120d79190614640565b9850505050505050505096509650969350505050565b60038601546000906121099065ffffffffffff16858585612e4e565b6001880154909150612121908290600160801b612e7d565b876002016000828254612134919061474a565b909155505086548190889060009061214d90849061474a565b90915550612162905086600160801b87612df1565b876001016000828254612175919061474a565b909155505060038701805465ffffffffffff861665ffffffffffff199091168117909155604080518954815260018a0154602082015260028a0154818301526060810192909252517f56d845af0301cb63e3fc997dd12196cdfc06529656d23e27bcf1b16393013bf79181900360800190a150505050505050565b6003546040516309e3d67b60e31b8152306004820152600284810b602483015283900b60448201526001600160801b036064820181905260848201526001600160a01b0390911690634f1eb3d89060a40160408051808303816000875af115801561225f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612283919061478b565b5050610b9e611bc2565b600061229b85858585612e4e565b6122a5908761474a565b9695505050505050565b6000806122bf83620f42406147ba565b60020b6122d162ffffff8516866147d6565b6122db919061485b565b6122e690600161474a565b9050611f8d818561474a565b600080600061230087612ecb565b9050600186600281111561231657612316614889565b1415612357578361232a86620f42406147ba565b61233491906147ba565b62ffffff1661234682620f424061489f565b61235091906148be565b90506123a8565b600286600281111561236b5761236b614889565b14156123a8578361237f86620f42406148d2565b61238991906148d2565b62ffffff1661239b82620f424061489f565b6123a591906148be565b90505b6000620f42406123b886886148d2565b6123c79062ffffff168461489f565b6123d191906148be565b6123dc906001614518565b9050620f42406123f162ffffff88168461489f565b6123fb91906148be565b612406906001614518565b93506124128482614640565b9250505094509492505050565b60008082600181111561243457612434614889565b1460008513141561245057612449838561474a565b905061245d565b61245a838561470b565b90505b9392505050565b6000600160ff1b8210611d9f57604051630c9687e760e21b8152600481018390526024016108db565b6000808060001985870985870292508281108382030391505080600014156124c757600084116124bc57600080fd5b50829004905061245d565b8084116124d357600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600283810b600090815260208690526040812080546001820154938201548651929461256993909190611f65565b84518355600183015460208601519192506125839161470b565b6001830155604084015161259890829061470b565b600283015560038201546125ac9084614640565b8260030181905550505050505050565b600080856125f15760405162461bcd60e51b8152602060048201526002602482015261415360f01b60448201526064016108db565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268591906145a8565b5060ff1660408088019190915260029490940b6020808801919091526001600160a01b0395861687528451630d34328160e11b81529451958f1695631a68650295600480820196509294509092508290030181865afa1580156126ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061271091906148f0565b6001600160801b03166060820152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015612763573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612787919061490d565b60020b608082015262ffffff851660a0820152876127e55780600001516001600160a01b0316866001600160a01b03161180156127e0575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b612817565b80600001516001600160a01b0316866001600160a01b031610801561281757506401000276a36001600160a01b038716115b6128495760405162461bcd60e51b815260206004820152600360248201526214d41360ea1b60448201526064016108db565b6000808813905060006040518060e001604052808a81526020016000815260200184600001516001600160a01b03168152602001846020015160020b81526020016000815260200160006001600160801b0316815260200184606001516001600160801b031681525090505b8051158015906128db5750876001600160a01b031681604001516001600160a01b031614155b15612c9b576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408201516001600160a01b03908116825260608301516080860151612948928f1691635339c296918f612ee3565b1515604083015260020b60208201819052620d89e719131561297357620d89e71960208201526129a7565b612980620d89e719614530565b60020b816020015160020b13156129a75761299e620d89e719614530565b60020b60208201525b6129b4816020015161314f565b6001600160a01b031660608201526040820151612a29908c6129ee578a6001600160a01b031683606001516001600160a01b031611612a08565b8a6001600160a01b031683606001516001600160a01b0316105b612a16578260600151612a18565b8a5b60c0850151855160a0890151613482565b60c085015260a084015260808301526001600160a01b031660408301528215612aa157612a688160c001518260800151612a639190614518565b613674565b82518390612a7790839061470b565b90525060a0810151612a8890613674565b8260200151612a97919061470b565b6020830152612aec565b612aae8160a00151613674565b82518390612abd90839061474a565b90525060c08101516080820151612ad791612a6391614518565b8260200151612ae6919061474a565b60208301525b60c08201516001600160801b031615612b3457612b1f8160c00151600160801b8460c001516001600160801b031661248d565b82608001818151612b309190614518565b9052505b63ffffffff611367811690881614612b5657612b568b8584848b63ffffffff16565b80606001516001600160a01b031682604001516001600160a01b03161415612c5e57806040015115612c3157602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038e169063f30dba939060240161010060405180830381865afa158015612bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf8919061492a565b5050505050509150508b15612c1357612c1081614674565b90505b612c218360c0015182613686565b6001600160801b031660c0840152505b8a612c40578060200151612c51565b60018160200151612c5191906149d8565b60020b6060830152612c95565b80600001516001600160a01b031682604001516001600160a01b031614612c9557612c8c8260400151613728565b60020b60608301525b506128b5565b8115158a151514612cbc5760208101518151612cb7908b61470b565b612cce565b8051612cc8908a61470b565b81602001515b94509450505050965096945050505050565b6000620f4240612cf083826147ba565b612cfd9060020b856147d6565b61245d919061485b565b600288900b600081815260208b90526040808220905163f30dba9360e01b81526004810193909352909182906001600160a01b0385169063f30dba939060240161010060405180830381865afa158015612d65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d89919061492a565b5050505050505090506000612d9e828b613686565b6001600160801b038381161590821615811415955090915015612de1578a60020b8c60020b13612de1578883556001830188905560028301879055600383018690555b5050509998505050505050505050565b60006001818080612e028885613a41565b94509250612e108785613a41565b94509150612e1e8685613a41565b94509050612e30612a6384848461248d565b945083612e4357612e408561469b565b94505b505050509392505050565b6000611f8a612e5d8686614a20565b65ffffffffffff1662015180612e76858782828261470b565b9190613a6e565b6000612e8a848484612df1565b9050600081128015612eba5750612eba612ea385613aa8565b612eac85613aa8565b612eb585613aa8565b613ab3565b1561245d5761245a6000198261474a565b6000808213611d9f57612edd8261469b565b92915050565b60008080612ef18587614a3f565b905060008660020b128015612f115750612f0b8587614569565b60020b15155b15612f245780612f2081614a79565b9150505b831561302957600080612f3683613acc565b90925090506000600160ff831681901b90612f519082614640565b612f5b9190614518565b90506000818c8c866040518263ffffffff1660e01b8152600401612f88919060019190910b815260200190565b602060405180830381865afa158015612fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fc991906146f2565b168015159650905085612ff35788612fe460ff8516876149d8565b612fee9190614a9d565b61301e565b88612ffd82613ae9565b6130079085614b2a565b6130149060ff16876149d8565b61301e9190614a9d565b965050505050613144565b60008061303f61303a846001614b4d565b613acc565b90925090506000613057600160ff841681901b614640565b1990506000818c8c866040518263ffffffff1660e01b8152600401613085919060019190910b815260200190565b602060405180830381865afa1580156130a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130c691906146f2565b16801515965090508561310657886130df8460ff614b2a565b60ff166130ed876001614b4d565b6130f79190614b4d565b6131019190614a9d565b61313d565b888361311183613b8a565b61311b9190614b2a565b60ff16613129876001614b4d565b6131339190614b4d565b61313d9190614a9d565b9650505050505b509550959350505050565b60008060008360020b12613166578260020b61316e565b8260020b6000035b9050620d89e88111156131a75760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016108db565b6000600182166131bb57600160801b6131cd565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613201576ffff97272373d413259a46990580e213a0260801c5b6004821615613220576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561323f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561325e576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561327d576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561329c576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156132bb576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156132db576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156132fb576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561331b576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561333b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561335b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561337b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561339b576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156133bb576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156133dc576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156133fc576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561341b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613438576b048a170391f7dc42444e8fa20260801c5b60008460020b131561345957806000198161345557613455614553565b0490505b64010000000081061561346d576001613470565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906135075760006134bb8989620f42400362ffffff16620f424061248d565b9050826134d4576134cf8c8c8c6001613c74565b6134e1565b6134e18b8d8c6001613ce4565b95508581106134f2578a9650613501565b6134fe8c8b8386613d9b565b96505b50613551565b8161351e576135198b8b8b6000613ce4565b61352b565b61352b8a8c8b6000613c74565b935083886000031061353f57899550613551565b61354e8b8a8a60000385613de7565b95505b6001600160a01b038a81169087161482156135b4578080156135705750815b61358657613581878d8c6001613ce4565b613588565b855b9550808015613595575081155b6135ab576135a6878d8c6000613c74565b6135ad565b845b94506135fe565b8080156135be5750815b6135d4576135cf8c888c6001613c74565b6135d6565b855b95508080156135e3575081155b6135f9576135f48c888c6000613ce4565b6135fb565b845b94505b8115801561360e57508860000385115b1561361a578860000394505b81801561363957508a6001600160a01b0316876001600160a01b031614155b15613648578589039350613665565b613662868962ffffff168a620f42400362ffffff16613e33565b93505b50505095509550955095915050565b6000600160ff1b8210611d9f57600080fd5b60008082600f0b12156136dc57508082016001600160801b03808416908216106136d75760405162461bcd60e51b81526020600482015260026024820152614c5360f01b60448201526064016108db565b612edd565b826001600160801b03168284019150816001600160801b03161015612edd5760405162461bcd60e51b81526020600482015260026024820152614c4160f01b60448201526064016108db565b60006401000276a36001600160a01b03831610801590613764575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b6137945760405162461bcd60e51b81526020600482015260016024820152602960f91b60448201526064016108db565b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c9790881196179094179092171790911717176080811061382857607f810383901c9150613832565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14613a3257886001600160a01b0316613a178261314f565b6001600160a01b03161115613a2c5781613a34565b80613a34565b815b9998505050505050505050565b6000806000841215613a6057911591613a598461469b565b9150613a64565b8391505b50815b9250929050565b6000613a9460008512613a815784613a8d565b613a8d856000196147d6565b848461248d565b9050600084121561245d5761245a8161469b565b6000612edd82612ecb565b6000818385098015613ac457600191505b509392505050565b600281900b60081d6000613ae261010084614569565b9050915091565b6000808211613af757600080fd5b600160801b8210613b0a57608091821c91015b680100000000000000008210613b2257604091821c91015b6401000000008210613b3657602091821c91015b620100008210613b4857601091821c91015b6101008210613b5957600891821c91015b60108210613b6957600491821c91015b60048210613b7957600291821c91015b60028210613b85576001015b919050565b6000808211613b9857600080fd5b5060ff6001600160801b03821615613bb357607f1901613bbb565b608082901c91505b67ffffffffffffffff821615613bd457603f1901613bdc565b604082901c91505b63ffffffff821615613bf157601f1901613bf9565b602082901c91505b61ffff821615613c0c57600f1901613c14565b601082901c91505b60ff821615613c265760071901613c2e565b600882901c91505b600f821615613c405760031901613c48565b600482901c91505b6003821615613c5a5760011901613c62565b600282901c91505b6001821615613b855760001901919050565b6000836001600160a01b0316856001600160a01b03161115613c94579293925b81613cc157613cbc836001600160801b03168686036001600160a01b0316600160601b61248d565b611f8a565b611f8a836001600160801b03168686036001600160a01b0316600160601b613e33565b6000836001600160a01b0316856001600160a01b03161115613d04579293925b600160601b600160e01b03606084901b166001600160a01b038686038116908716613d2e57600080fd5b83613d6457866001600160a01b0316613d518383896001600160a01b031661248d565b81613d5e57613d5e614553565b04613d90565b613d90613d7b8383896001600160a01b0316613e33565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b031611613db257600080fd5b6000846001600160801b031611613dc857600080fd5b81613dda57613cbc8585856001613e73565b611f8a8585856001613f60565b600080856001600160a01b031611613dfe57600080fd5b6000846001600160801b031611613e1457600080fd5b81613e2657613cbc8585856000613f60565b611f8a8585856000613e73565b6000613e4084848461248d565b905060008280613e5257613e52614553565b848609111561245d576000198110613e6957600080fd5b6001019392505050565b60008115613eec5760006001600160a01b03841115613ea957613ea484600160601b876001600160801b031661248d565b613ec7565b6001600160801b038516606085901b81613ec557613ec5614553565b045b9050613ee4613edf6001600160a01b0388168361405b565b61406b565b915050611f8d565b60006001600160a01b03841115613f1a57613f1584600160601b876001600160801b0316613e33565b613f37565b613f37606085901b6001600160801b038716808204910615150190565b905080866001600160a01b031611613f4e57600080fd5b6001600160a01b038616039050611f8d565b600082613f6e575083611f8d565b600160601b600160e01b03606085901b16821561400e576001600160a01b03861684810290858281613fa257613fa2614553565b041415613fd357818101828110613fd157613fc783896001600160a01b031683613e33565b9350505050611f8d565b505b61400582613ffa878a6001600160a01b03168681613ff357613ff3614553565b049061405b565b808204910615150190565b92505050611f8d565b6001600160a01b0386168481029085828161402b5761402b614553565b0414801561403857508082115b61404157600080fd5b808203613fc7613edf846001600160a01b038b1684613e33565b80820182811015612edd57600080fd5b806001600160a01b0381168114613b8557600080fd5b60006020828403121561409357600080fd5b813565ffffffffffff8116811461245d57600080fd5b80151581146140b757600080fd5b50565b6001600160a01b03811681146140b757600080fd5b6000806000606084860312156140e457600080fd5b83356140ef816140a9565b9250602084013591506040840135614106816140ba565b809150509250925092565b8060020b81146140b757600080fd5b6001600160801b03811681146140b757600080fd5b60008060006060848603121561414a57600080fd5b833561415581614111565b9250602084013561416581614111565b9150604084013561410681614120565b8381526020810183905260c08101611f8d6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b6000602082840312156141c357600080fd5b5035919050565b600080604083850312156141dd57600080fd5b82356141e881614111565b915060208301356141f881614111565b809150509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101612edd565b60006020828403121561424057600080fd5b813561245d81614111565b62ffffff811681146140b757600080fd5b60006020828403121561426e57600080fd5b813561245d8161424b565b60008060006060848603121561428e57600080fd5b8335925060208401356142a0816140ba565b91506040840135614106816140a9565b60008083601f8401126142c257600080fd5b50813567ffffffffffffffff8111156142da57600080fd5b602083019150836020828501011115613a6757600080fd5b6000806000806060858703121561430857600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561432d57600080fd5b614339878288016142b0565b95989497509550505050565b600060e0828403121561435757600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561438657600080fd5b823567ffffffffffffffff8082111561439e57600080fd5b818501915085601f8301126143b257600080fd5b8135818111156143c4576143c461435d565b8060051b604051601f19603f830116810181811085821117156143e9576143e961435d565b60405291825284820192508381018501918883111561440757600080fd5b938501935b828510156144255784358452938501939285019261440c565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156144695783518352928401929184019160010161444d565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b03838116908316818110156144ab576144ab614475565b039392505050565b60006001600160a01b038281168482168083038211156144d5576144d5614475565b01949350505050565b600080604083850312156144f157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b6000821982111561452b5761452b614475565b500190565b60008160020b627fffff1981141561454a5761454a614475565b60000392915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b8061457c5761457c614553565b808360020b0791505092915050565b805161ffff81168114613b8557600080fd5b8051613b85816140a9565b600080600080600080600060e0888a0312156145c357600080fd5b87516145ce816140ba565b60208901519097506145df81614111565b95506145ed6040890161458b565b94506145fb6060890161458b565b93506146096080890161458b565b925060a088015160ff8116811461461f57600080fd5b60c0890151909250614630816140a9565b8091505092959891949750929550565b60008282101561465257614652614475565b500390565b60006020828403121561466957600080fd5b815161245d816140ba565b600081600f0b6f7fffffffffffffffffffffffffffffff1981141561454a5761454a614475565b6000600160ff1b8214156146b1576146b1614475565b5060000390565b6000602082840312156146ca57600080fd5b813561245d816140ba565b6000602082840312156146e757600080fd5b815161245d8161424b565b60006020828403121561470457600080fd5b5051919050565b60008083128015600160ff1b85018412161561472957614729614475565b6001600160ff1b038401831381161561474457614744614475565b50500390565b600080821280156001600160ff1b038490038513161561476c5761476c614475565b600160ff1b839003841281161561478557614785614475565b50500190565b6000806040838503121561479e57600080fd5b82516147a981614120565b60208401519092506141f881614120565b600062ffffff838116908316818110156144ab576144ab614475565b60006001600160ff1b03818413828413808216868404861116156147fc576147fc614475565b600160ff1b600087128281168783058912161561481b5761481b614475565b6000871292508782058712848416161561483757614837614475565b8785058712818416161561484d5761484d614475565b505050929093029392505050565b60008261486a5761486a614553565b600160ff1b82146000198414161561488457614884614475565b500590565b634e487b7160e01b600052602160045260246000fd5b60008160001904831182151516156148b9576148b9614475565b500290565b6000826148cd576148cd614553565b500490565b600062ffffff8083168185168083038211156144d5576144d5614475565b60006020828403121561490257600080fd5b815161245d81614120565b60006020828403121561491f57600080fd5b815161245d81614111565b600080600080600080600080610100898b03121561494757600080fd5b885161495281614120565b80985050602089015180600f0b811461496a57600080fd5b80975050604089015195506060890151945060808901518060060b811461499057600080fd5b60a08a01519094506149a1816140ba565b60c08a015190935063ffffffff811681146149bb57600080fd5b91506149c960e08a0161459d565b90509295985092959890939650565b60008160020b8360020b6000811281627fffff19018312811516156149ff576149ff614475565b81627fffff018313811615614a1657614a16614475565b5090039392505050565b600065ffffffffffff838116908316818110156144ab576144ab614475565b60008160020b8360020b80614a5657614a56614553565b627fffff19821460001982141615614a7057614a70614475565b90059392505050565b60008160020b627fffff19811415614a9357614a93614475565b6000190192915050565b60008160020b8360020b627fffff600082136000841383830485118282161615614ac957614ac9614475565b627fffff196000851282811687830587121615614ae857614ae8614475565b60008712925085820587128484161615614b0457614b04614475565b85850587128184161615614b1a57614b1a614475565b5050509290910295945050505050565b600060ff821660ff841680821015614b4457614b44614475565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615614b7357614b73614475565b82627fffff19038212811615614b8b57614b8b614475565b5001939250505056fea164736f6c634300080c000a';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
