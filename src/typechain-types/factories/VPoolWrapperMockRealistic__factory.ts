/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int256',
        name: 'vTokenIn',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'vBaseIn',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidityFees',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'protocolFees',
        type: 'uint256',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IClearingHouse',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVBase',
            name: 'vBase',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'UNISWAP_V3_DEFAULT_FEE_TIER',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: '__VPoolWrapper_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'int128',
        name: 'liquidityDelta',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [
      {
        internalType: 'int256',
        name: 'basePrincipal',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenPrincipal',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVBase',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
      {
        internalType: 'bool',
        name: 'isNotional',
        type: 'bool',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmount',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmount',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'uniswapFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vBaseAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vBase',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506008805465ffffffffffff191690556149a98061002f6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806386c8e9a711610104578063bb152c53116100a2578063d440c42011610071578063d440c420146104bc578063dbd035ff146104de578063fa461e33146104fe578063fca6fbf21461051157600080fd5b8063bb152c531461047a578063c04b98c41461048d578063c5f1916c14610496578063d3487997146104a957600080fd5b8063a3a1e7e9116100de578063a3a1e7e91461042d578063a3c35e2c14610435578063acfd792814610448578063adb618321461045157600080fd5b806386c8e9a7146103f15780638b1e9781146104075780639bb1a99c1461041a57600080fd5b806333f909631161017c5780636c5443351161014b5780636c5443351461037d5780637779815c146103c35780637aba8e68146103cb5780637feedaa1146103de57600080fd5b806333f909631461030557806348aaa8c01461030d5780635e622abc146103625780636719578c1461036a57600080fd5b8063195cd92c116101b8578063195cd92c1461026f5780631e2eaeaf146102975780632a99a792146102b75780632ad4f84b146102d757600080fd5b806302dc9951146101df57806309e54e311461020e5780630af968001461023e575b600080fd5b6003546101f590600160a01b900462ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61023c61021c366004613e33565b6008805465ffffffffffff191665ffffffffffff92909216919091179055565b005b600054610257906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610205565b61028261027d366004613e81565b610527565b60408051928352602083019190915201610205565b6102a96102a5366004613ec3565b5490565b604051908152602001610205565b6102ca6102c5366004613eeb565b6107ce565b6040516102059190613f24565b61023c6102e5366004613e33565b600b805465ffffffffffff191665ffffffffffff92909216919091179055565b61023c6108fa565b61034261031b366004613f4f565b600a6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610205565b6102a961099f565b600354610257906001600160a01b031681565b60055460065460075460085461039b9392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff166060820152608001610205565b6005546102a9565b61023c6103d9366004613f6c565b6109ea565b61023c6103ec366004613f95565b610c21565b6003546101f590600160b81b900462ffffff1681565b61023c610415366004613f95565b610ced565b600154610257906001600160a01b031681565b6102a9610db9565b6102ca610443366004613eeb565b610e6a565b6102a960045481565b600b546104639065ffffffffffff1681565b60405165ffffffffffff9091168152602001610205565b610282610488366004613fb2565b611007565b6102a960095481565b600254610257906001600160a01b031681565b61023c6104b736600461402b565b611038565b6104cf6104ca36600461408d565b611140565b604051610205939291906140cd565b6104f16104ec36600461411f565b611419565b60405161020591906141dd565b61023c61050c36600461402b565b611447565b6003546101f590600160d01b900462ffffff1681565b6000805481906201000090046001600160a01b0316331461055b57604051638597d08b60e01b815260040160405180910390fd5b60008412156001600160a01b0384166105aa578561059757610592600173fffd8963efd1fc6a506488495d951d5263988d26614237565b6105a7565b6105a76401000276a3600161425f565b93505b6105dc6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b858152600354610611908390899062ffffff600160a01b8204811691600160b81b8104821691600160d01b9091041686611610565b80516003546000918291610636916001600160a01b03909116908b908a6116bb611897565b6003548551604051630251596160e31b81523060048201528d1515602482015260448101919091526001600160a01b038b8116606483015260a06084830152600060a4830152939550919350919091169063128acb089060c40160408051808303816000875af11580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d2919061428a565b604085015260208401819052821480156106ef5750826040015181145b6106fb576106fb6142ae565b505060035461072f908390899062ffffff600160a01b8204811691600160b81b8104821691600160d01b9091041686611917565b80608001516004600082825461074591906142c4565b909155506107539050611a27565b7fb0ecd2f0335c5433548e5039eef18bcfbe9cd48abfb781dfa0cc522164cb876f81602001518260400151836060015184608001516040516107ae949392919093845260208401929092526040830152606082015260800190565b60405180910390a180602001518160400151935093505050935093915050565b6107f96040518060800160405280600081526020016000815260200160008152602001600081525090565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086791906142ee565b505060408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff1660608201529395509293506108ad9250610db9915050565b8082526005546006546007546108c293611bca565b6040820152805183526009546108e290600a908790879086908690611bfa565b60608601526040850152602084015250909392505050565b6000805460015460405163d257be2b60e01b81526001600160a01b03918216600482015283926201000090049091169063d257be2b906024016040805180830381865afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610973919061428a565b9150915061099b6000600161098f600b5465ffffffffffff1690565b60059291908686611d52565b5050565b600080546201000090046001600160a01b031633146109d157604051638597d08b60e01b815260040160405180910390fd5b60016004546109e09190614386565b6001600455919050565b600054610100900460ff1680610a03575060005460ff16155b610a6b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015610a8d576000805461ffff19166101011790555b610a9a602083018361439d565b600080546001600160a01b0392909216620100000262010000600160b01b0319909216919091179055610ad3604083016020840161439d565b600180546001600160a01b0319166001600160a01b0392909216919091179055610b03606083016040840161439d565b600280546001600160a01b0319166001600160a01b0392909216919091179055610b33608083016060840161439d565b600380546001600160a01b0319166001600160a01b0392909216919091179055610b6360a0830160808401613f95565b6003805462ffffff92909216600160b81b0262ffffff60b81b19909216919091179055610b9660c0830160a08401613f95565b6003805462ffffff92909216600160d01b0262ffffff60d01b19909216919091179055610bc960e0830160c08401613f95565b600360146101000a81548162ffffff021916908362ffffff160217905550610c0c60006001610bff600b5465ffffffffffff1690565b6005929190600180611d52565b801561099b576000805461ff00191690555050565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9891906143ba565b6001600160a01b0316336001600160a01b031614610cc957604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff909216600160d01b0262ffffff60d01b19909216919091179055565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6491906143ba565b6001600160a01b0316336001600160a01b031614610d9557604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff909216600160b81b0262ffffff60b81b19909216919091179055565b6000805460015460405163d257be2b60e01b81526001600160a01b0391821660048201528392839262010000909104169063d257be2b906024016040805180830381865afa158015610e0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e33919061428a565b600554600854929450909250610e639165ffffffffffff16610e5c600b5465ffffffffffff1690565b8585611e08565b9250505090565b610e956040518060800160405280600081526020016000815260200160008152602001600081525090565b82828060020b8260020b121580610eb35750620d89e719600283900b125b80610ecf5750610ec6620d89e7196143d7565b60020b8160020b135b80610ee65750610ee0600a83614410565b60020b15155b80610efd5750610ef7600a82614410565b60020b15155b15610f295760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610a62565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610f73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9791906142ee565b50506040805160808101825260055480825260065460208301526007549282019290925260085465ffffffffffff166060820152908a526009549496509450610fed93600a93508b92508a915086908690611bfa565b606088015260408701526020860152509295945050505050565b60008061102c60008612846110245761101f87614432565b611026565b865b86610527565b91509150935093915050565b6003546001600160a01b03163314611063576040516308458b2b60e21b815260040160405180910390fd5b82156110ce576002546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b1580156110b557600080fd5b505af11580156110c9573d6000803e3d6000fd5b505050505b831561113a576001546040516340c10f1960e01b8152336004820152602481018690526001600160a01b03909116906340c10f19906044015b600060405180830381600087803b15801561112157600080fd5b505af1158015611135573d6000803e3d6000fd5b505050505b50505050565b60008061116e6040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b0316331461119f57604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806111bd5750620d89e719600283900b125b806111d957506111d0620d89e7196143d7565b60020b8160020b135b806111f057506111ea600a83614410565b60020b15155b806112075750611201600a82614410565b60020b15155b156112335760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610a62565b61123b6108fa565b60035461125f9089908990899061125a906001600160a01b0316611e2a565b611e9b565b9250600086600f0b131561132f57600354604051633c8a7d8d60e01b815230600482015260028a810b602483015289900b60448201526001600160801b038816606482015260a06084820152600060a482018190529182916001600160a01b0390911690633c8a7d8d9060c40160408051808303816000875af11580156112ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130e919061428a565b9150915061131b82611fec565b955061132681611fec565b9650505061140e565b60035460009081906001600160a01b031663a34123a78b8b6113538c60001961444f565b6040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160408051808303816000875af11580156113ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cf919061428a565b915091506113dc82611fec565b6113e8906000196144ed565b95506113f381611fec565b6113ff906000196144ed565b965061140b8a8a612002565b50505b505093509350939050565b606060208251028201602001602083015b8181101561143f57805154815260200161142a565b509192915050565b6003546001600160a01b03163314611472576040516308458b2b60e21b815260040160405180910390fd5b600084131561155857600360009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f291906143ba565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018790529116906340c10f1990604401600060405180830381600087803b15801561153f57600080fd5b505af1158015611553573d6000803e3d6000fd5b505050505b600083131561113a57600360009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d891906143ba565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018690529116906340c10f1990604401611107565b851561167157841561162f578051611628908561209f565b81526116b3565b805161163e90600285856120e2565b6080830181905260608301829052825161166492909161165d916142c4565b600161220f565b808252611628908561209f565b8461167b576116b3565b805161168a90600185856120e2565b608083018190526060830182905282516116b09290916116a9916142c4565b600061220f565b81525b505050505050565b600080856116d2578260a0015183608001516116dd565b82608001518360a001515b600354919350915060009061170b908390839062ffffff600160b81b8204811691600160d01b9004166120e2565b50905060008560c001516001600160801b031611801561172b5750600083115b1561181c576000805460015460405163d257be2b60e01b81526001600160a01b03918216600482015283926201000090049091169063d257be2b906024016040805180830381865afa158015611785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a9919061428a565b915091506117e4896117c3576117be86614432565b6117c5565b855b8860c001516001600160801b031661098f600b5465ffffffffffff1690565b60c0870151611803908490600160801b906001600160801b0316612254565b6009600082825461181491906142c4565b909155505050505b83606001516001600160a01b031685604001516001600160a01b0316141561188e5783604001511561188e57602080850151604080516080810182526005548152600654938101939093526007549083015260085465ffffffffffff16606083015260095461188e92600a9291612302565b50505050505050565b600080611909878787878b6001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119039190614572565b88612383565b915091509550959350505050565b85156119a157841561197457611931816020015185612aa7565b6020820152604081015161194890600085856120e2565b6080830181905260608301829052604083015161196a92909161165d916142c4565b60408201526116b3565b611982816040015185612aa7565b604082018190526080820151606083015161196a92916116a9916142c4565b846119ea576119b4816040015185612aa7565b604082018190526119c890600085856120e2565b6080830181905260608301829052604083015161196a9290916116a9916142c4565b6119f8816020015185612aa7565b6020820152604081015160808201516060830151611a1a929161165d916142c4565b6040820152505050505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a94919061458f565b90508015611afb57600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015611ae257600080fd5b505af1158015611af6573d6000803e3d6000fd5b505050505b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611b44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b68919061458f565b9050801561099b57600154604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015611bb657600080fd5b505af11580156116b3573d6000803e3d6000fd5b6000611be5611bd986846145a8565b8590600160801b612ace565b611bef90846145e7565b90505b949350505050565b600285810b60009081526020889052604080822087840b8352908220600182015482549483015487519495869586959493928692611c3b9290918591611bca565b90506000846003015490508a60020b8d60020b1315611c8557828a60200151611c6491906145a8565b9250818a60400151611c7691906145a8565b9150611c82818a614386565b90505b6001840154845460028601548c51600092611ca4929091859190611bca565b90506000866003015490508d60020b8f60020b13611ced57828d60200151611ccc91906145a8565b9250818d60400151611cde91906145a8565b9150611cea818d614386565b90505b82868e60200151611cfe91906145a8565b611d0891906145a8565b9a5081858e60400151611d1b91906145a8565b611d2591906145a8565b995080611d32858e614386565b611d3c9190614386565b9850505050505050505096509650969350505050565b6003860154600090611d6e9065ffffffffffff16858585612b28565b6001880154909150611d86908290600160801b612b57565b876002016000828254611d9991906145e7565b9091555050865481908890600090611db29084906145e7565b90915550611dc7905086600160801b87612ace565b876001016000828254611dda91906145e7565b90915550505050600394909401805465ffffffffffff191665ffffffffffff92909216919091179055505050565b6000611e1685858585612b28565b611e2090876145e7565b9695505050505050565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611e6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e8e91906142ee565b5093979650505050505050565b611ec66040518060800160405280600081526020016000815260200160008152602001600081525090565b60408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152600954600080600f87900b15611f6857835160208501516040860151600354611f3693600a938e938c938e939291908b906001600160a01b0316612ba5565b845160208601516040870151600354939550611f6593600a938d938c938e938b906001600160a01b0316612ba5565b90505b611f728989610e6a565b9450600087600f0b1215611fe0578115611fb057600289810b6000908152600a60205260408120818155600181018290559182018190556003909101555b8015611fe057600288810b6000908152600a60205260408120818155600181018290559182018190556003909101555b50505050949350505050565b6000600160ff1b8210611ffe57600080fd5b5090565b6003546040516309e3d67b60e31b8152306004820152600284810b602483015283900b60448201526001600160801b036064820181905260848201526001600160a01b0390911690634f1eb3d89060a40160408051808303816000875af1158015612071573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612095919061463f565b505061099b611a27565b6000806120af83620f4240614672565b60020b6120c162ffffff8516866144ed565b6120cb919061468e565b6120d69060016145e7565b9050611bf281856145e7565b60008060006120f087612c8f565b90506001866002811115612106576121066146bc565b1415612147578361211a86620f4240614672565b6121249190614672565b62ffffff1661213682620f42406146d2565b61214091906146f1565b9050612198565b600286600281111561215b5761215b6146bc565b1415612198578361216f86620f4240614705565b6121799190614705565b62ffffff1661218b82620f42406146d2565b61219591906146f1565b90505b6000620f42406121a88688614705565b6121b79062ffffff16846146d2565b6121c191906146f1565b6121cc9060016142c4565b9050620f42406121e162ffffff8816846146d2565b6121eb91906146f1565b6121f69060016142c4565b93506122028482614386565b9250505094509492505050565b600080826001811115612224576122246146bc565b146000851314156122405761223983856145e7565b905061224d565b61224a83856145a8565b90505b9392505050565b60008080600019858709858702925082811083820303915050806000141561228e576000841161228357600080fd5b50829004905061224d565b80841161229a57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600283810b600090815260208690526040812080546001820154938201548651929461233093909190611bca565b845183556001830154602086015191925061234a916145a8565b6001830155604084015161235f9082906145a8565b600283015560038201546123739084614386565b8260030181905550505050505050565b600080856123b85760405162461bcd60e51b8152602060048201526002602482015261415360f01b6044820152606401610a62565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244c91906142ee565b5060ff1660408088019190915260029490940b6020808801919091526001600160a01b0395861687528451630d34328160e11b81529451958f1695631a68650295600480820196509294509092508290030181865afa1580156124b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d79190614723565b6001600160801b03166060820152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa15801561252a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061254e919061473e565b60020b608082015262ffffff851660a0820152876125ac5780600001516001600160a01b0316866001600160a01b03161180156125a7575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b6125de565b80600001516001600160a01b0316866001600160a01b03161080156125de57506401000276a36001600160a01b038716115b6126105760405162461bcd60e51b815260206004820152600360248201526214d41360ea1b6044820152606401610a62565b6000808813905060006040518060e001604052808a81526020016000815260200184600001516001600160a01b03168152602001846020015160020b81526020016000815260200160006001600160801b0316815260200184606001516001600160801b031681525090505b8051158015906126a25750876001600160a01b031681604001516001600160a01b031614155b15612a62576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408201516001600160a01b0390811682526060830151608086015161270f928f1691635339c296918f612ca7565b1515604083015260020b60208201819052620d89e719131561273a57620d89e719602082015261276e565b612747620d89e7196143d7565b60020b816020015160020b131561276e57612765620d89e7196143d7565b60020b60208201525b61277b8160200151612f13565b6001600160a01b0316606082015260408201516127f0908c6127b5578a6001600160a01b031683606001516001600160a01b0316116127cf565b8a6001600160a01b031683606001516001600160a01b0316105b6127dd5782606001516127df565b8a5b60c0850151855160a0890151613246565b60c085015260a084015260808301526001600160a01b0316604083015282156128685761282f8160c00151826080015161282a91906142c4565b611fec565b8251839061283e9083906145a8565b90525060a081015161284f90611fec565b826020015161285e91906145a8565b60208301526128b3565b6128758160a00151611fec565b825183906128849083906145e7565b90525060c0810151608082015161289e9161282a916142c4565b82602001516128ad91906145e7565b60208301525b60c08201516001600160801b0316156128fb576128e68160c00151600160801b8460c001516001600160801b0316612254565b826080018181516128f791906142c4565b9052505b63ffffffff61113a81169088161461291d5761291d8b8584848b63ffffffff16565b80606001516001600160a01b031682604001516001600160a01b03161415612a25578060400151156129f857602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038e169063f30dba939060240161010060405180830381865afa15801561299b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129bf919061475b565b5050505050509150508b156129da576129d781614804565b90505b6129e88360c0015182613438565b6001600160801b031660c0840152505b8a612a07578060200151612a18565b60018160200151612a189190614822565b60020b6060830152612a5c565b80600001516001600160a01b031682604001516001600160a01b031614612a5c57612a5382604001516134da565b60020b60608301525b5061267c565b8115158a151514612a835760208101518151612a7e908b6145a8565b612a95565b8051612a8f908a6145a8565b81602001515b94509450505050965096945050505050565b6000620f4240612ab78382614672565b612ac49060020b856144ed565b61224d919061468e565b60006001818080612adf88856137f3565b94509250612aed87856137f3565b94509150612afb86856137f3565b94509050612b0a838383612254565b945083612b1d57612b1a85614432565b94505b505050509392505050565b6000611bef612b37868661486a565b65ffffffffffff1662015180612b5085878282826145a8565b9190613820565b6000612b64848484612ace565b9050600081128015612b945750612b94612b7d8561385a565b612b868561385a565b612b8f8561385a565b613865565b1561224d5761224a600019826145e7565b600288900b600081815260208b90526040808220905163f30dba9360e01b81526004810193909352909182906001600160a01b0385169063f30dba939060240161010060405180830381865afa158015612c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c27919061475b565b5050505050505090506000612c3c828b613438565b6001600160801b038381161590821615811415955090915015612c7f578a60020b8c60020b13612c7f578883556001830188905560028301879055600383018690555b5050509998505050505050505050565b6000808213611ffe57612ca182614432565b92915050565b60008080612cb58587614889565b905060008660020b128015612cd55750612ccf8587614410565b60020b15155b15612ce85780612ce4816148c3565b9150505b8315612ded57600080612cfa8361387e565b90925090506000600160ff831681901b90612d159082614386565b612d1f91906142c4565b90506000818c8c866040518263ffffffff1660e01b8152600401612d4c919060019190910b815260200190565b602060405180830381865afa158015612d69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d8d919061458f565b168015159650905085612db75788612da860ff851687614822565b612db291906148e7565b612de2565b88612dc18261389b565b612dcb9085614932565b612dd89060ff1687614822565b612de291906148e7565b965050505050612f08565b600080612e03612dfe846001614955565b61387e565b90925090506000612e1b600160ff841681901b614386565b1990506000818c8c866040518263ffffffff1660e01b8152600401612e49919060019190910b815260200190565b602060405180830381865afa158015612e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8a919061458f565b168015159650905085612eca5788612ea38460ff614932565b60ff16612eb1876001614955565b612ebb9190614955565b612ec591906148e7565b612f01565b8883612ed58361393c565b612edf9190614932565b60ff16612eed876001614955565b612ef79190614955565b612f0191906148e7565b9650505050505b509550959350505050565b60008060008360020b12612f2a578260020b612f32565b8260020b6000035b9050620d89e8811115612f6b5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610a62565b600060018216612f7f57600160801b612f91565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612fc5576ffff97272373d413259a46990580e213a0260801c5b6004821615612fe4576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613003576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613022576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613041576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613060576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561307f576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561309f576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156130bf576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156130df576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156130ff576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561311f576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561313f576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561315f576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561317f576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156131a0576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156131c0576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156131df576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156131fc576b048a170391f7dc42444e8fa20260801c5b60008460020b131561321d578060001981613219576132196143fa565b0490505b640100000000810615613231576001613234565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906132cb57600061327f8989620f42400362ffffff16620f4240612254565b905082613298576132938c8c8c6001613a26565b6132a5565b6132a58b8d8c6001613a96565b95508581106132b6578a96506132c5565b6132c28c8b8386613b4d565b96505b50613315565b816132e2576132dd8b8b8b6000613a96565b6132ef565b6132ef8a8c8b6000613a26565b935083886000031061330357899550613315565b6133128b8a8a60000385613b99565b95505b6001600160a01b038a8116908716148215613378578080156133345750815b61334a57613345878d8c6001613a96565b61334c565b855b9550808015613359575081155b61336f5761336a878d8c6000613a26565b613371565b845b94506133c2565b8080156133825750815b613398576133938c888c6001613a26565b61339a565b855b95508080156133a7575081155b6133bd576133b88c888c6000613a96565b6133bf565b845b94505b811580156133d257508860000385115b156133de578860000394505b8180156133fd57508a6001600160a01b0316876001600160a01b031614155b1561340c578589039350613429565b613426868962ffffff168a620f42400362ffffff16613be5565b93505b50505095509550955095915050565b60008082600f0b121561348e57508082016001600160801b03808416908216106134895760405162461bcd60e51b81526020600482015260026024820152614c5360f01b6044820152606401610a62565b612ca1565b826001600160801b03168284019150816001600160801b03161015612ca15760405162461bcd60e51b81526020600482015260026024820152614c4160f01b6044820152606401610a62565b60006401000276a36001600160a01b03831610801590613516575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b6135465760405162461bcd60e51b81526020600482015260016024820152602960f91b6044820152606401610a62565b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106135da57607f810383901c91506135e4565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146137e457886001600160a01b03166137c982612f13565b6001600160a01b031611156137de57816137e6565b806137e6565b815b9998505050505050505050565b60008060008412156138125791159161380b84614432565b9150613816565b8391505b50815b9250929050565b600061384660008512613833578461383f565b61383f856000196144ed565b8484612254565b9050600084121561224d5761224a81614432565b6000612ca182612c8f565b600081838509801561387657600191505b509392505050565b600281900b60081d600061389461010084614410565b9050915091565b60008082116138a957600080fd5b600160801b82106138bc57608091821c91015b6801000000000000000082106138d457604091821c91015b64010000000082106138e857602091821c91015b6201000082106138fa57601091821c91015b610100821061390b57600891821c91015b6010821061391b57600491821c91015b6004821061392b57600291821c91015b60028210613937576001015b919050565b600080821161394a57600080fd5b5060ff6001600160801b0382161561396557607f190161396d565b608082901c91505b67ffffffffffffffff82161561398657603f190161398e565b604082901c91505b63ffffffff8216156139a357601f19016139ab565b602082901c91505b61ffff8216156139be57600f19016139c6565b601082901c91505b60ff8216156139d857600719016139e0565b600882901c91505b600f8216156139f257600319016139fa565b600482901c91505b6003821615613a0c5760011901613a14565b600282901c91505b60018216156139375760001901919050565b6000836001600160a01b0316856001600160a01b03161115613a46579293925b81613a7357613a6e836001600160801b03168686036001600160a01b0316600160601b612254565b611bef565b611bef836001600160801b03168686036001600160a01b0316600160601b613be5565b6000836001600160a01b0316856001600160a01b03161115613ab6579293925b600160601b600160e01b03606084901b166001600160a01b038686038116908716613ae057600080fd5b83613b1657866001600160a01b0316613b038383896001600160a01b0316612254565b81613b1057613b106143fa565b04613b42565b613b42613b2d8383896001600160a01b0316613be5565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b031611613b6457600080fd5b6000846001600160801b031611613b7a57600080fd5b81613b8c57613a6e8585856001613c25565b611bef8585856001613d12565b600080856001600160a01b031611613bb057600080fd5b6000846001600160801b031611613bc657600080fd5b81613bd857613a6e8585856000613d12565b611bef8585856000613c25565b6000613bf2848484612254565b905060008280613c0457613c046143fa565b848609111561224d576000198110613c1b57600080fd5b6001019392505050565b60008115613c9e5760006001600160a01b03841115613c5b57613c5684600160601b876001600160801b0316612254565b613c79565b6001600160801b038516606085901b81613c7757613c776143fa565b045b9050613c96613c916001600160a01b03881683613e0d565b613e1d565b915050611bf2565b60006001600160a01b03841115613ccc57613cc784600160601b876001600160801b0316613be5565b613ce9565b613ce9606085901b6001600160801b038716808204910615150190565b905080866001600160a01b031611613d0057600080fd5b6001600160a01b038616039050611bf2565b600082613d20575083611bf2565b600160601b600160e01b03606085901b168215613dc0576001600160a01b03861684810290858281613d5457613d546143fa565b041415613d8557818101828110613d8357613d7983896001600160a01b031683613be5565b9350505050611bf2565b505b613db782613dac878a6001600160a01b03168681613da557613da56143fa565b0490613e0d565b808204910615150190565b92505050611bf2565b6001600160a01b03861684810290858281613ddd57613ddd6143fa565b04148015613dea57508082115b613df357600080fd5b808203613d79613c91846001600160a01b038b1684613be5565b80820182811015612ca157600080fd5b806001600160a01b038116811461393757600080fd5b600060208284031215613e4557600080fd5b813565ffffffffffff8116811461224d57600080fd5b8015158114613e6957600080fd5b50565b6001600160a01b0381168114613e6957600080fd5b600080600060608486031215613e9657600080fd5b8335613ea181613e5b565b9250602084013591506040840135613eb881613e6c565b809150509250925092565b600060208284031215613ed557600080fd5b5035919050565b8060020b8114613e6957600080fd5b60008060408385031215613efe57600080fd5b8235613f0981613edc565b91506020830135613f1981613edc565b809150509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101612ca1565b600060208284031215613f6157600080fd5b813561224d81613edc565b600060e08284031215613f7e57600080fd5b50919050565b62ffffff81168114613e6957600080fd5b600060208284031215613fa757600080fd5b813561224d81613f84565b600080600060608486031215613fc757600080fd5b833592506020840135613fd981613e6c565b91506040840135613eb881613e5b565b60008083601f840112613ffb57600080fd5b50813567ffffffffffffffff81111561401357600080fd5b60208301915083602082850101111561381957600080fd5b6000806000806060858703121561404157600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561406657600080fd5b61407287828801613fe9565b95989497509550505050565b80600f0b8114613e6957600080fd5b6000806000606084860312156140a257600080fd5b83356140ad81613edc565b925060208401356140bd81613edc565b91506040840135613eb88161407e565b8381526020810183905260c08101611bf26040830184805182526020810151602083015260408101516040830152606081015160608301525050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561413257600080fd5b823567ffffffffffffffff8082111561414a57600080fd5b818501915085601f83011261415e57600080fd5b81358181111561417057614170614109565b8060051b604051601f19603f8301168101818110858211171561419557614195614109565b6040529182528482019250838101850191888311156141b357600080fd5b938501935b828510156141d1578435845293850193928501926141b8565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015614215578351835292840192918401916001016141f9565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b038381169083168181101561425757614257614221565b039392505050565b60006001600160a01b0382811684821680830382111561428157614281614221565b01949350505050565b6000806040838503121561429d57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b600082198211156142d7576142d7614221565b500190565b805161ffff8116811461393757600080fd5b600080600080600080600060e0888a03121561430957600080fd5b875161431481613e6c565b602089015190975061432581613edc565b9550614333604089016142dc565b9450614341606089016142dc565b935061434f608089016142dc565b925060a088015160ff8116811461436557600080fd5b60c089015190925061437681613e5b565b8091505092959891949750929550565b60008282101561439857614398614221565b500390565b6000602082840312156143af57600080fd5b813561224d81613e6c565b6000602082840312156143cc57600080fd5b815161224d81613e6c565b60008160020b627fffff198114156143f1576143f1614221565b60000392915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b80614423576144236143fa565b808360020b0791505092915050565b6000600160ff1b82141561444857614448614221565b5060000390565b600081600f0b83600f0b60016001607f1b0360008213600084138383048511828216161561447f5761447f614221565b6f7fffffffffffffffffffffffffffffff1960008512828116878305871216156144ab576144ab614221565b600087129250858205871284841616156144c7576144c7614221565b858505871281841616156144dd576144dd614221565b5050509290910295945050505050565b60006001600160ff1b038184138284138082168684048611161561451357614513614221565b600160ff1b600087128281168783058912161561453257614532614221565b6000871292508782058712848416161561454e5761454e614221565b8785058712818416161561456457614564614221565b505050929093029392505050565b60006020828403121561458457600080fd5b815161224d81613f84565b6000602082840312156145a157600080fd5b5051919050565b60008083128015600160ff1b8501841216156145c6576145c6614221565b6001600160ff1b03840183138116156145e1576145e1614221565b50500390565b600080821280156001600160ff1b038490038513161561460957614609614221565b600160ff1b839003841281161561462257614622614221565b50500190565b80516001600160801b038116811461393757600080fd5b6000806040838503121561465257600080fd5b61465b83614628565b915061466960208401614628565b90509250929050565b600062ffffff8381169083168181101561425757614257614221565b60008261469d5761469d6143fa565b600160ff1b8214600019841416156146b7576146b7614221565b500590565b634e487b7160e01b600052602160045260246000fd5b60008160001904831182151516156146ec576146ec614221565b500290565b600082614700576147006143fa565b500490565b600062ffffff80831681851680830382111561428157614281614221565b60006020828403121561473557600080fd5b61224d82614628565b60006020828403121561475057600080fd5b815161224d81613edc565b600080600080600080600080610100898b03121561477857600080fd5b61478189614628565b975060208901516147918161407e565b80975050604089015195506060890151945060808901518060060b81146147b757600080fd5b60a08a01519094506147c881613e6c565b60c08a015190935063ffffffff811681146147e257600080fd5b60e08a01519092506147f381613e5b565b809150509295985092959890939650565b600081600f0b60016001607f1b03198114156143f1576143f1614221565b60008160020b8360020b6000811281627fffff190183128115161561484957614849614221565b81627fffff01831381161561486057614860614221565b5090039392505050565b600065ffffffffffff8381169083168181101561425757614257614221565b60008160020b8360020b806148a0576148a06143fa565b627fffff198214600019821416156148ba576148ba614221565b90059392505050565b60008160020b627fffff198114156148dd576148dd614221565b6000190192915050565b60008160020b8360020b627fffff60008213600084138383048511828216161561491357614913614221565b627fffff1960008512828116878305871216156144ab576144ab614221565b600060ff821660ff84168082101561494c5761494c614221565b90039392505050565b60008160020b8360020b6000821282627fffff0382138115161561497b5761497b614221565b82627fffff1903821281161561499357614993614221565b5001939250505056fea164736f6c634300080a000a';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
