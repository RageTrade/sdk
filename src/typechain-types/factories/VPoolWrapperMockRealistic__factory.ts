/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'value',
        type: 'uint128',
      },
    ],
    name: 'SafeCast_Int128Overflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCast_Int256Overflow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AccruedProtocolFeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
    ],
    name: 'LiquidityFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        indexed: false,
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IClearingHouse',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVQuote',
            name: 'vQuote',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: '__initialize_VPoolWrapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuoteAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vQuote',
    outputs: [
      {
        internalType: 'contract IVQuote',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506008805465ffffffffffff19169055614ecc8061002f6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637feedaa111610104578063acfd7928116100a2578063dbd035ff11610071578063dbd035ff14610505578063dee4c1a614610525578063fa461e3314610538578063fca6fbf21461054b57600080fd5b8063acfd7928146104b7578063adb61832146104c0578063c04b98c4146104e9578063d3487997146104f257600080fd5b80639bb1a99c116100de5780639bb1a99c14610476578063a34123a714610489578063a3a1e7e91461049c578063a3c35e2c146104a457600080fd5b80637feedaa11461042657806386c8e9a7146104395780638b1e97811461046357600080fd5b806348aaa8c0116101715780636719578c1161014b5780636719578c146103b25780636c544335146103c55780636d87989a1461040b5780637779815c1461041e57600080fd5b806348aaa8c0146103425780634bc36bd6146103975780635e622abc146103aa57600080fd5b80631dce5fcf116101ad5780631dce5fcf146102b25780631e2eaeaf146102d45780632a99a792146102f45780632ad4f84b1461031457600080fd5b806309e54e31146101d45780630af9680014610204578063195cd92c1461023a575b600080fd5b6102026101e236600461434b565b6008805465ffffffffffff191665ffffffffffff92909216919091179055565b005b60005461021d906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61024d610248366004614399565b610561565b6040516102319190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b6102c56102c03660046143ff565b610973565b6040516102319392919061443f565b6102e66102e236600461447b565b5490565b604051908152602001610231565b610307610302366004614494565b610b71565b60405161023191906144cd565b61020261032236600461434b565b600b805465ffffffffffff191665ffffffffffff92909216919091179055565b6103776103503660046144f8565b600a6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610231565b60025461021d906001600160a01b031681565b6102e6610c9d565b60035461021d906001600160a01b031681565b6005546006546007546008546103e39392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff166060820152608001610231565b610202610419366004614515565b610d1c565b6005546102e6565b610202610434366004614548565b610d75565b60035461044f90600160a01b900462ffffff1681565b60405162ffffff9091168152602001610231565b610202610471366004614548565b610e8f565b60015461021d906001600160a01b031681565b6102c56104973660046143ff565b610fa2565b6102e6611185565b6103076104b2366004614494565b611266565b6102e660045481565b600b546104d29065ffffffffffff1681565b60405165ffffffffffff9091168152602001610231565b6102e660095481565b6102026105003660046145a7565b611403565b610518610513366004614610565b61150b565b60405161023191906146ce565b610202610533366004614712565b611539565b6102026105463660046145a7565b6117bd565b60035461044f90600160b81b900462ffffff1681565b6105b36040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6000546201000090046001600160a01b031633146105e457604051638597d08b60e01b815260040160405180910390fd5b600080841215906001600160a01b038416900361063757846106245761061f600173fffd8963efd1fc6a506488495d951d5263988d26614740565b610634565b6106346401000276a36001614768565b92505b83825260035461066590829087906101f49062ffffff600160a01b8204811691600160b81b90041687611986565b60408051610100810182526000808252602082018190529181018290526060810182905260c0810182905260e08101829052600a60808201526101f460a082015290546001546001600160a01b036201000090920482169163da047996916106cd9116611a2d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815263ffffffff9190911660048201526024016040805180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190614793565b60e083015260c082015282516003546000918291829161077a916001600160a01b0316908b908a88611a3d611bc4565b86516001600160a01b0390811660a08b0152604080830151821660c08c01526003548b5191517f128acb08000000000000000000000000000000000000000000000000000000008152959850939650919450919091169163128acb089161081e9130918e918d906004016001600160a01b03948516815292151560208401526040830191909152909116606082015260a06080820181905260009082015260c00190565b60408051808303816000875af115801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190614793565b6040880152602087018190528314801561087d5750856040015182145b610889576108896147b7565b50506003546108b8925083915087906101f49062ffffff600160a01b8204811691600160b81b900416876123c2565b8160800151600460008282546108ce91906147cd565b909155506108dc90506124d2565b7f374e2c00db0195ec47718dc83fbed946c07c24c240e8332e547d9b4ac086fd47826040516109639190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b60405180910390a1509392505050565b6000806109a16040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b031633146109d257604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b1215806109f05750620d89e719600283900b125b80610a0c5750610a03620d89e7196147e5565b60020b8160020b135b80610a235750610a1d600a8361481d565b60020b15155b80610a3a5750610a34600a8261481d565b60020b15155b15610a6b5760405163957b5ed560e01b8152600283810b600483015282900b60248201526044015b60405180910390fd5b610a73612675565b610aa48888610a8a896001600160801b0316612739565b600354610a9f906001600160a01b031661279c565b61280d565b6003546040517f3c8a7d8d00000000000000000000000000000000000000000000000000000000815230600482015260028b810b60248301528a900b60448201526001600160801b038916606482015260a06084820152600060a4820181905292955082916001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015610b3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5e9190614793565b909b909a50949850939650505050505050565b610b9c6040518060800160405280600081526020016000815260200160008152602001600081525090565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a919061485c565b505060408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152939550929350610c509250611185915050565b808252600554600654600754610c659361295e565b604082015280518352600954610c8590600a90879087908690869061298e565b60608601526040850152602084015250909392505050565b600080546201000090046001600160a01b03163314610ccf57604051638597d08b60e01b815260040160405180910390fd5b6001600454610cde91906148f4565b60016004556040518181529091507f889bbef14ccbbb6f97773359c9c09396f67ed97695236771816a304ec5d886119060200160405180910390a190565b6000546201000090046001600160a01b03163314610d4d57604051638597d08b60e01b815260040160405180910390fd5b610d7160006001610d65600b5465ffffffffffff1690565b60059291908686612ae6565b5050565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dec919061490b565b6001600160a01b0316336001600160a01b031614610e1d57604051632d5be4cb60e21b815260040160405180910390fd5b600380547fffffffffffff000000ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b62ffffff8416908102919091179091556040519081527f2edf7eef14cb246dab2aac555e300928981632918159d9e33fcaa24dcd38cb40906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ee2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f06919061490b565b6001600160a01b0316336001600160a01b031614610f3757604051632d5be4cb60e21b815260040160405180910390fd5b600380547fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff16600160a01b62ffffff8416908102919091179091556040519081527f5e286c9a939d59334080ddf15517957037c2228384e26bb92a368ce44c531edd90602001610e84565b600080610fd06040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b0316331461100157604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b12158061101f5750620d89e719600283900b125b8061103b5750611032620d89e7196147e5565b60020b8160020b135b80611052575061104c600a8361481d565b60020b15155b806110695750611063600a8261481d565b60020b15155b156110955760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610a62565b61109d612675565b6110bd88886110b4896001600160801b0316612739565b610a8a90614928565b6003546040517fa34123a700000000000000000000000000000000000000000000000000000000815260028b810b60048301528a900b60248201526001600160801b038916604482015291945060009182916001600160a01b03169063a34123a79060640160408051808303816000875af1158015611140573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111649190614793565b915091508196508095506111788a8a612bf7565b5050505093509350939050565b60008054600154829182916001600160a01b036201000090920482169163da047996916111b29116611a2d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815263ffffffff9190911660048201526024016040805180830381865afa15801561120b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122f9190614793565b60055460085492945090925061125f9165ffffffffffff16611258600b5465ffffffffffff1690565b8585612cad565b9250505090565b6112916040518060800160405280600081526020016000815260200160008152602001600081525090565b82828060020b8260020b1215806112af5750620d89e719600283900b125b806112cb57506112c2620d89e7196147e5565b60020b8160020b135b806112e257506112dc600a8361481d565b60020b15155b806112f957506112f3600a8261481d565b60020b15155b156113255760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610a62565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa15801561136f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611393919061485c565b50506040805160808101825260055480825260065460208301526007549282019290925260085465ffffffffffff166060820152908a5260095494965094506113e993600a93508b92508a91508690869061298e565b606088015260408701526020860152509295945050505050565b6003546001600160a01b0316331461142e576040516308458b2b60e21b815260040160405180910390fd5b8215611499576002546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561148057600080fd5b505af1158015611494573d6000803e3d6000fd5b505050505b8315611505576001546040516340c10f1960e01b8152336004820152602481018690526001600160a01b03909116906340c10f19906044015b600060405180830381600087803b1580156114ec57600080fd5b505af1158015611500573d6000803e3d6000fd5b505050505b50505050565b606060208251028201602001602083015b8181101561153157805154815260200161151c565b509192915050565b600054610100900460ff166115545760005460ff1615611558565b303b155b6115e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610a62565b600054610100900460ff16158015611606576000805461ffff19166101011790555b611613602083018361495d565b600080546001600160a01b039290921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055611662604083016020840161495d565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905561169f606083016040840161495d565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03929092169190911790556116dc608083016060840161495d565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039290921691909117905561171960a0830160808401614548565b6003805462ffffff92909216600160a01b027fffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffffff90921691909117905561176560c0830160a08401614548565b600360176101000a81548162ffffff021916908362ffffff1602179055506117a86000600161179b600b5465ffffffffffff1690565b6005929190600180612ae6565b8015610d71576000805461ff00191690555050565b6003546001600160a01b031633146117e8576040516308458b2b60e21b815260040160405180910390fd5b60008413156118ce57600360009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611844573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611868919061490b565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018790529116906340c10f1990604401600060405180830381600087803b1580156118b557600080fd5b505af11580156118c9573d6000803e3d6000fd5b505050505b600083131561150557600360009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561192a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194e919061490b565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018690529116906340c10f19906044016114d2565b85156119e75784156119a557805161199e9085612ccf565b8152611a25565b80516119b49060028585612d12565b608083018190526060830182905282516119da9290916119d3916147cd565b6001612e3d565b80825261199e9085612ccf565b8415611a255780516119fc9060018585612d12565b60808301819052606083018290528251611a22929091611a1b916147cd565b6000612e3d565b81525b505050505050565b600063ffffffff82165b92915050565b60008085611a54578260a001518360800151611a5f565b82608001518360a001515b915091506000611a92611a7183612e81565b60035460009062ffffff600160a01b8204811691600160b81b900416612d12565b50905060008560c001516001600160801b0316118015611ab25750600083115b15611b4a57611b1487611ad657611ac884612e81565b611ad19061497a565b611adf565b611adf84612e81565b8660c001516001600160801b0316611afe600b5465ffffffffffff1690565b60c08a015160e08b015160059493929190612ae6565b60c0850151611b33908290600160801b906001600160801b0316612ec3565b60096000828254611b4491906147cd565b90915550505b83606001516001600160a01b031685604001516001600160a01b031603611bbb57836040015115611bbb57602080850151604080516080810182526005548152600654938101939093526007549083015260085465ffffffffffff166060830152600954611bbb92600a9291612f75565b50505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086600003611c38576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84516001600160a01b0316600003611ccc57886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cac919061485c565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b0316600003611d5257886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d439190614996565b6001600160801b031660608601525b846080015160020b600003611e5857886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc391906149b3565b62ffffff1660a0860152604080517fd0c93a7c00000000000000000000000000000000000000000000000000000000815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015611e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4f91906149d0565b60020b60808601525b87611ea25784600001516001600160a01b0316866001600160a01b03161080611e9d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b611ed3565b84600001516001600160a01b0316866001600160a01b03161180611ed357506401000276a36001600160a01b038716105b15611f15576040517f51b516ae0000000000000000000000000000000000000000000000000000000081526001600160a01b0387166004820152602401610a62565b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b815115801590611fa55750866001600160a01b031682604001516001600160a01b031614155b1561237c576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b03908116825260608401516080890151612012928e1691635339c296918e612ff6565b1515604083015260020b60208201819052620d89e719131561203d57620d89e7196020820152612071565b61204a620d89e7196147e5565b60020b816020015160020b131561207157612068620d89e7196147e5565b60020b60208201525b61207e8160200151613262565b6001600160a01b0316606082015260408301516120f3908b6120b857896001600160a01b031683606001516001600160a01b0316116120d2565b896001600160a01b031683606001516001600160a01b0316105b6120e05782606001516120e2565b895b60c0860151865160a08c015161359e565b60c085015260a084015260808301526001600160a01b03166040840152811561216b576121328160c00151826080015161212d91906147cd565b613790565b835184906121419083906149ed565b90525060a081015161215290613790565b836020015161216191906149ed565b60208401526121b6565b6121788160a00151613790565b83518490612187908390614a2c565b90525060c081015160808201516121a19161212d916147cd565b83602001516121b09190614a2c565b60208401525b60c08301516001600160801b0316156121fe576121e98160c00151600160801b8560c001516001600160801b0316612ec3565b836080018181516121fa91906147cd565b9052505b61220e8a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b03160361233f5780604001511561231257602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa15801561228b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122af9190614a6b565b5050505050509150508a156122ca576122c781614928565b90505b600081600f0b126122ea57808460c001516122e59190614b19565b612302565b6122f381614928565b8460c001516123029190614b3b565b6001600160801b031660c0850152505b89612321578060200151612332565b600181602001516123329190614b5b565b60020b6060840152612376565b80600001516001600160a01b031683604001516001600160a01b0316146123765761236d83604001516137a2565b60020b60608401525b50611f7f565b8015158915151461239d5760208201518251612398908a6149ed565b6123af565b81516123a990896149ed565b82602001515b909b909a50919850909650505050505050565b851561244c57841561241f576123dc816020015185613add565b602082015260408101516123f39060008585612d12565b608083018190526060830182905260408301516124159290916119d3916147cd565b6040820152611a25565b61242d816040015185613add565b60408201819052608082015160608301516124159291611a1b916147cd565b846124955761245f816040015185613add565b604082018190526124739060008585612d12565b60808301819052606083018290526040830151612415929091611a1b916147cd565b6124a3816020015185613add565b60208201526040810151608082015160608301516124c592916119d3916147cd565b6040820152505050505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561251b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253f9190614ba3565b905080156125a657600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561258d57600080fd5b505af11580156125a1573d6000803e3d6000fd5b505050505b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156125ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126139190614ba3565b90508015610d7157600154604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561266157600080fd5b505af1158015611a25573d6000803e3d6000fd5b6000805460015482916001600160a01b036201000090910481169163da047996916126a09116611a2d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815263ffffffff9190911660048201526024016040805180830381865afa1580156126f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061271d9190614793565b91509150610d7160006001610d65600b5465ffffffffffff1690565b60006f80000000000000000000000000000000826001600160801b031610612798576040517f832da39d0000000000000000000000000000000000000000000000000000000081526001600160801b0383166004820152602401610a62565b5090565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156127dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612800919061485c565b5093979650505050505050565b6128386040518060800160405280600081526020016000815260200160008152602001600081525090565b60408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152600954600080600f87900b156128da578351602085015160408601516003546128a893600a938e938c938e939291908b906001600160a01b0316613b04565b8451602086015160408701516003549395506128d793600a938d938c938e938b906001600160a01b0316613b04565b90505b6128e48989611266565b9450600087600f0b121561295257811561292257600289810b6000908152600a60205260408120818155600181018290559182018190556003909101555b801561295257600288810b6000908152600a60205260408120818155600181018290559182018190556003909101555b50505050949350505050565b600061297961296d86846149ed565b8590600160801b613c15565b6129839084614a2c565b90505b949350505050565b600285810b60009081526020889052604080822087840b83529082206001820154825494830154875194958695869594939286926129cf929091859161295e565b90506000846003015490508a60020b8d60020b1315612a1957828a602001516129f891906149ed565b9250818a60400151612a0a91906149ed565b9150612a16818a6148f4565b90505b6001840154845460028601548c51600092612a3892909185919061295e565b90506000866003015490508d60020b8f60020b13612a8157828d60200151612a6091906149ed565b9250818d60400151612a7291906149ed565b9150612a7e818d6148f4565b90505b82868e60200151612a9291906149ed565b612a9c91906149ed565b9a5081858e60400151612aaf91906149ed565b612ab991906149ed565b995080612ac6858e6148f4565b612ad091906148f4565b9850505050505050505096509650969350505050565b6003860154600090612b029065ffffffffffff16858585613c72565b6001880154909150612b1a908290600160801b613ca1565b876002016000828254612b2d9190614a2c565b9091555050865481908890600090612b46908490614a2c565b90915550612b5b905086600160801b87613c15565b876001016000828254612b6e9190614a2c565b909155505060038701805465ffffffffffff861665ffffffffffff199091168117909155604080518954815260018a0154602082015260028a01548183015260608101929092526080820185905260a08201849052517faa55fabd6f264910ebc37d1f213e504b0952aeed471eac51bb24a792cf40ce789181900360c00190a150505050505050565b6003546040517f4f1eb3d8000000000000000000000000000000000000000000000000000000008152306004820152600284810b602483015283900b60448201526001600160801b036064820181905260848201526001600160a01b0390911690634f1eb3d89060a40160408051808303816000875af1158015612c7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ca39190614bbc565b5050610d716124d2565b6000612cbb85858585613c72565b612cc59087614a2c565b9695505050505050565b600080612cdf83620f4240614beb565b60020b612cf162ffffff851686614c07565b612cfb9190614c8e565b612d06906001614a2c565b90506129868185614a2c565b6000806000612d2087613cef565b90506001866002811115612d3657612d36614cbc565b03612d765783612d4986620f4240614beb565b612d539190614beb565b62ffffff16612d6582620f4240614cd2565b612d6f9190614cf1565b9050612dc6565b6002866002811115612d8a57612d8a614cbc565b03612dc65783612d9d86620f4240614d05565b612da79190614d05565b62ffffff16612db982620f4240614cd2565b612dc39190614cf1565b90505b6000620f4240612dd68688614d05565b612de59062ffffff1684614cd2565b612def9190614cf1565b612dfa9060016147cd565b9050620f4240612e0f62ffffff881684614cd2565b612e199190614cf1565b612e249060016147cd565b9350612e3084826148f4565b9250505094509492505050565b600080826001811115612e5257612e52614cbc565b146000851303612e6d57612e668385614a2c565b9050612e7a565b612e7783856149ed565b90505b9392505050565b6000600160ff1b8210612798576040517f8320b7bc00000000000000000000000000000000000000000000000000000000815260048101839052602401610a62565b6000808060001985870985870292508281108382030391505080600003612efc5760008411612ef157600080fd5b508290049050612e7a565b808411612f0857600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600283810b6000908152602086905260408120805460018201549382015486519294612fa39390919061295e565b8451835560018301546020860151919250612fbd916149ed565b60018301556040840151612fd29082906149ed565b60028301556003820154612fe690846148f4565b8260030181905550505050505050565b600080806130048587614d23565b905060008660020b128015613024575061301e858761481d565b60020b15155b15613037578061303381614d5d565b9150505b831561313c5760008061304983613d06565b90925090506000600160ff831681901b9061306490826148f4565b61306e91906147cd565b90506000818c8c866040518263ffffffff1660e01b815260040161309b919060019190910b815260200190565b602060405180830381865afa1580156130b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130dc9190614ba3565b16801515965090508561310657886130f760ff851687614b5b565b6131019190614d80565b613131565b8861311082613d23565b61311a9085614e0d565b6131279060ff1687614b5b565b6131319190614d80565b965050505050613257565b60008061315261314d846001614e30565b613d06565b9092509050600061316a600160ff841681901b6148f4565b1990506000818c8c866040518263ffffffff1660e01b8152600401613198919060019190910b815260200190565b602060405180830381865afa1580156131b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131d99190614ba3565b16801515965090508561321957886131f28460ff614e0d565b60ff16613200876001614e30565b61320a9190614e30565b6132149190614d80565b613250565b888361322483613dc4565b61322e9190614e0d565b60ff1661323c876001614e30565b6132469190614e30565b6132509190614d80565b9650505050505b509550959350505050565b60008060008360020b12613279578260020b613281565b8260020b6000035b9050620d89e88111156132c0576040517f2bc80f3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000816001166000036132d757600160801b6132e9565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561331d576ffff97272373d413259a46990580e213a0260801c5b600482161561333c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561335b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561337a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613399576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156133b8576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156133d7576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156133f7576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613417576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613437576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613457576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613477576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613497576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156134b7576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156134d7576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156134f8576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613518576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613537576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613554576b048a170391f7dc42444e8fa20260801c5b60008460020b131561357557806000198161357157613571614807565b0490505b64010000000081061561358957600161358c565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906136235760006135d78989620f42400362ffffff16620f4240612ec3565b9050826135f0576135eb8c8c8c6001613eae565b6135fd565b6135fd8b8d8c6001613f1e565b955085811061360e578a965061361d565b61361a8c8b8386613fe7565b96505b5061366d565b8161363a576136358b8b8b6000613f1e565b613647565b6136478a8c8b6000613eae565b935083886000031061365b5789955061366d565b61366a8b8a8a60000385614033565b95505b6001600160a01b038a81169087161482156136d05780801561368c5750815b6136a25761369d878d8c6001613f1e565b6136a4565b855b95508080156136b1575081155b6136c7576136c2878d8c6000613eae565b6136c9565b845b945061371a565b8080156136da5750815b6136f0576136eb8c888c6001613eae565b6136f2565b855b95508080156136ff575081155b613715576137108c888c6000613f1e565b613717565b845b94505b8115801561372a57508860000385115b15613736578860000394505b81801561375557508a6001600160a01b0316876001600160a01b031614155b15613764578589039350613781565b61377e868962ffffff168a620f42400362ffffff1661407f565b93505b50505095509550955095915050565b6000600160ff1b821061279857600080fd5b60006401000276a36001600160a01b038316108015906137de575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b613814576040517f4980e1be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106138b557607f810383901c91506138bf565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc5568101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b14613ace57886001600160a01b0316613ab382613262565b6001600160a01b03161115613ac85781613ad0565b80613ad0565b815b9998505050505050505050565b6000620f4240613aed8382614beb565b613afa9060020b85614c07565b612e7a9190614c8e565b600288900b600081815260208b90526040808220905163f30dba9360e01b81526004810193909352909182906001600160a01b0385169063f30dba939060240161010060405180830381865afa158015613b62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b869190614a6b565b5050505050505090506000808a600f0b12613baa57613ba58a83614b19565b613bbd565b613bb38a614928565b613bbd9083614b3b565b6001600160801b0380821615908416801591909114159550909150600003613c05578a60020b8c60020b13613c05578883556001830188905560028301879055600383018690555b5050509998505050505050505050565b60006001818080613c2688856140bf565b94509250613c3487856140bf565b94509150613c4286856140bf565b94509050613c5461212d848484612ec3565b945083613c6757613c648561497a565b94505b505050509392505050565b6000612983613c818686614e77565b65ffffffffffff1662015180613c9a85878282826149ed565b91906140ec565b6000613cae848484613c15565b9050600081128015613cde5750613cde613cc785614129565b613cd085614129565b613cd985614129565b614134565b15612e7a57612e7760001982614a2c565b600080821361279857613d018261497a565b611a37565b600281900b60081d6000613d1c6101008461481d565b9050915091565b6000808211613d3157600080fd5b600160801b8210613d4457608091821c91015b680100000000000000008210613d5c57604091821c91015b6401000000008210613d7057602091821c91015b620100008210613d8257601091821c91015b6101008210613d9357600891821c91015b60108210613da357600491821c91015b60048210613db357600291821c91015b60028210613dbf576001015b919050565b6000808211613dd257600080fd5b5060ff6001600160801b03821615613ded57607f1901613df5565b608082901c91505b67ffffffffffffffff821615613e0e57603f1901613e16565b604082901c91505b63ffffffff821615613e2b57601f1901613e33565b602082901c91505b61ffff821615613e4657600f1901613e4e565b601082901c91505b60ff821615613e605760071901613e68565b600882901c91505b600f821615613e7a5760031901613e82565b600482901c91505b6003821615613e945760011901613e9c565b600282901c91505b6001821615613dbf5760001901919050565b6000836001600160a01b0316856001600160a01b03161115613ece579293925b81613efb57613ef6836001600160801b03168686036001600160a01b0316600160601b612ec3565b612983565b612983836001600160801b03168686036001600160a01b0316600160601b61407f565b6000836001600160a01b0316856001600160a01b03161115613f3e579293925b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b038686038116908716613f7a57600080fd5b83613fb057866001600160a01b0316613f9d8383896001600160a01b0316612ec3565b81613faa57613faa614807565b04613fdc565b613fdc613fc78383896001600160a01b031661407f565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b031611613ffe57600080fd5b6000846001600160801b03161161401457600080fd5b8161402657613ef6858585600161414d565b6129838585856001614233565b600080856001600160a01b03161161404a57600080fd5b6000846001600160801b03161161406057600080fd5b8161407257613ef68585856000614233565b612983858585600061414d565b600061408c848484612ec3565b90506000828061409e5761409e614807565b8486091115612e7a5760001981106140b557600080fd5b6001019392505050565b60008060008412156140de579115916140d78461497a565b91506140e2565b8391505b50815b9250929050565b600061411561212d60008612614102578561410e565b61410e86600019614c07565b8585612ec3565b90506000841215612e7a57612e778161497a565b6000611a3782613cef565b600081838509801561414557600191505b509392505050565b600081156141bf5760006001600160a01b038411156141835761417e84600160601b876001600160801b0316612ec3565b61419a565b61419a6001600160801b038616606086901b614cf1565b90506141b76141b2826001600160a01b0389166147cd565b614335565b915050612986565b60006001600160a01b038411156141ed576141e884600160601b876001600160801b031661407f565b61420a565b61420a606085901b6001600160801b038716808204910615150190565b905080866001600160a01b03161161422157600080fd5b6001600160a01b038616039050612986565b600082600003614244575083612986565b7bffffffffffffffffffffffffffffffff000000000000000000000000606085901b1682156142e8576001600160a01b0386168481029085828161428a5761428a614807565b04036142ba578181018281106142b8576142ae83896001600160a01b03168361407f565b9350505050612986565b505b506141b781856142d36001600160a01b038a1683614cf1565b6142dd91906147cd565b808204910615150190565b6001600160a01b0386168481029085828161430557614305614807565b0414801561431257508082115b61431b57600080fd5b8082036142ae6141b2846001600160a01b038b168461407f565b806001600160a01b0381168114613dbf57600080fd5b60006020828403121561435d57600080fd5b813565ffffffffffff81168114612e7a57600080fd5b801515811461438157600080fd5b50565b6001600160a01b038116811461438157600080fd5b6000806000606084860312156143ae57600080fd5b83356143b981614373565b92506020840135915060408401356143d081614384565b809150509250925092565b8060020b811461438157600080fd5b6001600160801b038116811461438157600080fd5b60008060006060848603121561441457600080fd5b833561441f816143db565b9250602084013561442f816143db565b915060408401356143d0816143ea565b8381526020810183905260c081016129866040830184805182526020810151602083015260408101516040830152606081015160608301525050565b60006020828403121561448d57600080fd5b5035919050565b600080604083850312156144a757600080fd5b82356144b2816143db565b915060208301356144c2816143db565b809150509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101611a37565b60006020828403121561450a57600080fd5b8135612e7a816143db565b6000806040838503121561452857600080fd5b50508035926020909101359150565b62ffffff8116811461438157600080fd5b60006020828403121561455a57600080fd5b8135612e7a81614537565b60008083601f84011261457757600080fd5b50813567ffffffffffffffff81111561458f57600080fd5b6020830191508360208285010111156140e557600080fd5b600080600080606085870312156145bd57600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156145e257600080fd5b6145ee87828801614565565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561462357600080fd5b823567ffffffffffffffff8082111561463b57600080fd5b818501915085601f83011261464f57600080fd5b813581811115614661576146616145fa565b8060051b604051601f19603f83011681018181108582111715614686576146866145fa565b6040529182528482019250838101850191888311156146a457600080fd5b938501935b828510156146c2578435845293850193928501926146a9565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015614706578351835292840192918401916001016146ea565b50909695505050505050565b600060c0828403121561472457600080fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b03838116908316818110156147605761476061472a565b039392505050565b60006001600160a01b0380831681851680830382111561478a5761478a61472a565b01949350505050565b600080604083850312156147a657600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b600082198211156147e0576147e061472a565b500190565b60008160020b627fffff1981036147fe576147fe61472a565b60000392915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b8061483057614830614807565b808360020b0791505092915050565b805161ffff81168114613dbf57600080fd5b8051613dbf81614373565b600080600080600080600060e0888a03121561487757600080fd5b875161488281614384565b6020890151909750614893816143db565b95506148a16040890161483f565b94506148af6060890161483f565b93506148bd6080890161483f565b925060a088015160ff811681146148d357600080fd5b60c08901519092506148e481614373565b8091505092959891949750929550565b6000828210156149065761490661472a565b500390565b60006020828403121561491d57600080fd5b8151612e7a81614384565b600081600f0b7fffffffffffffffffffffffffffffffff8000000000000000000000000000000081036147fe576147fe61472a565b60006020828403121561496f57600080fd5b8135612e7a81614384565b6000600160ff1b820361498f5761498f61472a565b5060000390565b6000602082840312156149a857600080fd5b8151612e7a816143ea565b6000602082840312156149c557600080fd5b8151612e7a81614537565b6000602082840312156149e257600080fd5b8151612e7a816143db565b600080831283600160ff1b01831281151615614a0b57614a0b61472a565b836001600160ff1b03018313811615614a2657614a2661472a565b50500390565b6000808212826001600160ff1b0303841381151615614a4d57614a4d61472a565b82600160ff1b038412811615614a6557614a6561472a565b50500190565b600080600080600080600080610100898b031215614a8857600080fd5b8851614a93816143ea565b80985050602089015180600f0b8114614aab57600080fd5b80975050604089015195506060890151945060808901518060060b8114614ad157600080fd5b60a08a0151909450614ae281614384565b60c08a015190935063ffffffff81168114614afc57600080fd5b9150614b0a60e08a01614851565b90509295985092959890939650565b60006001600160801b0380831681851680830382111561478a5761478a61472a565b60006001600160801b03838116908316818110156147605761476061472a565b60008160020b8360020b6000811281627fffff1901831281151615614b8257614b8261472a565b81627fffff018313811615614b9957614b9961472a565b5090039392505050565b600060208284031215614bb557600080fd5b5051919050565b60008060408385031215614bcf57600080fd5b8251614bda816143ea565b60208401519092506144c2816143ea565b600062ffffff838116908316818110156147605761476061472a565b60006001600160ff1b03600084136000841385830485118282161615614c2f57614c2f61472a565b600160ff1b6000871286820588128184161615614c4e57614c4e61472a565b60008712925087820587128484161615614c6a57614c6a61472a565b87850587128184161615614c8057614c8061472a565b505050929093029392505050565b600082614c9d57614c9d614807565b600160ff1b821460001984141615614cb757614cb761472a565b500590565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615614cec57614cec61472a565b500290565b600082614d0057614d00614807565b500490565b600062ffffff80831681851680830382111561478a5761478a61472a565b60008160020b8360020b80614d3a57614d3a614807565b627fffff19821460001982141615614d5457614d5461472a565b90059392505050565b60008160020b627fffff198103614d7657614d7661472a565b6000190192915050565b60008160020b8360020b627fffff600082136000841383830485118282161615614dac57614dac61472a565b627fffff196000851282811687830587121615614dcb57614dcb61472a565b60008712925085820587128484161615614de757614de761472a565b85850587128184161615614dfd57614dfd61472a565b5050509290910295945050505050565b600060ff821660ff841680821015614e2757614e2761472a565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615614e5657614e5661472a565b82627fffff19038212811615614e6e57614e6e61472a565b50019392505050565b600065ffffffffffff838116908316818110156147605761476061472a56fea2646970667358221220d4cd6057c1b3e968b82ad8cd4a201d99bf8e191991d7e9ba7a5703e6f40a495664736f6c634300080d0033';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'VPoolWrapperMockRealistic';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }
  static readonly contractName: 'VPoolWrapperMockRealistic';
  public readonly contractName: 'VPoolWrapperMockRealistic';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
