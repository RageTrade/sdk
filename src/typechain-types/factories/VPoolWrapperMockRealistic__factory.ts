/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VPoolWrapperMockRealistic,
  VPoolWrapperMockRealisticInterface,
} from '../VPoolWrapperMockRealistic';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'InvalidTicks',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotClearingHouse',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotGovernance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotUniswapV3Pool',
    type: 'error',
  },
  {
    inputs: [],
    name: 'R',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint128',
        name: 'value',
        type: 'uint128',
      },
    ],
    name: 'SafeCast_Int128Overflow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCast_Int256Overflow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'AccruedProtocolFeeCollected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'liquidityFeePips',
        type: 'uint24',
      },
    ],
    name: 'LiquidityFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        indexed: false,
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint24',
        name: 'protocolFeePips',
        type: 'uint24',
      },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        indexed: false,
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IClearingHouse',
            name: 'clearingHouse',
            type: 'address',
          },
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IVQuote',
            name: 'vQuote',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'uint24',
            name: 'liquidityFeePips',
            type: 'uint24',
          },
          {
            internalType: 'uint24',
            name: 'protocolFeePips',
            type: 'uint24',
          },
        ],
        internalType: 'struct IVPoolWrapper.InitializeVPoolWrapperParams',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: '__initialize_VPoolWrapper',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'accruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockTimestamp',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'burn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clearingHouse',
    outputs: [
      {
        internalType: 'contract IClearingHouse',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'collectAccruedProtocolFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accruedProtocolFeeLast',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getExtrapolatedSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getExtrapolatedValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSumAX128',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'getValuesInside',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'liquidityFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vTokenPrincipal',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuotePrincipal',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBInsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpInsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeInsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVPoolWrapper.WrapperValuesInside',
        name: 'wrapperValuesInside',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeePips',
    outputs: [
      {
        internalType: 'uint24',
        name: '',
        type: 'uint24',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setBlockTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'timestamp',
        type: 'uint48',
      },
    ],
    name: 'setFpGlobalLastTimestamp',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'liquidityFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setLiquidityFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint24',
        name: 'protocolFeePips_',
        type: 'uint24',
      },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'swapVTokenForVQuote',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'swap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vQuoteIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96End',
            type: 'uint160',
          },
        ],
        internalType: 'struct IVPoolWrapper.SwapResult',
        name: 'swapResult',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'vTokenAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vQuoteAmount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3MintCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'amount0Delta',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1Delta',
        type: 'int256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'uniswapV3SwapCallback',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    name: 'updateGlobalFundingState',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vQuote',
    outputs: [
      {
        internalType: 'contract IVQuote',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vToken',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506008805465ffffffffffff19169055614c0d8061002f6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637feedaa111610104578063acfd7928116100a2578063dbd035ff11610071578063dbd035ff146104ad578063dee4c1a6146104cd578063fa461e33146104e0578063fca6fbf2146104f357600080fd5b8063acfd79281461045f578063adb6183214610468578063c04b98c414610491578063d34879971461049a57600080fd5b80639bb1a99c116100de5780639bb1a99c1461041e578063a34123a714610431578063a3a1e7e914610444578063a3c35e2c1461044c57600080fd5b80637feedaa1146103ce57806386c8e9a7146103e15780638b1e97811461040b57600080fd5b806348aaa8c0116101715780636719578c1161014b5780636719578c1461035a5780636c5443351461036d5780636d87989a146103b35780637779815c146103c657600080fd5b806348aaa8c0146102ea5780634bc36bd61461033f5780635e622abc1461035257600080fd5b80631dce5fcf116101ad5780631dce5fcf1461025a5780631e2eaeaf1461027c5780632a99a7921461029c5780632ad4f84b146102bc57600080fd5b806309e54e31146101d45780630af9680014610204578063195cd92c1461023a575b600080fd5b6102026101e2366004614043565b6008805465ffffffffffff191665ffffffffffff92909216919091179055565b005b60005461021d906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61024d610248366004614091565b610509565b60405161023191906140d3565b61026d61026836600461414f565b610892565b6040516102319392919061418f565b61028e61028a3660046141cb565b5490565b604051908152602001610231565b6102af6102aa3660046141e4565b610a77565b604051610231919061421d565b6102026102ca366004614043565b600b805465ffffffffffff191665ffffffffffff92909216919091179055565b61031f6102f8366004614248565b600a6020526000908152604090208054600182015460028301546003909301549192909184565b604080519485526020850193909352918301526060820152608001610231565b60025461021d906001600160a01b031681565b61028e610ba3565b60035461021d906001600160a01b031681565b60055460065460075460085461038b9392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff166060820152608001610231565b6102026103c1366004614265565b610c22565b60055461028e565b6102026103dc366004614298565b610c7b565b6003546103f790600160a01b900462ffffff1681565b60405162ffffff9091168152602001610231565b610202610419366004614298565b610d7c565b60015461021d906001600160a01b031681565b61026d61043f36600461414f565b610e76565b61028e611040565b6102af61045a3660046141e4565b611109565b61028e60045481565b600b5461047a9065ffffffffffff1681565b60405165ffffffffffff9091168152602001610231565b61028e60095481565b6102026104a83660046142f7565b6112a6565b6104c06104bb366004614360565b6113ae565b604051610231919061441e565b6102026104db366004614462565b6113dc565b6102026104ee3660046142f7565b6115e1565b6003546103f790600160b81b900462ffffff1681565b61055b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6000546201000090046001600160a01b0316331461058c57604051638597d08b60e01b815260040160405180910390fd5b600080841215906001600160a01b03841690036105df57846105cc576105c7600173fffd8963efd1fc6a506488495d951d5263988d26614490565b6105dc565b6105dc6401000276a360016144b8565b92505b83825260035461060d90829087906101f49062ffffff600160a01b8204811691600160b81b900416876117aa565b60408051610100810182526000808252602082018190529181018290526060810182905260c0810182905260e08101829052600a60808201526101f460a082015290546001546001600160a01b036201000090920482169163da047996916106759116611851565b6040516001600160e01b031960e084901b16815263ffffffff9190911660048201526024016040805180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da91906144e3565b60e083015260c082015282516003546000918291829161070a916001600160a01b0316908b908a886118616119e8565b86516001600160a01b0390811660a08b0152604080830151821660c08c01526003548b519151630251596160e31b8152959850939650919450919091169163128acb08916107959130918e918d906004016001600160a01b03948516815292151560208401526040830191909152909116606082015260a06080820181905260009082015260c00190565b60408051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d791906144e3565b604088015260208701819052831480156107f45750856040015182145b61080057610800614507565b505060035461082f925083915087906101f49062ffffff600160a01b8204811691600160b81b9004168761219b565b816080015160046000828254610845919061451d565b9091555061085390506122ab565b7f374e2c00db0195ec47718dc83fbed946c07c24c240e8332e547d9b4ac086fd478260405161088291906140d3565b60405180910390a1509392505050565b6000806108c06040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b031633146108f157604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b12158061090f5750620d89e719600283900b125b8061092b5750610922620d89e719614535565b60020b8160020b135b80610942575061093c600a8361456d565b60020b15155b806109595750610953600a8261456d565b60020b15155b1561098a5760405163957b5ed560e01b8152600283810b600483015282900b60248201526044015b60405180910390fd5b61099261244e565b6109c388886109a9896001600160801b03166124fa565b6003546109be906001600160a01b0316612538565b6125a9565b600354604051633c8a7d8d60e01b815230600482015260028b810b60248301528a900b60448201526001600160801b038916606482015260a06084820152600060a4820181905292955082916001600160a01b031690633c8a7d8d9060c40160408051808303816000875af1158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6491906144e3565b909b909a50949850939650505050505050565b610aa26040518060800160405280600081526020016000815260200160008152602001600081525090565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015610aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1091906145ac565b505060408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152939550929350610b569250611040915050565b808252600554600654600754610b6b936126fa565b604082015280518352600954610b8b90600a90879087908690869061272a565b60608601526040850152602084015250909392505050565b600080546201000090046001600160a01b03163314610bd557604051638597d08b60e01b815260040160405180910390fd5b6001600454610be49190614644565b60016004556040518181529091507f889bbef14ccbbb6f97773359c9c09396f67ed97695236771816a304ec5d886119060200160405180910390a190565b6000546201000090046001600160a01b03163314610c5357604051638597d08b60e01b815260040160405180910390fd5b610c7760006001610c6b600b5465ffffffffffff1690565b60059291908686612882565b5050565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf2919061465b565b6001600160a01b0316336001600160a01b031614610d2357604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60b81b1916600160b81b62ffffff8416908102919091179091556040519081527f2edf7eef14cb246dab2aac555e300928981632918159d9e33fcaa24dcd38cb40906020015b60405180910390a150565b600060029054906101000a90046001600160a01b03166001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df3919061465b565b6001600160a01b0316336001600160a01b031614610e2457604051632d5be4cb60e21b815260040160405180910390fd5b6003805462ffffff60a01b1916600160a01b62ffffff8416908102919091179091556040519081527f5e286c9a939d59334080ddf15517957037c2228384e26bb92a368ce44c531edd90602001610d71565b600080610ea46040518060800160405280600081526020016000815260200160008152602001600081525090565b6000546201000090046001600160a01b03163314610ed557604051638597d08b60e01b815260040160405180910390fd5b85858060020b8260020b121580610ef35750620d89e719600283900b125b80610f0f5750610f06620d89e719614535565b60020b8160020b135b80610f265750610f20600a8361456d565b60020b15155b80610f3d5750610f37600a8261456d565b60020b15155b15610f695760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610981565b610f7161244e565b610f918888610f88896001600160801b03166124fa565b6109a990614678565b60035460405163a34123a760e01b815260028b810b60048301528a900b60248201526001600160801b038916604482015291945060009182916001600160a01b03169063a34123a79060640160408051808303816000875af1158015610ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101f91906144e3565b915091508196508095506110338a8a612993565b5050505093509350939050565b60008054600154829182916001600160a01b036201000090920482169163da0479969161106d9116611851565b6040516001600160e01b031960e084901b16815263ffffffff9190911660048201526024016040805180830381865afa1580156110ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d291906144e3565b6005546008549294509092506111029165ffffffffffff166110fb600b5465ffffffffffff1690565b8585612a30565b9250505090565b6111346040518060800160405280600081526020016000815260200160008152602001600081525090565b82828060020b8260020b1215806111525750620d89e719600283900b125b8061116e5750611165620d89e719614535565b60020b8160020b135b80611185575061117f600a8361456d565b60020b15155b8061119c5750611196600a8261456d565b60020b15155b156111c85760405163957b5ed560e01b8152600283810b600483015282900b6024820152604401610981565b60035460408051633850c7bd60e01b815290516000926001600160a01b031691633850c7bd9160048083019260e09291908290030181865afa158015611212573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123691906145ac565b50506040805160808101825260055480825260065460208301526007549282019290925260085465ffffffffffff166060820152908a52600954949650945061128c93600a93508b92508a91508690869061272a565b606088015260408701526020860152509295945050505050565b6003546001600160a01b031633146112d1576040516308458b2b60e21b815260040160405180910390fd5b821561133c576002546040516340c10f1960e01b8152336004820152602481018590526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561132357600080fd5b505af1158015611337573d6000803e3d6000fd5b505050505b83156113a8576001546040516340c10f1960e01b8152336004820152602481018690526001600160a01b03909116906340c10f19906044015b600060405180830381600087803b15801561138f57600080fd5b505af11580156113a3573d6000803e3d6000fd5b505050505b50505050565b606060208251028201602001602083015b818110156113d45780515481526020016113bf565b509192915050565b600054610100900460ff166113f75760005460ff16156113fb565b303b155b61145e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610981565b600054610100900460ff16158015611480576000805461ffff19166101011790555b61148d602083018361469e565b600080546001600160a01b0392909216620100000262010000600160b01b03199092169190911790556114c6604083016020840161469e565b600180546001600160a01b0319166001600160a01b03929092169190911790556114f6606083016040840161469e565b600280546001600160a01b0319166001600160a01b0392909216919091179055611526608083016060840161469e565b600380546001600160a01b0319166001600160a01b039290921691909117905561155660a0830160808401614298565b6003805462ffffff92909216600160a01b0262ffffff60a01b1990921691909117905561158960c0830160a08401614298565b600360176101000a81548162ffffff021916908362ffffff1602179055506115cc600060016115bf600b5465ffffffffffff1690565b6005929190600180612882565b8015610c77576000805461ff00191690555050565b6003546001600160a01b0316331461160c576040516308458b2b60e21b815260040160405180910390fd5b60008413156116f257600360009054906101000a90046001600160a01b03166001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168c919061465b565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018790529116906340c10f1990604401600060405180830381600087803b1580156116d957600080fd5b505af11580156116ed573d6000803e3d6000fd5b505050505b60008313156113a857600360009054906101000a90046001600160a01b03166001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561174e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611772919061465b565b6003546040516340c10f1960e01b81526001600160a01b039182166004820152602481018690529116906340c10f1990604401611375565b851561180b5784156117c95780516117c29085612a52565b8152611849565b80516117d89060028585612a95565b608083018190526060830182905282516117fe9290916117f79161451d565b6001612bc0565b8082526117c29085612a52565b84156118495780516118209060018585612a95565b6080830181905260608301829052825161184692909161183f9161451d565b6000612bc0565b81525b505050505050565b600063ffffffff82165b92915050565b60008085611878578260a001518360800151611883565b82608001518360a001515b9150915060006118b661189583612c04565b60035460009062ffffff600160a01b8204811691600160b81b900416612a95565b50905060008560c001516001600160801b03161180156118d65750600083115b1561196e57611938876118fa576118ec84612c04565b6118f5906146bb565b611903565b61190384612c04565b8660c001516001600160801b0316611922600b5465ffffffffffff1690565b60c08a015160e08b015160059493929190612882565b60c0850151611957908290600160801b906001600160801b0316612c2d565b60096000828254611968919061451d565b90915550505b83606001516001600160a01b031685604001516001600160a01b0316036119df578360400151156119df57602080850151604080516080810182526005548152600654938101939093526007549083015260085465ffffffffffff1660608301526009546119df92600a9291612cdf565b50505050505050565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c08101829052819086600003611a4357604051631f2a200560e01b815260040160405180910390fd5b84516001600160a01b0316600003611ad757886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab791906145ac565b5060ff1660408b015250505060020b60208701526001600160a01b031685525b84606001516001600160801b0316600003611b5d57886001600160a01b0316631a6865026040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b4e91906146d7565b6001600160801b031660608601525b846080015160020b600003611c4a57886001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bce91906146f4565b62ffffff1660a0860152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015611c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c419190614711565b60020b60808601525b87611c945784600001516001600160a01b0316866001600160a01b03161080611c8f575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716115b611cc5565b84600001516001600160a01b0316866001600160a01b03161180611cc557506401000276a36001600160a01b038716105b15611cee576040516328da8b5760e11b81526001600160a01b0387166004820152602401610981565b600080881390506040518060e001604052808981526020016000815260200187600001516001600160a01b03168152602001876020015160020b81526020016000815260200160006001600160801b0316815260200187606001516001600160801b031681525091505b815115801590611d7e5750866001600160a01b031682604001516001600160a01b031614155b15612155576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408301516001600160a01b03908116825260608401516080890151611deb928e1691635339c296918e612d60565b1515604083015260020b60208201819052620d89e7191315611e1657620d89e7196020820152611e4a565b611e23620d89e719614535565b60020b816020015160020b1315611e4a57611e41620d89e719614535565b60020b60208201525b611e578160200151612fcc565b6001600160a01b031660608201526040830151611ecc908b611e9157896001600160a01b031683606001516001600160a01b031611611eab565b896001600160a01b031683606001516001600160a01b0316105b611eb9578260600151611ebb565b895b60c0860151865160a08c01516132ef565b60c085015260a084015260808301526001600160a01b031660408401528115611f4457611f0b8160c001518260800151611f06919061451d565b6134e1565b83518490611f1a90839061472e565b90525060a0810151611f2b906134e1565b8360200151611f3a919061472e565b6020840152611f8f565b611f518160a001516134e1565b83518490611f6090839061476d565b90525060c08101516080820151611f7a91611f069161451d565b8360200151611f89919061476d565b60208401525b60c08301516001600160801b031615611fd757611fc28160c00151600160801b8560c001516001600160801b0316612c2d565b83608001818151611fd3919061451d565b9052505b611fe78a8885848a63ffffffff16565b80606001516001600160a01b031683604001516001600160a01b031603612118578060400151156120eb57602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038d169063f30dba939060240161010060405180830381865afa158015612064573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208891906147ae565b5050505050509150508a156120a3576120a081614678565b90505b600081600f0b126120c357808460c001516120be919061485c565b6120db565b6120cc81614678565b8460c001516120db919061487e565b6001600160801b031660c0850152505b896120fa57806020015161210b565b6001816020015161210b919061489e565b60020b606084015261214f565b80600001516001600160a01b031683604001516001600160a01b03161461214f5761214683604001516134f3565b60020b60608401525b50611d58565b801515891515146121765760208201518251612171908a61472e565b612188565b8151612182908961472e565b82602001515b909b909a50919850909650505050505050565b85156122255784156121f8576121b58160200151856137f9565b602082015260408101516121cc9060008585612a95565b608083018190526060830182905260408301516121ee9290916117f79161451d565b6040820152611849565b6122068160400151856137f9565b60408201819052608082015160608301516121ee929161183f9161451d565b8461226e576122388160400151856137f9565b6040820181905261224c9060008585612a95565b608083018190526060830182905260408301516121ee92909161183f9161451d565b61227c8160200151856137f9565b602082015260408101516080820151606083015161229e92916117f79161451d565b6040820152505050505050565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156122f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231891906148e6565b9050801561237f57600254604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561236657600080fd5b505af115801561237a573d6000803e3d6000fd5b505050505b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156123c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ec91906148e6565b90508015610c7757600154604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b15801561243a57600080fd5b505af1158015611849573d6000803e3d6000fd5b6000805460015482916001600160a01b036201000090910481169163da047996916124799116611851565b6040516001600160e01b031960e084901b16815263ffffffff9190911660048201526024016040805180830381865afa1580156124ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124de91906144e3565b91509150610c7760006001610c6b600b5465ffffffffffff1690565b60006001607f1b826001600160801b0316106125345760405163832da39d60e01b81526001600160801b0383166004820152602401610981565b5090565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259c91906145ac565b5093979650505050505050565b6125d46040518060800160405280600081526020016000815260200160008152602001600081525090565b60408051608081018252600554815260065460208201526007549181019190915260085465ffffffffffff166060820152600954600080600f87900b156126765783516020850151604086015160035461264493600a938e938c938e939291908b906001600160a01b0316613820565b84516020860151604087015160035493955061267393600a938d938c938e938b906001600160a01b0316613820565b90505b6126808989611109565b9450600087600f0b12156126ee5781156126be57600289810b6000908152600a60205260408120818155600181018290559182018190556003909101555b80156126ee57600288810b6000908152600a60205260408120818155600181018290559182018190556003909101555b50505050949350505050565b6000612715612709868461472e565b8590600160801b613931565b61271f908461476d565b90505b949350505050565b600285810b60009081526020889052604080822087840b835290822060018201548254948301548751949586958695949392869261276b92909185916126fa565b90506000846003015490508a60020b8d60020b13156127b557828a60200151612794919061472e565b9250818a604001516127a6919061472e565b91506127b2818a614644565b90505b6001840154845460028601548c516000926127d49290918591906126fa565b90506000866003015490508d60020b8f60020b1361281d57828d602001516127fc919061472e565b9250818d6040015161280e919061472e565b915061281a818d614644565b90505b82868e6020015161282e919061472e565b612838919061472e565b9a5081858e6040015161284b919061472e565b612855919061472e565b995080612862858e614644565b61286c9190614644565b9850505050505050505096509650969350505050565b600386015460009061289e9065ffffffffffff1685858561398e565b60018801549091506128b6908290600160801b6139bd565b8760020160008282546128c9919061476d565b90915550508654819088906000906128e290849061476d565b909155506128f7905086600160801b87613931565b87600101600082825461290a919061476d565b909155505060038701805465ffffffffffff861665ffffffffffff199091168117909155604080518954815260018a0154602082015260028a01548183015260608101929092526080820185905260a08201849052517faa55fabd6f264910ebc37d1f213e504b0952aeed471eac51bb24a792cf40ce789181900360c00190a150505050505050565b6003546040516309e3d67b60e31b8152306004820152600284810b602483015283900b60448201526001600160801b036064820181905260848201526001600160a01b0390911690634f1eb3d89060a40160408051808303816000875af1158015612a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2691906148ff565b5050610c776122ab565b6000612a3e8585858561398e565b612a48908761476d565b9695505050505050565b600080612a6283620f424061492e565b60020b612a7462ffffff85168661494a565b612a7e91906149cf565b612a8990600161476d565b9050612722818561476d565b6000806000612aa387613a0b565b90506001866002811115612ab957612ab96149fd565b03612af95783612acc86620f424061492e565b612ad6919061492e565b62ffffff16612ae882620f4240614a13565b612af29190614a32565b9050612b49565b6002866002811115612b0d57612b0d6149fd565b03612b495783612b2086620f4240614a46565b612b2a9190614a46565b62ffffff16612b3c82620f4240614a13565b612b469190614a32565b90505b6000620f4240612b598688614a46565b612b689062ffffff1684614a13565b612b729190614a32565b612b7d90600161451d565b9050620f4240612b9262ffffff881684614a13565b612b9c9190614a32565b612ba790600161451d565b9350612bb38482614644565b9250505094509492505050565b600080826001811115612bd557612bd56149fd565b146000851303612bf057612be9838561476d565b9050612bfd565b612bfa838561472e565b90505b9392505050565b6000600160ff1b8210612534576040516320c82def60e21b815260048101839052602401610981565b6000808060001985870985870292508281108382030391505080600003612c665760008411612c5b57600080fd5b508290049050612bfd565b808411612c7257600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600283810b6000908152602086905260408120805460018201549382015486519294612d0d939091906126fa565b8451835560018301546020860151919250612d279161472e565b60018301556040840151612d3c90829061472e565b60028301556003820154612d509084614644565b8260030181905550505050505050565b60008080612d6e8587614a64565b905060008660020b128015612d8e5750612d88858761456d565b60020b15155b15612da15780612d9d81614a9e565b9150505b8315612ea657600080612db383613a22565b90925090506000600160ff831681901b90612dce9082614644565b612dd8919061451d565b90506000818c8c866040518263ffffffff1660e01b8152600401612e05919060019190910b815260200190565b602060405180830381865afa158015612e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e4691906148e6565b168015159650905085612e705788612e6160ff85168761489e565b612e6b9190614ac1565b612e9b565b88612e7a82613a3f565b612e849085614b4e565b612e919060ff168761489e565b612e9b9190614ac1565b965050505050612fc1565b600080612ebc612eb7846001614b71565b613a22565b90925090506000612ed4600160ff841681901b614644565b1990506000818c8c866040518263ffffffff1660e01b8152600401612f02919060019190910b815260200190565b602060405180830381865afa158015612f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f4391906148e6565b168015159650905085612f835788612f5c8460ff614b4e565b60ff16612f6a876001614b71565b612f749190614b71565b612f7e9190614ac1565b612fba565b8883612f8e83613ae0565b612f989190614b4e565b60ff16612fa6876001614b71565b612fb09190614b71565b612fba9190614ac1565b9650505050505b509550959350505050565b60008060008360020b12612fe3578260020b612feb565b8260020b6000035b9050620d89e8811115613011576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361302857600160801b61303a565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561306e576ffff97272373d413259a46990580e213a0260801c5b600482161561308d576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156130ac576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156130cb576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156130ea576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613109576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613128576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613148576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613168576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613188576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156131a8576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156131c8576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156131e8576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613208576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613228576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613249576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613269576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613288576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156132a5576b048a170391f7dc42444e8fa20260801c5b60008460020b13156132c65780600019816132c2576132c2614557565b0490505b6401000000008106156132da5760016132dd565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a1610158187128015906133745760006133288989620f42400362ffffff16620f4240612c2d565b9050826133415761333c8c8c8c6001613bca565b61334e565b61334e8b8d8c6001613c3a565b955085811061335f578a965061336e565b61336b8c8b8386613cf1565b96505b506133be565b8161338b576133868b8b8b6000613c3a565b613398565b6133988a8c8b6000613bca565b93508388600003106133ac578995506133be565b6133bb8b8a8a60000385613d3d565b95505b6001600160a01b038a8116908716148215613421578080156133dd5750815b6133f3576133ee878d8c6001613c3a565b6133f5565b855b9550808015613402575081155b61341857613413878d8c6000613bca565b61341a565b845b945061346b565b80801561342b5750815b6134415761343c8c888c6001613bca565b613443565b855b9550808015613450575081155b613466576134618c888c6000613c3a565b613468565b845b94505b8115801561347b57508860000385115b15613487578860000394505b8180156134a657508a6001600160a01b0316876001600160a01b031614155b156134b55785890393506134d2565b6134cf868962ffffff168a620f42400362ffffff16613d89565b93505b50505095509550955095915050565b6000600160ff1b821061253457600080fd5b60006401000276a36001600160a01b0383161080159061352f575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b61354c576040516324c070df60e11b815260040160405180910390fd5b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106135e057607f810383901c91506135ea565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b146137ea57886001600160a01b03166137cf82612fcc565b6001600160a01b031611156137e457816137ec565b806137ec565b815b9998505050505050505050565b6000620f4240613809838261492e565b6138169060020b8561494a565b612bfd91906149cf565b600288900b600081815260208b90526040808220905163f30dba9360e01b81526004810193909352909182906001600160a01b0385169063f30dba939060240161010060405180830381865afa15801561387e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138a291906147ae565b5050505050505090506000808a600f0b126138c6576138c18a8361485c565b6138d9565b6138cf8a614678565b6138d9908361487e565b6001600160801b0380821615908416801591909114159550909150600003613921578a60020b8c60020b13613921578883556001830188905560028301879055600383018690555b5050509998505050505050505050565b600060018180806139428885613dc9565b945092506139508785613dc9565b9450915061395e8685613dc9565b94509050613970611f06848484612c2d565b94508361398357613980856146bb565b94505b505050509392505050565b600061271f61399d8686614bb8565b65ffffffffffff16620151806139b6858782828261472e565b9190613df6565b60006139ca848484613931565b90506000811280156139fa57506139fa6139e385613e33565b6139ec85613e33565b6139f585613e33565b613e3e565b15612bfd57612bfa6000198261476d565b600080821361253457613a1d826146bb565b61185b565b600281900b60081d6000613a386101008461456d565b9050915091565b6000808211613a4d57600080fd5b600160801b8210613a6057608091821c91015b680100000000000000008210613a7857604091821c91015b6401000000008210613a8c57602091821c91015b620100008210613a9e57601091821c91015b6101008210613aaf57600891821c91015b60108210613abf57600491821c91015b60048210613acf57600291821c91015b60028210613adb576001015b919050565b6000808211613aee57600080fd5b5060ff6001600160801b03821615613b0957607f1901613b11565b608082901c91505b67ffffffffffffffff821615613b2a57603f1901613b32565b604082901c91505b63ffffffff821615613b4757601f1901613b4f565b602082901c91505b61ffff821615613b6257600f1901613b6a565b601082901c91505b60ff821615613b7c5760071901613b84565b600882901c91505b600f821615613b965760031901613b9e565b600482901c91505b6003821615613bb05760011901613bb8565b600282901c91505b6001821615613adb5760001901919050565b6000836001600160a01b0316856001600160a01b03161115613bea579293925b81613c1757613c12836001600160801b03168686036001600160a01b0316600160601b612c2d565b61271f565b61271f836001600160801b03168686036001600160a01b0316600160601b613d89565b6000836001600160a01b0316856001600160a01b03161115613c5a579293925b600160601b600160e01b03606084901b166001600160a01b038686038116908716613c8457600080fd5b83613cba57866001600160a01b0316613ca78383896001600160a01b0316612c2d565b81613cb457613cb4614557565b04613ce6565b613ce6613cd18383896001600160a01b0316613d89565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b031611613d0857600080fd5b6000846001600160801b031611613d1e57600080fd5b81613d3057613c128585856001613e57565b61271f8585856001613f3d565b600080856001600160a01b031611613d5457600080fd5b6000846001600160801b031611613d6a57600080fd5b81613d7c57613c128585856000613f3d565b61271f8585856000613e57565b6000613d96848484612c2d565b905060008280613da857613da8614557565b8486091115612bfd576000198110613dbf57600080fd5b6001019392505050565b6000806000841215613de857911591613de1846146bb565b9150613dec565b8391505b50815b9250929050565b6000613e1f611f0660008612613e0c5785613e18565b613e188660001961494a565b8585612c2d565b90506000841215612bfd57612bfa816146bb565b600061185b82613a0b565b6000818385098015613e4f57600191505b509392505050565b60008115613ec95760006001600160a01b03841115613e8d57613e8884600160601b876001600160801b0316612c2d565b613ea4565b613ea46001600160801b038616606086901b614a32565b9050613ec1613ebc826001600160a01b03891661451d565b61402d565b915050612722565b60006001600160a01b03841115613ef757613ef284600160601b876001600160801b0316613d89565b613f14565b613f14606085901b6001600160801b038716808204910615150190565b905080866001600160a01b031611613f2b57600080fd5b6001600160a01b038616039050612722565b600082600003613f4e575083612722565b600160601b600160e01b03606085901b168215613fe0576001600160a01b03861684810290858281613f8257613f82614557565b0403613fb257818101828110613fb057613fa683896001600160a01b031683613d89565b9350505050612722565b505b50613ec18185613fcb6001600160a01b038a1683614a32565b613fd5919061451d565b808204910615150190565b6001600160a01b03861684810290858281613ffd57613ffd614557565b0414801561400a57508082115b61401357600080fd5b808203613fa6613ebc846001600160a01b038b1684613d89565b806001600160a01b0381168114613adb57600080fd5b60006020828403121561405557600080fd5b813565ffffffffffff81168114612bfd57600080fd5b801515811461407957600080fd5b50565b6001600160a01b038116811461407957600080fd5b6000806000606084860312156140a657600080fd5b83356140b18161406b565b92506020840135915060408401356140c88161407c565b809150509250925092565b815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301516001600160a01b039081169183019190915260c092830151169181019190915260e00190565b8060020b811461407957600080fd5b6001600160801b038116811461407957600080fd5b60008060006060848603121561416457600080fd5b833561416f8161412b565b9250602084013561417f8161412b565b915060408401356140c88161413a565b8381526020810183905260c081016127226040830184805182526020810151602083015260408101516040830152606081015160608301525050565b6000602082840312156141dd57600080fd5b5035919050565b600080604083850312156141f757600080fd5b82356142028161412b565b915060208301356142128161412b565b809150509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161185b565b60006020828403121561425a57600080fd5b8135612bfd8161412b565b6000806040838503121561427857600080fd5b50508035926020909101359150565b62ffffff8116811461407957600080fd5b6000602082840312156142aa57600080fd5b8135612bfd81614287565b60008083601f8401126142c757600080fd5b50813567ffffffffffffffff8111156142df57600080fd5b602083019150836020828501011115613def57600080fd5b6000806000806060858703121561430d57600080fd5b8435935060208501359250604085013567ffffffffffffffff81111561433257600080fd5b61433e878288016142b5565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561437357600080fd5b823567ffffffffffffffff8082111561438b57600080fd5b818501915085601f83011261439f57600080fd5b8135818111156143b1576143b161434a565b8060051b604051601f19603f830116810181811085821117156143d6576143d661434a565b6040529182528482019250838101850191888311156143f457600080fd5b938501935b82851015614412578435845293850193928501926143f9565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156144565783518352928401929184019160010161443a565b50909695505050505050565b600060c0828403121561447457600080fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b03838116908316818110156144b0576144b061447a565b039392505050565b60006001600160a01b038281168482168083038211156144da576144da61447a565b01949350505050565b600080604083850312156144f657600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b600082198211156145305761453061447a565b500190565b60008160020b627fffff19810361454e5761454e61447a565b60000392915050565b634e487b7160e01b600052601260045260246000fd5b60008260020b8061458057614580614557565b808360020b0791505092915050565b805161ffff81168114613adb57600080fd5b8051613adb8161406b565b600080600080600080600060e0888a0312156145c757600080fd5b87516145d28161407c565b60208901519097506145e38161412b565b95506145f16040890161458f565b94506145ff6060890161458f565b935061460d6080890161458f565b925060a088015160ff8116811461462357600080fd5b60c08901519092506146348161406b565b8091505092959891949750929550565b6000828210156146565761465661447a565b500390565b60006020828403121561466d57600080fd5b8151612bfd8161407c565b600081600f0b6f7fffffffffffffffffffffffffffffff19810361454e5761454e61447a565b6000602082840312156146b057600080fd5b8135612bfd8161407c565b6000600160ff1b82016146d0576146d061447a565b5060000390565b6000602082840312156146e957600080fd5b8151612bfd8161413a565b60006020828403121561470657600080fd5b8151612bfd81614287565b60006020828403121561472357600080fd5b8151612bfd8161412b565b60008083128015600160ff1b85018412161561474c5761474c61447a565b6001600160ff1b03840183138116156147675761476761447a565b50500390565b600080821280156001600160ff1b038490038513161561478f5761478f61447a565b600160ff1b83900384128116156147a8576147a861447a565b50500190565b600080600080600080600080610100898b0312156147cb57600080fd5b88516147d68161413a565b80985050602089015180600f0b81146147ee57600080fd5b80975050604089015195506060890151945060808901518060060b811461481457600080fd5b60a08a01519094506148258161407c565b60c08a015190935063ffffffff8116811461483f57600080fd5b915061484d60e08a016145a1565b90509295985092959890939650565b60006001600160801b038083168185168083038211156144da576144da61447a565b60006001600160801b03838116908316818110156144b0576144b061447a565b60008160020b8360020b6000811281627fffff19018312811516156148c5576148c561447a565b81627fffff0183138116156148dc576148dc61447a565b5090039392505050565b6000602082840312156148f857600080fd5b5051919050565b6000806040838503121561491257600080fd5b825161491d8161413a565b60208401519092506142128161413a565b600062ffffff838116908316818110156144b0576144b061447a565b60006001600160ff1b03818413828413808216868404861116156149705761497061447a565b600160ff1b600087128281168783058912161561498f5761498f61447a565b600087129250878205871284841616156149ab576149ab61447a565b878505871281841616156149c1576149c161447a565b505050929093029392505050565b6000826149de576149de614557565b600160ff1b8214600019841416156149f8576149f861447a565b500590565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615614a2d57614a2d61447a565b500290565b600082614a4157614a41614557565b500490565b600062ffffff8083168185168083038211156144da576144da61447a565b60008160020b8360020b80614a7b57614a7b614557565b627fffff19821460001982141615614a9557614a9561447a565b90059392505050565b60008160020b627fffff198103614ab757614ab761447a565b6000190192915050565b60008160020b8360020b627fffff600082136000841383830485118282161615614aed57614aed61447a565b627fffff196000851282811687830587121615614b0c57614b0c61447a565b60008712925085820587128484161615614b2857614b2861447a565b85850587128184161615614b3e57614b3e61447a565b5050509290910295945050505050565b600060ff821660ff841680821015614b6857614b6861447a565b90039392505050565b60008160020b8360020b6000821282627fffff03821381151615614b9757614b9761447a565b82627fffff19038212811615614baf57614baf61447a565b50019392505050565b600065ffffffffffff838116908316818110156144b0576144b061447a56fea2646970667358221220b6d815018634f734aed21076c91bc0911f02e3dbe9e8946c9c23d237abb4703964736f6c634300080d0033';

type VPoolWrapperMockRealisticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VPoolWrapperMockRealisticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VPoolWrapperMockRealistic__factory extends ContractFactory {
  constructor(...args: VPoolWrapperMockRealisticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'VPoolWrapperMockRealistic';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VPoolWrapperMockRealistic> {
    return super.deploy(overrides || {}) as Promise<VPoolWrapperMockRealistic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VPoolWrapperMockRealistic {
    return super.attach(address) as VPoolWrapperMockRealistic;
  }
  connect(signer: Signer): VPoolWrapperMockRealistic__factory {
    return super.connect(signer) as VPoolWrapperMockRealistic__factory;
  }
  static readonly contractName: 'VPoolWrapperMockRealistic';
  public readonly contractName: 'VPoolWrapperMockRealistic';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VPoolWrapperMockRealisticInterface {
    return new utils.Interface(_abi) as VPoolWrapperMockRealisticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VPoolWrapperMockRealistic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VPoolWrapperMockRealistic;
  }
}
