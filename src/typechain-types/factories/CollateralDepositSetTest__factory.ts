/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  CollateralDepositSetTest,
  CollateralDepositSetTestInterface,
} from '../CollateralDepositSetTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_settlementToken',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InsufficientCollateralBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllDepositAccountMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'depositValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
    ],
    name: 'getBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'initVToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051611b91380380611b9183398101604081905261002f91610099565b60405161003b9061008c565b604051809103906000f080158015610057573d6000803e3d6000fd5b5060d380546001600160a01b039283166001600160a01b031991821617909155600280549390921692169190911790556100c9565b6109b7806111da83390190565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b611102806100d86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638b1a8fb61161008c578063ac210cc711610066578063ac210cc714610299578063ed16575a146102c4578063f8b2cb4f146102cc578063ff056949146102f257600080fd5b80638b1a8fb61461016e5780638ce74426146101b0578063a96822a31461029157600080fd5b80631ca45818146100d457806338da803e146100f05780633a64c245146101055780635b86f59914610118578063713fdf471461012b57806382d9dbaa1461013e575b600080fd5b6100dd606c5481565b6040519081526020015b60405180910390f35b6101036100fe366004610b7e565b610305565b005b610103610113366004610bca565b610329565b610103610126366004610bf8565b61036e565b610103610139366004610c36565b610384565b61010361014c366004610c81565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61010361017c366004610c81565b63ffffffff8116600090815260208190526040902080546001600160a01b0319166001600160a01b03909216919091179055565b6002546003546040805160808101825260045461ffff8082168352620100008204811660208401526401000000008204169282019290925266010000000000009091046001600160801b03166060820152600554600654600754610222956001600160a01b0390811695169392919086565b604080516001600160a01b03978816815296909516602080880191909152845161ffff908116888801529085015181166060808901919091529585015116608087015293909201516001600160801b031660a085015260c084015260e0830152610100820152610120016100e7565b6100dd610460565b60d3546102ac906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b610103610472565b6100dd6102da366004610c81565b63ffffffff166000908152606e602052604090205490565b610103610300366004610bf8565b6104f7565b8460046103128282610cb2565b5050600593909355600691909155600755606c5550565b600061034461033b6020840184610c81565b63ffffffff1690565b63ffffffff8116600090815260208190526040902090915082906103688282610dbf565b50505050565b610380606d63ffffffff841683610509565b5050565b6040805180820182526001600160a01b0380861682528251606081018452858216815263ffffffff8516602082810191909152600194820185905283015281519192839290916000916103d79116610544565b63ffffffff90811682526020808301939093526040918201600020845181546001600160a01b039182166001600160a01b0319909116178255948401518051600190920180549582015191909401511515600160c01b0260ff60c01b1991909316600160a01b026001600160c01b03199095169190951617929092179290921617905550505050565b600061046d606d82610554565b905090565b60005b60088110156104f4576000606d826008811061049357610493610f17565b60088104919091015460079091166004026101000a900463ffffffff169050806104bb575050565b63ffffffff8082166000908152606e60205260409020546104e191606d91849161069116565b50806104ec81610f43565b915050610475565b50565b610380606d63ffffffff841683610691565b6105138383610720565b63ffffffff821660009081526001840160205260408120805483929061053a908490610f5e565b9091555050505050565b600063ffffffff82165b92915050565b60008060005b60088160ff1610156106895760008560ff83166008811061057d5761057d610f17565b60088104919091015460079091166004026101000a900463ffffffff169050806105a75750610689565b63ffffffff8181166000908152600187810160205260409182902090810154915163dd86c10160e01b8152600160a01b8304909316600484015291610668916001600160a01b03169063dd86c10190602401602060405180830381865afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190610f76565b63ffffffff8416600090815260018a016020526040902054600160801b9061066190610863565b9190610879565b6106729085610f8f565b93505050808061068190610fd0565b91505061055a565b509392505050565b63ffffffff821660009081526001840160205260409020548111156106c95760405163b1eae4f160e01b815260040160405180910390fd5b63ffffffff82166000908152600184016020526040812080548392906106f0908490610ff0565b909155505063ffffffff8216600090815260018401602052604090205461071b5761071b83836108c5565b505050565b63ffffffff811661074c57604051631d8b110f60e11b8152600060048201526024015b60405180910390fd5b600860005b60088110156107f7578263ffffffff1684826008811061077357610773610f17565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156107a15750505050565b60008482600881106107b5576107b5610f17565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156107e5578091506107f7565b806107ef81610f43565b915050610751565b5060088114156108225760405163274ca29b60e11b815263ffffffff83166004820152602401610743565b8183826008811061083557610835610f17565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b6000600160ff1b821061087557600080fd5b5090565b60006108a76108a26000861261088f578561089b565b61089b86600019611007565b8585610acb565b610863565b905060008412156108be576108bb8161108c565b90505b9392505050565b63ffffffff81166108ec57604051631d8b110f60e11b815260006004820152602401610743565b600860005b60088110156109a5578263ffffffff1684826008811061091357610913610f17565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16141561093f578091505b83816008811061095157610951610f17565b60088104919091015460079091166004026101000a900463ffffffff16610993576000811161098157600061098c565b61098c600182610ff0565b90506109a5565b8061099d81610f43565b9150506108f1565b600881146109b357806109c3565b6109bf600160086110a9565b60ff165b9050600882146103685781811415610a175760008483600881106109e9576109e9610f17565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550610368565b838160088110610a2957610a29610f17565b600891828204019190066004029054906101000a900463ffffffff166000858460088110610a5957610a59610f17565b60089182820401919006600402878560088110610a7857610a78610f17565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b600080806000198587098587029250828110838203039150508060001415610b055760008411610afa57600080fd5b5082900490506108be565b808411610b1157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000806000806000858703610100811215610b9857600080fd5b6080811215610ba657600080fd5b5094966080880135965060a0880135955060c0880135945060e08801359350915050565b60006101208284031215610bdd57600080fd5b50919050565b6001600160a01b03811681146104f457600080fd5b60008060408385031215610c0b57600080fd5b8235610c1681610be3565b946020939093013593505050565b63ffffffff811681146104f457600080fd5b600080600060608486031215610c4b57600080fd5b8335610c5681610be3565b92506020840135610c6681610be3565b91506040840135610c7681610c24565b809150509250925092565b600060208284031215610c9357600080fd5b81356108be81610be3565b6000813561ffff8116811461054e57600080fd5b610cd1610cbe83610c9e565b825461ffff191661ffff91909116178255565b610cfa610ce060208401610c9e565b825463ffff0000191660109190911b63ffff000016178255565b610d0660408301610c9e565b815465ffff000000008260201b1691508165ffff0000000019821617835560608401356001600160801b0381168114610d3e57600080fd5b75ffffffffffffffffffffffffffffffff0000000000008160301b168375ffffffffffffffffffffffffffffffffffff00000000198416171784555050505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008135801515811461054e57600080fd5b6000813561054e81610be3565b8135610dca81610be3565b610dd48183610d80565b506020820135610de381610be3565b610df08160018401610d80565b506040820135610dff81610be3565b610e0c8160028401610d80565b5060038101610e20610cbe60608501610c9e565b610e2f610ce060808501610c9e565b60a0830135610e3d81610c24565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835568ff0000000000000000610e7560c08701610da0565b151560401b168268ffffffffff00000000198316171783555050610ec8610e9e60e08501610da0565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b61071b610ed86101008501610db2565b8280547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f5757610f57610f2d565b5060010190565b60008219821115610f7157610f71610f2d565b500190565b600060208284031215610f8857600080fd5b5051919050565b600080821280156001600160ff1b0384900385131615610fb157610fb1610f2d565b600160ff1b8390038412811615610fca57610fca610f2d565b50500190565b600060ff821660ff811415610fe757610fe7610f2d565b60010192915050565b60008282101561100257611002610f2d565b500390565b60006001600160ff1b038184138284138082168684048611161561102d5761102d610f2d565b600160ff1b600087128281168783058912161561104c5761104c610f2d565b6000871292508782058712848416161561106857611068610f2d565b8785058712818416161561107e5761107e610f2d565b505050929093029392505050565b6000600160ff1b8214156110a2576110a2610f2d565b5060000390565b600060ff821660ff8416808210156110c3576110c3610f2d565b9003939250505056fea26469706673582212201953995d84b097b1dd78bec3b9ea68aba22fdca276c392bdab856a89a9be6e6a64736f6c634300080c0033608060405234801561001057600080fd5b50610997806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637779815c116100ad578063a3c35e2c11610071578063a3c35e2c146101b9578063d74dcaca146102ba578063dee4c1a6146102f3578063ea6e4e5214610304578063fca6fbf21461033457600080fd5b80637779815c1461027457806386c8e9a71461027e57806397c71faf14610294578063a34123a7146102a7578063a3a1e7e91461027457600080fd5b80632a99a792116100f45780632a99a792146101b957806333f90963146101d95780634c2ebc58146101db5780635e622abc146102425780636719578c1461024957600080fd5b806302dc9951146101265780630d8f6f461461014e578063195cd92c1461016f5780631dce5fcf14610197575b600080fd5b6001546101359062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61016161015c3660046105d6565b61034d565b604051908152602001610145565b61018261017d366004610604565b610362565b60408051928352602083019190915201610145565b6101aa6101a5366004610662565b6103b4565b604051610145939291906106aa565b6101cc6101c73660046106ee565b610485565b6040516101459190610721565b005b6101d96101e936600461074c565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610161565b60035461025c906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b600560821b610161565b600154610135906301000000900462ffffff1681565b6101616102a23660046105d6565b610502565b6101aa6102b5366004610662565b610510565b6101d96102c83660046107a1565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101d96103013660046107e3565b50565b6101d96103123660046107fb565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154610135906601000000000000900462ffffff1681565b600061035c82610f9f19610835565b92915050565b60008080841385151514156103905783915061037d826108ba565b61038990610fa0610835565b90506103ac565b610fa061039c856108ba565b6103a691906108d7565b91508390505b935093915050565b6000806103e26040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546103fd9190610913565b9091555050600286810b6000908152602082815260408083209389900b83529290522060010154610438906001600160801b0386169061092b565b600287810b600090815260208281526040808320938a900b8352929052205490935061046e906001600160801b0386169061092b565b915061047a8686610485565b905093509350939050565b6104b06040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061035c610fa0836108d7565b60008061053e6040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b031660046000828254610559919061094a565b9091555050600286810b6000908152602082815260408083209389900b83529290522054610591906001600160801b0386169061092b565b600287810b600090815260208281526040808320938a900b835292905220600101549092506105ca906001600160801b0386169061092b565b925061047a8686610485565b6000602082840312156105e857600080fd5b5035919050565b6001600160a01b038116811461030157600080fd5b60008060006060848603121561061957600080fd5b8335801515811461062957600080fd5b9250602084013591506040840135610640816105ef565b809150509250925092565b8035600281900b811461065d57600080fd5b919050565b60008060006060848603121561067757600080fd5b6106808461064b565b925061068e6020850161064b565b915060408401356001600160801b038116811461064057600080fd5b8381526020810183905260c081016106e66040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806040838503121561070157600080fd5b61070a8361064b565b91506107186020840161064b565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161035c565b60008060008060008060c0878903121561076557600080fd5b61076e8761064b565b955061077c6020880161064b565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156107b757600080fd5b6107c08561064b565b93506107ce6020860161064b565b93969395505050506040820135916060013590565b600060c082840312156107f557600080fd5b50919050565b60006020828403121561080d57600080fd5b8135610818816105ef565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b038184138284138082168684048611161561085b5761085b61081f565b600160ff1b600087128281168783058912161561087a5761087a61081f565b600087129250878205871284841616156108965761089661081f565b878505871281841616156108ac576108ac61081f565b505050929093029392505050565b6000600160ff1b8214156108d0576108d061081f565b5060000390565b6000826108f457634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561090e5761090e61081f565b500590565b600082198211156109265761092661081f565b500190565b60008160001904831182151516156109455761094561081f565b500290565b60008282101561095c5761095c61081f565b50039056fea26469706673582212208df0ed3240a429573f6125f28a8d86e61804c215c58c7aa08415d07a3da4f64264736f6c634300080c0033';

type CollateralDepositSetTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollateralDepositSetTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollateralDepositSetTest__factory extends ContractFactory {
  constructor(...args: CollateralDepositSetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CollateralDepositSetTest';
  }

  deploy(
    _settlementToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CollateralDepositSetTest> {
    return super.deploy(
      _settlementToken,
      overrides || {}
    ) as Promise<CollateralDepositSetTest>;
  }
  getDeployTransaction(
    _settlementToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_settlementToken, overrides || {});
  }
  attach(address: string): CollateralDepositSetTest {
    return super.attach(address) as CollateralDepositSetTest;
  }
  connect(signer: Signer): CollateralDepositSetTest__factory {
    return super.connect(signer) as CollateralDepositSetTest__factory;
  }
  static readonly contractName: 'CollateralDepositSetTest';
  public readonly contractName: 'CollateralDepositSetTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollateralDepositSetTestInterface {
    return new utils.Interface(_abi) as CollateralDepositSetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollateralDepositSetTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CollateralDepositSetTest;
  }
}
