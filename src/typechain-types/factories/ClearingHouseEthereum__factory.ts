/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ClearingHouseEthereum,
  ClearingHouseEthereumInterface,
} from '../ClearingHouseEthereum';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'txGasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'ExcessTxGasPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IClearingHouse.MulticallOperationType',
        name: 'multicallOperationType',
        type: 'uint8',
      },
    ],
    name: 'InvalidMulticallOperationType',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    name: 'KeeperFeeNotPositive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'cTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedCToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'NewCollateralSupported',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'NewVTokenSupported',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        indexed: false,
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'settings',
        type: 'tuple',
      },
    ],
    name: 'RageTradePoolSettingsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_defaultCollateralToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_defaultCollateralTokenOracle',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'cTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'cTokenId',
        type: 'uint32',
      },
    ],
    name: 'cTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
        ],
        internalType: 'struct CTokenLib.CToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'createAccountAndAddMargin',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountNetProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountNetProfit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'cTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'enum IClearingHouse.MulticallOperationType',
            name: 'operationType',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IClearingHouse.MulticallOperation[]',
        name: 'operations',
        type: 'tuple[]',
      },
    ],
    name: 'multicallWithSingleMarginCheck',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'cTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_txGasPriceLimit',
        type: 'uint256',
      },
    ],
    name: 'setTxGasPriceLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txGasPriceLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615b80806200019a6000396000f3fe6080604052600436106102935760003560e01c80637ec6ba311161015a578063d257be2b116100c1578063e3d41c181161007a578063e3d41c1814610a92578063e450f6f414610ab2578063e67ed1df14610ad2578063ee6cd5ee14610af2578063fcd0a50614610b12578063fe6f083a14610b3257600080fd5b8063d257be2b146109c7578063d38bfff4146109e7578063dac42a9614610a07578063dbc0c08514610a27578063dbd035ff14610a45578063e1f1671314610a7257600080fd5b806394c8c71d1161011357806394c8c71d1461089b5780639cd1be58146108bb5780639dca362f146108db578063a4063dbc146108f0578063ac9650d814610994578063b7902303146109a757600080fd5b80637ec6ba311461072f5780637f64d6631461074f57806384088b651461076f5780638ce25a93146107b157806391257584146107c757806393420cf4146107e757600080fd5b806340c4f69b116101fe5780635c318ad9116101b75780635c318ad9146106525780635c975abb1461067257806364f368011461068c57806369c71668146106ac57806373cceb9d146106cc5780637cc2f4f51461070f57600080fd5b806340c4f69b1461056557806342be9fca1461059257806343233d2e146105b257806353440597146105ee578063569634d31461060e5780635aa6e6751461062e57600080fd5b80632afaea37116102505780632afaea371461045b57806332a72d981461047b57806336fadead146104b057806339359029146104d05780633d56a35e146104f05780633fc42d801461051557600080fd5b8063127fec131461029857806316c38b3c146102d55780631a1feae1146102f75780631e2eaeaf1461031c57806321df4c0e1461033b578063241c486a1461036b575b600080fd5b3480156102a457600080fd5b5060d5546102b8906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102e157600080fd5b506102f56102f0366004614078565b610b52565b005b34801561030357600080fd5b5061030e61013a5481565b6040519081526020016102cc565b34801561032857600080fd5b5061030e610337366004614095565b5490565b34801561034757600080fd5b5061035b610356366004614095565b610bb0565b6040516102cc94939291906140d8565b34801561037757600080fd5b50610412610386366004614277565b6040805160808101825260008082526020820181905291810182905260608101919091525063ffffffff908116600090815260656020908152604091829020825160808101845281546001600160a01b03908116825260019092015491821692810192909252600160a01b810490931691810191909152600160c01b90910460ff161515606082015290565b6040516102cc919081516001600160a01b0390811682526020808401519091169082015260408083015163ffffffff169082015260609182015115159181019190915260800190565b34801561046757600080fd5b506102f5610476366004614294565b610c54565b34801561048757600080fd5b5061049b610496366004614440565b610c97565b604080519283526020830191909152016102cc565b3480156104bc57600080fd5b506102f56104cb36600461447f565b610ce7565b3480156104dc57600080fd5b506102f56104eb366004614294565b610e07565b3480156104fc57600080fd5b5060d3546102b89061010090046001600160a01b031681565b34801561052157600080fd5b506105556105303660046144b8565b63ffffffff16600090815260656020526040902060010154600160c01b900460ff1690565b60405190151581526020016102cc565b34801561057157600080fd5b50610585610580366004614520565b610e46565b6040516102cc91906145c3565b34801561059e57600080fd5b5061030e6105ad366004614625565b611575565b3480156105be57600080fd5b506102b86105cd366004614277565b63ffffffff166000908152606660205260409020546001600160a01b031690565b3480156105fa57600080fd5b506102f5610609366004614647565b6115f9565b34801561061a57600080fd5b506102f5610629366004614095565b6116ab565b34801561063a57600080fd5b506000546201000090046001600160a01b03166102b8565b34801561065e57600080fd5b506102f561066d366004614688565b6116ba565b34801561067e57600080fd5b5060d3546105559060ff1681565b34801561069857600080fd5b506102f56106a736600461447f565b611723565b3480156106b857600080fd5b506102f56106c73660046146ca565b611843565b3480156106d857600080fd5b506105556106e73660046144b8565b6001600160a01b0316600090815260646020526040902060020154600160401b900460ff1690565b34801561071b57600080fd5b506102f561072a36600461475b565b611930565b34801561073b57600080fd5b506102f561074a366004614095565b611945565b34801561075b57600080fd5b506102f561076a3660046144b8565b611996565b34801561077b57600080fd5b5061078f61078a3660046147c9565b611a64565b60408051825181526020808401519082015291810151908201526060016102cc565b3480156107bd57600080fd5b5061030e60d15481565b3480156107d357600080fd5b506102f56107e2366004614808565b611a9f565b3480156107f357600080fd5b50604080516060808201835260008083526020808401829052928401526067548351808301855260695461ffff808216835262010000820481168387019081526401000000009092048116838801908152606a54606b54606c548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102cc565b3480156108a757600080fd5b5061078f6108b636600461483d565b611b67565b3480156108c757600080fd5b506102f56108d6366004614625565b611c16565b3480156108e757600080fd5b5061030e611c59565b3480156108fc57600080fd5b5061091061090b3660046144b8565b611cfb565b6040516102cc919060006101008201905060018060a01b03808451168352806020850151166020840152604084015161ffff8082511660408601528060208301511660608601525063ffffffff60408201511660808501526060810151151560a08501526080810151151560c08501528160a08201511660e0850152505092915050565b6105856109a236600461488f565b611df8565b3480156109b357600080fd5b5060d4546102b8906001600160a01b031681565b3480156109d357600080fd5b5061049b6109e23660046144b8565b611f48565b3480156109f357600080fd5b506102f5610a023660046144b8565b611f7c565b348015610a1357600080fd5b50610555610a22366004614277565b61203e565b348015610a3357600080fd5b506001546001600160a01b03166102b8565b348015610a5157600080fd5b50610a65610a603660046148f3565b612073565b6040516102cc919061497d565b348015610a7e57600080fd5b506102f5610a8d36600461488f565b6120a1565b348015610a9e57600080fd5b5061030e610aad366004614095565b6121ed565b348015610abe57600080fd5b5061030e610acd3660046149c1565b612277565b348015610ade57600080fd5b5061049b610aed3660046149ed565b61228e565b348015610afe57600080fd5b5061049b610b0d366004614a12565b61232c565b348015610b1e57600080fd5b506102f5610b2d366004614a5d565b61237d565b348015610b3e57600080fd5b5061030e610b4d366004614aa8565b6123d3565b6001546001600160a01b03163314801590610b7f57506000546001600160a01b0362010000909104163314155b15610b9d57604051636bd1573560e11b815260040160405180910390fd5b60d3805460ff1916911515919091179055565b600081815260d2602052604080822090516330977c6d60e21b81526004810191909152606460248201528190606090819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c25df1b490604401600060405180830381865af4158015610c1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c459190810190614d01565b93509350935093509193509193565b60d35460ff1615610c78576040516313d0ff5960e31b815260040160405180910390fd5b6000610c838461240f565b9050610c918482858561244e565b50505050565b60d354600090819060ff1615610cc0576040516313d0ff5960e31b815260040160405180910390fd5b6000610ccb8661240f565b9050610cda818686600161256f565b9250925050935093915050565b6001546001600160a01b03163314801590610d1457506000546001600160a01b0362010000909104163314155b15610d3257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216610d4857610d48614e07565b6001600160a01b0382166000908152606460205260409020600201805461ffff16610dac5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b60448201526064015b60405180910390fd5b805468ff00000000000000001916600160401b831515021781556040516001600160a01b03841681527f7e69aaf85f04d7a874f7bf8768cd38b8fcf65e261176bdcb61c9d542b26c9c9c9060200160405180910390a1505050565b60d35460ff1615610e2b576040516313d0ff5960e31b815260040160405180910390fd5b6000610e368461240f565b9050610c91848285856001612748565b6060816001600160401b03811115610e6057610e606142cc565b604051908082528060200260200182016040528015610e9357816020015b6060815260200190600190039081610e7e5790505b5090506000610ea18561240f565b90506000805b84811015611488576000868683818110610ec357610ec3614e1d565b9050602002810190610ed59190614e33565b610ee3906020810190614e53565b6007811115610ef457610ef46140ae565b1415610f5357600080878784818110610f0f57610f0f614e1d565b9050602002810190610f219190614e33565b610f2f906020810190614e74565b810190610f3c91906149c1565b91509150610f4c8986848461244e565b5050611476565b6001868683818110610f6757610f67614e1d565b9050602002810190610f799190614e33565b610f87906020810190614e53565b6007811115610f9857610f986140ae565b1415610ff257600080878784818110610fb357610fb3614e1d565b9050602002810190610fc59190614e33565b610fd3906020810190614e74565b810190610fe091906149c1565b91509150610f4c898684846000612748565b600286868381811061100657611006614e1d565b90506020028101906110189190614e33565b611026906020810190614e53565b6007811115611037576110376140ae565b141561109757600086868381811061105157611051614e1d565b90506020028101906110639190614e33565b611071906020810190614e74565b81019061107e9190614095565b905061108d8885836000612877565b6001925050611476565b60038686838181106110ab576110ab614e1d565b90506020028101906110bd9190614e33565b6110cb906020810190614e53565b60078111156110dc576110dc6140ae565b1415611186576000808787848181106110f7576110f7614e1d565b90506020028101906111099190614e33565b611117906020810190614e74565b8101906111249190614eba565b91509150600080611138878585600061256f565b6040805160208101849052908101829052919350915060600160405160208183030381529060405288868151811061117257611172614e1d565b602002602001018190525050505050611476565b600486868381811061119a5761119a614e1d565b90506020028101906111ac9190614e33565b6111ba906020810190614e53565b60078111156111cb576111cb6140ae565b1415611227576000808787848181106111e6576111e6614e1d565b90506020028101906111f89190614e33565b611206906020810190614e74565b8101906112139190614f9b565b9150915060008061113887858560006129d2565b600586868381811061123b5761123b614e1d565b905060200281019061124d9190614e33565b61125b906020810190614e53565b600781111561126c5761126c6140ae565b14156112d65760008060008089898681811061128a5761128a614e1d565b905060200281019061129c9190614e33565b6112aa906020810190614e74565b8101906112b79190614fc9565b93509350935093506112cc8b85858585612aed565b5050505050611476565b60068686838181106112ea576112ea614e1d565b90506020028101906112fc9190614e33565b61130a906020810190614e53565b600781111561131b5761131b6140ae565b14156113325761132c876000612bfe565b50611476565b600786868381811061134657611346614e1d565b90506020028101906113589190614e33565b611366906020810190614e53565b6007811115611377576113776140ae565b141561142a57600080600088888581811061139457611394614e1d565b90506020028101906113a69190614e33565b6113b4906020810190614e74565b8101906113c1919061501a565b9250925092506113d58a8484846000612d68565b60408051825160208083019190915283015181830152910151606082015260800160405160208183030381529060405287858151811061141757611417614e1d565b6020026020010181905250505050611476565b85858281811061143c5761143c614e1d565b905060200281019061144e9190614e33565b61145c906020810190614e53565b604051633164e52160e11b8152600401610da39190615051565b8061148081615081565b915050610ea7565b5080156114fa57604051638c9f0c8960e01b8152600481018390526064602482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90638c9f0c899060440160006040518083038186803b1580156114e157600080fd5b505af41580156114f5573d6000803e3d6000fd5b505050505b60405163954eea2160e01b8152600481018390526001602482015260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163954eea21910160006040518083038186803b15801561155357600080fd5b505af4158015611567573d6000803e3d6000fd5b5050505050505b9392505050565b60008180156115db5760005a905061158d6044612edc565b6115978585612bfe565b92506000815a6115a7919061509c565b9050808311156115d457604051634010928f60e01b81526004810184905260248101829052604401610da3565b50506115f2565b6115e56044612edc565b6115ef8484612bfe565b91505b5092915050565b6001546001600160a01b0316331480159061162657506000546001600160a01b0362010000909104163314155b1561164457604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0382166000908152606460205260409020819060020161166b828261510b565b9050507ff495762bbd6f871d11992fa00aba5fde436c630137b4c977b97ff7ad289ed2fb828260405161169f9291906151ea565b60405180910390a15050565b6116b6816000612bfe565b5050565b6001546001600160a01b031633148015906116e757506000546001600160a01b0362010000909104163314155b1561170557604051636bd1573560e11b815260040160405180910390fd5b8360696117128282615294565b5050606b92909255606c55606a5550565b6001546001600160a01b0316331480159061175057506000546001600160a01b0362010000909104163314155b1561176e57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03821661178457611784614e07565b63ffffffff808316600090815260656020526040902083916117aa9082908490612f0916565b6117e85760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606401610da3565b60018101805460ff60c01b1916600160c01b851515021790556040516001600160a01b03851681527f608ea0cd92f466c2b2ed8d950ef3b2e94ef37fb25ff849b89bb004c6e78c69a99060200160405180910390a150505050565b600054610100900460ff168061185c575060005460ff16155b6118785760405162461bcd60e51b8152600401610da390615302565b600054610100900460ff1615801561189a576000805461ffff19166101011790555b60d38054610100600160a81b0319166101006001600160a01b038a81169190910291909117909155606880546001600160a01b03199081168984161790915560d48054821687841617905560d5805482168584161790556067805490911691851691909117905561190d8686603c612f1c565b611915612fba565b8015611927576000805461ff00191690555b50505050505050565b61193e848484846000612aed565b5050505050565b6001546001600160a01b0316331480159061197257506000546001600160a01b0362010000909104163314155b1561199057604051636bd1573560e11b815260040160405180910390fd5b61013a55565b6001546001600160a01b031633148015906119c357506000546001600160a01b0362010000909104163314155b156119e157604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038116611a085760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b611a8860405180606001604052806000815260200160008152602001600081525090565b611a96858585856000612d68565b95945050505050565b60d35461010090046001600160a01b03163314611acf576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff808216600090815260666020526040812054929350611b0a926001600160a01b03169161273716565b611b1657611b16614e07565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390611b5f8282615370565b505050505050565b611b8b60405180606001604052806000815260200160008152602001600081525090565b818015611bf25760005a9050611ba160a4612edc565b611bae8888888888612d68565b92506000815a611bbe919061509c565b905080831115611beb57604051634010928f60e01b81526004810184905260248101829052604401610da3565b5050611c0c565b611bfc60a4612edc565b611c098787878787612d68565b91505b5095945050505050565b60d35460ff1615611c3a576040516313d0ff5960e31b815260040160405180910390fd5b6000611c458361240f565b9050611c548382846001612877565b505050565b60d35460009060ff1615611c80576040516313d0ff5960e31b815260040160405180910390fd5b5060d154611c8f81600161548b565b60d155600081815260d260205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea390611cef9085815260200190565b60405180910390a25090565b611d47604080516060808201835260008083526020808401829052845160c0810186528281529081018290528085018290529182018190526080820181905260a0820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160c08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff6401000000008504168386015260ff600160401b85048116151591840191909152690100000000000000000084041615156080830152600160501b90920490931660a08401529081019190915290565b6060816001600160401b03811115611e1257611e126142cc565b604051908082528060200260200182016040528015611e4557816020015b6060815260200190600190039081611e305790505b50905060005b828110156115f25760008030868685818110611e6957611e69614e1d565b9050602002810190611e7b9190614e74565b604051611e899291906154a3565b600060405180830381855af49150503d8060008114611ec4576040519150601f19603f3d011682016040523d82523d6000602084013e611ec9565b606091505b509150915081611f1557604481511015611ee257600080fd5b60048101905080806020019051810190611efc91906154b3565b60405162461bcd60e51b8152600401610da39190615546565b80848481518110611f2857611f28614e1d565b602002602001018190525050508080611f4090615081565b915050611e4b565b600080611f5f6001600160a01b0384166064612fc5565b9150611f756001600160a01b0384166064613058565b9050915091565b6000546001600160a01b0362010000909104163314611fae57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038116611fd55760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff808216600090815260666020526040812054909161206d916001600160a01b031690839061273716565b92915050565b606060208251028201602001602083015b81811015612099578051548152602001612084565b509192915050565b6000805b828110156121c45760008484838181106120c1576120c1614e1d565b90506020020160208101906120d691906144b8565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015612115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121399190615559565b905084848381811061214d5761214d614e1d565b905060200201602081019061216291906144b8565b6001600160a01b03167f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c48260405161219c91815260200190565b60405180910390a26121ae818461548b565b92505080806121bc90615081565b9150506120a5565b50611c546121da6001546001600160a01b031690565b6068546001600160a01b0316908361307e565b600081815260d260205260408082209051631d51169760e11b815260048101919091526064602482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90633aa22d2e90604401602060405180830381865af4158015612253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206d9190615559565b6000612281611c59565b905061206d818484610c54565b600082815260d260205260408082209051631361754b60e11b815260048101919091528215156024820152606460448201819052829173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__916326c2ea9691016040805180830381865af41580156122fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123219190615572565b909590945092505050565b60d354600090819060ff1615612355576040516313d0ff5960e31b815260040160405180910390fd5b60006123608661240f565b9050610cda818661237636889003880188615596565b60016129d2565b6001546001600160a01b031633148015906123aa57506000546001600160a01b0362010000909104163314155b156123c857604051636bd1573560e11b815260040160405180910390fd5b611c54838383612f1c565b60008180156123f85760005a90506123eb60a4612edc565b611bae8888888888612aed565b61240260a4612edc565b611c098787878787612aed565b600081815260d26020526040902080546001600160a01b0316331461244957604051630504a20d60e01b8152336004820152602401610da3565b919050565b60d35460ff1615612472576040516313d0ff5960e31b815260040160405180910390fd5b600061247f8360016130e1565b90506124a933308461249885546001600160a01b031690565b6001600160a01b031692919061316f565b8054604051631b2d4e8960e01b8152600481018690526001600160a01b0390911660248201526044810183905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b15801561250d57600080fd5b505af4158015612521573d6000803e3d6000fd5b505082546040518581526001600160a01b0390911692508791507fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee759060200160405180910390a35050505050565b60d354600090819060ff1615612598576040516313d0ff5960e31b815260040160405180910390fd5b60006125a3866131a7565b60408051639747e26360e01b8152600481018a90526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915285151560e482015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639747e26390610104016040805180830381865af4158015612644573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126689190615572565b9093509150600061267883613248565b606c549091508110156126a1576040516312b6b5cd60e11b815260048101829052602401610da3565b60208601516001600160a01b0316158015906126bf57508560600151155b1561272c57856040015180156126e6575085516126db90613248565b6126e484613248565b145b8061270f5750856040015115801561270f5750855161270490613248565b61270d85613248565b145b61272c576040516307a1db0760e01b815260040160405180910390fd5b505094509492505050565b6001600160a01b0390811691161490565b60d35460ff161561276c576040516313d0ff5960e31b815260040160405180910390fd5b60006127798460006130e1565b80546040516341901e3560e11b8152600481018890526001600160a01b03909116602482015260448101859052606480820152831515608482015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906383203c6a9060a40160006040518083038186803b1580156127ee57600080fd5b505af4158015612802573d6000803e3d6000fd5b5050505061282c338461281c84546001600160a01b031690565b6001600160a01b0316919061307e565b80546040518481526001600160a01b039091169087907fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c9220018309469060200160405180910390a3505050505050565b60d35460ff161561289b576040516313d0ff5960e31b815260040160405180910390fd5b816128d25760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610da3565b604051632f342a3560e11b815260048101849052602481018390526064604482018190528215159082015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90635e68546a9060840160006040518083038186803b15801561293457600080fd5b505af4158015612948573d6000803e3d6000fd5b5050505060008213156129725760685461296d906001600160a01b031633308561316f565b612992565b6129923361297f846155b2565b6068546001600160a01b0316919061307e565b837fb4604a31ce2914796ae6383c67cee47a3cb969b59a7dba0d06edcab53ff96a84836040516129c491815260200190565b60405180910390a250505050565b60d354600090819060ff16156129fb576040516313d0ff5960e31b815260040160405180910390fd5b6000612a06866131a7565b905084606001516001600160a01b0316600014612a3057612a308186606001518760800151613263565b60405163086d871160e11b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906310db0e2290612a70908a9085908a906064908b906004016155cf565b6040805180830381865af4158015612a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ab09190615572565b90935091506000612ac482858560646132fe565b606c5490915081101561272c576040516312b6b5cd60e11b815260048101829052602401610da3565b60d35460009060ff1615612b14576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d26020526040812090612b2c876131a7565b9050612b378461333e565b606b54612b44919061548b565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b158015612bc357600080fd5b505af4158015612bd7573d6000803e3d6000fd5b5050606854612bf392506001600160a01b03169050338561307e565b505095945050505050565b60d35460009060ff1615612c25576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d2602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383612c588761333e565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cc39190615572565b90935090506000612cd48285615671565b905060008413612cfa5760405163ef37dcc760e01b815260048101859052602401610da3565b606854612d11906001600160a01b0316338661307e565b612d1a82613460565b6040805182815260208101869052908101839052339087907f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060600160405180910390a350505092915050565b612d8c60405180606001604052806000815260200160008152602001600081525090565b60d35460ff1615612db0576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff161115612dd7576040516348d69f3560e01b815260040160405180910390fd5b600085815260d26020526040812090612def866131a7565b600089815260d2602052604081209192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063ff12fd529085908986612e2a8b61333e565b6040516001600160e01b031960e088901b1681526004810195909552602485019390935261ffff90911660448401526001600160a01b0316606483810191909152608483019190915260a4820152600160c482015260e401608060405180830381865af4158015612e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ec391906156b2565b94509050612ed081613460565b50505095945050505050565b36811015612f0657604051634219202560e01b815236600482015260248101829052604401610da3565b50565b90546001600160a01b0391821691161490565b604080516080810182526001600160a01b038581168252938416602080830191825263ffffffff94851683850190815260006060850181815298871681526065909252939020915182549086166001600160a01b03199091161782555160019091018054925195511515600160c01b0260ff60c01b1996909416600160a01b026001600160c01b031990931691909416171792909216919091179055565b33612f0681806134ec565b6001600160a01b0382811660009081526020839052604080822060020154905163dd86c10160e01b8152640100000000820463ffffffff1660048201529192600160501b909104169063dd86c10190602401602060405180830381865afa158015613034573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156e9190615559565b600061156e6130706001600160a01b038516846135f4565b6001600160a01b0316613633565b6040516001600160a01b038316602482015260448101829052611c5490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526136a0565b63ffffffff808316600090815260656020526040812091613104918391612f0916565b1561312a5760405163b087c8c360e01b815263ffffffff84166004820152602401610da3565b81801561314357506001810154600160c01b900460ff16155b1561206d57805460405163a006afaf60e01b81526001600160a01b039091166004820152602401610da3565b6040516001600160a01b0380851660248301528316604482015260648101829052610c919085906323b872dd60e01b906084016130aa565b63ffffffff8082166000908152606660205260408120546001600160a01b0316916131d491839161273716565b156131fa5760405163b087c8c360e01b815263ffffffff83166004820152602401610da3565b6001600160a01b038116600090815260646020526040902060020154600160401b900460ff1661244957604051631079472960e21b81526001600160a01b0382166004820152602401610da3565b600080821361325f5761325a826155b2565b61206d565b5090565b60006132796001600160a01b0385166064613772565b90506000836001600160a01b0316826001600160a01b0316116132a5576132a0828561572a565b6132af565b6132af848361572a565b90506127106132c28561ffff8616615752565b6132cc9190615797565b6001600160a01b0316816001600160a01b0316111561193e576040516307a1db0760e01b815260040160405180910390fd5b600061330983613248565b61333461331f6001600160a01b03881685613058565b600160801b61332d88613248565b9190613798565b611a969190615671565b60003a61013a548111156133745761013a54604051638dfe587d60e01b8152610da3918391600401918252602082015260400190565b82158061338a575060d5546001600160a01b0316155b15613398576000915061345a565b333214156133c4576133ab6000366137da565b6133b79061520861548b565b6133c1908461548b565b92505b60006133d0843a6157bd565b60d55460405163dd86c10160e01b815261012c60048201529192506000916001600160a01b039091169063dd86c10190602401602060405180830381865afa158015613420573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134449190615559565b90506134558282600160801b61382d565b935050505b50919050565b60008113156134865760d454606854612f06916001600160a01b0391821691168361307e565b60d4546001600160a01b031663379607f56134a0836155b2565b6040518263ffffffff1660e01b81526004016134be91815260200190565b600060405180830381600087803b1580156134d857600080fd5b505af115801561193e573d6000803e3d6000fd5b600054610100900460ff1680613505575060005460ff16155b6135215760405162461bcd60e51b8152600401610da390615302565b600054610100900460ff16158015613543576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a38015611c54576000805461ff0019169055505050565b6001600160a01b03808316600090815260208390526040812060028101549054919261156e92169063ffffffff6401000000009091048116906138db16565b60006401000276a36001600160a01b038316108061366e575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561369757604051635d236c4560e01b81526001600160a01b0383166004820152602401610da3565b61206d826138fc565b60006136f5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166139169092919063ffffffff16565b805190915015611c54578080602001905181019061371391906157dc565b611c545760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610da3565b6001600160a01b03808316600090815260208390526040812054909161156e9116613925565b60006137be600085126137ab57846137b7565b6137b7856000196157f9565b848461382d565b9050600084121561156e576137d2816155b2565b949350505050565b6000805b828110156115f25760008484838181106137fa576137fa614e1d565b9050013560f81c60f81b6001600160f81b0319161461381a57601061381d565b60045b60ff1691909101906001016137de565b600080806000198587098587029250828110838203039150508060001415613867576000841161385c57600080fd5b50829004905061156e565b80841161387357600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806138f16001600160a01b038516846139af565b90506115ef81613bcb565b600061206d6001600160a01b03831680600160401b61382d565b60606137d28484600085613efe565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061398a919061587e565b509496509294505050506001600160a01b0383161515905061345a5761156e81613bcb565b600063ffffffff82166139d8576040516351a4d88160e01b815260006004820152602401610da3565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110613a0d57613a0d614e1d565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110613a3c57613a3c614e1d565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90613a7d908490600401615920565b600060405180830381865afa925050508015613abb57506040513d6000823e601f3d908101601f19168201604052613ab891908101906159c2565b60015b613b3057836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613afd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b21919061587e565b509396506115f2945050505050565b600082600081518110613b4557613b45614e1d565b602002602001015183600181518110613b6057613b60614e1d565b6020026020010151613b729190615a8d565b90506000613b8663ffffffff881683615add565b905060008260060b128015613bac5750613ba663ffffffff881683615b1b565b60060b15155b15613bbf5780613bbb81615b3d565b9150505b945061206d9350505050565b60008060008360020b12613be2578260020b613bea565b8260020b6000035b9050620d89e8811115613c235760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610da3565b600060018216613c3757600160801b613c49565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613c7d576ffff97272373d413259a46990580e213a0260801c5b6004821615613c9c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613cbb576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613cda576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613cf9576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613d18576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613d37576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613d57576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613d77576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613d97576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613db7576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613dd7576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613df7576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613e17576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613e37576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613e58576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613e78576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613e97576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613eb4576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613ed5578060001981613ed157613ed1615781565b0490505b640100000000810615613ee9576001613eec565b60005b60ff16602082901c0192505050919050565b606082471015613f5f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610da3565b843b613fad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610da3565b600080866001600160a01b03168587604051613fc99190615b61565b60006040518083038185875af1925050503d8060008114614006576040519150601f19603f3d011682016040523d82523d6000602084013e61400b565b606091505b509150915061401b828286614026565b979650505050505050565b6060831561403557508161156e565b8251156140455782518084602001fd5b8160405162461bcd60e51b8152600401610da39190615546565b8015158114612f0657600080fd5b80356124498161405f565b60006020828403121561408a57600080fd5b813561156e8161405f565b6000602082840312156140a757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106140d4576140d46140ae565b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b8181101561413457865180518716845285015185840152958401959183019160010161410d565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561425157848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b8083101561423c5783516141bf8382516140c4565b8b8101518060020b8d850152508a81015160020b8b84015260608101516141f160608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a840193506001830192506141aa565b509a89019a9450505090860190600101614157565b50909e9d5050505050505050505050505050565b63ffffffff81168114612f0657600080fd5b60006020828403121561428957600080fd5b813561156e81614265565b6000806000606084860312156142a957600080fd5b8335925060208401356142bb81614265565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715614304576143046142cc565b60405290565b60405161012081016001600160401b0381118282101715614304576143046142cc565b604080519081016001600160401b0381118282101715614304576143046142cc565b60405160e081016001600160401b0381118282101715614304576143046142cc565b604051601f8201601f191681016001600160401b0381118282101715614399576143996142cc565b604052919050565b6001600160a01b0381168114612f0657600080fd5b8035612449816143a1565b6000608082840312156143d357600080fd5b604051608081018181106001600160401b03821117156143f5576143f56142cc565b60405282358152905080602083013561440d816143a1565b602082015260408301356144208161405f565b604082015260608301356144338161405f565b6060919091015292915050565b600080600060c0848603121561445557600080fd5b83359250602084013561446781614265565b915061447685604086016143c1565b90509250925092565b6000806040838503121561449257600080fd5b823561449d816143a1565b915060208301356144ad8161405f565b809150509250929050565b6000602082840312156144ca57600080fd5b813561156e816143a1565b60008083601f8401126144e757600080fd5b5081356001600160401b038111156144fe57600080fd5b6020830191508360208260051b850101111561451957600080fd5b9250929050565b60008060006040848603121561453557600080fd5b8335925060208401356001600160401b0381111561455257600080fd5b61455e868287016144d5565b9497909650939450505050565b60005b8381101561458657818101518382015260200161456e565b83811115610c915750506000910152565b600081518084526145af81602086016020860161456b565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561461857603f19888603018452614606858351614597565b945092850192908501906001016145ea565b5092979650505050505050565b6000806040838503121561463857600080fd5b50508035926020909101359150565b60008082840360e081121561465b57600080fd5b8335614666816143a1565b925060c0601f198201121561467a57600080fd5b506020830190509250929050565b60008060008084860360c081121561469f57600080fd5b60608112156146ad57600080fd5b509395606087013595506080870135945060a08701359350915050565b60008060008060008060c087890312156146e357600080fd5b86356146ee816143a1565b955060208701356146fe816143a1565b9450604087013561470e816143a1565b9350606087013561471e816143a1565b9250608087013561472e816143a1565b915060a087013561473e816143a1565b809150509295509295509295565b8060020b8114612f0657600080fd5b6000806000806080858703121561477157600080fd5b84359350602085013561478381614265565b925060408501356147938161474c565b915060608501356147a38161474c565b939692955090935050565b61ffff81168114612f0657600080fd5b8035612449816147ae565b600080600080608085870312156147df57600080fd5b843593506020850135925060408501356147f881614265565b915060608501356147a3816147ae565b60008082840361012081121561481d57600080fd5b8335614828816143a1565b9250610100601f198201121561467a57600080fd5b600080600080600060a0868803121561485557600080fd5b8535945060208601359350604086013561486e81614265565b9250606086013561487e816147ae565b949793965091946080013592915050565b600080602083850312156148a257600080fd5b82356001600160401b038111156148b857600080fd5b6148c4858286016144d5565b90969095509350505050565b60006001600160401b038211156148e9576148e96142cc565b5060051b60200190565b6000602080838503121561490657600080fd5b82356001600160401b0381111561491c57600080fd5b8301601f8101851361492d57600080fd5b803561494061493b826148d0565b614371565b81815260059190911b8201830190838101908783111561495f57600080fd5b928401925b8284101561401b57833582529284019290840190614964565b6020808252825182820181905260009190848201906040850190845b818110156149b557835183529284019291840191600101614999565b50909695505050505050565b600080604083850312156149d457600080fd5b82356149df81614265565b946020939093013593505050565b60008060408385031215614a0057600080fd5b8235915060208301356144ad8161405f565b6000806000838503610120811215614a2957600080fd5b843593506020850135614a3b81614265565b925060e0603f1982011215614a4f57600080fd5b506040840190509250925092565b600080600060608486031215614a7257600080fd5b8335614a7d816143a1565b92506020840135614a8d816143a1565b91506040840135614a9d81614265565b809150509250925092565b600080600080600060a08688031215614ac057600080fd5b853594506020860135614ad281614265565b93506040860135614ae28161474c565b9250606086013561487e8161474c565b60038110612f0657600080fd5b805161244981614af2565b80516124498161474c565b80516001600160801b038116811461244957600080fd5b600082601f830112614b3d57600080fd5b81516020614b4d61493b836148d0565b82815260059290921b84018101918181019086841115614b6c57600080fd5b8286015b84811015614cf65780516001600160401b0380821115614b8f57600080fd5b9088019060a0828b03601f19011215614ba757600080fd5b614baf6142e2565b86830151614bbc816143a1565b80825250604083015187820152606083015160408201526080830151606082015260a083015182811115614bef57600080fd5b8084019350508a603f840112614c0457600080fd5b868301519150614c1661493b836148d0565b82815261012092830284016040019288820191908d851115614c3757600080fd5b6040860195505b84861015614ce05780868f031215614c5557600080fd5b614c5d61430a565b614c6687614aff565b8152614c738b8801614b0a565b8b820152614c8360408801614b0a565b6040820152614c9460608801614b15565b60608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e08201526101008701516101008201528084525089830192508086019550614c3e565b5060808301525085525050918301918301614b70565b509695505050505050565b60008060008060808587031215614d1757600080fd5b8451614d22816143a1565b8094505060208086015193506040808701516001600160401b0380821115614d4957600080fd5b818901915089601f830112614d5d57600080fd5b8151614d6b61493b826148d0565b81815260069190911b8301850190858101908c831115614d8a57600080fd5b938601935b82851015614dd35785858e031215614da75760008081fd5b614daf61432d565b8551614dba816143a1565b8152858801518882015282529385019390860190614d8f565b60608c01519098509550505080841115614dec57600080fd5b505050614dfb87828801614b2c565b91505092959194509250565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112614e4957600080fd5b9190910192915050565b600060208284031215614e6557600080fd5b81356008811061156e57600080fd5b6000808335601e19843603018112614e8b57600080fd5b8301803591506001600160401b03821115614ea557600080fd5b60200191503681900382131561451957600080fd5b60008060a08385031215614ecd57600080fd5b8235614ed881614265565b9150614ee784602085016143c1565b90509250929050565b803561244981614af2565b600060e08284031215614f0d57600080fd5b614f1561434f565b90508135614f228161474c565b81526020820135614f328161474c565b60208201526040820135600f81900b8114614f4c57600080fd5b6040820152614f5d606083016143b6565b6060820152614f6e608083016147be565b6080820152614f7f60a0830161406d565b60a0820152614f9060c08301614ef0565b60c082015292915050565b6000806101008385031215614faf57600080fd5b8235614fba81614265565b9150614ee78460208501614efb565b60008060008060808587031215614fdf57600080fd5b8435614fea81614265565b93506020850135614ffa8161474c565b9250604085013561500a8161474c565b9396929550929360600135925050565b60008060006060848603121561502f57600080fd5b83359250602084013561504181614265565b91506040840135614a9d816147ae565b6020810160088310615065576150656140ae565b91905290565b634e487b7160e01b600052601160045260246000fd5b60006000198214156150955761509561506b565b5060010190565b6000828210156150ae576150ae61506b565b500390565b6000813561206d8161405f565b6000813561206d816143a1565b80547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b8135615116816147ae565b815461ffff191661ffff8216178255506020820135615134816147ae565b815463ffff00001916601082901b63ffff00001617825550604082013561515a81614265565b815467ffffffff000000008260201b1691508167ffffffff00000000198216178355606084013561518a8161405f565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815560808201356151b98161405f565b815460ff60481b191681151560481b60ff60481b161782555060a08201356151e0816143a1565b611c5481836150cd565b6001600160a01b038316815260e081018235615205816147ae565b61ffff808216602085015260208501359150615220826147ae565b1660408381019190915283013561523681614265565b63ffffffff811660608401525060608301356152518161405f565b80151560808401525060808301356152688161405f565b80151560a08401525061527d60a084016143b6565b6001600160a01b03811660c0840152509392505050565b813561529f816147ae565b815461ffff191661ffff82161782555060208201356152bd816147ae565b815463ffff00001916601082901b63ffff0000161782555060408201356152e3816147ae565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b813561537b816143a1565b6153858183615350565b506020820135615394816143a1565b6153a18160018401615350565b506002810160408301356153b4816147ae565b815461ffff191661ffff82161782555060608301356153d2816147ae565b815463ffff00001916601082901b63ffff0000161782555060808301356153f881614265565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a08501356154288161405f565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815561547661545860c085016150b3565b82805460ff60481b191691151560481b60ff60481b16919091179055565b611c5461548560e085016150c0565b826150cd565b6000821982111561549e5761549e61506b565b500190565b8183823760009101908152919050565b6000602082840312156154c557600080fd5b81516001600160401b03808211156154dc57600080fd5b818401915084601f8301126154f057600080fd5b815181811115615502576155026142cc565b615515601f8201601f1916602001614371565b915080825285602082850101111561552c57600080fd5b61553d81602084016020860161456b565b50949350505050565b60208152600061156e6020830184614597565b60006020828403121561556b57600080fd5b5051919050565b6000806040838503121561558557600080fd5b505080516020909101519092909150565b600060e082840312156155a857600080fd5b61156e8383614efb565b6000600160ff1b8214156155c8576155c861506b565b5060000390565b60006101608201905086825260018060a01b038087166020840152855160020b6040840152602086015160020b60608401526040860151600f0b60808401528060608701511660a08401525061ffff60808601511660c083015260a085015161563c60e084018215159052565b5060c08501516156506101008401826140c4565b508361012083015261566761014083018415159052565b9695505050505050565b600080821280156001600160ff1b03849003851316156156935761569361506b565b600160ff1b83900384128116156156ac576156ac61506b565b50500190565b60008082840360808112156156c657600080fd5b835192506060601f19820112156156dc57600080fd5b50604051606081018181106001600160401b03821117156156ff576156ff6142cc565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b038381169083168181101561574a5761574a61506b565b039392505050565b60006001600160a01b03828116848216811515828404821116156157785761577861506b565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b03838116806157b1576157b1615781565b92169190910492915050565b60008160001904831182151516156157d7576157d761506b565b500290565b6000602082840312156157ee57600080fd5b815161156e8161405f565b60006001600160ff1b038184138284138082168684048611161561581f5761581f61506b565b600160ff1b600087128281168783058912161561583e5761583e61506b565b6000871292508782058712848416161561585a5761585a61506b565b878505871281841616156158705761587061506b565b505050929093029392505050565b600080600080600080600060e0888a03121561589957600080fd5b87516158a4816143a1565b60208901519097506158b58161474c565b60408901519096506158c6816147ae565b60608901519095506158d7816147ae565b60808901519094506158e8816147ae565b60a089015190935060ff811681146158ff57600080fd5b60c08901519092506159108161405f565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b818110156149b557835163ffffffff168352928401929184019160010161593c565b600082601f83011261596f57600080fd5b8151602061597f61493b836148d0565b82815260059290921b8401810191818101908684111561599e57600080fd5b8286015b84811015614cf65780516159b5816143a1565b83529183019183016159a2565b600080604083850312156159d557600080fd5b82516001600160401b03808211156159ec57600080fd5b818501915085601f830112615a0057600080fd5b81516020615a1061493b836148d0565b82815260059290921b84018101918181019089841115615a2f57600080fd5b948201945b83861015615a5d5785518060060b8114615a4e5760008081fd5b82529482019490820190615a34565b91880151919650909350505080821115615a7657600080fd5b50615a838582860161595e565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff1901831281151615615ab857615ab861506b565b81667fffffffffffff018313811615615ad357615ad361506b565b5090039392505050565b60008160060b8360060b80615af457615af4615781565b667fffffffffffff19821460001982141615615b1257615b1261506b565b90059392505050565b60008260060b80615b2e57615b2e615781565b808360060b0791505092915050565b60008160020b627fffff19811415615b5757615b5761506b565b6000190192915050565b60008251614e4981846020870161456b56fea164736f6c634300080a000a';

type ClearingHouseEthereumConstructorParams =
  | [
      linkLibraryAddresses: ClearingHouseEthereumLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseEthereumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouseEthereum__factory extends ContractFactory {
  constructor(...args: ClearingHouseEthereumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouseEthereum__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseEthereumLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseEthereum> {
    return super.deploy(overrides || {}) as Promise<ClearingHouseEthereum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouseEthereum {
    return super.attach(address) as ClearingHouseEthereum;
  }
  connect(signer: Signer): ClearingHouseEthereum__factory {
    return super.connect(signer) as ClearingHouseEthereum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseEthereumInterface {
    return new utils.Interface(_abi) as ClearingHouseEthereumInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseEthereum {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ClearingHouseEthereum;
  }
}

export interface ClearingHouseEthereumLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
