/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { TickTest, TickTestInterface } from '../TickTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickNext',
        type: 'int24',
      },
    ],
    name: 'cross',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fpGlobal',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumAX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpX128',
        type: 'int256',
      },
      {
        internalType: 'uint48',
        name: 'timestampLast',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickCurrent',
        type: 'int24',
      },
    ],
    name: 'getFeeGrowthInside',
    outputs: [
      {
        internalType: 'uint256',
        name: 'extendedFeeGrowthInside',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickCurrent',
        type: 'int24',
      },
    ],
    name: 'getFundingPaymentGrowthInside',
    outputs: [
      {
        internalType: 'int256',
        name: 'fundingPaymentGrowth',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickCurrent',
        type: 'int24',
      },
    ],
    name: 'getNetPositionInside',
    outputs: [
      {
        internalType: 'int256',
        name: 'netPositionGrowthX128',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickCurrent',
        type: 'int24',
      },
    ],
    name: 'getUniswapFeeGrowthInside',
    outputs: [
      {
        internalType: 'uint256',
        name: 'uniswapFeeGrowthInside',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'tokenAmount',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
      {
        internalType: 'uint48',
        name: 'blockTimestamp',
        type: 'uint48',
      },
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    name: 'registerTrade',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_extendedFeeGrowthOutsideX128',
        type: 'uint256',
      },
    ],
    name: 'setFeeGrowthOutsideX128',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumAX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpX128',
            type: 'int256',
          },
          {
            internalType: 'uint48',
            name: 'timestampLast',
            type: 'uint48',
          },
        ],
        internalType: 'struct FundingPayment.Info',
        name: 'fpGlobal_',
        type: 'tuple',
      },
    ],
    name: 'setFpGlobal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickIndex',
        type: 'int24',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'sumALastX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumBOutsideX128',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumFpOutsideX128',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'sumFeeOutsideX128',
            type: 'uint256',
          },
        ],
        internalType: 'struct Tick.Info',
        name: 'tick',
        type: 'tuple',
      },
    ],
    name: 'setTick',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sumFeeGlobalX128',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: '',
        type: 'int24',
      },
    ],
    name: 'ticksExtended',
    outputs: [
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpOutsideX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeOutsideX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vPool',
    outputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b039290921691909117905561006c565b6103aa80610f6783390190565b610eec8061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063aac912511161008c578063d31834e311610066578063d31834e31461024b578063d5a839951461025e578063f255c94b14610271578063f8f4b8241461028457600080fd5b8063aac91251146101e8578063c04b98c4146101fb578063c13a44f61461020457600080fd5b80633e89175b146100d457806348aaa8c0146100e957806348effdd7146101435780636719578c146101565780636c54433514610181578063a885d285146101c7575b600080fd5b6100e76100e2366004610a67565b600555565b005b61011e6100f7366004610a97565b60006020819052908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6100e7610151366004610ab2565b610297565b600654610169906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b60015460025460035460045461019f9392919065ffffffffffff1684565b6040805194855260208501939093529183015265ffffffffffff16606082015260800161013a565b6101da6101d5366004610aca565b6102a9565b60405190815260200161013a565b6101da6101f6366004610aca565b6102fb565b6101da60055481565b6100e7610212366004610b0d565b600291820b6000908152602081815260409182902083518155908301516001820155908201519281019290925560600151600390910155565b6100e7610259366004610a97565b61034d565b6101da61026c366004610aca565b610393565b6100e761027f366004610bb9565b6103e6565b6101da610292366004610aca565b6103fc565b8060016102a48282610c02565b505050565b60408051608081018252600154815260025460208201526003549181019190915260045465ffffffffffff1660608201526005546000916102f1918391879187918791610421565b5095945050505050565b60408051608081018252600154815260025460208201526003549181019190915260045465ffffffffffff166060820152600554600091610343918391879187918791610421565b9695505050505050565b60408051608081018252600154815260025460208201526003549181019190915260045465ffffffffffff16606082015260055461039091600091849190610579565b50565b60408051608081018252600154815260025460208201526003549181019190915260045465ffffffffffff1660608201526005546000916103db918391879187918791610421565b509095945050505050565b6103f5600186868686866105fa565b5050505050565b600654600090610417906001600160a01b03168585856106b0565b90505b9392505050565b600285810b60009081526020889052604080822087840b8352908220600182015482549483015487519495869586959493928692610462929091859161086d565b90506000846003015490508a60020b8d60020b13156104ac57828a6020015161048b9190610c5f565b9250818a6040015161049d9190610c5f565b91506104a9818a610c9e565b90505b6001840154845460028601548c516000926104cb92909185919061086d565b90506000866003015490508d60020b8f60020b1361051457828d602001516104f39190610c5f565b9250818d604001516105059190610c5f565b9150610511818d610c9e565b90505b82868e602001516105259190610c5f565b61052f9190610c5f565b9a5081858e604001516105429190610c5f565b61054c9190610c5f565b995080610559858e610c9e565b6105639190610c9e565b9850505050505050505096509650969350505050565b600283810b60009081526020869052604081208054600182015493820154865192946105a79390919061086d565b84518355600183015460208601519192506105c191610c5f565b600183015560408401516105d6908290610c5f565b600283015560038201546105ea9084610c9e565b8260030181905550505050505050565b60038601546000906106169065ffffffffffff1685858561089b565b600188015490915061062e908290600160801b6108ca565b8760020160008282546106419190610cb5565b909155505086548190889060009061065a908490610cb5565b9091555061066f905086600160801b876108ee565b8760010160008282546106829190610cb5565b90915550505050600394909401805465ffffffffffff191665ffffffffffff92909216919091179055505050565b60405163f30dba9360e01b8152600284900b60048201526000908190819081906001600160a01b0389169063f30dba939060240161010060405180830381865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107269190610d31565b505060405163f30dba9360e01b815260028d900b600482015292965060009550506001600160a01b038d16935063f30dba9392505060240161010060405180830381865afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a09190610d31565b50505050935050505081935080925050508560020b8460020b12156107d0576107c98183610c9e565b9250610863565b8460020b8460020b121561085657866001600160a01b031663461413196040518163ffffffff1660e01b8152600401602060405180830381865afa15801561081c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108409190610de5565b925061084c8183610dfe565b6107c99084610c9e565b6108608282610c9e565b92505b5050949350505050565b600061088861087c8684610c5f565b8590600160801b6108ee565b6108929084610cb5565b95945050505050565b60006108926108aa8686610e16565b65ffffffffffff16620151806108c38587828282610c5f565b919061097f565b60006108d78484846108ee565b9050600081121561041a5761041760001982610cb5565b60006001818080808812156109105792159261090988610e3d565b9250610914565b8792505b60008712156109305792159261092987610e3d565b9150610934565b8691505b60008612156109535792159261094c86600019610e5a565b9050610956565b50845b6109618383836109b9565b9450836109745761097185610e3d565b94505b505050509392505050565b60006109a560008512610992578461099e565b61099e85600019610e5a565b84846109b9565b9050600084121561041a5761041781610e3d565b6000808060001985870985870292508281108382030391505080600014156109f357600084116109e857600080fd5b50829004905061041a565b8084116109ff57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600060208284031215610a7957600080fd5b5035919050565b8035600281900b8114610a9257600080fd5b919050565b600060208284031215610aa957600080fd5b61041a82610a80565b600060808284031215610ac457600080fd5b50919050565b600080600060608486031215610adf57600080fd5b610ae884610a80565b9250610af660208501610a80565b9150610b0460408501610a80565b90509250925092565b60008082840360a0811215610b2157600080fd5b610b2a84610a80565b92506080601f1982011215610b3e57600080fd5b506040516080810181811067ffffffffffffffff82111715610b7057634e487b7160e01b600052604160045260246000fd5b806040525060208401358152604084013560208201526060840135604082015260808401356060820152809150509250929050565b65ffffffffffff8116811461039057600080fd5b600080600080600060a08688031215610bd157600080fd5b85359450602086013593506040860135610bea81610ba5565b94979396509394606081013594506080013592915050565b813581556020820135600182015560408201356002820155600381016060830135610c2c81610ba5565b815465ffffffffffff191665ffffffffffff919091161790555050565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b850184121615610c7d57610c7d610c49565b6001600160ff1b0384018313811615610c9857610c98610c49565b50500390565b600082821015610cb057610cb0610c49565b500390565b600080821280156001600160ff1b0384900385131615610cd757610cd7610c49565b600160ff1b8390038412811615610cf057610cf0610c49565b50500190565b80516001600160a01b0381168114610a9257600080fd5b805163ffffffff81168114610a9257600080fd5b80518015158114610a9257600080fd5b600080600080600080600080610100898b031215610d4e57600080fd5b88516fffffffffffffffffffffffffffffffff81168114610d6e57600080fd5b80985050602089015180600f0b8114610d8657600080fd5b80975050604089015195506060890151945060808901518060060b8114610dac57600080fd5b9350610dba60a08a01610cf6565b9250610dc860c08a01610d0d565b9150610dd660e08a01610d21565b90509295985092959890939650565b600060208284031215610df757600080fd5b5051919050565b60008219821115610e1157610e11610c49565b500190565b600065ffffffffffff83811690831681811015610e3557610e35610c49565b039392505050565b6000600160ff1b821415610e5357610e53610c49565b5060000390565b60006001600160ff1b0381841382841380821686840486111615610e8057610e80610c49565b600160ff1b6000871282811687830589121615610e9f57610e9f610c49565b60008712925087820587128484161615610ebb57610ebb610c49565b87850587128184161615610ed157610ed1610c49565b50505092909302939250505056fea164736f6c634300080a000a608060405234801561001057600080fd5b5061038a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063461413191461005c5780637a79037514610078578063ecb217ea14610093578063f305839914610150578063f30dba9314610159575b600080fd5b61006560025481565b6040519081526020015b60405180910390f35b61009161008636600461022d565b600191909155600255565b005b6100916100a13660046102a1565b600298890b60009081526020819052604090206001600160801b03978816600160801b029790981696909617875560018701949094559585019190915560039093018054921515600160f81b026001600160f81b0363ffffffff909316600160d81b02929092166001600160d81b036001600160a01b03909616600160381b026001600160d81b031990941666ffffffffffffff90951694909417929092179390931691909117919091179055565b61006560015481565b6101d161016736600461035b565b60006020819052908152604090208054600182015460028301546003909301546001600160801b03831693600160801b909304600f0b9290600681900b90600160381b81046001600160a01b031690600160d81b810463ffffffff1690600160f81b900460ff1688565b604080516001600160801b039099168952600f9790970b602089015295870194909452606086019290925260060b60808501526001600160a01b031660a084015263ffffffff1660c0830152151560e08201526101000161006f565b6000806040838503121561024057600080fd5b50508035926020909101359150565b8035600281900b811461026157600080fd5b919050565b80356001600160a01b038116811461026157600080fd5b803563ffffffff8116811461026157600080fd5b8035801515811461026157600080fd5b60008060008060008060008060006101208a8c0312156102c057600080fd5b6102c98a61024f565b985060208a01356001600160801b03811681146102e557600080fd5b975060408a0135600f81900b81146102fc57600080fd5b965060608a0135955060808a0135945060a08a0135600681900b811461032157600080fd5b935061032f60c08b01610266565b925061033d60e08b0161027d565b915061034c6101008b01610291565b90509295985092959850929598565b60006020828403121561036d57600080fd5b6103768261024f565b939250505056fea164736f6c634300080a000a';

type TickTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TickTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TickTest__factory extends ContractFactory {
  constructor(...args: TickTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TickTest> {
    return super.deploy(overrides || {}) as Promise<TickTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TickTest {
    return super.attach(address) as TickTest;
  }
  connect(signer: Signer): TickTest__factory {
    return super.connect(signer) as TickTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickTestInterface {
    return new utils.Interface(_abi) as TickTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TickTest {
    return new Contract(address, _abi, signerOrProvider) as TickTest;
  }
}
