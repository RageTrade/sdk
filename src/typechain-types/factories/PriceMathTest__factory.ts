/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PriceMathTest, PriceMathTestInterface } from '../PriceMathTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'toPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506101cf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f868ea0214610030575b600080fd5b61004361003e366004610199565b610055565b60405190815260200160405180910390f35b600061006082610066565b92915050565b60006401000276a36001600160a01b03831610806100a1575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156100ce57604051635d236c4560e01b81526001600160a01b038316600482015260240160405180910390fd5b6100606001600160a01b0383168068010000000000000000600080806000198587098587029250828110838203039150508060001415610120576000841161011557600080fd5b508290049050610192565b80841161012c57600080fd5b60008486880960018619810187169687900496828603819004959092119093036000829003919091049092019190910291909117600260038502811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6000602082840312156101ab57600080fd5b81356001600160a01b038116811461019257600080fdfea164736f6c634300080a000a';

type PriceMathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceMathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceMathTest__factory extends ContractFactory {
  constructor(...args: PriceMathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceMathTest> {
    return super.deploy(overrides || {}) as Promise<PriceMathTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceMathTest {
    return super.attach(address) as PriceMathTest;
  }
  connect(signer: Signer): PriceMathTest__factory {
    return super.connect(signer) as PriceMathTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceMathTestInterface {
    return new utils.Interface(_abi) as PriceMathTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceMathTest {
    return new Contract(address, _abi, signerOrProvider) as PriceMathTest;
  }
}
