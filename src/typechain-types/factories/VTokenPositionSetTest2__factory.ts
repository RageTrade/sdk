/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionSetTest2,
  VTokenPositionSetTest2Interface,
} from '../VTokenPositionSetTest2';

const _abi = [
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'IllegalTicks',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'TokenInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllTokenPositionValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isInititalMargin',
        type: 'bool',
      },
    ],
    name: 'getRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'balanceAdjustments',
        type: 'tuple',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'update',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506136d7806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634bed187d116100665780634bed187d1461012a5780637675995e1461013d57806388077639146101455780638ce7442614610158578063f46a1de8146101fa57600080fd5b80630e2bdde6146100a357806319ab453c146100b85780631ca45818146100cb5780632a66e9ca146100e75780633fd687a1146100fa575b600080fd5b6100b66100b1366004612b66565b61020d565b005b6100b66100c6366004612c2f565b610221565b6100d4606c5481565b6040519081526020015b60405180910390f35b6100b66100f5366004612c4c565b610260565b6100b6610108366004612c2f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6100b6610138366004612c8e565b6102f7565b6100d4610309565b6100b6610153366004612d0a565b61031e565b6003546040805160608101825260045461ffff808216835262010000820481166020840152600160201b90910416918101919091526005546006546007546101aa946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e0016100de565b6100d4610208366004612d55565b610342565b61021b606e83836000610359565b50505050565b61022c606e8261038b565b63ffffffff81166000908152606d6020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b8160006001600160a01b03821663ffffffff80821660009081526002602052604081205492935061029b926001600160a01b0316916103a116565b6102a7576102a7612d72565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835290829052902083906102ef8282612db5565b505050505050565b610305606e838360006103b2565b5050565b6000610319606e606d600061049d565b905090565b84600461032b8282612ef0565b5050600593909355600691909155600755606c5550565b6000610353606e83606d60006105b3565b92915050565b60008061037e85856103746001600160a01b03831687610708565b899291908761072a565b9150915094509492505050565b610305600183016001600160a01b0383166107bf565b6001600160a01b0390811691161490565b60038101546001600160a01b03838116911681146103e2576103d585848461090a565b6103e260018601826107bf565b63ffffffff811660009081526002860160209081526040822090860151815491929091839190610413908490612f74565b90915550506040850151600182018054600090610431908490612f74565b9091555050600383015463ffffffff16600090815260028701602052604081208651815491929091839190610467908490612f74565b909155505081541580156104855750600382015465ffffffffffff16155b1561049457610494878661093b565b50505050505050565b6000805b60088160ff161015610584576000856001018260ff16600881106104c7576104c7612fb5565b60088104919091015460079091166004026101000a900463ffffffff169050806104f15750610584565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b039091169161052f908290849089906109c216565b6105399086612f74565b945060006105506001600160a01b038416886109f1565b90506105616003830182858a610a2f565b61056b9087612f74565b955050505050808061057c90612fcb565b9150506104a1565b50600382015463ffffffff1660009081526002850160205260409020546105ab9082612f74565b949350505050565b600080808080805b60088160ff1610156106e657896001018160ff16600881106105df576105df612fb5565b60088104919091015460079091166004026101000a900463ffffffff16610605576106e6565b60008860008c6001018460ff166008811061062257610622612fb5565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b0316915061066f908c908c9084908c90610a5916565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff16156106bc576106a98487612f74565b95506106b58386612f74565b94506106d3565b6106c68484610b1b565b6106d09088612f74565b96505b50806106de81612fcb565b9150506105bb565b506106f18484610b1b565b6106fb9086612f74565b9998505050505050505050565b6001600160a01b03918216600090815260209190915260409020600101541690565b6000808061073b8888600187610b32565b905061076160405180606001604052806000815260200160008152602001600081525090565b88546107759060038401908a8a8a86610bbd565b61078189828a886103b2565b8660a00151156107a9576107a688826040015161079d90612feb565b8b919088610c15565b50505b6020810151905190999098509650505050505050565b63ffffffff81166107eb57604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b600881101561089e578263ffffffff1684826008811061081257610812612fb5565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156108405750505050565b8160081480156108835750600084826008811061085f5761085f612fb5565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b1561088c578091505b8061089681613008565b9150506107f0565b5080600814156108c957604051630695727160e11b815263ffffffff831660048201526024016107e2565b818382600881106108dc576108dc612fb5565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b6001600160a01b0380831660009081526020839052604090206001015461093691859185911684610c5d565b505050565b63ffffffff811660009081526002830160205260409020546001600160a01b0382169015158061098c575063ffffffff8116600090815260028401602052604090206003015465ffffffffffff1615155b156109b55760405163aeed59dd60e01b81526001600160a01b03831660048201526024016107e2565b6109366001840182610d87565b6000806109d86001600160a01b03851684610f6d565b90506109e685858386610f93565b9150505b9392505050565b6001600160a01b0380831660009081526020839052604081206002810154905491926109ea92169063ffffffff600160201b909104811690610fb216565b6000610a5084610a486001600160a01b03861685610708565b879190610fd3565b95945050505050565b63ffffffff8083166000908152600286016020526040812090918291908290610a8f906001600160a01b038816908790610f6d16565b90506000610aa76001600160a01b0388168988611077565b83549091506000610aba600386016110d1565b9050610aea61ffff8416620186a0610ae387600160801b82610adc888a612f74565b6000610b1b565b919061114c565b9650610b0b61ffff8416620186a0610ae387600160801b82610adc89612feb565b9550505050505094509492505050565b600081831315610b2c575081610353565b50919050565b60038101546000906001600160a01b03858116911614610b9f578215610b6157610b5c858561038b565b610b9f565b610b77600186016001600160a01b038616611186565b610b9f576040516319a4abb360e21b81526001600160a01b03851660048201526024016107e2565b50505063ffffffff1660009081526002919091016020526040902090565b82516020840151600091610bd3918991906111a1565b60c0850151815491925090829060ff19166001836002811115610bf857610bf8613023565b02179055506040840151610494908890889088908590888861121a565b6040805160808101825283815260006020820181905291810182905260608101829052819061037e908690610c536001600160a01b03831687610708565b89929190876112ae565b63ffffffff8316600090815260028501602090815260408083208151631dde605760e21b815291519093926001600160a01b03871692637779815c92600480830193928290030181865afa158015610cb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdd9190613039565b600384015463ffffffff9081166000908152600289016020526040812092935090610d0c90859088906113cd16565b905080826000016000828254610d229190612f74565b909155505060028401839055875460408051600080825260208201529081018390526001600160a01b03891691907fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9060600160405180910390a35050505050505050565b63ffffffff8116610dae57604051633f16439160e01b8152600060048201526024016107e2565b600860005b6008811015610e67578263ffffffff16848260088110610dd557610dd5612fb5565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610e01578091505b838160088110610e1357610e13612fb5565b60088104919091015460079091166004026101000a900463ffffffff16610e555760008111610e43576000610e4e565b610e4e600182613052565b9050610e67565b80610e5f81613008565b915050610db3565b8160081461021b5781811415610eb9576000848360088110610e8b57610e8b612fb5565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555061021b565b838160088110610ecb57610ecb612fb5565b600891828204019190066004029054906101000a900463ffffffff166000858460088110610efb57610efb612fb5565b60089182820401919006600402878560088110610f1a57610f1a612fb5565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b60006109ea610f856001600160a01b038516846109f1565b6001600160a01b0316611452565b6000610a508584610fad6001600160a01b03881686610708565b6114ce565b600080610fc86001600160a01b038516846114f8565b90506105ab8161171b565b6000805b600581101561106f576000858260058110610ff457610ff4612fb5565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff166000141561102b575061106f565b65ffffffffffff81166000908152600187016020526040902061104f908686611a4d565b6110599084612f74565b925050808061106790613008565b915050610fd7565b509392505050565b600082156110a557506001600160a01b03831660009081526020829052604090206002015461ffff166109ea565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff166109ea565b6000805b6005811015610b2c5760008382600581106110f2576110f2612fb5565b600580820492909201549190066006026101000a900465ffffffffffff166000818152600186016020526040902090915061112c90611bdc565b6111369084613069565b925050808061114490613008565b9150506110d5565b60006111726000851261115f578461116b565b61116b85600019613081565b8484611c33565b905060008412156109ea576105ab81612feb565b60006111928383611ce1565b60ff1660ff1415905092915050565b60008160020b8360020b13156111d8576040516307981ccd60e01b8152600284810b600483015283900b60248201526044016107e2565b60006111e5858585611d58565b65ffffffffffff8116600090815260018701602052604090209250905061120b82611d6e565b61106f5761106f828585611d94565b611228848787868686611deb565b8354602082810151604080516101008504600290810b8252600160201b90950490940b9284019290925282820152516001600160a01b0387169188917f4926c62827d5760a170acd8b688ca78ac14a0e11ce80adb478f32409cc9031059181900360600190a38354600160381b90046001600160801b031661049457610494878561208a565b82516020840151604080860151905163bb152c5360e01b815260048101939093526001600160a01b03918216602484015215156044830152600091829185169063bb152c539060640160408051808303816000875af1158015611315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113399190613106565b909250905061134782612feb565b915061135281612feb565b604080516060810182528281526020810185905290810184905290915061137b888289876103b2565b875460408051858152602081018590526001600160a01b038a1692917f990ceea32d99a2be13d0832a6fe926be4aabf3b819cbf7d9638cbd5bcb1a4940910160405180910390a3509550959350505050565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561140e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114329190613039565b90506000611449828660020154876001015461210c565b610a5090612feb565b60006401000276a36001600160a01b038316108061148d575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156114b657604051635d236c4560e01b81526001600160a01b03831660048201526024016107e2565b6103536001600160a01b03831680600160401b611c33565b82546000906114e29084600160801b61114c565b90506114ee84836113cd565b6105ab9082612f74565b600063ffffffff8216611521576040516351a4d88160e01b8152600060048201526024016107e2565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061155657611556612fb5565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061158557611585612fb5565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd906115c690849060040161312a565b600060405180830381865afa92505050801561160457506040513d6000823e601f3d908101601f19168201604052611601919081019061320c565b60015b61167957836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611646573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166a91906132d8565b50939650611714945050505050565b60008260008151811061168e5761168e612fb5565b6020026020010151836001815181106116a9576116a9612fb5565b60200260200101516116bb919061337a565b905060006116cf63ffffffff8816836133e0565b905060008260060b1280156116f557506116ef63ffffffff88168361341e565b60060b15155b15611708578061170481613440565b9150505b94506103539350505050565b5092915050565b60008060008360020b12611732578260020b61173a565b8260020b6000035b9050620d89e88111156117735760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016107e2565b60006001821661178757600160801b611799565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156117cd576ffff97272373d413259a46990580e213a0260801c5b60048216156117ec576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561180b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561182a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611849576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611868576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611887576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156118a7576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156118c7576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156118e7576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611907576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611927576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611947576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611967576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611987576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156119a8576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156119c8576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156119e7576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611a04576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611a25578060001981611a2157611a216133ca565b0490505b600160201b810615611a38576001611a3b565b60005b60ff16602082901c0192505050919050565b6000806000611ad1611ac8856001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aba9190613464565b6001600160a01b0316612127565b879060006121b1565b915091506000611ae9866001600160a01b0316611452565b905081611afb8483600160801b61114c565b611b059190612f74565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015611b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9191906134e7565b9050611bb2611bad82606001518761227a90919063ffffffff16565b6122b1565b611bbc9083612f74565b81516040830151919350611bd2918791906122c7565b6109e69083612f74565b80546000908190611bf490610100900460020b61171b565b8354909150600090611c0f90600160201b900460020b61171b565b84549091506105ab9083908390600160381b90046001600160801b03166001612301565b600080806000198587098587029250828110838203039150508060001415611c6d5760008411611c6257600080fd5b5082900490506109ea565b808411611c7957600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000805b60088160ff161015611d4e578263ffffffff16848260ff1660088110611d0d57611d0d612fb5565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415611d3c579050610353565b80611d4681612fcb565b915050611ce5565b5060ff9392505050565b601882901b62ffffff8216016109ea84826123c1565b8054600090610100900460020b15158061035357505054600160201b900460020b151590565b611d9d83611d6e565b15611dba5760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af1158015611e5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e819190613503565b91945092509050611e958989898488612519565b8284600001818151611ea79190613539565b905250602084018051839190611ebe908390613539565b90525088546001600160a01b0388169089907fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a69906101008104600290810b91600160201b810490910b908b9060ff16611f1689612feb565b611f1f8b612feb565b604051611f3196959493929190613578565b60405180910390a36000611f7c866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a96573d6000803e3d6000fd5b90506000611f8b8b83836121b1565b5060018c0154909150611f9e9082613539565b86604001818151611faf9190612f74565b9052506000600f89900b131561200c578a5488908c90600790611fe3908490600160381b90046001600160801b03166135d0565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555061206b565b600088600f0b121561206b57612024886000196135fb565b8b548c90600790612046908490600160381b90046001600160801b03166136a2565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b6120758482612f74565b8b600101819055505050505050505050505050565b8054600160381b90046001600160801b0316156120eb57805460405163042f31f360e01b81526101008204600290810b6004830152600160201b8304900b6024820152600160381b9091046001600160801b031660448201526064016107e2565b80546109369083906101008104600290810b91600160201b9004900b612665565b60006105ab61211b8486613539565b8390600160801b61267b565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218c91906132d8565b509496509294505050506001600160a01b03831615159050610b2c576109ea8161171b565b8254600090819081906121cb90610100900460020b61171b565b86549091506000906121e690600160201b900460020b61171b565b9050856001600160a01b038084169082161015612204575081612221565b816001600160a01b0316876001600160a01b031611156122215750805b875461224590611bad9083908590600160381b90046001600160801b03168a612301565b945061226d611bad84838b60000160079054906101000a90046001600160801b03168a6126d5565b9350505050935093915050565b815460058301546000916109ea91600160381b9091046001600160801b031690600160801b906122aa9086613052565b9190611c33565b6000600160ff1b82106122c357600080fd5b5090565b60028301546003840154600485015485546000936122f89387938793600160381b90046001600160801b0316612745565b6105ab90612feb565b6000836001600160a01b0316856001600160a01b03161115612321579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661235457600080fd5b8361238a57866001600160a01b03166123778383896001600160a01b0316611c33565b81612384576123846133ca565b046123b6565b6123b66123a18383896001600160a01b031661276d565b886001600160a01b0316808204910615150190565b979650505050505050565b65ffffffffffff81166123ea5760405163fda0966560e01b8152600060048201526024016107e2565b600560005b60058110156124a7578265ffffffffffff1684826005811061241357612413612fb5565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1614156124455750505050565b81600514801561248c5750600084826005811061246457612464612fb5565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16145b15612495578091505b8061249f81613008565b9150506123ef565b5080600514156124d457604051636d29aed360e01b815265ffffffffffff831660048201526024016107e2565b818382600581106124e7576124e7612fb5565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050565b8151604083015160009161252f918891906122c7565b905080826000018181516125439190612f74565b905250606083015160009061255d90611bad90899061227a565b905080836000018181516125719190612f74565b9052508654604080516101008304600290810b8252600160201b90930490920b602083015281018390526001600160a01b0386169087907fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b602083015281018290526001600160a01b0386169087907f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c9060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b601882901b62ffffff8216016109ea84826127ad565b6000600181808061268c88856129b6565b9450925061269a87856129b6565b945091506126a886856129b6565b945090506126b7838383611c33565b9450836126ca576126c785612feb565b94505b505050509392505050565b6000836001600160a01b0316856001600160a01b031611156126f5579293925b816127225761271d836001600160801b03168686036001600160a01b0316600160601b611c33565b610a50565b610a50836001600160801b03168686036001600160a01b0316600160601b61276d565b60006123b682600160801b61275c8888888d6129e0565b612766908a613539565b9190612a05565b600061277a848484611c33565b90506000828061278c5761278c6133ca565b84860911156109ea5760001981106127a357600080fd5b6001019392505050565b65ffffffffffff81166127d65760405163fda0966560e01b8152600060048201526024016107e2565b600560005b60058110156128a2578265ffffffffffff168482600581106127ff576127ff612fb5565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16141561282f578091505b83816005811061284157612841612fb5565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1660001415612890576000811161287e576000612889565b612889600182613052565b90506128a2565b8061289a81613008565b9150506127db565b8160051461021b57818114156128f85760008483600581106128c6576128c6612fb5565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff16021790555061021b565b83816005811061290a5761290a612fb5565b600591828204019190066006029054906101000a900465ffffffffffff16600085846005811061293c5761293c612fb5565b6005918282040191900660060287856005811061295b5761295b612fb5565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050505050565b60008060008412156129d5579115916129ce84612feb565b91506129d9565b8391505b5092909150565b60006129fb6129ef8684613539565b8590600160801b61267b565b610a509084612f74565b6000612a1284848461114c565b9050600081128015612a325750612a32612a2b85612a43565b8484612a4e565b156109ea576105ab60001982612f74565b600061035382612a65565b600081838509801561106f57506001949350505050565b60008082136122c357612a7782612feb565b610353565b6001600160a01b0381168114612a9157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612acd57612acd612a94565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612afc57612afc612a94565b604052919050565b8060020b8114612a9157600080fd5b8035612b1e81612a7c565b919050565b61ffff81168114612a9157600080fd5b8035612b1e81612b23565b8015158114612a9157600080fd5b8035612b1e81612b3e565b803560038110612b1e57600080fd5b600080828403610100811215612b7b57600080fd5b8335612b8681612a7c565b925060e0601f1982011215612b9a57600080fd5b50612ba3612aaa565b6020840135612bb181612b04565b81526040840135612bc181612b04565b60208201526060840135600f81900b8114612bdb57600080fd5b6040820152612bec60808501612b13565b6060820152612bfd60a08501612b33565b6080820152612c0e60c08501612b4c565b60a0820152612c1f60e08501612b57565b60c0820152809150509250929050565b600060208284031215612c4157600080fd5b81356109ea81612a7c565b600080828403610100811215612c6157600080fd5b8335612c6c81612a7c565b925060e0601f1982011215612c8057600080fd5b506020830190509250929050565b6000808284036080811215612ca257600080fd5b6060811215612cb057600080fd5b506040516060810181811067ffffffffffffffff82111715612cd457612cd4612a94565b60409081528435825260208086013590830152848101359082015291506060830135612cff81612a7c565b809150509250929050565b600080600080600085870360e0811215612d2357600080fd5b6060811215612d3157600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b600060208284031215612d6757600080fd5b81356109ea81612b3e565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000813561035381612a7c565b8135612dc081612a7c565b612dca8183612d88565b506020820135612dd981612a7c565b612de68160018401612d88565b50600281016040830135612df981612b23565b815461ffff191661ffff8216178255506060830135612e1781612b23565b815463ffff00001916601082901b63ffff00001617825550608083013563ffffffff81168114612e4657600080fd5b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135612e7681612b3e565b68ffffffffff00000000199190911690911790151560401b68ff000000000000000016178155610936612eab60c08501612da8565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b8135612efb81612b23565b815461ffff191661ffff8216178255506020820135612f1981612b23565b815463ffff00001916601082901b63ffff000016178255506040820135612f3f81612b23565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615612f9657612f96612f5e565b600160ff1b8390038412811615612faf57612faf612f5e565b50500190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415612fe257612fe2612f5e565b60010192915050565b6000600160ff1b82141561300157613001612f5e565b5060000390565b600060001982141561301c5761301c612f5e565b5060010190565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561304b57600080fd5b5051919050565b60008282101561306457613064612f5e565b500390565b6000821982111561307c5761307c612f5e565b500190565b60006001600160ff1b03818413828413808216868404861116156130a7576130a7612f5e565b600160ff1b60008712828116878305891216156130c6576130c6612f5e565b600087129250878205871284841616156130e2576130e2612f5e565b878505871281841616156130f8576130f8612f5e565b505050929093029392505050565b6000806040838503121561311957600080fd5b505080516020909101519092909150565b6020808252825182820181905260009190848201906040850190845b8181101561316857835163ffffffff1683529284019291840191600101613146565b50909695505050505050565b600067ffffffffffffffff82111561318e5761318e612a94565b5060051b60200190565b600082601f8301126131a957600080fd5b815160206131be6131b983613174565b612ad3565b82815260059290921b840181019181810190868411156131dd57600080fd5b8286015b848110156132015780516131f481612a7c565b83529183019183016131e1565b509695505050505050565b6000806040838503121561321f57600080fd5b825167ffffffffffffffff8082111561323757600080fd5b818501915085601f83011261324b57600080fd5b8151602061325b6131b983613174565b82815260059290921b8401810191818101908984111561327a57600080fd5b948201945b838610156132a85785518060060b81146132995760008081fd5b8252948201949082019061327f565b918801519196509093505050808211156132c157600080fd5b506132ce85828601613198565b9150509250929050565b600080600080600080600060e0888a0312156132f357600080fd5b87516132fe81612a7c565b602089015190975061330f81612b04565b604089015190965061332081612b23565b606089015190955061333181612b23565b608089015190945061334281612b23565b60a089015190935060ff8116811461335957600080fd5b60c089015190925061336a81612b3e565b8091505092959891949750929550565b60008160060b8360060b6000811281667fffffffffffff19018312811516156133a5576133a5612f5e565b81667fffffffffffff0183138116156133c0576133c0612f5e565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b806133f7576133f76133ca565b667fffffffffffff1982146000198214161561341557613415612f5e565b90059392505050565b60008260060b80613431576134316133ca565b808360060b0791505092915050565b60008160020b627fffff1981141561345a5761345a612f5e565b6000190192915050565b60006020828403121561347657600080fd5b81516109ea81612a7c565b60006080828403121561349357600080fd5b6040516080810181811067ffffffffffffffff821117156134b6576134b6612a94565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b6000608082840312156134f957600080fd5b6109ea8383613481565b600080600060c0848603121561351857600080fd5b83519250602084015191506135308560408601613481565b90509250925092565b60008083128015600160ff1b85018412161561355757613557612f5e565b6001600160ff1b038401831381161561357257613572612f5e565b50500390565b600287810b825286900b6020820152600f85900b604082015260c08101600385106135b357634e487b7160e01b600052602160045260246000fd5b8460608301528360808301528260a0830152979650505050505050565b60006001600160801b038083168185168083038211156135f2576135f2612f5e565b01949350505050565b600081600f0b83600f0b6f7fffffffffffffffffffffffffffffff60008213600084138383048511828216161561363457613634612f5e565b6f7fffffffffffffffffffffffffffffff19600085128281168783058712161561366057613660612f5e565b6000871292508582058712848416161561367c5761367c612f5e565b8585058712818416161561369257613692612f5e565b5050509290910295945050505050565b60006001600160801b03838116908316818110156136c2576136c2612f5e565b03939250505056fea164736f6c634300080a000a';

type VTokenPositionSetTest2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionSetTest2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionSetTest2__factory extends ContractFactory {
  constructor(...args: VTokenPositionSetTest2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionSetTest2> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionSetTest2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VTokenPositionSetTest2 {
    return super.attach(address) as VTokenPositionSetTest2;
  }
  connect(signer: Signer): VTokenPositionSetTest2__factory {
    return super.connect(signer) as VTokenPositionSetTest2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionSetTest2Interface {
    return new utils.Interface(_abi) as VTokenPositionSetTest2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionSetTest2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VTokenPositionSetTest2;
  }
}
