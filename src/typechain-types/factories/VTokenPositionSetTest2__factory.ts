/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionSetTest2,
  VTokenPositionSetTest2Interface,
} from '../VTokenPositionSetTest2';

const _abi = [
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'IllegalTicks',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'TokenInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllTokenPositionValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'isInititalMargin',
        type: 'bool',
      },
    ],
    name: 'getRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'balanceAdjustments',
        type: 'tuple',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'update',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50613661806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634bed187d116100665780634bed187d1461012a5780637675995e1461013d57806388077639146101455780638ce7442614610158578063f46a1de8146101fa57600080fd5b80630e2bdde6146100a357806319ab453c146100b85780631ca45818146100cb5780632a66e9ca146100e75780633fd687a1146100fa575b600080fd5b6100b66100b1366004612aa8565b61020d565b005b6100b66100c6366004612b71565b610221565b6100d4606c5481565b6040519081526020015b60405180910390f35b6100b66100f5366004612b8e565b610260565b6100b6610108366004612b71565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6100b6610138366004612bd0565b6102f7565b6100d4610309565b6100b6610153366004612c4c565b61031e565b6003546040805160608101825260045461ffff808216835262010000820481166020840152600160201b90910416918101919091526005546006546007546101aa946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e0016100de565b6100d4610208366004612c97565b610342565b61021b606e83836000610359565b50505050565b61022c606e8261038b565b63ffffffff81166000908152606d6020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b8160006001600160a01b03821663ffffffff80821660009081526002602052604081205492935061029b926001600160a01b0316916103a116565b6102a7576102a7612cb4565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835290829052902083906102ef8282612cf7565b505050505050565b610305606e838360006103b2565b5050565b6000610319606e606d600061049d565b905090565b84600461032b8282612e32565b5050600593909355600691909155600755606c5550565b6000610353606e83606d60006105b3565b92915050565b60008061037e85856103746001600160a01b03831687610708565b899291908761072a565b9150915094509492505050565b610305600183016001600160a01b0383166107bf565b6001600160a01b0390811691161490565b60038101546001600160a01b03838116911681146103e2576103d585848461090a565b6103e260018601826107bf565b63ffffffff811660009081526002860160209081526040822090860151815491929091839190610413908490612eb6565b90915550506040850151600182018054600090610431908490612eb6565b9091555050600383015463ffffffff16600090815260028701602052604081208651815491929091839190610467908490612eb6565b909155505081541580156104855750600382015465ffffffffffff16155b1561049457610494878661093b565b50505050505050565b6000805b60088160ff161015610584576000856001018260ff16600881106104c7576104c7612ef7565b60088104919091015460079091166004026101000a900463ffffffff169050806104f15750610584565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b039091169161052f908290849089906109c316565b6105399086612eb6565b945060006105506001600160a01b038416886109f2565b90506105616003830182858a610a30565b61056b9087612eb6565b955050505050808061057c90612f0d565b9150506104a1565b50600382015463ffffffff1660009081526002850160205260409020546105ab9082612eb6565b949350505050565b600080808080805b60088160ff1610156106e657896001018160ff16600881106105df576105df612ef7565b60088104919091015460079091166004026101000a900463ffffffff16610605576106e6565b60008860008c6001018460ff166008811061062257610622612ef7565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b0316915061066f908c908c9084908c90610a5a16565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff16156106bc576106a98487612eb6565b95506106b58386612eb6565b94506106d3565b6106c68484610b1c565b6106d09088612eb6565b96505b50806106de81612f0d565b9150506105bb565b506106f18484610b1c565b6106fb9086612eb6565b9998505050505050505050565b6001600160a01b03918216600090815260209190915260409020600101541690565b6000808061073b8888600187610b33565b905061076160405180606001604052806000815260200160008152602001600081525090565b88546107759060038401908a8a8a86610bbe565b61078189828a886103b2565b8660a00151156107a9576107a688826040015161079d90612f2d565b8b919088610c16565b50505b6020810151905190999098509650505050505050565b63ffffffff81166107eb57604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b600881101561089e578263ffffffff1684826008811061081257610812612ef7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156108405750505050565b8160081480156108835750600084826008811061085f5761085f612ef7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b1561088c578091505b8061089681612f4a565b9150506107f0565b5080600814156108c957604051630695727160e11b815263ffffffff831660048201526024016107e2565b818382600881106108dc576108dc612ef7565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b6001600160a01b0380831660009081526020839052604090206001015461093691859185911684610c5e565b505050565b63ffffffff811660009081526002830160205260409020546001600160a01b038216901580159061098d575063ffffffff8116600090815260028401602052604090206003015465ffffffffffff1615155b156109b65760405163aeed59dd60e01b81526001600160a01b03831660048201526024016107e2565b6109366001840182610d7a565b6000806109d96001600160a01b03851684610f60565b90506109e785858386610f86565b9150505b9392505050565b6001600160a01b0380831660009081526020839052604081206002810154905491926109eb92169063ffffffff600160201b909104811690610fa516565b6000610a5184610a496001600160a01b03861685610708565b879190610fc6565b95945050505050565b63ffffffff8083166000908152600286016020526040812090918291908290610a90906001600160a01b038816908790610f6016565b90506000610aa86001600160a01b038816898861106a565b83549091506000610abb600386016110c4565b9050610aeb61ffff8416620186a0610ae487600160801b82610add888a612eb6565b6000610b1c565b919061113f565b9650610b0c61ffff8416620186a0610ae487600160801b82610add89612f2d565b9550505050505094509492505050565b600081831315610b2d575081610353565b50919050565b60038101546000906001600160a01b03858116911614610ba0578215610b6257610b5d858561038b565b610ba0565b610b78600186016001600160a01b038616611179565b610ba0576040516319a4abb360e21b81526001600160a01b03851660048201526024016107e2565b50505063ffffffff1660009081526002919091016020526040902090565b82516020840151600091610bd491899190611194565b60c0850151815491925090829060ff19166001836002811115610bf957610bf9612f65565b02179055506040840151610494908890889088908590888861120d565b6040805160808101825283815260006020820181905291810182905260608101829052819061037e908690610c546001600160a01b03831687610708565b8992919087611292565b63ffffffff8316600090815260028501602090815260408083208151631dde605760e21b815291519093926001600160a01b03871692637779815c92600480830193928290030181865afa158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde9190612f7b565b600384015463ffffffff9081166000908152600289016020526040812092935090610d0d90859088906113bb16565b905080826000016000828254610d239190612eb6565b90915550506002840183905587546040517fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c91610d68918a9060009081908790612f94565b60405180910390a15050505050505050565b63ffffffff8116610da157604051633f16439160e01b8152600060048201526024016107e2565b600860005b6008811015610e5a578263ffffffff16848260088110610dc857610dc8612ef7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610df4578091505b838160088110610e0657610e06612ef7565b60088104919091015460079091166004026101000a900463ffffffff16610e485760008111610e36576000610e41565b610e41600182612fc4565b9050610e5a565b80610e5281612f4a565b915050610da6565b8160081461021b5781811415610eac576000848360088110610e7e57610e7e612ef7565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555061021b565b838160088110610ebe57610ebe612ef7565b600891828204019190066004029054906101000a900463ffffffff166000858460088110610eee57610eee612ef7565b60089182820401919006600402878560088110610f0d57610f0d612ef7565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b60006109eb610f786001600160a01b038516846109f2565b6001600160a01b0316611440565b6000610a518584610fa06001600160a01b03881686610708565b6114bc565b600080610fbb6001600160a01b038516846114e6565b90506105ab81611709565b6000805b6005811015611062576000858260058110610fe757610fe7612ef7565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff166000141561101e5750611062565b65ffffffffffff811660009081526001870160205260409020611042908686611a3b565b61104c9084612eb6565b925050808061105a90612f4a565b915050610fca565b509392505050565b6000821561109857506001600160a01b03831660009081526020829052604090206002015461ffff166109eb565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff166109eb565b6000805b6005811015610b2d5760008382600581106110e5576110e5612ef7565b600580820492909201549190066006026101000a900465ffffffffffff166000818152600186016020526040902090915061111f90611b54565b6111299084612fdb565b925050808061113790612f4a565b9150506110c8565b600061116560008512611152578461115e565b61115e85600019612ff3565b8484611bab565b905060008412156109eb576105ab81612f2d565b60006111858383611c59565b60ff1660ff1415905092915050565b60008160020b8360020b13156111cb576040516307981ccd60e01b8152600284810b600483015283900b60248201526044016107e2565b60006111d8858585611cd0565b65ffffffffffff811660009081526001870160205260409020925090506111fe82611ce6565b61106257611062828585611d0c565b61121b848787868686611d63565b835460208201516040517f4926c62827d5760a170acd8b688ca78ac14a0e11ce80adb478f32409cc9031059261126a928a928a926101008104600290810b93600160201b909204900b91612f94565b60405180910390a18354600160381b90046001600160801b031661049457610494878561202d565b82516020840151604080860151905163bb152c5360e01b815260048101939093526001600160a01b03918216602484015215156044830152600091829185169063bb152c539060640160408051808303816000875af11580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d9190613078565b909250905061132b82612f2d565b915061133681612f2d565b604080516060810182528281526020810185905290810184905290915061135f888289876103b2565b8754604080519182526001600160a01b03891660208301528101849052606081018390527f990ceea32d99a2be13d0832a6fe926be4aabf3b819cbf7d9638cbd5bcb1a49409060800160405180910390a1509550959350505050565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114209190612f7b565b9050600061143782866002015487600101546120af565b610a5190612f2d565b60006401000276a36001600160a01b038316108061147b575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156114a457604051635d236c4560e01b81526001600160a01b03831660048201526024016107e2565b6103536001600160a01b03831680600160401b611bab565b82546000906114d09084600160801b61113f565b90506114dc84836113bb565b6105ab9082612eb6565b600063ffffffff821661150f576040516351a4d88160e01b8152600060048201526024016107e2565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061154457611544612ef7565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061157357611573612ef7565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd906115b490849060040161309c565b600060405180830381865afa9250505080156115f257506040513d6000823e601f3d908101601f191682016040526115ef919081019061317e565b60015b61166757836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611634573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611658919061324a565b50939650611702945050505050565b60008260008151811061167c5761167c612ef7565b60200260200101518360018151811061169757611697612ef7565b60200260200101516116a991906132ec565b905060006116bd63ffffffff881683613352565b905060008260060b1280156116e357506116dd63ffffffff881683613390565b60060b15155b156116f657806116f2816133b2565b9150505b94506103539350505050565b5092915050565b60008060008360020b12611720578260020b611728565b8260020b6000035b9050620d89e88111156117615760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016107e2565b60006001821661177557600160801b611787565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156117bb576ffff97272373d413259a46990580e213a0260801c5b60048216156117da576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156117f9576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615611818576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611837576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611856576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611875576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611895576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156118b5576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156118d5576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156118f5576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611915576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611935576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611955576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611975576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611996576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156119b6576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156119d5576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156119f2576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611a13578060001981611a0f57611a0f61333c565b0490505b600160201b810615611a26576001611a29565b60005b60ff16602082901c0192505050919050565b60008080611a4986866120ca565b915091506000611a61866001600160a01b0316611440565b905081611a738483600160801b61113f565b611a7d9190612eb6565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015611ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b09919061343c565b9050611b2a611b2582606001518761219490919063ffffffff16565b6121cb565b611b349083612eb6565b81516040830151919350611b4a918791906121e1565b6109e79083612eb6565b80546000908190611b6c90610100900460020b611709565b8354909150600090611b8790600160201b900460020b611709565b84549091506105ab9083908390600160381b90046001600160801b0316600161221b565b600080806000198587098587029250828110838203039150508060001415611be55760008411611bda57600080fd5b5082900490506109eb565b808411611bf157600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000805b60088160ff161015611cc6578263ffffffff16848260ff1660088110611c8557611c85612ef7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415611cb4579050610353565b80611cbe81612f0d565b915050611c5d565b5060ff9392505050565b601882901b62ffffff8216016109eb84826122db565b8054600090610100900460020b15158061035357505054600160201b900460020b151590565b611d1583611ce6565b15611d325760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af1158015611dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df99190613458565b91945092509050611e0d8989898488612433565b8284600001818151611e1f919061348e565b905250602084018051839190611e3690839061348e565b90525088547fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a6990899089906101008104600290810b91600160201b810490910b908b9060ff16611e8589612f2d565b611e8e8b612f2d565b604051611ea29897969594939291906134cd565b60405180910390a16000611f1f866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f11919061353d565b6001600160a01b0316612563565b90506000611f2d8b836120ca565b5090508a6001015481611f40919061348e565b86604001818151611f519190612eb6565b905250506000600f88900b1315611fb857895487908b90600790611f86908490600160381b90046001600160801b031661355a565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828a60010181905550612021565b600087600f0b121561202157611fd087600019613585565b8a548b90600790611ff2908490600160381b90046001600160801b031661362c565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060008a600101819055505b50505050505050505050565b8054600160381b90046001600160801b03161561208e57805460405163042f31f360e01b81526101008204600290810b6004830152600160201b8304900b6024820152600160381b9091046001600160801b031660448201526064016107e2565b80546109369083906101008104600290810b91600160201b9004900b6125ed565b60006105ab6120be848661348e565b8390600160801b612603565b8154600090819081906120e490610100900460020b611709565b85549091506000906120ff90600160201b900460020b611709565b9050846001600160a01b03808416908216101561211d57508161213a565b816001600160a01b0316866001600160a01b0316111561213a5750805b865461215f90611b259083908590600160381b90046001600160801b0316600061221b565b9450612188611b2584838a60000160079054906101000a90046001600160801b03166000612694565b93505050509250929050565b815460058301546000916109eb91600160381b9091046001600160801b031690600160801b906121c49086612fc4565b9190611bab565b6000600160ff1b82106121dd57600080fd5b5090565b60028301546003840154600485015485546000936122129387938793600160381b90046001600160801b0316612704565b6105ab90612f2d565b6000836001600160a01b0316856001600160a01b0316111561223b579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661226e57600080fd5b836122a457866001600160a01b03166122918383896001600160a01b0316611bab565b8161229e5761229e61333c565b046122d0565b6122d06122bb8383896001600160a01b031661272c565b886001600160a01b0316808204910615150190565b979650505050505050565b65ffffffffffff81166123045760405163fda0966560e01b8152600060048201526024016107e2565b600560005b60058110156123c1578265ffffffffffff1684826005811061232d5761232d612ef7565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16141561235f5750505050565b8160051480156123a65750600084826005811061237e5761237e612ef7565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16145b156123af578091505b806123b981612f4a565b915050612309565b5080600514156123ee57604051636d29aed360e01b815265ffffffffffff831660048201526024016107e2565b8183826005811061240157612401612ef7565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050565b81516040830151600091612449918891906121e1565b9050808260000181815161245d9190612eb6565b905250606083015160009061247790611b25908990612194565b9050808360000181815161248b9190612eb6565b90525086546040517fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c916124d991899189916101008204600290810b92600160201b9004900b908890612f94565b60405180910390a186546040517f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c9161252c91899189916101008204600290810b92600160201b9004900b908790612f94565b60405180910390a1505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156125a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125c8919061324a565b509496509294505050506001600160a01b03831615159050610b2d576109eb81611709565b601882901b62ffffff8216016109eb848261276c565b60006001818080808812156126255792159261261e88612f2d565b9250612629565b8792505b60008712156126455792159261263e87612f2d565b9150612649565b8691505b60008612156126685792159261266186600019612ff3565b905061266b565b50845b612676838383611bab565b9450836126895761268685612f2d565b94505b505050509392505050565b6000836001600160a01b0316856001600160a01b031611156126b4579293925b816126e1576126dc836001600160801b03168686036001600160a01b0316600160601b611bab565b610a51565b610a51836001600160801b03168686036001600160a01b0316600160601b61272c565b60006122d082600160801b61271b8888888d612975565b612725908a61348e565b919061299a565b6000612739848484611bab565b90506000828061274b5761274b61333c565b84860911156109eb57600019811061276257600080fd5b6001019392505050565b65ffffffffffff81166127955760405163fda0966560e01b8152600060048201526024016107e2565b600560005b6005811015612861578265ffffffffffff168482600581106127be576127be612ef7565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1614156127ee578091505b83816005811061280057612800612ef7565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000141561284f576000811161283d576000612848565b612848600182612fc4565b9050612861565b8061285981612f4a565b91505061279a565b8160051461021b57818114156128b757600084836005811061288557612885612ef7565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff16021790555061021b565b8381600581106128c9576128c9612ef7565b600591828204019190066006029054906101000a900465ffffffffffff1660008584600581106128fb576128fb612ef7565b6005918282040191900660060287856005811061291a5761291a612ef7565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050505050565b6000612990612984868461348e565b8590600160801b612603565b610a519084612eb6565b60006129a784848461113f565b905060008112156109eb576105ab60001982612eb6565b6001600160a01b03811681146129d357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715612a0f57612a0f6129d6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612a3e57612a3e6129d6565b604052919050565b8060020b81146129d357600080fd5b8035612a60816129be565b919050565b61ffff811681146129d357600080fd5b8035612a6081612a65565b80151581146129d357600080fd5b8035612a6081612a80565b803560038110612a6057600080fd5b600080828403610100811215612abd57600080fd5b8335612ac8816129be565b925060e0601f1982011215612adc57600080fd5b50612ae56129ec565b6020840135612af381612a46565b81526040840135612b0381612a46565b60208201526060840135600f81900b8114612b1d57600080fd5b6040820152612b2e60808501612a55565b6060820152612b3f60a08501612a75565b6080820152612b5060c08501612a8e565b60a0820152612b6160e08501612a99565b60c0820152809150509250929050565b600060208284031215612b8357600080fd5b81356109eb816129be565b600080828403610100811215612ba357600080fd5b8335612bae816129be565b925060e0601f1982011215612bc257600080fd5b506020830190509250929050565b6000808284036080811215612be457600080fd5b6060811215612bf257600080fd5b506040516060810181811067ffffffffffffffff82111715612c1657612c166129d6565b60409081528435825260208086013590830152848101359082015291506060830135612c41816129be565b809150509250929050565b600080600080600085870360e0811215612c6557600080fd5b6060811215612c7357600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b600060208284031215612ca957600080fd5b81356109eb81612a80565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008135610353816129be565b8135612d02816129be565b612d0c8183612cca565b506020820135612d1b816129be565b612d288160018401612cca565b50600281016040830135612d3b81612a65565b815461ffff191661ffff8216178255506060830135612d5981612a65565b815463ffff00001916601082901b63ffff00001617825550608083013563ffffffff81168114612d8857600080fd5b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135612db881612a80565b68ffffffffff00000000199190911690911790151560401b68ff000000000000000016178155610936612ded60c08501612cea565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b8135612e3d81612a65565b815461ffff191661ffff8216178255506020820135612e5b81612a65565b815463ffff00001916601082901b63ffff000016178255506040820135612e8181612a65565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615612ed857612ed8612ea0565b600160ff1b8390038412811615612ef157612ef1612ea0565b50500190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415612f2457612f24612ea0565b60010192915050565b6000600160ff1b821415612f4357612f43612ea0565b5060000390565b6000600019821415612f5e57612f5e612ea0565b5060010190565b634e487b7160e01b600052602160045260246000fd5b600060208284031215612f8d57600080fd5b5051919050565b9485526001600160a01b03939093166020850152600291820b6040850152900b6060830152608082015260a00190565b600082821015612fd657612fd6612ea0565b500390565b60008219821115612fee57612fee612ea0565b500190565b60006001600160ff1b038184138284138082168684048611161561301957613019612ea0565b600160ff1b600087128281168783058912161561303857613038612ea0565b6000871292508782058712848416161561305457613054612ea0565b8785058712818416161561306a5761306a612ea0565b505050929093029392505050565b6000806040838503121561308b57600080fd5b505080516020909101519092909150565b6020808252825182820181905260009190848201906040850190845b818110156130da57835163ffffffff16835292840192918401916001016130b8565b50909695505050505050565b600067ffffffffffffffff821115613100576131006129d6565b5060051b60200190565b600082601f83011261311b57600080fd5b8151602061313061312b836130e6565b612a15565b82815260059290921b8401810191818101908684111561314f57600080fd5b8286015b84811015613173578051613166816129be565b8352918301918301613153565b509695505050505050565b6000806040838503121561319157600080fd5b825167ffffffffffffffff808211156131a957600080fd5b818501915085601f8301126131bd57600080fd5b815160206131cd61312b836130e6565b82815260059290921b840181019181810190898411156131ec57600080fd5b948201945b8386101561321a5785518060060b811461320b5760008081fd5b825294820194908201906131f1565b9188015191965090935050508082111561323357600080fd5b506132408582860161310a565b9150509250929050565b600080600080600080600060e0888a03121561326557600080fd5b8751613270816129be565b602089015190975061328181612a46565b604089015190965061329281612a65565b60608901519095506132a381612a65565b60808901519094506132b481612a65565b60a089015190935060ff811681146132cb57600080fd5b60c08901519092506132dc81612a80565b8091505092959891949750929550565b60008160060b8360060b6000811281667fffffffffffff190183128115161561331757613317612ea0565b81667fffffffffffff01831381161561333257613332612ea0565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b806133695761336961333c565b667fffffffffffff1982146000198214161561338757613387612ea0565b90059392505050565b60008260060b806133a3576133a361333c565b808360060b0791505092915050565b60008160020b627fffff198114156133cc576133cc612ea0565b6000190192915050565b6000608082840312156133e857600080fd5b6040516080810181811067ffffffffffffffff8211171561340b5761340b6129d6565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006080828403121561344e57600080fd5b6109eb83836133d6565b600080600060c0848603121561346d57600080fd5b835192506020840151915061348585604086016133d6565b90509250925092565b60008083128015600160ff1b8501841216156134ac576134ac612ea0565b6001600160ff1b03840183138116156134c7576134c7612ea0565b50500390565b8881526001600160a01b0388166020820152600287810b604083015286900b6060820152600f85900b608082015261010081016003851061351e57634e487b7160e01b600052602160045260246000fd5b8460a08301528360c08301528260e08301529998505050505050505050565b60006020828403121561354f57600080fd5b81516109eb816129be565b60006001600160801b0380831681851680830382111561357c5761357c612ea0565b01949350505050565b600081600f0b83600f0b6f7fffffffffffffffffffffffffffffff6000821360008413838304851182821616156135be576135be612ea0565b6f7fffffffffffffffffffffffffffffff1960008512828116878305871216156135ea576135ea612ea0565b6000871292508582058712848416161561360657613606612ea0565b8585058712818416161561361c5761361c612ea0565b5050509290910295945050505050565b60006001600160801b038381169083168181101561364c5761364c612ea0565b03939250505056fea164736f6c634300080a000a';

type VTokenPositionSetTest2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionSetTest2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionSetTest2__factory extends ContractFactory {
  constructor(...args: VTokenPositionSetTest2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionSetTest2> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionSetTest2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VTokenPositionSetTest2 {
    return super.attach(address) as VTokenPositionSetTest2;
  }
  connect(signer: Signer): VTokenPositionSetTest2__factory {
    return super.connect(signer) as VTokenPositionSetTest2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionSetTest2Interface {
    return new utils.Interface(_abi) as VTokenPositionSetTest2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionSetTest2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VTokenPositionSetTest2;
  }
}
