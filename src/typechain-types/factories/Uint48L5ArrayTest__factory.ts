/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  Uint48L5ArrayTest,
  Uint48L5ArrayTestInterface,
} from '../Uint48L5ArrayTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'exclude',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'exists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
    ],
    name: 'getter',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getterAll',
    outputs: [
      {
        internalType: 'uint48[5]',
        name: '',
        type: 'uint48[5]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'include',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'length',
    outputs: [
      {
        internalType: 'uint8',
        name: 'len',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numberOfNonZeroElements',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'setter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610995806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634c84b36e1161005b5780634c84b36e146100ec57806394d881cb14610116578063968cf6cf14610129578063b0825a631461013c57600080fd5b806304a2c3391461008d5780631f7b6d32146100a2578063296eaea2146100c15780633fc1d8ce146100d7575b600080fd5b6100a061009b366004610804565b61015f565b005b6100aa61016d565b60405160ff90911681526020015b60405180910390f35b6100c9610223565b6040519081526020016100b8565b6100df610234565b6040516100b89190610826565b6100ff6100fa366004610870565b61029d565b60405165ffffffffffff90911681526020016100b8565b6100a061012436600461088b565b6102d9565b6100a0610137366004610804565b610321565b61014f61014a366004610804565b61032c565b60405190151581526020016100b8565b61016a60008261033e565b50565b6000805b600581101561021f576000816005811061018d5761018d6108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000146101c857816101c4816108ea565b9250505b600081600581106101db576101db6108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000141561020d575090565b806102178161090a565b915050610171565b5090565b600061022f6000610493565b905090565b61023c6107cb565b6040805160a0810191829052906000906005908280855b82829054906101000a900465ffffffffffff1665ffffffffffff16815260200190600601906020826005010492830192600103820291508084116102535790505050505050905090565b6000808260ff16600581106102b4576102b46108be565b600591828204019190066006029054906101000a900465ffffffffffff169050919050565b8060008360ff16600581106102f0576102f06108be565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff1602179055505050565b61016a60008261050a565b60006103388183610734565b92915050565b65ffffffffffff811661036c5760405163c712b5e960e01b8152600060048201526024015b60405180910390fd5b600560005b6005811015610421578265ffffffffffff16848260058110610395576103956108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1614156103c75750505050565b60008482600581106103db576103db6108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16141561040f57809150610421565b806104198161090a565b915050610371565b50600581141561044e57604051635503aeb560e01b815265ffffffffffff83166004820152602401610363565b81838260058110610461576104616108be565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050565b6000805b600560ff8216101561050157828160ff16600581106104b8576104b86108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156104ef5760ff1692915050565b806104f9816108ea565b915050610497565b50600592915050565b65ffffffffffff81166105335760405163c712b5e960e01b815260006004820152602401610363565b600560005b60058110156105ff578265ffffffffffff1684826005811061055c5761055c6108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16141561058c578091505b83816005811061059e5761059e6108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156105ed57600081116105db5760006105e6565b6105e6600182610925565b90506105ff565b806105f78161090a565b915050610538565b6005811461060d578061061d565b6106196001600561093c565b60ff165b90506005821461072e5781811415610675576000848360058110610643576106436108be565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff16021790555061072e565b838160058110610687576106876108be565b600591828204019190066006029054906101000a900465ffffffffffff1660008584600581106106b9576106b96108be565b600591828204019190066006028785600581106106d8576106d86108be565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff16021790555050505b50505050565b60006005610742848461074e565b60ff1614159392505050565b6000805b600560ff821610156107c1578265ffffffffffff16848260ff166005811061077c5761077c6108be565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1614156107af579050610338565b806107b9816108ea565b915050610752565b5060059392505050565b6040518060a001604052806005906020820280368337509192915050565b803565ffffffffffff811681146107ff57600080fd5b919050565b60006020828403121561081657600080fd5b61081f826107e9565b9392505050565b60a08101818360005b600581101561085657815165ffffffffffff1683526020928301929091019060010161082f565b50505092915050565b803560ff811681146107ff57600080fd5b60006020828403121561088257600080fd5b61081f8261085f565b6000806040838503121561089e57600080fd5b6108a78361085f565b91506108b5602084016107e9565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415610901576109016108d4565b60010192915050565b600060001982141561091e5761091e6108d4565b5060010190565b600082821015610937576109376108d4565b500390565b600060ff821660ff841680821015610956576109566108d4565b9003939250505056fea2646970667358221220227d84724e57643711a6d06ce9dc6c07ccb6098e570147e4e3d6847fa946840864736f6c634300080c0033';

type Uint48L5ArrayTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uint48L5ArrayTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uint48L5ArrayTest__factory extends ContractFactory {
  constructor(...args: Uint48L5ArrayTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Uint48L5ArrayTest';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Uint48L5ArrayTest> {
    return super.deploy(overrides || {}) as Promise<Uint48L5ArrayTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Uint48L5ArrayTest {
    return super.attach(address) as Uint48L5ArrayTest;
  }
  connect(signer: Signer): Uint48L5ArrayTest__factory {
    return super.connect(signer) as Uint48L5ArrayTest__factory;
  }
  static readonly contractName: 'Uint48L5ArrayTest';
  public readonly contractName: 'Uint48L5ArrayTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uint48L5ArrayTestInterface {
    return new utils.Interface(_abi) as Uint48L5ArrayTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Uint48L5ArrayTest {
    return new Contract(address, _abi, signerOrProvider) as Uint48L5ArrayTest;
  }
}
