/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  Uint48L5ArrayTest,
  Uint48L5ArrayTestInterface,
} from '../Uint48L5ArrayTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'exclude',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'exists',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
    ],
    name: 'getter',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getterAll',
    outputs: [
      {
        internalType: 'uint48[5]',
        name: '',
        type: 'uint48[5]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'include',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'length',
    outputs: [
      {
        internalType: 'uint8',
        name: 'len',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numberOfNonZeroElements',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'setter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506109a6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80634c84b36e1161005b5780634c84b36e146100ec57806394d881cb14610116578063968cf6cf14610129578063b0825a631461013c57600080fd5b806304a2c3391461008d5780631f7b6d32146100a2578063296eaea2146100c15780633fc1d8ce146100d7575b600080fd5b6100a061009b366004610818565b61015f565b005b6100aa61016d565b60405160ff90911681526020015b60405180910390f35b6100c961021f565b6040519081526020016100b8565b6100df610230565b6040516100b8919061083a565b6100ff6100fa366004610884565b610299565b60405165ffffffffffff90911681526020016100b8565b6100a061012436600461089f565b6102d5565b6100a0610137366004610818565b61031d565b61014f61014a366004610818565b610328565b60405190151581526020016100b8565b61016a60008261033a565b50565b6000805b600581101561021b576000816005811061018d5761018d6108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000146101c857816101c4816108fe565b9250505b600081600581106101db576101db6108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000031561021b57806102138161091d565b915050610171565b5090565b600061022b60006104a9565b905090565b6102386107df565b6040805160a0810191829052906000906005908280855b82829054906101000a900465ffffffffffff1665ffffffffffff168152602001906006019060208260050104928301926001038202915080841161024f5790505050505050905090565b6000808260ff16600581106102b0576102b06108d2565b600591828204019190066006029054906101000a900465ffffffffffff169050919050565b8060008360ff16600581106102ec576102ec6108d2565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff1602179055505050565b61016a60008261051f565b60006103348183610749565b92915050565b8065ffffffffffff1660000361036b5760405163c712b5e960e01b8152600060048201526024015b60405180910390fd5b600560005b600581101561041e578265ffffffffffff16848260058110610394576103946108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16036103c55750505050565b60008482600581106103d9576103d96108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff160361040c5780915061041e565b806104168161091d565b915050610370565b506004198101610464576040517f5503aeb500000000000000000000000000000000000000000000000000000000815265ffffffffffff83166004820152602401610362565b81838260058110610477576104776108d2565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050565b6000805b600560ff8216101561051657828160ff16600581106104ce576104ce6108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000036105045760ff1692915050565b8061050e816108fe565b9150506104ad565b50600592915050565b8065ffffffffffff1660000361054b5760405163c712b5e960e01b815260006004820152602401610362565b600560005b6005811015610615578265ffffffffffff16848260058110610574576105746108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16036105a3578091505b8381600581106105b5576105b56108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1660000361060357600081116105f15760006105fc565b6105fc600182610936565b9050610615565b8061060d8161091d565b915050610550565b600581146106235780610633565b61062f6001600561094d565b60ff165b9050600582146107435781810361068a576000848360058110610658576106586108d2565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550610743565b83816005811061069c5761069c6108d2565b600591828204019190066006029054906101000a900465ffffffffffff1660008584600581106106ce576106ce6108d2565b600591828204019190066006028785600581106106ed576106ed6108d2565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff16021790555050505b50505050565b600060056107578484610763565b60ff1614159392505050565b6000805b600560ff821610156107d5578265ffffffffffff16848260ff1660058110610791576107916108d2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16036107c3579050610334565b806107cd816108fe565b915050610767565b5060059392505050565b6040518060a001604052806005906020820280368337509192915050565b803565ffffffffffff8116811461081357600080fd5b919050565b60006020828403121561082a57600080fd5b610833826107fd565b9392505050565b60a08101818360005b600581101561086a57815165ffffffffffff16835260209283019290910190600101610843565b50505092915050565b803560ff8116811461081357600080fd5b60006020828403121561089657600080fd5b61083382610873565b600080604083850312156108b257600080fd5b6108bb83610873565b91506108c9602084016107fd565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610914576109146108e8565b60010192915050565b60006001820161092f5761092f6108e8565b5060010190565b600082821015610948576109486108e8565b500390565b600060ff821660ff841680821015610967576109676108e8565b9003939250505056fea26469706673582212204e1fcd577b1e46a09847ffc617d261dcf173bcc9490f70fc0b6575fe1a37600564736f6c634300080d0033';

type Uint48L5ArrayTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uint48L5ArrayTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uint48L5ArrayTest__factory extends ContractFactory {
  constructor(...args: Uint48L5ArrayTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Uint48L5ArrayTest';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Uint48L5ArrayTest> {
    return super.deploy(overrides || {}) as Promise<Uint48L5ArrayTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Uint48L5ArrayTest {
    return super.attach(address) as Uint48L5ArrayTest;
  }
  connect(signer: Signer): Uint48L5ArrayTest__factory {
    return super.connect(signer) as Uint48L5ArrayTest__factory;
  }
  static readonly contractName: 'Uint48L5ArrayTest';
  public readonly contractName: 'Uint48L5ArrayTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uint48L5ArrayTestInterface {
    return new utils.Interface(_abi) as Uint48L5ArrayTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Uint48L5ArrayTest {
    return new Contract(address, _abi, signerOrProvider) as Uint48L5ArrayTest;
  }
}
