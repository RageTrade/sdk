/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ChainlinkOracle,
  ChainlinkOracleInterface,
} from '../../../../artifacts/contracts/oracles/ChainlinkOracle';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_aggregator',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_flags',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: '_vTokenDecimals',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: '_vQuoteDecimals',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'aggregator',
        type: 'address',
      },
    ],
    name: 'IllegalAggregatorAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotEnoughHistory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SequencerOffline',
    type: 'error',
  },
  {
    inputs: [],
    name: 'aggregator',
    outputs: [
      {
        internalType: 'contract AggregatorV3Interface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainlinkFlags',
    outputs: [
      {
        internalType: 'contract FlagsInterface',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'getTwapPriceX128',
    outputs: [
      {
        internalType: 'uint256',
        name: 'priceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60c060405234801561001057600080fd5b50604051610bb3380380610bb383398101604081905261002f916100eb565b61004b846001600160a01b03166100b160201b6101be1760201c565b156100705760405163091b998160e11b81526000600482015260240160405180910390fd5b600080546001600160a01b039586166001600160a01b031991821617909155600180549490951693169290921790925560ff9182166080521660a05261013f565b6001600160a01b03161590565b80516001600160a01b03811681146100d557600080fd5b919050565b805160ff811681146100d557600080fd5b6000806000806080858703121561010157600080fd5b61010a856100be565b9350610118602086016100be565b9250610126604086016100da565b9150610134606086016100da565b905092959194509250565b60805160a051610a50610163600039600060c5015260006101810152610a506000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063245a7bfc14610046578063dd86c10114610076578063e4440e0214610097575b600080fd5b600054610059906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610089610084366004610777565b6100aa565b60405190815260200161006d565b600154610059906001600160a01b031681565b60006100bb8263ffffffff166101cb565b90506101b86100eb7f0000000000000000000000000000000000000000000000000000000000000000600a610897565b610106907001000000000000000000000000000000006108a6565b60008054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017b91906108c5565b6101a5907f00000000000000000000000000000000000000000000000000000000000000006108e8565b6101b090600a610897565b839190610412565b92915050565b6001600160a01b03161590565b6001546000906001600160a01b031680156102ba5760006001600160a01b03821663357e47fe61021c60017fa438451d6458044c3c8cd2f6f31c91ac882a6d917fa1d50c2bc3074c4524952d61090d565b60405160e083901b7fffffffff0000000000000000000000000000000000000000000000000000000016815260609190911c6004820152602401602060405180830381865afa158015610273573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102979190610924565b905080156102b85760405163db502a6760e01b815260040160405180910390fd5b505b60008060006102c76104c5565b919450925090504260006102db888361090d565b90508715806102f4575069ffffffffffffffffffff8516155b806102ff5750808311155b156103105750919695505050505050565b600061031c848461090d565b9050600061032a82876108a6565b905060008060008796505b8969ffffffffffffffffffff1660000361037157841561035e576103598585610946565b610360565b885b9d9c50505050505050505050505050565b61037c60018b610968565b99506103878a6105bc565b93509150508015610402578582116103cc576103a3868861090d565b92506103af83826108a6565b6103b99085610993565b93506103c58386610993565b9450610402565b6103d6828861090d565b92506103e283826108a6565b6103ec9085610993565b93506103f88386610993565b9450819650610335565b831561035e576103598585610946565b600080806000198587098587029250828110838203039150508060000361044b576000841161044057600080fd5b5082900490506104be565b80841161045757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b60008060008060008060008054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561051f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054391906109ca565b5093505092509250600082128015610565575069ffffffffffffffffffff8316155b1561058357604051639ee522a960e01b815260040160405180910390fd5b60008212156105ac5761059f61059a600185610968565b6105bc565b90965090935090506105b0565b8194505b91959394509092915050565b6000806000806000806105ce876106d0565b50935050925092505b6000821280156105f3575060008369ffffffffffffffffffff16115b1561068b57610603600184610968565b600054604051639a6fc8f560e01b815269ffffffffffffffffffff831660048201529194506001600160a01b031690639a6fc8f59060240160a060405180830381865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c91906109ca565b509194509092506105d7915050565b6000821280156106a5575069ffffffffffffffffffff8316155b156106c357604051639ee522a960e01b815260040160405180910390fd5b9196909550909350915050565b60008054604051639a6fc8f560e01b815269ffffffffffffffffffff8416600482015282918291829182916001600160a01b0390911690639a6fc8f59060240160a060405180830381865afa925050508015610749575060408051601f3d908101601f19168201909252610746918101906109ca565b60015b6107615750600093508392508291508190508061076e565b9398509196509450925090505b91939590929450565b60006020828403121561078957600080fd5b813563ffffffff811681146104be57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b808511156107ee5781600019048211156107d4576107d461079d565b808516156107e157918102915b93841c93908002906107b8565b509250929050565b600082610805575060016101b8565b81610812575060006101b8565b816001811461082857600281146108325761084e565b60019150506101b8565b60ff8411156108435761084361079d565b50506001821b6101b8565b5060208310610133831016604e8410600b8410161715610871575081810a6101b8565b61087b83836107b3565b806000190482111561088f5761088f61079d565b029392505050565b60006104be60ff8416836107f6565b60008160001904831182151516156108c0576108c061079d565b500290565b6000602082840312156108d757600080fd5b815160ff811681146104be57600080fd5b600060ff821660ff84168060ff038211156109055761090561079d565b019392505050565b60008282101561091f5761091f61079d565b500390565b60006020828403121561093657600080fd5b815180151581146104be57600080fd5b60008261096357634e487b7160e01b600052601260045260246000fd5b500490565b600069ffffffffffffffffffff8381169083168181101561098b5761098b61079d565b039392505050565b600082198211156109a6576109a661079d565b500190565b805169ffffffffffffffffffff811681146109c557600080fd5b919050565b600080600080600060a086880312156109e257600080fd5b6109eb866109ab565b9450602086015193506040860151925060608601519150610a0e608087016109ab565b9050929550929590935056fea2646970667358221220d97b2f1246ca5652d052e123eec1e145af9143bd1197c796a64a047449d91e4064736f6c634300080d0033';

type ChainlinkOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainlinkOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainlinkOracle__factory extends ContractFactory {
  constructor(...args: ChainlinkOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _aggregator: string,
    _flags: string,
    _vTokenDecimals: BigNumberish,
    _vQuoteDecimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainlinkOracle> {
    return super.deploy(
      _aggregator,
      _flags,
      _vTokenDecimals,
      _vQuoteDecimals,
      overrides || {}
    ) as Promise<ChainlinkOracle>;
  }
  override getDeployTransaction(
    _aggregator: string,
    _flags: string,
    _vTokenDecimals: BigNumberish,
    _vQuoteDecimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _aggregator,
      _flags,
      _vTokenDecimals,
      _vQuoteDecimals,
      overrides || {}
    );
  }
  override attach(address: string): ChainlinkOracle {
    return super.attach(address) as ChainlinkOracle;
  }
  override connect(signer: Signer): ChainlinkOracle__factory {
    return super.connect(signer) as ChainlinkOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainlinkOracleInterface {
    return new utils.Interface(_abi) as ChainlinkOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainlinkOracle {
    return new Contract(address, _abi, signerOrProvider) as ChainlinkOracle;
  }
}
