/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionTest,
  VTokenPositionTestInterface,
} from '../../../../artifacts/contracts/test/VTokenPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_netTraderPosition',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_sumALastX128',
        type: 'int256',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'riskSide',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unrealizedFundingPayment',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905561006c565b610aff8061070a83390190565b61068f8061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80635094b8ea116100505780635094b8ea146100a0578063ac210cc7146100b6578063f78231b2146100e157600080fd5b8063125071271461006c578063481050a91461008b575b600080fd5b6100746100f4565b60405160ff90911681526020015b60405180910390f35b61009e610099366004610494565b61013d565b005b6100a8610179565b604051908152602001610082565b6002546100c9906001600160a01b031681565b6040516001600160a01b039091168152602001610082565b6100a86100ef3660046104c0565b6101bb565b600080805260016020526101277fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49610205565b6001811115610138576101386104d9565b905090565b600080546001908290818061015183610505565b9091555081526020810191909152604001600020938455506001830191909155600290910155565b6002546000808052600160205290610138907fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49906001600160a01b0316610221565b60025460008080526001602052906101ff907fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb499084906001600160a01b03166102af565b92915050565b6000808260000154136102195760016101ff565b600092915050565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610286919061051e565b9050600061029d82866002015487600101546102e1565b6102a690610537565b95945050505050565b82546000906102c39084600160801b610303565b90506102cf8483610221565b6102d99082610553565b949350505050565b60006102d96102f08486610593565b8390600160801b610345565b9392505050565b600061033161032c600086126103195785610325565b610325866000196105d2565b85856103a2565b610454565b905060008412156102fc576102d981610537565b60006001818080610356888561046a565b94509250610364878561046a565b94509150610372868561046a565b9450905061038461032c8484846103a2565b9450836103975761039485610537565b94505b505050509392505050565b60008080600019858709858702925082811083820303915050806000036103db57600084116103d057600080fd5b5082900490506102fc565b8084116103e757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6000600160ff1b821061046657600080fd5b5090565b60008060008412156104895791159161048284610537565b915061048d565b8391505b5092909150565b6000806000606084860312156104a957600080fd5b505081359360208301359350604090920135919050565b6000602082840312156104d257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610517576105176104ef565b5060010190565b60006020828403121561053057600080fd5b5051919050565b6000600160ff1b820161054c5761054c6104ef565b5060000390565b6000808212826001600160ff1b0303841381151615610574576105746104ef565b600160ff1b839003841281161561058d5761058d6104ef565b50500190565b60008083128015600160ff1b8501841216156105b1576105b16104ef565b836001600160ff1b030183138116156105cc576105cc6104ef565b50500390565b60006001600160ff1b036000841360008413858304851182821616156105fa576105fa6104ef565b600160ff1b6000871282811687830589121615610619576106196104ef565b60008712925087820587128484161615610635576106356104ef565b8785058712818416161561064b5761064b6104ef565b50505092909302939250505056fea264697066735822122086aaf91477b864fccd48f33015a23b65b95d79ca130c0a3ebc24edde58070e0064736f6c634300080d0033608060405234801561001057600080fd5b50610adf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80637779815c116100cd578063a3c35e2c11610081578063dee4c1a611610066578063dee4c1a614610392578063ea6e4e52146103a3578063fca6fbf2146103eb57600080fd5b8063a3c35e2c14610239578063d74dcaca1461035957600080fd5b806397c71faf116100b257806397c71faf14610333578063a34123a714610346578063a3a1e7e91461030657600080fd5b80637779815c1461030657806386c8e9a71461031d57600080fd5b80632a99a792116101245780635e622abc116101095780635e622abc146102c25780636719578c146102c95780636d87989a146102f457600080fd5b80632a99a792146102395780634c2ebc581461025957600080fd5b806302dc9951146101565780630d8f6f461461017e578063195cd92c1461019f5780631dce5fcf14610217575b600080fd5b6001546101659062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61019161018c3660046106e9565b610404565b604051908152602001610175565b6101b26101ad366004610717565b610419565b6040516101759190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b61022a610225366004610775565b6104c7565b604051610175939291906107bd565b61024c610247366004610801565b610598565b6040516101759190610834565b6102c061026736600461085f565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b005b6000610191565b6003546102dc906001600160a01b031681565b6040516001600160a01b039091168152602001610175565b6102c06103023660046108b4565b5050565b701400000000000000000000000000000000610191565b600154610165906301000000900462ffffff1681565b6101916103413660046106e9565b610615565b61022a610354366004610775565b610623565b6102c06103673660046108d6565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6102c06103a0366004610918565b50565b6102c06103b1366004610930565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600154610165906601000000000000900462ffffff1681565b600061041382610f9f19610963565b92915050565b61046b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b831515600084130361049d576020810183905261048783610a03565b61049390610fa0610963565b60408201526104c0565b610fa06104a984610a03565b6104b39190610a1f565b6020820152604081018390525b9392505050565b6000806104f56040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546105109190610a5b565b9091555050600286810b6000908152602082815260408083209389900b8352929052206001015461054b906001600160801b03861690610a73565b600287810b600090815260208281526040808320938a900b83529290522054909350610581906001600160801b03861690610a73565b915061058d8686610598565b905093509350939050565b6105c36040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b6000610413610fa083610a1f565b6000806106516040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b03166004600082825461066c9190610a92565b9091555050600286810b6000908152602082815260408083209389900b835292905220546106a4906001600160801b03861690610a73565b600287810b600090815260208281526040808320938a900b835292905220600101549092506106dd906001600160801b03861690610a73565b925061058d8686610598565b6000602082840312156106fb57600080fd5b5035919050565b6001600160a01b03811681146103a057600080fd5b60008060006060848603121561072c57600080fd5b8335801515811461073c57600080fd5b925060208401359150604084013561075381610702565b809150509250925092565b8035600281900b811461077057600080fd5b919050565b60008060006060848603121561078a57600080fd5b6107938461075e565b92506107a16020850161075e565b915060408401356001600160801b038116811461075357600080fd5b8381526020810183905260c081016107f96040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806040838503121561081457600080fd5b61081d8361075e565b915061082b6020840161075e565b90509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101610413565b60008060008060008060c0878903121561087857600080fd5b6108818761075e565b955061088f6020880161075e565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080604083850312156108c757600080fd5b50508035926020909101359150565b600080600080608085870312156108ec57600080fd5b6108f58561075e565b93506109036020860161075e565b93969395505050506040820135916060013590565b600060c0828403121561092a57600080fd5b50919050565b60006020828403121561094257600080fd5b81356104c081610702565b634e487b7160e01b600052601160045260246000fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156109a4576109a461094d565b600160ff1b60008712828116878305891216156109c3576109c361094d565b600087129250878205871284841616156109df576109df61094d565b878505871281841616156109f5576109f561094d565b505050929093029392505050565b6000600160ff1b8201610a1857610a1861094d565b5060000390565b600082610a3c57634e487b7160e01b600052601260045260246000fd5b600160ff1b821460001984141615610a5657610a5661094d565b500590565b60008219821115610a6e57610a6e61094d565b500190565b6000816000190483118215151615610a8d57610a8d61094d565b500290565b600082821015610aa457610aa461094d565b50039056fea26469706673582212202d520c932aa8d402355b6857d3f1e96ca300f83887d575c8f7c6a33ef9e71cb864736f6c634300080d0033';

type VTokenPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionTest__factory extends ContractFactory {
  constructor(...args: VTokenPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionTest> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VTokenPositionTest {
    return super.attach(address) as VTokenPositionTest;
  }
  override connect(signer: Signer): VTokenPositionTest__factory {
    return super.connect(signer) as VTokenPositionTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionTestInterface {
    return new utils.Interface(_abi) as VTokenPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionTest {
    return new Contract(address, _abi, signerOrProvider) as VTokenPositionTest;
  }
}
