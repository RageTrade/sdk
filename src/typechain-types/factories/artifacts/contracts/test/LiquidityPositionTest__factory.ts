/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../../../../artifacts/contracts/test/LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LP_AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vQuoteIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouseEnums.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maxVirtualPriceDeviationRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060da80546001600160a01b0319166001600160a01b039290921691909117905561006d565b610aff80620021cc83390190565b61214f806200007d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635ea250321161008c5780639d9ba482116100665780639d9ba482146102ff578063ac210cc714610307578063c28fd78714610332578063f04af6ec1461034557600080fd5b80635ea25032146101c357806382d9dbaa146101f05780638ce744261461022057600080fd5b80632e0cb31a116100c85780632e0cb31a14610133578063313c06a0146101465780633ffe794c146101a857806357595e87146101bb57600080fd5b80631ca45818146100ef5780631f1b95021461010b5780632c83d1341461011e575b600080fd5b6100f8606c5481565b6040519081526020015b60405180910390f35b6100f8610119366004611726565b610358565b61013161012c366004611752565b61036b565b005b6100f8610141366004611726565b61037b565b6070546071546072546073546074546075546101939560ff8116956101008204600290810b96640100000000840490910b95600160381b9093046001600160801b03169491939092919089565b604051610102999897969594939291906117ad565b6101316101b636600461180a565b610398565b6101316103dd565b606d54606e54606f546101d592919083565b60408051938452602084019290925290820152606001610102565b6101316101fe366004611726565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600254600354604080516101008101825260045461ffff80821683526201000082048116602084015264010000000082048116938301939093526601000000000000810483166060830152680100000000000000008104831660808301526a0100000000000000000000810490921660a082015267ffffffffffffffff600160601b8304811660c08301527401000000000000000000000000000000000000000090920490911660e08201526005546006546007546102ed956001600160a01b0390811695169392919086565b60405161010296959493929190611823565b6100f86104a1565b60da5461031a906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b6101316103403660046118eb565b6104b2565b61013161035336600461193b565b6104d6565b60006103656070836105f8565b92915050565b61037760708383610621565b5050565b60da546000906103659060709084906001600160a01b031661067a565b60006103b36103aa6020840184611726565b63ffffffff1690565b63ffffffff8116600090815260208190526040902090915082906103d782826119a3565b50505050565b60da546070546040516328f0d78b60e21b81526101008204600290810b600483015264010000000090920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104679190611bf9565b60408051606081018252606d548152606e546020820152606f549181019190915290915061049e906070906000908190859061079e565b50565b60006104ad6070610909565b905090565b8460046104bf8282611c2f565b5050600593909355600691909155600755606c5550565b60da54600080805260209081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb780546001600160a01b0319166001600160a01b039093169283179055604080516319c655e360e21b81529051636719578c926004808401939192918290030181865afa158015610558573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057c9190611de7565b600080805260208181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb680546001600160a01b0319166001600160a01b03949094169390931790925560408051606081018252606d548152606e5493810193909352606f549083015261049e916070919081908590826109ba565b600080610606848483610dba565b5060018501549091506106199082611e1a565b949350505050565b61062a83610e84565b156106485760405163a0bb33f960e01b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff000000001916176401000000009190921602179055565b60008080610689868683610dba565b9150915060006106a1866001600160a01b0316610eab565b9050816106b38483600160801b610f1c565b6106bd9190611e59565b875460405163154cd3c960e11b81526101008204600290810b600483015264010000000090920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190611bf9565b905061076b610766826060015187610f6390919063ffffffff16565b610f9a565b6107759083611e59565b8151604083015191935061078b91879190610fb0565b6107959083611e59565b95945050505050565b815160408301516000916107b491889190610fb0565b905080826000018181516107c89190611e59565b90525060608301516000906107e290610766908990610f63565b905080836000018181516107f69190611e59565b9052508351600288810182905560208087015160038b0181905560408089015160048d018190556060808b015160058f018190558e5484516101008204890b815264010000000090910490970b95870195909552858301899052850195909552608084019190915260a083019390935260c0820152905163ffffffff87169188917fb9b041b729bca1f1535dde5369cddca43b655bbc9dbd3e5878047a06e11a45c79181900360e00190a38654604080516101008304600290810b825264010000000090930490920b6020830152810182905263ffffffff86169087907f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e74429060600160405180910390a350505050505050565b8054600090819061092190610100900460020b610fea565b835490915060009061093d90640100000000900460020b610fea565b9050600084600101541261097e57836001015461097483838760000160079054906101000a90046001600160801b0316600161130d565b6106199190611e99565b600184015461098f90600019611eb0565b84546109b09084908490600160381b90046001600160801b0316600161130d565b6106199190611f37565b63ffffffff8416600090815260208290526040812060020154819081906001600160a01b03169050610a0d6040518060800160405280600081526020016000815260200160008152602001600081525090565b600087600f0b1315610ad7578954604051631dce5fcf60e01b81526101008204600290810b600483015264010000000090920490910b60248201526001600160801b038816604482015260009081906001600160a01b03851690631dce5fcf9060640160c0604051808303816000875af1158015610a8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab39190611f4f565b94509092509050610ac382610f9a565b9550610ace81610f9a565b94505050610bd4565b895460009081906001600160a01b0385169063a34123a7906101008104600290810b916401000000009004900b610b0d8d611f85565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160c0604051808303816000875af1158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190611f4f565b94509092509050610bb282610f9a565b610bbb90611fb4565b9550610bc681610f9a565b610bcf90611fb4565b945050505b610be18a8a8a848a61079e565b8286600001818151610bf39190611e1a565b905250602086018051859190610c0a908390611e1a565b905250895463ffffffff8916908a907feb77cdd733ee295d52966d2946632ded675ffb7fbef59559ad0adea55cded940906101008104600290810b91640100000000810490910b908c9060ff16610c608b611fb4565b610c698b611fb4565b604051610c7b96959493929190611fd0565b60405180910390a363ffffffff8816600090815260208690526040812060010154610cae906001600160a01b03166113d6565b90506000610cbd8c8383610dba565b5060018d0154909150610cd09082611e1a565b88604001818151610ce19190611e59565b9052506000600f8a900b1315610d3e578b5489908d90600790610d15908490600160381b90046001600160801b031661200e565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610d9a565b600089600f0b1215610d9a57610d5389611f85565b8c548d90600790610d75908490600160381b90046001600160801b0316612039565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b610da48682611e59565b8c60010181905550505050505050505050505050565b825460009081908190610dd490610100900460020b610fea565b8654909150600090610df090640100000000900460020b610fea565b9050856001600160a01b038084169082161015610e0e575081610e2b565b816001600160a01b0316876001600160a01b03161115610e2b5750805b8754610e4f906107669083908590600160381b90046001600160801b03168a61130d565b9450610e7761076684838b60000160079054906101000a90046001600160801b03168a611447565b9350505050935093915050565b8054600090610100900460020b15158061036557505054640100000000900460020b151590565b60006401000276a36001600160a01b0383161080610ee6575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15610f1357604051635d236c4560e01b81526001600160a01b038316600482015260240160405180910390fd5b610365826114b7565b6000610f4561076660008612610f325785610f3e565b610f3e86600019611eb0565b85856114d2565b90506000841215610f5c57610f5981611fb4565b90505b9392505050565b81546005830154600091610f5c91600160381b9091046001600160801b031690600160801b90610f939086611e99565b91906114d2565b6000600160ff1b8210610fac57600080fd5b5090565b6002830154600384015460048501548554600093610fe19387938793600160381b90046001600160801b0316611584565b610f5990611fb4565b60008060008360020b12611001578260020b611009565b8260020b6000035b9050620d89e881111561102f576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361104657600160801b611058565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561108c576ffff97272373d413259a46990580e213a0260801c5b60048216156110ab576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b60088216156110ca576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156110e9576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611108576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611127576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611146576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611166576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611186576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156111a6576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156111c6576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156111e6576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611206576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611226576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611246576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611267576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611287576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156112a6576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156112c3576b048a170391f7dc42444e8fa20260801c5b60008460020b13156112e45780600019816112e0576112e0612061565b0490505b6401000000008106156112f85760016112fb565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b0316111561132d579293925b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b03868603811690871661136957600080fd5b8361139f57866001600160a01b031661138c8383896001600160a01b03166114d2565b8161139957611399612061565b046113cb565b6113cb6113b68383896001600160a01b03166115ac565b886001600160a01b0316808204910615150190565b979650505050505050565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143a9190612077565b5094979650505050505050565b6000836001600160a01b0316856001600160a01b03161115611467579293925b816114945761148f836001600160801b03168686036001600160a01b0316600160601b6114d2565b610795565b610795836001600160801b03168686036001600160a01b0316600160601b6115ac565b60006103656001600160a01b03831680680100000000000000005b600080806000198587098587029250828110838203039150508060000361150b576000841161150057600080fd5b508290049050610f5c565b80841161151757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60006113cb82600160801b61159b8888888d6115ec565b6115a5908a611e1a565b9190611611565b60006115b98484846114d2565b9050600082806115cb576115cb612061565b8486091115610f5c5760001981106115e257600080fd5b6001019392505050565b60006116076115fb8684611e1a565b8590600160801b61164f565b6107959084611e59565b600061161e848484610f1c565b905060008112801561163e575061163e611637856116ac565b84846116b7565b15610f5c57610f5960001982611e59565b6000600181808061166088856116d0565b9450925061166e87856116d0565b9450915061167c86856116d0565b9450905061168e6107668484846114d2565b9450836116a15761169e85611fb4565b94505b505050509392505050565b6000610365826116fa565b60008183850980156116c857600191505b509392505050565b60008060008412156116ef579115916116e884611fb4565b91506116f3565b8391505b5092909150565b6000808213610fac5761170c82611fb4565b610365565b6001600160a01b038116811461049e57600080fd5b60006020828403121561173857600080fd5b8135610f5c81611711565b8060020b811461049e57600080fd5b6000806040838503121561176557600080fd5b823561177081611743565b9150602083013561178081611743565b809150509250929050565b600381106117a957634e487b7160e01b600052602160045260246000fd5b9052565b61012081016117bc828c61178b565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b6000610140828403121561181d57600080fd5b50919050565b60006101a0820190506001600160a01b03808916835280881660208401525061ffff80875116604084015280602088015116606084015280604088015116608084015250606086015161187c60a084018261ffff169052565b50608086015161ffff811660c08401525060a086015161ffff811660e08401525060c086015167ffffffffffffffff81166101008401525060e086015167ffffffffffffffff811661012084015250846101408301528361016083015282610180830152979650505050505050565b600080600080600085870361018081121561190557600080fd5b6101008082121561191557600080fd5b969896890135975050506101208701359461014088013594506101608801359350915050565b60006020828403121561194d57600080fd5b813580600f0b8114610f5c57600080fd5b61ffff8116811461049e57600080fd5b600081356103658161195e565b801515811461049e57600080fd5b600081356103658161197b565b6000813561036581611711565b81356119ae81611711565b81546001600160a01b0319166001600160a01b0382161782555060208201356119d681611711565b6001820180546001600160a01b0319166001600160a01b038316179055506040820135611a0281611711565b6002820180546001600160a01b0319166001600160a01b03831617905550600381016060830135611a328161195e565b815461ffff191661ffff8216178255506080830135611a508161195e565b815463ffff00001916601082901b63ffff0000161782555060a0830135611a768161195e565b815465ffff000000001916602082901b65ffff00000000161782555060c083013563ffffffff81168114611aa957600080fd5b815469ffffffff000000000000191660309190911b69ffffffff00000000000016178155611b08611adc60e08501611989565b8280546aff00000000000000000000191691151560501b6aff0000000000000000000016919091179055565b611b46611b186101008501611989565b8280546bff0000000000000000000000191691151560581b6bff000000000000000000000016919091179055565b611b80611b566101208501611996565b82546bffffffffffffffffffffffff1660609190911b6bffffffffffffffffffffffff1916178255565b505050565b600060808284031215611b9757600080fd5b6040516080810181811067ffffffffffffffff82111715611bc857634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060808284031215611c0b57600080fd5b610f5c8383611b85565b6000813567ffffffffffffffff8116811461036557600080fd5b8135611c3a8161195e565b815461ffff191661ffff8216178255506020820135611c588161195e565b815463ffff00001916601082901b63ffff000016178255506040820135611c7e8161195e565b815465ffff000000001916602082901b65ffff0000000016178255506060820135611ca88161195e565b815467ffff0000000000008260301b1691508167ffff0000000000001982161783556080840135611cd88161195e565b69ffff00000000000000008160401b168369ffffffff00000000000019841617178455505050611d37611d0d60a0840161196e565b82546bffff00000000000000000000191660509190911b6bffff0000000000000000000016178255565b611d8b611d4660c08401611c15565b82547fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff1660609190911b73ffffffffffffffff00000000000000000000000016178255565b610377611d9a60e08401611c15565b82547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b7bffffffffffffffff000000000000000000000000000000000000000016178255565b600060208284031215611df957600080fd5b8151610f5c81611711565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b850184121615611e3857611e38611e04565b836001600160ff1b03018313811615611e5357611e53611e04565b50500390565b6000808212826001600160ff1b0303841381151615611e7a57611e7a611e04565b600160ff1b8390038412811615611e9357611e93611e04565b50500190565b600082821015611eab57611eab611e04565b500390565b60006001600160ff1b03600084136000841385830485118282161615611ed857611ed8611e04565b600160ff1b6000871282811687830589121615611ef757611ef7611e04565b60008712925087820587128484161615611f1357611f13611e04565b87850587128184161615611f2957611f29611e04565b505050929093029392505050565b60008219821115611f4a57611f4a611e04565b500190565b600080600060c08486031215611f6457600080fd5b8351925060208401519150611f7c8560408601611b85565b90509250925092565b600081600f0b6f7fffffffffffffffffffffffffffffff198103611fab57611fab611e04565b60000392915050565b6000600160ff1b8201611fc957611fc9611e04565b5060000390565b600287810b825286900b6020820152600f85900b604082015260c08101611ffa606083018661178b565b608082019390935260a00152949350505050565b60006001600160801b0380831681851680830382111561203057612030611e04565b01949350505050565b60006001600160801b038381169083168181101561205957612059611e04565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600080600080600080600060e0888a03121561209257600080fd5b875161209d81611711565b60208901519097506120ae81611743565b60408901519096506120bf8161195e565b60608901519095506120d08161195e565b60808901519094506120e18161195e565b60a089015190935060ff811681146120f857600080fd5b60c08901519092506121098161197b565b809150509295989194975092955056fea264697066735822122060947fd099e48605aca7b9a15fc6fb5fcbd4d1a3de6173fe7f0940876f8283e064736f6c634300080d0033608060405234801561001057600080fd5b50610adf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80637779815c116100cd578063a3c35e2c11610081578063dee4c1a611610066578063dee4c1a614610392578063ea6e4e52146103a3578063fca6fbf2146103eb57600080fd5b8063a3c35e2c14610239578063d74dcaca1461035957600080fd5b806397c71faf116100b257806397c71faf14610333578063a34123a714610346578063a3a1e7e91461030657600080fd5b80637779815c1461030657806386c8e9a71461031d57600080fd5b80632a99a792116101245780635e622abc116101095780635e622abc146102c25780636719578c146102c95780636d87989a146102f457600080fd5b80632a99a792146102395780634c2ebc581461025957600080fd5b806302dc9951146101565780630d8f6f461461017e578063195cd92c1461019f5780631dce5fcf14610217575b600080fd5b6001546101659062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61019161018c3660046106e9565b610404565b604051908152602001610175565b6101b26101ad366004610717565b610419565b6040516101759190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b61022a610225366004610775565b6104c7565b604051610175939291906107bd565b61024c610247366004610801565b610598565b6040516101759190610834565b6102c061026736600461085f565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b005b6000610191565b6003546102dc906001600160a01b031681565b6040516001600160a01b039091168152602001610175565b6102c06103023660046108b4565b5050565b701400000000000000000000000000000000610191565b600154610165906301000000900462ffffff1681565b6101916103413660046106e9565b610615565b61022a610354366004610775565b610623565b6102c06103673660046108d6565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6102c06103a0366004610918565b50565b6102c06103b1366004610930565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600154610165906601000000000000900462ffffff1681565b600061041382610f9f19610963565b92915050565b61046b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b831515600084130361049d576020810183905261048783610a03565b61049390610fa0610963565b60408201526104c0565b610fa06104a984610a03565b6104b39190610a1f565b6020820152604081018390525b9392505050565b6000806104f56040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546105109190610a5b565b9091555050600286810b6000908152602082815260408083209389900b8352929052206001015461054b906001600160801b03861690610a73565b600287810b600090815260208281526040808320938a900b83529290522054909350610581906001600160801b03861690610a73565b915061058d8686610598565b905093509350939050565b6105c36040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b6000610413610fa083610a1f565b6000806106516040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b03166004600082825461066c9190610a92565b9091555050600286810b6000908152602082815260408083209389900b835292905220546106a4906001600160801b03861690610a73565b600287810b600090815260208281526040808320938a900b835292905220600101549092506106dd906001600160801b03861690610a73565b925061058d8686610598565b6000602082840312156106fb57600080fd5b5035919050565b6001600160a01b03811681146103a057600080fd5b60008060006060848603121561072c57600080fd5b8335801515811461073c57600080fd5b925060208401359150604084013561075381610702565b809150509250925092565b8035600281900b811461077057600080fd5b919050565b60008060006060848603121561078a57600080fd5b6107938461075e565b92506107a16020850161075e565b915060408401356001600160801b038116811461075357600080fd5b8381526020810183905260c081016107f96040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806040838503121561081457600080fd5b61081d8361075e565b915061082b6020840161075e565b90509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101610413565b60008060008060008060c0878903121561087857600080fd5b6108818761075e565b955061088f6020880161075e565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080604083850312156108c757600080fd5b50508035926020909101359150565b600080600080608085870312156108ec57600080fd5b6108f58561075e565b93506109036020860161075e565b93969395505050506040820135916060013590565b600060c0828403121561092a57600080fd5b50919050565b60006020828403121561094257600080fd5b81356104c081610702565b634e487b7160e01b600052601160045260246000fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156109a4576109a461094d565b600160ff1b60008712828116878305891216156109c3576109c361094d565b600087129250878205871284841616156109df576109df61094d565b878505871281841616156109f5576109f561094d565b505050929093029392505050565b6000600160ff1b8201610a1857610a1861094d565b5060000390565b600082610a3c57634e487b7160e01b600052601260045260246000fd5b600160ff1b821460001984141615610a5657610a5661094d565b500590565b60008219821115610a6e57610a6e61094d565b500190565b6000816000190483118215151615610a8d57610a8d61094d565b500290565b600082821015610aa457610aa461094d565b50039056fea26469706673582212202d520c932aa8d402355b6857d3f1e96ca300f83887d575c8f7c6a33ef9e71cb864736f6c634300080d0033';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  override connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
