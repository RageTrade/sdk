/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SignedFullMathTest,
  SignedFullMathTestInterface,
} from '../../../../artifacts/contracts/test/SignedFullMathTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'a',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDiv',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'b',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'denominator',
        type: 'int256',
      },
    ],
    name: 'mulDiv',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDiv',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDivRoundingDown',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'b',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'denominator',
        type: 'int256',
      },
    ],
    name: 'mulDivRoundingDown',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'a',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDivRoundingUp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610551806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063b81461a011610050578063b81461a0146100c2578063cf828136146100d5578063fb8a0ac4146100e857600080fd5b80630af8b27f146100775780637972563e1461009c578063aa9a0912146100af575b600080fd5b61008a6100853660046103e0565b6100fb565b60405190815260200160405180910390f35b61008a6100aa3660046103e0565b610112565b61008a6100bd3660046103e0565b61011f565b61008a6100d03660046103e0565b61012c565b61008a6100e33660046103e0565b610139565b61008a6100f63660046103e0565b610146565b6000610108848484610153565b90505b9392505050565b6000610108848484610193565b60006101088484846101d1565b6000610108848484610283565b60006101088484846102c0565b6000610108848484610322565b60006101608484846101d1565b9050600082806101725761017261040c565b848609111561010b57600019811061018957600080fd5b6001019392505050565b60006101a0848484610322565b90506000811280156101c057506101c06101b98561035f565b8484610370565b1561010b5761010860001982610438565b600080806000198587098587029250828110838203039150508060000361020a57600084116101ff57600080fd5b50829004905061010b565b80841161021657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60006102908484846102c0565b90506000811280156101c057506101c06102a98561035f565b6102b28561035f565b6102bb8561035f565b610370565b600060018180806102d18885610389565b945092506102df8785610389565b945091506102ed8685610389565b945090506103046102ff8484846101d1565b6103b3565b9450836103175761031485610478565b94505b505050509392505050565b600061034b6102ff600086126103385785610344565b61034486600019610494565b85856101d1565b9050600084121561010b5761010881610478565b600061036a826103c9565b92915050565b600081838509801561038157600191505b509392505050565b60008060008412156103a8579115916103a184610478565b91506103ac565b8391505b5092909150565b6000600160ff1b82106103c557600080fd5b5090565b60008082136103c5576103db82610478565b61036a565b6000806000606084860312156103f557600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000808212826001600160ff1b030384138115161561045957610459610422565b600160ff1b839003841281161561047257610472610422565b50500190565b6000600160ff1b820161048d5761048d610422565b5060000390565b60006001600160ff1b036000841360008413858304851182821616156104bc576104bc610422565b600160ff1b60008712828116878305891216156104db576104db610422565b600087129250878205871284841616156104f7576104f7610422565b8785058712818416161561050d5761050d610422565b50505092909302939250505056fea264697066735822122098aa988a70cba6d96a2cb2e121e12129498fa78ab5c37081017b7854fb535b5864736f6c634300080d0033';

type SignedFullMathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignedFullMathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignedFullMathTest__factory extends ContractFactory {
  constructor(...args: SignedFullMathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignedFullMathTest> {
    return super.deploy(overrides || {}) as Promise<SignedFullMathTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SignedFullMathTest {
    return super.attach(address) as SignedFullMathTest;
  }
  override connect(signer: Signer): SignedFullMathTest__factory {
    return super.connect(signer) as SignedFullMathTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedFullMathTestInterface {
    return new utils.Interface(_abi) as SignedFullMathTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedFullMathTest {
    return new Contract(address, _abi, signerOrProvider) as SignedFullMathTest;
  }
}
