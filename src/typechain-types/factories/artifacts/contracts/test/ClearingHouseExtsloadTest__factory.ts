/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ClearingHouseExtsloadTest,
  ClearingHouseExtsloadTestInterface,
} from '../../../../artifacts/contracts/test/ClearingHouseExtsloadTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'check_pools_vPool_and_settings_twapDuration',
    outputs: [
      {
        internalType: 'address',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'pools_settings',
    outputs: [
      {
        internalType: 'uint16',
        name: 'initialMarginRatioBps',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'maintainanceMarginRatioBps',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'maxVirtualPriceDeviationRatioBps',
        type: 'uint16',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
      {
        internalType: 'bool',
        name: 'isAllowedForTrade',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: 'isCrossMargined',
        type: 'bool',
      },
      {
        internalType: 'address',
        name: 'oracle',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'pools_vPool',
    outputs: [
      {
        internalType: 'address',
        name: 'vPool',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'pools_vPool_and_settings_twapDuration',
    outputs: [
      {
        internalType: 'address',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506108c6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636d5e38b714610051578063bc85d0731461008d578063bc86773d146100a0578063e625fde914610106575b600080fd5b61006461005f366004610590565b610131565b604080516001600160a01b03909316835263ffffffff9091166020830152015b60405180910390f35b61006461009b366004610590565b610149565b6100b36100ae366004610590565b6101d2565b6040805161ffff98891681529688166020880152969094169585019590955263ffffffff90911660608401521515608083015291151560a08201526001600160a01b0390911660c082015260e001610084565b610119610114366004610590565b6101ff565b6040516001600160a01b039091168152602001610084565b60008061013e8484610212565b909590945092505050565b6000806101568484610212565b604051635b3876a960e11b815263ffffffff8616600482015291935091506001600160a01b0385169063b670ed529060240161014060405180830381865afa1580156101a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ca9190610683565b509250929050565b60008060008060008060006101e7898961035e565b959f949e50929c50909a509850965090945092505050565b600061020b838361044f565b9392505050565b604080516002808252606082018352600092839283929091602083019080368337019050509050610242846104d1565b8160008151811061025557610255610777565b60200260200101818152505061026a846104ff565b8160018151811061027d5761027d610777565b602090810291909101015260405163dbd035ff60e01b81526001600160a01b0386169063dbd035ff906102b490849060040161078d565b600060405180830381865afa1580156102d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102f991908101906107d1565b905061031e8160008151811061031157610311610777565b6020026020010151610517565b508093505061035460b060d08360018151811061033d5761033d610777565b602002602001015161052f9092919063ffffffff16565b9150509250929050565b600080600080600080600080896001600160a01b0316631e2eaeaf6103828b6104ff565b6040518263ffffffff1660e01b81526004016103a091815260200190565b602060405180830381865afa1580156103bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e19190610877565b90506103ec8161053e565b90985090506103fa8161053e565b90975090506104088161053e565b909650905061041681610551565b90955060ff80821615159550600882901c161515935060101c905061043a81610517565b80925081935050505092959891949750929550565b600080836001600160a01b0316631e2eaeaf61046a856104d1565b6040518263ffffffff1660e01b815260040161048891815260200190565b602060405180830381865afa1580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c99190610877565b949350505050565b60006104f960016104f5606463ffffffff86165b9060009182526020526040902090565b0190565b92915050565b60006104f960036104f5606463ffffffff86166104e5565b600080806001600160a01b03841660a085901c61013e565b91811b61010092909203011c90565b6000808061ffff8416601085901c61013e565b6000808063ffffffff8416602085901c61013e565b6001600160a01b038116811461057b57600080fd5b50565b63ffffffff8116811461057b57600080fd5b600080604083850312156105a357600080fd5b82356105ae81610566565b915060208301356105be8161057e565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610602576106026105c9565b60405290565b60405160e0810167ffffffffffffffff81118282101715610602576106026105c9565b604051601f8201601f1916810167ffffffffffffffff81118282101715610654576106546105c9565b604052919050565b805161ffff8116811461066e57600080fd5b919050565b8051801515811461066e57600080fd5b600081830361014081121561069757600080fd5b61069f6105df565b83516106aa81610566565b815260208401516106ba81610566565b602082015260408401516106cd81610566565b604082015260e0605f19830112156106e457600080fd5b6106ec610608565b91506106fa6060850161065c565b82526107086080850161065c565b602083015261071960a0850161065c565b604083015260c084015161072c8161057e565b606083015261073d60e08501610673565b608083015261074f6101008501610673565b60a083015261012084015161076381610566565b60c083015260608101919091529392505050565b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156107c5578351835292840192918401916001016107a9565b50909695505050505050565b600060208083850312156107e457600080fd5b825167ffffffffffffffff808211156107fc57600080fd5b818501915085601f83011261081057600080fd5b815181811115610822576108226105c9565b8060051b915061083384830161062b565b818152918301840191848101908884111561084d57600080fd5b938501935b8385101561086b57845182529385019390850190610852565b98975050505050505050565b60006020828403121561088957600080fd5b505191905056fea26469706673582212209fddebc5b5378a7bd0dba4977638d72e9f73e10eaf7f2f6342e65b64876ba20164736f6c634300080d0033';

type ClearingHouseExtsloadTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseExtsloadTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClearingHouseExtsloadTest__factory extends ContractFactory {
  constructor(...args: ClearingHouseExtsloadTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseExtsloadTest> {
    return super.deploy(overrides || {}) as Promise<ClearingHouseExtsloadTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ClearingHouseExtsloadTest {
    return super.attach(address) as ClearingHouseExtsloadTest;
  }
  override connect(signer: Signer): ClearingHouseExtsloadTest__factory {
    return super.connect(signer) as ClearingHouseExtsloadTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseExtsloadTestInterface {
    return new utils.Interface(_abi) as ClearingHouseExtsloadTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseExtsloadTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ClearingHouseExtsloadTest;
  }
}
