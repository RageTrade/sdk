/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { AccountTest, AccountTestInterface } from '../AccountTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'TokenInactive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'cleanPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountDepositBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: 'num',
        type: 'uint8',
      },
    ],
    name: 'getAccountLiquidityPositionDetails',
    outputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'enum IClearingHouseEnums.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountLiquidityPositionNum',
    outputs: [
      {
        internalType: 'uint8',
        name: 'num',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'getAccountProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'profit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountTokenDetails',
    outputs: [
      {
        internalType: 'int256',
        name: 'balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'netTraderPosition',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumACkpt',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'tokensToTrade',
        type: 'int256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getLiquidationPriceX128AndFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'liquidationPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'liquidatorPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'insuranceFundFee',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'initCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'initToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'insuranceFundFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'liquidatorAccountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouseEnums.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'cBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'fixFee_',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'cBase',
        type: 'address',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'swapTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'swapTokenNotional',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506144d4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806376dd6314116100f95780639e95f33211610097578063e0bb874c11610071578063e0bb874c146104fb578063f2f001981461050e578063f39650bd14610521578063ffa689da1461053457600080fd5b80639e95f33214610493578063df4d17dc146104a6578063e0a1285a146104e857600080fd5b80638dcfa482116100d35780638dcfa482146104525780638eda9149146104655780639cd1be58146104785780639dca362f1461048b57600080fd5b806376dd6314146103565780638ce25a93146103695780638ce744261461037257600080fd5b80633fd687a11161016657806355b5dfc81161014057806355b5dfc8146102f5578063569634d3146103085780635bf743e8146103305780636338a2351461034357600080fd5b80633fd687a1146102525780634b88552d146102825780634fa8077c146102b057600080fd5b8063076d6a63146101ae5780631ca45818146101c35780632098e95c146101df57806333939e04146101f25780633a64c245146102175780633d3a5f021461022a575b600080fd5b6101c16101bc366004613532565b610547565b005b6101cc606d5481565b6040519081526020015b60405180910390f35b6101c16101ed36600461356a565b6105fe565b610205610200366004613583565b6106c3565b60405160ff90911681526020016101d6565b6101c16102253660046135b3565b610754565b61023d6102383660046135d5565b6107bf565b6040516101d699989796959493929190613639565b6101c1610260366004613696565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610295610290366004613583565b6108ee565b604080519384526020840192909252908201526060016101d6565b6102956102be366004613583565b60009182526020828152604080842063ffffffff909316845260029283019091529091208054600182015491909201549192909190565b6101c161030336600461356a565b610911565b61031b61031636600461356a565b610a85565b604080519283526020830191909152016101d6565b6101c161033e3660046136b3565b610b24565b6101c1610351366004613719565b610b68565b6101cc610364366004613583565b610c29565b6101cc606e5481565b6003546004546040805160808101825260055461ffff808216835262010000820481166020840152600160201b8204169282019290925266010000000000009091046001600160801b031660608201526006546007546008546103e3956001600160a01b0390811695169392919086565b604080516001600160a01b03978816815296909516602080880191909152845161ffff908116888801529085015181166060808901919091529585015116608087015293909201516001600160801b031660a085015260c084015260e0830152610100820152610120016101d6565b6101c1610460366004613759565b610c51565b6101c161047336600461386b565b610d3a565b6101c161048636600461393e565b610d8e565b6101c1610e1a565b6101c16104a1366004613960565b610e5d565b6101c16104b4366004613696565b63ffffffff8116600090815260016020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b6101c16104f6366004613532565b610f04565b6101cc61050936600461356a565b610f90565b6101c161051c366004613532565b610fad565b61031b61052f3660046139bb565b611016565b6101c1610542366004613532565b6110b4565b6000838152602081815260408083208151608081018352858152928301849052600183830181905260608401949094529051630a067b0f60e11b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9363140cf61e936105b7939263ffffffff8916929081906004016139e0565b6040805180830381865af41580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190613a3f565b5050505050565b600081815260208190526040902061061d906001908101908390611123565b50600081815260208190526040812060670190805b60088160ff1610156106bd5760008360ff83166008811061065557610655613a63565b60088104919091015460079091166004026101000a900463ffffffff1690508061067f57506106bd565b63ffffffff808216600090815260018601602052604090205493506106aa908590839086906111e316565b50806106b581613a8f565b915050610632565b50505050565b60008281526020818152604080832063ffffffff8516845260020190915281206003015b60058260ff16101561074d578060ff83166005811061070857610708613a63565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000141561073b5761074d565b8161074581613a8f565b9250506106e7565b5092915050565b600061076f6107666020840184613696565b63ffffffff1690565b63ffffffff81166000908152600160205260409020549091506001600160a01b03161561079e5761079e613aaf565b63ffffffff8116600090815260016020526040902082906106bd8282613aff565b6000806000806000806000806000806000808e815260200190815260200160002060010160010160006107ef8e90565b63ffffffff16815260208101919091526040016000908120600381019250600401818360ff8f166005811061082657610826613a63565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002090508060000160019054906101000a900460020b8160000160049054906101000a900460020b8260000160009054906101000a900460ff168360000160079054906101000a90046001600160801b0316846001015485600201548660030154876004015488600501549a509a509a509a509a509a509a509a509a50505093979b92969a50939750939750565b600080806109048563ffffffff8616600161125e565b9250925092509250925092565b6000818152602081905260409020610930906001908101908390611123565b5060008181526020818152604080832081516060808201845285825281850186905281840186905260035463ffffffff168652600283019094529382902082519384019092528154600190910193919290819061098c90613c81565b81526000602082018190526040909101526003549091506109ba9084908690849063ffffffff166001611384565b60005b60088160ff1610156105f75760008460ff8316600881106109e0576109e0613a63565b60088104919091015460079091166004026101000a900463ffffffff16905080610a0a57506105f7565b8460010160008263ffffffff1663ffffffff16815260200190815260200160002093506040518060600160405280600081526020018560000154610a4d90613c81565b81526020018560010154610a6090613c81565b90529250610a72858785846001611384565b5080610a7d81613a8f565b9150506109bd565b600081815260208190526040808220606d5491516308b9103160e21b81526004810191909152602481019190915260016044820152819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906322e440c4906064016040805180830381865af4158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190613a3f565b91509150915091565b856005610b318282613c9e565b5050600694909455600792909255600855600480546001600160a01b0319166001600160a01b0390931692909217909155606d5550565b60008381526020819052604080822084835291819020606d548251632a2d44e560e01b815260048101949094526024840191909152612710604484015263ffffffff841660648401526084830152600160a4830181905260c48301525173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91632a2d44e59160e48083019260809291908290030181865af4158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190613d67565b60008281526020818152604080832063ffffffff851684526068019091529020545b92915050565b60006040518060400160405280856001600160a01b031681526020016040518060600160405280866001600160a01b031681526020018563ffffffff16815260200160011515815250815250905080600180016000610cb1846000015190565b63ffffffff90811682526020808301939093526040918201600020845181546001600160a01b039182166001600160a01b0319909116178255948401518051600190920180549582015191909401511515600160c01b0260ff60c01b1991909316600160a01b026001600160c01b03199095169190951617929092179290921617905550505050565b60008381526020819052604090819020905163c27789d160e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163c27789d1916105b7919063ffffffff87169086906001908190600401613de0565b60008281526020819052604090819020905163d25c4a6f60e01b8152600481019190915260248101829052600160448201819052606482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063d25c4a6f9060840160006040518083038186803b158015610dfe57600080fd5b505af4158015610e12573d6000803e3d6000fd5b505050505050565b606e8054600090815260208190526040812080546bffffffffffffffffffffffff1633600160601b02178155825490929091610e5583613e7a565b919050555050565b6000858152602081905260408082208151637022478560e11b8152600481019190915263ffffffff87166024820152600286810b604483015285900b606482015260848101849052600160a4820152905173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9263e0448f0a9260c48082019391829003018186803b158015610ee557600080fd5b505af4158015610ef9573d6000803e3d6000fd5b505050505050505050565b600083815260208190526040908190209051637ef9c64360e11b8152600481019190915263ffffffff831660248201526044810182905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063fdf38c86906064015b60006040518083038186803b158015610f7357600080fd5b505af4158015610f87573d6000803e3d6000fd5b50505050505050565b6000818152602081905260408120610c4b90600190810190611460565b6000838152602081905260409081902090516362b3b6bb60e11b8152600481019190915263ffffffff8316602482015260448101829052600160648201819052608482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c5676d769060a401610f5b565b600082815260208190526040808220905163031b5fcd60e21b81526004810191909152821515602482015260016044820152819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90630c6d7f34906064016040805180830381865af4158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a99190613a3f565b909590945092505050565b6000838152602081815260408083208151608081018352858152928301849052828201849052606083019390935251630a067b0f60e11b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9263140cf61e926105b79263ffffffff8816919060019081906004016139e0565b6000805b60088160ff1610156111db5760008560ff83166008811061114a5761114a613a63565b60088104919091015460079091166004026101000a900463ffffffff1690508061117457506111db565b6111bb858760ff85166008811061118d5761118d613a63565b600891828204019190066004029054906101000a900463ffffffff168689611553909392919063ffffffff16565b6111c59084613e95565b92505080806111d390613a8f565b915050611127565b509392505050565b63ffffffff8216600090815260018401602052604090205481111561120757600080fd5b63ffffffff821660009081526001840160205260408120805483929061122e908490613ead565b909155505063ffffffff82166000908152600184016020526040902054611259576112598383611596565b505050565b600080808061126e858783611794565b9050600061127c86886117e7565b60048701549091506000906112b49061ffff80861691620186a0916112ad9187916201000090910416612710611804565b9190611804565b9050600089121561132f576112c98183613ead565b60048801549096506112fa906112ec90600160201b900461ffff16612710613ec4565b829061ffff16612710611804565b6113049083613ead565b945061131f6113138787613ead565b8a90600160801b6118b2565b61132890613c81565b9350611378565b6113398183613e95565b600488015490965061135c906112ec90600160201b900461ffff16612710613ec4565b6113669083613e95565b94506113756113138688613ead565b93505b50505093509350939050565b600281015463ffffffff8381169116146113ae576113a4858584846118f4565b6113ae858361192a565b63ffffffff8216600090815260018601602090815260408220908501518154919290918391906113df908490613ee7565b909155505060408401516001820180546000906113fd908490613ee7565b9091555050600282015463ffffffff16600090815260018701602052604081208551815491929091839190611433908490613ee7565b909155505081541580156114515750600382015465ffffffffffff16155b15610f8757610f878785611a74565b6000805b60088160ff1610156115255760008460ff83166008811061148757611487613a63565b60088104919091015460079091166004026101000a900463ffffffff169050806114b15750611525565b63ffffffff80821660009081526001870160205260409020906114da90829084908890611aee16565b6114e49085613ee7565b935060006114f28684611b09565b905061150360038301828589611b4a565b61150d9086613ee7565b9450505050808061151d90613a8f565b915050611464565b50600282015463ffffffff16600090815260018401602052604090205461154c9082613ee7565b9392505050565b63ffffffff808316600090815260208390526040812060020154909161158d918791879187916001600160a01b03909116908790611b7916565b95945050505050565b63ffffffff81166115c257604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b600881101561167b578263ffffffff168482600881106115e9576115e9613a63565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415611615578091505b83816008811061162757611627613a63565b60088104919091015460079091166004026101000a900463ffffffff166116695760008111611657576000611662565b611662600182613ead565b905061167b565b8061167381613e7a565b9150506115c7565b80600814611689578061168c565b60075b9050816008146106bd57818114156116e05760008483600881106116b2576116b2613a63565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055506106bd565b8381600881106116f2576116f2613a63565b600891828204019190066004029054906101000a900463ffffffff16600085846008811061172257611722613a63565b6008918282040191900660040287856008811061174157611741613a63565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b600081156117bf575063ffffffff821660009081526020849052604090206003015461ffff1661154c565b505063ffffffff166000908152602091909152604090206003015462010000900461ffff1690565b600061154c6117f68484611be6565b6001600160a01b0316611c11565b60008080600019858709858702925082811083820303915050806000141561183e576000841161183357600080fd5b50829004905061154c565b80841161184a57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006118d8600085126118c557846118d1565b6118d185600019613f28565b8484611804565b9050600084121561154c576118ec81613c81565b949350505050565b63ffffffff8083166000908152602083905260409020600201546106bd918691869186916001600160a01b0316908690611c7e16565b63ffffffff811661195157604051633f16439160e01b8152600060048201526024016115b9565b600860005b6008811015611a08578263ffffffff1684826008811061197857611978613a63565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156119a65750505050565b8160081480156119e9575060008482600881106119c5576119c5613a63565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b156119f657809150611a08565b80611a0081613e7a565b915050611956565b508060081415611a3357604051630695727160e11b815263ffffffff831660048201526024016115b9565b81838260088110611a4657611a46613a63565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b63ffffffff81166000908152600183016020526040902054151580611aba575063ffffffff8116600090815260018301602052604090206003015465ffffffffffff1615155b15611ae057604051632115a53b60e01b815263ffffffff821660048201526024016115b9565b611aea8282611596565b5050565b600080611afb8385611da5565b905061158d85858386611db4565b63ffffffff80821660009081526020849052604081206003810154600190910154919261154c926001600160a01b031691600160201b9004811690611de316565b63ffffffff821660009081526020829052604081206002015461158d90869086906001600160a01b0316611e04565b6000611b9f60405180606001604052806000815260200160008152602001600081525090565b611bbf86868684611bb38c8460008b611ea0565b60030193929190611f18565b611bcc8787838887611384565b611bdb85826040015185611fc5565b979650505050505050565b63ffffffff811660009081526020839052604081206001015461154c906001600160a01b0316611fe2565b60006401000276a36001600160a01b0383161080611c4c575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15611c7557604051635d236c4560e01b81526001600160a01b03831660048201526024016115b9565b610c4b82612075565b63ffffffff8316600090815260018601602090815260408083208151631dde605760e21b815291519093926001600160a01b03871692637779815c92600480830193928290030181865afa158015611cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cfe9190613fad565b600284015463ffffffff908116600090815260018a016020526040812092935090611d2d908590889061209416565b905080826000016000828254611d439190613ee7565b909155505060028401839055604080516000808252602082015290810182905263ffffffff88169089907fe78c346ca01ca7fd618ef99876cdc15c30b6f4072af58014453e6442fbeb70dc9060600160405180910390a3505050505050505050565b600061154c6117f68484611b09565b63ffffffff831660009081526020829052604081206002015461158d90869085906001600160a01b0316612119565b600080611df96001600160a01b03851684612143565b90506118ec8161235f565b6000805b60058110156111db576000858260058110611e2557611e25613a63565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff1660001415611e5c57506111db565b65ffffffffffff811660009081526001870160205260409020611e80908686612691565b611e8a9084613ee7565b9250508080611e9890613e7a565b915050611e08565b600281015460009063ffffffff858116911614611efb578215611ecc57611ec785856127ab565b611efb565b611ed685856127b5565b611efb576040516328cee63960e11b815263ffffffff851660048201526024016115b9565b50505063ffffffff16600090815260019091016020526040902090565b60005b855465ffffffffffff1615610e1257611f4e60405180606001604052806000815260200160008152602001600081525090565b865465ffffffffffff16600090815260018801602052604090209150611f788787878588866127d0565b805183518490611f89908390613ee7565b9052506020808201519084018051611fa2908390613ee7565b9052506040808201519084018051611fbb908390613ee7565b905250611f1b9050565b60006118ec611fd48386611da5565b600160801b6112ad86612801565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612023573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120479190613fc6565b509496509294505050506001600160a01b0383161515905061206f5761206c8161235f565b91505b50919050565b6000610c4b6001600160a01b0383168068010000000000000000611804565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f99190613fad565b90506000612110828660020154876001015461280c565b61158d90613c81565b825460009061212d9084600160801b6118b2565b90506121398483612094565b6118ec9082613ee7565b600063ffffffff821661216c576040516351a4d88160e01b8152600060048201526024016115b9565b60408051600280825260608201835260009260208301908036833701905050905082816000815181106121a1576121a1613a63565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106121d0576121d0613a63565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90612211908490600401614062565b600060405180830381865afa92505050801561224f57506040513d6000823e601f3d908101601f1916820160405261224c9190810190614144565b60015b6122c457836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b59190613fc6565b5093965061074d945050505050565b6000826000815181106122d9576122d9613a63565b6020026020010151836001815181106122f4576122f4613a63565b60200260200101516123069190614210565b9050600061231a63ffffffff881683614276565b905060008260060b128015612340575061233a63ffffffff8816836142b4565b60060b15155b15612353578061234f816142d6565b9150505b9450610c4b9350505050565b60008060008360020b12612376578260020b61237e565b8260020b6000035b9050620d89e88111156123b75760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064016115b9565b6000600182166123cb57600160801b6123dd565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615612411576ffff97272373d413259a46990580e213a0260801c5b6004821615612430576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561244f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561246e576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561248d576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156124ac576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156124cb576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156124eb576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561250b576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561252b576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561254b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561256b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561258b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156125ab576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156125cb576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156125ec576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561260c576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561262b576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612648576b048a170391f7dc42444e8fa20260801c5b60008460020b131561266957806000198161266557612665614260565b0490505b600160201b81061561267c57600161267f565b60005b60ff16602082901c0192505050919050565b600080806126a0868683612827565b9150915060006126b8866001600160a01b0316611c11565b9050816126ca8483600160801b6118b2565b6126d49190613ee7565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa15801561273c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127609190614360565b905061278161277c8260600151876128f090919063ffffffff16565b612920565b61278b9083613ee7565b815160408301519193506127a191879190612936565b61158d9083613ee7565b611aea828261192a565b60006127c18383612970565b60ff1660ff1415905092915050565b8254610e12908690869086906127f590600160381b90046001600160801b031661437c565b8a9392919087876129e7565b6000610c4b82612a78565b60006118ec61281b84866143ac565b8390600160801b612a8f565b82546000908190819061284190610100900460020b61235f565b865490915060009061285c90600160201b900460020b61235f565b9050856001600160a01b03808416908216101561287a575081612897565b816001600160a01b0316876001600160a01b031611156128975750805b87546128bb9061277c9083908590600160381b90046001600160801b03168a612aec565b94506128e361277c84838b60000160079054906101000a90046001600160801b03168a612ba1565b9350505050935093915050565b8154600583015460009161154c91600160381b9091046001600160801b031690600160801b906112ad9086613ead565b6000600160ff1b821061293257600080fd5b5090565b60028301546003840154600485015485546000936129679387938793600160381b90046001600160801b0316612c11565b6118ec90613c81565b6000805b60088160ff1610156129dd578263ffffffff16848260ff166008811061299c5761299c613a63565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156129cb579050610c4b565b806129d581613a8f565b915050612974565b5060ff9392505050565b6129f5848787868686612c46565b8354602082810151604080516101008504600290810b8252600160201b90950490940b92840192909252828201525163ffffffff87169188917f841e7440ea722264a0d4fdfb3c6be43d4c3be7d0dd5334b7a2edab9e8ca845ff9181900360600190a38354600160381b90046001600160801b0316610f8757610f87878561304f565b600080821361293257612a8a82613c81565b610c4b565b60006001818080612aa088856130d1565b94509250612aae87856130d1565b94509150612abc86856130d1565b94509050612ace61277c848484611804565b945083612ae157612ade85613c81565b94505b505050509392505050565b6000836001600160a01b0316856001600160a01b03161115612b0c579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b038686038116908716612b3f57600080fd5b83612b7557866001600160a01b0316612b628383896001600160a01b0316611804565b81612b6f57612b6f614260565b04611bdb565b611bdb612b8c8383896001600160a01b03166130fb565b886001600160a01b0316808204910615150190565b6000836001600160a01b0316856001600160a01b03161115612bc1579293925b81612bee57612be9836001600160801b03168686036001600160a01b0316600160601b611804565b61158d565b61158d836001600160801b03168686036001600160a01b0316600160601b6130fb565b6000612c3982600160801b612c288888888d61313b565b612c32908a6143ac565b9190613160565b90505b9695505050505050565b600080612c746040518060800160405280600081526020016000815260200160008152602001600081525090565b600086600f0b1315612d3d578854604051631dce5fcf60e01b81526101008204600290810b6004830152600160201b90920490910b60248201526001600160801b038716604482015260009081906001600160a01b03881690631dce5fcf9060640160c0604051808303816000875af1158015612cf5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1991906143eb565b94509092509050612d2982612920565b9450612d3481612920565b93505050612e21565b885460009081906001600160a01b0388169063a34123a7906101008104600290810b91600160201b9004900b612d728c61437c565b6040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160c0604051808303816000875af1158015612dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612def91906143eb565b94509092509050612dff82612920565b612e0890613c81565b9450612e1381612920565b612e1c90613c81565b935050505b612e2e898989848861319e565b8184600001818151612e4091906143ac565b905250602084018051849190612e579083906143ac565b905250885463ffffffff88169089907feb77cdd733ee295d52966d2946632ded675ffb7fbef59559ad0adea55cded940906101008104600290810b91600160201b810490910b908b9060ff16612eac8a613c81565b612eb58a613c81565b604051612ec796959493929190614421565b60405180910390a36000612f44866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f36919061445f565b6001600160a01b0316611fe2565b90506000612f538b8383612827565b5060018c0154909150612f6690826143ac565b86604001818151612f779190613ee7565b9052506000600f89900b1315612fd4578a5488908c90600790612fab908490600160381b90046001600160801b031661447c565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550613030565b600088600f0b121561303057612fe98861437c565b8b548c9060079061300b908490600160381b90046001600160801b03166144a7565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b61303a8582613ee7565b8b600101819055505050505050505050505050565b8054600160381b90046001600160801b0316156130b057805460405163042f31f360e01b81526101008204600290810b6004830152600160201b8304900b6024820152600160381b9091046001600160801b031660448201526064016115b9565b80546112599083906101008104600290810b91600160201b9004900b6132e4565b60008060008412156130f0579115916130e984613c81565b91506130f4565b8391505b5092909150565b6000613108848484611804565b90506000828061311a5761311a614260565b848609111561154c57600019811061313157600080fd5b6001019392505050565b600061315661314a86846143ac565b8590600160801b612a8f565b61158d9084613ee7565b600061316d8484846118b2565b905060008112801561318d575061318d61318685612801565b84846132fa565b1561154c576118ec60001982613ee7565b815160408301516000916131b491889190612936565b905080826000018181516131c89190613ee7565b90525060608301516000906131e29061277c9089906128f0565b905080836000018181516131f69190613ee7565b9052508654604080516101008304600290810b8252600160201b90930490920b6020830152810183905263ffffffff86169087907fe78c346ca01ca7fd618ef99876cdc15c30b6f4072af58014453e6442fbeb70dc9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b6020830152810182905263ffffffff86169087907f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e74429060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b601882901b62ffffff82160161154c8482613311565b60008183850980156111db57506001949350505050565b65ffffffffffff811661333a5760405163fda0966560e01b8152600060048201526024016115b9565b600560005b6005811015613406578265ffffffffffff1684826005811061336357613363613a63565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff161415613393578091505b8381600581106133a5576133a5613a63565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156133f457600081116133e25760006133ed565b6133ed600182613ead565b9050613406565b806133fe81613e7a565b91505061333f565b816005146106bd578181141561345c57600084836005811061342a5761342a613a63565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff1602179055506106bd565b83816005811061346e5761346e613a63565b600591828204019190066006029054906101000a900465ffffffffffff1660008584600581106134a0576134a0613a63565b600591828204019190066006028785600581106134bf576134bf613a63565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050505050565b6001600160a01b038116811461352f57600080fd5b50565b60008060006060848603121561354757600080fd5b8335925060208401356135598161351a565b929592945050506040919091013590565b60006020828403121561357c57600080fd5b5035919050565b6000806040838503121561359657600080fd5b8235915060208301356135a88161351a565b809150509250929050565b6000610120828403121561206f57600080fd5b60ff8116811461352f57600080fd5b6000806000606084860312156135ea57600080fd5b8335925060208401356135fc8161351a565b9150604084013561360c816135c6565b809150509250925092565b6003811061363557634e487b7160e01b600052602160045260246000fd5b9052565b60028a810b825289900b6020820152610120810161365a604083018a613617565b6001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b6000602082840312156136a857600080fd5b813561154c8161351a565b6000806000806000808688036101208112156136ce57600080fd5b60808112156136dc57600080fd5b508695506080870135945060a0870135935060c0870135925060e0870135915061010087013561370b8161351a565b809150509295509295509295565b60008060006060848603121561372e57600080fd5b8335925060208401359150604084013561360c8161351a565b63ffffffff8116811461352f57600080fd5b60008060006060848603121561376e57600080fd5b83356137798161351a565b925060208401356137898161351a565b9150604084013561360c81613747565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156137d2576137d2613799565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561380157613801613799565b604052919050565b8060020b811461352f57600080fd5b80356138238161351a565b919050565b61ffff8116811461352f57600080fd5b803561382381613828565b801515811461352f57600080fd5b803561382381613843565b80356003811061382357600080fd5b600080600083850361012081121561388257600080fd5b8435935060208501356138948161351a565b925060e0603f19820112156138a857600080fd5b506138b16137af565b60408501356138bf81613809565b815260608501356138cf81613809565b60208201526080850135600f81900b81146138e957600080fd5b60408201526138fa60a08601613818565b606082015261390b60c08601613838565b608082015261391c60e08601613851565b60a082015261392e610100860161385c565b60c0820152809150509250925092565b6000806040838503121561395157600080fd5b50508035926020909101359150565b600080600080600060a0868803121561397857600080fd5b85359450602086013561398a8161351a565b9350604086013561399a81613809565b925060608601356139aa81613809565b949793965091946080013592915050565b600080604083850312156139ce57600080fd5b8235915060208301356135a881613843565b94855263ffffffff939093166020808601919091528251604080870191909152908301516001600160a01b0316606080870191909152908301511515608086015290910151151560a084015260c0830152151560e08201526101000190565b60008060408385031215613a5257600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415613aa657613aa6613a79565b60010192915050565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008135610c4b81613843565b60008135610c4b8161351a565b8135613b0a8161351a565b613b148183613ac5565b506020820135613b238161351a565b613b308160018401613ac5565b506040820135613b3f8161351a565b613b4c8160028401613ac5565b50600381016060830135613b5f81613828565b815461ffff191661ffff8216178255506080830135613b7d81613828565b815463ffff00001916601082901b63ffff0000161782555060a0830135613ba381613747565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560c0850135613bd381613843565b68ffffffffff00000000199190911690911790151560401b68ff000000000000000016178155613c32613c0860e08501613ae5565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b611259613c426101008501613af2565b8280547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b6000600160ff1b821415613c9757613c97613a79565b5060000390565b8135613ca981613828565b815461ffff191661ffff8216178255506020820135613cc781613828565b815463ffff00001916601082901b63ffff000016178255506040820135613ced81613828565b815465ffff000000008260201b1691508165ffff0000000019821617835560608401356001600160801b0381168114613d2557600080fd5b75ffffffffffffffffffffffffffffffff0000000000008160301b168375ffffffffffffffffffffffffffffffffffff00000000198416171784555050505050565b6000808284036080811215613d7b57600080fd5b835192506060601f1982011215613d9157600080fd5b506040516060810181811067ffffffffffffffff82111715613db557613db5613799565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006101608201905086825263ffffffff86166020830152845160020b6040830152602085015160020b60608301526040850151600f0b608083015260018060a01b0360608601511660a083015261ffff60808601511660c083015260a0850151613e4f60e084018215159052565b5060c0850151613e63610100840182613617565b5083610120830152612c3c61014083018415159052565b6000600019821415613e8e57613e8e613a79565b5060010190565b60008219821115613ea857613ea8613a79565b500190565b600082821015613ebf57613ebf613a79565b500390565b600061ffff83811690831681811015613edf57613edf613a79565b039392505050565b600080821280156001600160ff1b0384900385131615613f0957613f09613a79565b600160ff1b8390038412811615613f2257613f22613a79565b50500190565b60006001600160ff1b0381841382841380821686840486111615613f4e57613f4e613a79565b600160ff1b6000871282811687830589121615613f6d57613f6d613a79565b60008712925087820587128484161615613f8957613f89613a79565b87850587128184161615613f9f57613f9f613a79565b505050929093029392505050565b600060208284031215613fbf57600080fd5b5051919050565b600080600080600080600060e0888a031215613fe157600080fd5b8751613fec8161351a565b6020890151909750613ffd81613809565b604089015190965061400e81613828565b606089015190955061401f81613828565b608089015190945061403081613828565b60a0890151909350614041816135c6565b60c089015190925061405281613843565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b818110156140a057835163ffffffff168352928401929184019160010161407e565b50909695505050505050565b600067ffffffffffffffff8211156140c6576140c6613799565b5060051b60200190565b600082601f8301126140e157600080fd5b815160206140f66140f1836140ac565b6137d8565b82815260059290921b8401810191818101908684111561411557600080fd5b8286015b8481101561413957805161412c8161351a565b8352918301918301614119565b509695505050505050565b6000806040838503121561415757600080fd5b825167ffffffffffffffff8082111561416f57600080fd5b818501915085601f83011261418357600080fd5b815160206141936140f1836140ac565b82815260059290921b840181019181810190898411156141b257600080fd5b948201945b838610156141e05785518060060b81146141d15760008081fd5b825294820194908201906141b7565b918801519196509093505050808211156141f957600080fd5b50614206858286016140d0565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561423b5761423b613a79565b81667fffffffffffff01831381161561425657614256613a79565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b8061428d5761428d614260565b667fffffffffffff198214600019821416156142ab576142ab613a79565b90059392505050565b60008260060b806142c7576142c7614260565b808360060b0791505092915050565b60008160020b627fffff198114156142f0576142f0613a79565b6000190192915050565b60006080828403121561430c57600080fd5b6040516080810181811067ffffffffffffffff8211171561432f5761432f613799565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006080828403121561437257600080fd5b61154c83836142fa565b600081600f0b6f7fffffffffffffffffffffffffffffff198114156143a3576143a3613a79565b60000392915050565b60008083128015600160ff1b8501841216156143ca576143ca613a79565b6001600160ff1b03840183138116156143e5576143e5613a79565b50500390565b600080600060c0848603121561440057600080fd5b835192506020840151915061441885604086016142fa565b90509250925092565b600287810b825286900b6020820152600f85900b604082015260c0810161444b6060830186613617565b608082019390935260a00152949350505050565b60006020828403121561447157600080fd5b815161154c8161351a565b60006001600160801b0380831681851680830382111561449e5761449e613a79565b01949350505050565b60006001600160801b0383811690831681811015613edf57613edf613a7956fea164736f6c634300080c000a';

type AccountTestConstructorParams =
  | [linkLibraryAddresses: AccountTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class AccountTest__factory extends ContractFactory {
  constructor(...args: AccountTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AccountTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: AccountTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountTest> {
    return super.deploy(overrides || {}) as Promise<AccountTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccountTest {
    return super.attach(address) as AccountTest;
  }
  connect(signer: Signer): AccountTest__factory {
    return super.connect(signer) as AccountTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountTestInterface {
    return new utils.Interface(_abi) as AccountTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountTest {
    return new Contract(address, _abi, signerOrProvider) as AccountTest;
  }
}

export interface AccountTestLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
