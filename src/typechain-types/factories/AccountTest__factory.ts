/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { AccountTest, AccountTestInterface } from '../AccountTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientCollateralBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'LPS_DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'U32L8_NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'U48L5_IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'UV3PH_IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'VPS_DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'poolId',
        type: 'uint32',
      },
    ],
    name: 'VPS_TokenInactive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'cleanPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountDepositBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: 'num',
        type: 'uint8',
      },
    ],
    name: 'getAccountLiquidityPositionDetails',
    outputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'enum IClearingHouseEnums.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountLiquidityPositionNum',
    outputs: [
      {
        internalType: 'uint8',
        name: 'num',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'getAccountProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'profit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'getAccountQuoteBalance',
    outputs: [
      {
        internalType: 'int256',
        name: 'balance',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountTokenDetails',
    outputs: [
      {
        internalType: 'int256',
        name: 'balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'netTraderPosition',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumAChkpt',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'initCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'initToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'insuranceFundFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouseEnums.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maxVirtualPriceDeviationRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'fixFee_',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'settlementToken',
        type: 'address',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'swapTokenAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'swapTokenNotional',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountId',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506143fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80638dcfa482116100f9578063d6f73e3911610097578063e0bb874c11610071578063e0bb874c146104ed578063f2f0019814610500578063f39650bd14610513578063ffa689da1461052657600080fd5b8063d6f73e3914610475578063df4d17dc14610498578063e0a1285a146104da57600080fd5b80639cd1be58116100d35780639cd1be58146104345780639dca362f146104475780639e95f3321461044f5780639f84b72c1461046257600080fd5b80638dcfa482146103fb5780638eda91491461040e578063953d61ad1461042157600080fd5b80634fa8077c1161016657806376dd63141161014057806376dd6314146102ee57806382d9dbaa146103015780638ce25a93146103315780638ce744261461033a57600080fd5b80634fa8077c1461025257806355b5dfc8146102b3578063569634d3146102c657600080fd5b8063076d6a63146101ae5780631ca45818146101c35780632098e95c146101df57806333939e04146101f25780633d3a5f02146102175780633ffe794c1461023f575b600080fd5b6101c16101bc366004613325565b610539565b005b6101cc606d5481565b6040519081526020015b60405180910390f35b6101c16101ed36600461335d565b6105f0565b610205610200366004613376565b6106bd565b60405160ff90911681526020016101d6565b61022a6102253660046133b5565b610749565b6040516101d699989796959493929190613419565b6101c161024d366004613476565b610887565b610298610260366004613376565b60009182526020828152604080842063ffffffff93909316845260029283019091529091208054600182015491909201549192909190565b604080519384526020840192909252908201526060016101d6565b6101c16102c136600461335d565b6108ff565b6102d96102d436600461335d565b610a24565b604080519283526020830191909152016101d6565b6101cc6102fc366004613376565b610ac3565b6101c161030f366004613489565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6101cc606e5481565b600354600454604080516101008101825260055461ffff808216835262010000820481166020840152600160201b82048116938301939093526601000000000000810483166060830152600160401b810483166080830152600160501b810490921660a082015267ffffffffffffffff600160601b8304811660c0830152600160a01b90920490911660e08201526006546007546008546103e9956001600160a01b0390811695169392919086565b6040516101d6969594939291906134a6565b6101c161040936600461357f565b610aeb565b6101c161041c366004613691565b610bdf565b6101c161042f366004613764565b610c7c565b6101c16104423660046137cd565b610cc0565b6101c1610d44565b6101c161045d3660046137ef565b610d87565b6101c1610470366004613376565b610e2e565b6101cc61048336600461335d565b60009081526020819052604090206003015490565b6101c16104a6366004613489565b63ffffffff8116600090815260016020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b6101c16104e8366004613325565b610ecf565b6101cc6104fb36600461335d565b610f69565b6101c161050e366004613325565b610f86565b6102d961052136600461384a565b611005565b6101c1610534366004613325565b6110a3565b6000838152602081815260408083208151608081018352858152928301849052600183830181905260608401949094529051630a067b0f60e11b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9363140cf61e936105a9939263ffffffff89169290819060040161386f565b6040805180830381865af41580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e991906138ce565b5050505050565b600081815260208190526040902061060f906001908101908390611112565b50600081815260208190526040812060680190805b60088160ff1610156106b75760008360ff831660088110610647576106476138f2565b600891828204019190066004029054906101000a900463ffffffff1690508063ffffffff1660000361067957506106b7565b63ffffffff808216600090815260018601602052604090205493506106a4908590839086906111da16565b50806106af8161391e565b915050610624565b50505050565b60008281526020818152604080832063ffffffff8516845260020190915281206003015b60058260ff161015610742578060ff831660058110610702576107026138f2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1660000315610742578161073a8161391e565b9250506106e1565b5092915050565b6000806000806000806000806000806000808e815260200190815260200160002060010160010160006107888e6001600160a01b031663ffffffff1690565b63ffffffff16815260208101919091526040016000908120600381019250600401818360ff8f16600581106107bf576107bf6138f2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002090508060000160019054906101000a900460020b8160000160049054906101000a900460020b8260000160009054906101000a900460ff168360000160079054906101000a90046001600160801b0316846001015485600201548660030154876004015488600501549a509a509a509a509a509a509a509a509a50505093979b92969a50939750939750565b60006108a76108996020840184613489565b6001600160a01b031661126b565b63ffffffff81166000908152600160205260409020549091506108d2906001600160a01b0316611279565b6108de576108de61393d565b63ffffffff8116600090815260016020526040902082906106b7828261399a565b600081815260208190526040902061091e906001908101908390611112565b50600081815260208181526040808320815160608101835284815292830184905290820183905260010191906000600284018190555b60088160ff1610156105e95760008460ff831660088110610977576109776138f2565b600891828204019190066004029054906101000a900463ffffffff1690508063ffffffff166000036109a957506105e9565b8460010160008263ffffffff1663ffffffff168152602001908152602001600020935060405180606001604052806000815260200185600001546109ec90613b21565b815260200185600101546109ff90613b21565b90529250610a1185878584600161128b565b5080610a1c8161391e565b915050610954565b600081815260208190526040808220606d5491516308b9103160e21b81526004810191909152602481019190915260016044820152819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906322e440c4906064016040805180830381865af4158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba91906138ce565b91509150915091565b60008281526020818152604080832063ffffffff851684526069019091529020545b92915050565b60006040518060400160405280856001600160a01b031681526020016040518060600160405280866001600160a01b031681526020018563ffffffff16815260200160011515815250815250905080600180016000610b5684600001516001600160a01b031661126b565b63ffffffff90811682526020808301939093526040918201600020845181546001600160a01b039182166001600160a01b0319909116178255948401518051600190920180549582015191909401511515600160c01b0260ff60c01b1991909316600160a01b026001600160c01b03199095169190951617929092179290921617905550505050565b60008381526020819052604090819020905163c27789d160e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163c27789d191610c33919063ffffffff87169086906001908190600401613b3d565b606060405180830381865af4158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190613bd7565b505050505050565b856005610c898282613c1f565b5050600694909455600792909255600855600380546001600160a01b0319166001600160a01b0390931692909217909155606d5550565b60008281526020819052604090819020905163d25c4a6f60e01b8152600481019190915260248101829052600160448201819052606482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063d25c4a6f9060840160006040518083038186803b158015610d3057600080fd5b505af4158015610c74573d6000803e3d6000fd5b606e8054600090815260208190526040812080546bffffffffffffffffffffffff1633600160601b02178155825490929091610d7f83613d93565b919050555050565b6000858152602081905260408082208151637022478560e11b8152600481019190915263ffffffff87166024820152600286810b604483015285900b606482015260848101849052600160a4820152905173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9263e0448f0a9260c48082019391829003018186803b158015610e0f57600080fd5b505af4158015610e23573d6000803e3d6000fd5b505050505050505050565b60008281526020819052604090819020606d5482516377f3beb560e01b8152600481019290925263ffffffff84166024830152604482015260016064820152815173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__926377f3beb592608480820193918290030181865af4158015610eab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b791906138ce565b600083815260208190526040808220905163f5a284a160e01b8152600481019190915263ffffffff841660248201526044810183905260016064820152608481019190915273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063f5a284a19060a4015b60006040518083038186803b158015610f4c57600080fd5b505af4158015610f60573d6000803e3d6000fd5b50505050505050565b6000818152602081905260408120610ae590600190810190611338565b600083815260208190526040902073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063f5a284a19063ffffffff8516610fc085613b21565b6040516001600160e01b031960e086901b168152600481019390935263ffffffff9190911660248301526044820152600160648201819052608482015260a401610f34565b600082815260208190526040808220905163031b5fcd60e21b81526004810191909152821515602482015260016044820152819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90630c6d7f34906064016040805180830381865af4158015611074573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109891906138ce565b909590945092505050565b6000838152602081815260408083208151608081018352858152928301849052828201849052606083019390935251630a067b0f60e11b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9263140cf61e926105a99263ffffffff88169190600190819060040161386f565b6000805b60088160ff1610156111d25760008560ff831660088110611139576111396138f2565b600891828204019190066004029054906101000a900463ffffffff1690508063ffffffff1660000361116b57506111d2565b6111b2858760ff851660088110611184576111846138f2565b600891828204019190066004029054906101000a900463ffffffff16868961141c909392919063ffffffff16565b6111bc9084613dac565b92505080806111ca9061391e565b915050611116565b509392505050565b63ffffffff821660009081526001840160205260409020548111156112125760405163b1eae4f160e01b815260040160405180910390fd5b63ffffffff8216600090815260018401602052604081208054839290611239908490613dc4565b909155505063ffffffff82166000908152600184016020526040812054900361126657611266838361148a565b505050565b600063ffffffff8216610ae5565b60006001600160a01b03821615610ae5565b6112978585848461169e565b6112a185836116d2565b63ffffffff8216600090815260018601602090815260408220908501518154919290918391906112d2908490613ddb565b909155505060408401516001820180546000906112f0908490613ddb565b9091555050835160028701805460009061130b908490613ddb565b909155505080541580156113295750600381015465ffffffffffff16155b15610c7457610c748684611811565b6000805b60088160ff1610156114055760008460ff83166008811061135f5761135f6138f2565b600891828204019190066004029054906101000a900463ffffffff1690508063ffffffff166000036113915750611405565b63ffffffff80821660009081526001870160205260409020906113ba9082908490889061188a16565b6113c49085613ddb565b935060006113d286846118ae565b90506113e3600383018285896118fd565b6113ed9086613ddb565b945050505080806113fd9061391e565b91505061133c565b5060028301546114159082613ddb565b9392505050565b600061144260405180606001604052806000815260200160008152602001600081525090565b611461858583866114558b84600061192c565b6003019392919061198e565b61146e868683878761128b565b60408101516114809084908690611a3b565b9695505050505050565b8063ffffffff166000036114b957604051631d8b110f60e11b8152600060048201526024015b60405180910390fd5b600860005b6008811015611579578263ffffffff168482600881106114e0576114e06138f2565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff160361150b578091505b83816008811061151d5761151d6138f2565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff166000036115675760008111611555576000611560565b611560600182613dc4565b9050611579565b8061157181613d93565b9150506114be565b600881146115875780611597565b61159360016008613e1c565b60ff165b9050600882146106b7578181036115ea5760008483600881106115bc576115bc6138f2565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055506106b7565b8381600881106115fc576115fc6138f2565b600891828204019190066004029054906101000a900463ffffffff16600085846008811061162c5761162c6138f2565b6008918282040191900660040287856008811061164b5761164b6138f2565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b63ffffffff8083166000908152602083905260409020600201546106b7918691869186916001600160a01b031690611a4916565b8063ffffffff166000036116fc57604051631d8b110f60e11b8152600060048201526024016114b0565b600860005b60088110156117a5578263ffffffff16848260088110611723576117236138f2565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16036117505750505050565b6000848260088110611764576117646138f2565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1603611793578091506117a5565b8061179d81613d93565b915050611701565b5060071981016117d05760405163274ca29b60e11b815263ffffffff831660048201526024016114b0565b818382600881106117e3576117e36138f2565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b63ffffffff81166000908152600183016020526040902054151580611856575063ffffffff81166000908152600183016020526040902061185490600301611b4d565b155b1561187c5760405163d04a572560e01b815263ffffffff821660048201526024016114b0565b611886828261148a565b5050565b6000806118978385611b60565b90506118a585858386611b7d565b95945050505050565b63ffffffff808216600090815260208490526040812060038101546001820154929391926118f5926001600160a01b039091169166010000000000009004811690611bac16565b949350505050565b63ffffffff82166000908152602082905260408120600201546118a590869086906001600160a01b0316611bcd565b600081156119435761193e8484611c68565b611972565b61194d8484611c72565b61197257604051638bff134b60e01b815263ffffffff841660048201526024016114b0565b505063ffffffff16600090815260019091016020526040902090565b60005b855465ffffffffffff1615610c74576119c460405180606001604052806000815260200160008152602001600081525090565b865465ffffffffffff166000908152600188016020526040902091506119ee878787858588611c8c565b8051845185906119ff908390613ddb565b9052506020808201519085018051611a18908390613ddb565b9052506040808201519085018051611a31908390613ddb565b9052506119919050565b60006118f584848484611cbd565b63ffffffff8216600090815260018501602090815260408083208151631dde605760e21b815291519093926001600160a01b03861692637779815c92600480830193928290030181865afa158015611aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac99190613e3f565b90506000611ad78385611cf4565b905080876002016000828254611aed9190613ddb565b909155505060028301829055604080516000808252602082015290810182905263ffffffff86169087907fe78c346ca01ca7fd618ef99876cdc15c30b6f4072af58014453e6442fbeb70dc9060600160405180910390a350505050505050565b6000610ae5825465ffffffffffff161590565b6000611415611b6f84846118ae565b6001600160a01b0316611d79565b63ffffffff83166000908152602082905260408120600201546118a590869085906001600160a01b0316611de6565b600080611bc26001600160a01b03851684611e10565b90506118f58161202f565b6000805b60058110156111d2576000858260058110611bee57611bee6138f2565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff16600003611c2457506111d2565b65ffffffffffff811660009081526001870160205260409020611c48908686612351565b611c529084613ddb565b9250508080611c6090613d93565b915050611bd1565b61188682826116d2565b60006008611c80848461246b565b60ff1614159392505050565b8254610c7490869086908690611cb190600160381b90046001600160801b0316613e58565b8a9392919087876124e1565b6000611cc882612575565b611cea611cd58787611b60565b600160801b611ce387612575565b9190612580565b6118a59190613dac565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d599190613e3f565b90506000611d708286600201548760010154612632565b6118a590613b21565b60006401000276a36001600160a01b0383161080611db4575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15611ddd57604051635d236c4560e01b81526001600160a01b03831660048201526024016114b0565b610ae58261264d565b8254600090611dfa9084600160801b612667565b9050611e068483611cf4565b6118f59082613ddb565b60008163ffffffff16600003611e3c57604051636eb711b760e11b8152600060048201526024016114b0565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110611e7157611e716138f2565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110611ea057611ea06138f2565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90611ee1908490600401613e87565b600060405180830381865afa925050508015611f1f57506040513d6000823e601f3d908101601f19168201604052611f1c9190810190613f69565b60015b611f9457836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f859190614035565b50939650610742945050505050565b600082600081518110611fa957611fa96138f2565b602002602001015183600181518110611fc457611fc46138f2565b6020026020010151611fd691906140d1565b90506000611fea63ffffffff881683614137565b905060008260060b128015612010575061200a63ffffffff881683614175565b60060b15155b15612023578061201f81614197565b9150505b9450610ae59350505050565b60008060008360020b12612046578260020b61204e565b8260020b6000035b9050620d89e8811115612074576040516315e4079d60e11b815260040160405180910390fd5b60008160011660000361208b57600160801b61209d565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156120d1576ffff97272373d413259a46990580e213a0260801c5b60048216156120f0576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561210f576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561212e576fffcb9843d60f6159c9db58835c9266440260801c5b602082161561214d576fff973b41fa98c081472e6896dfb254c00260801c5b604082161561216c576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561218b576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156121ab576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156121cb576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156121eb576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561220b576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561222b576fd097f3bdfd2022b8845ad8f792aa58250260801c5b61200082161561224b576fa9f746462d870fdf8a65dc1f90e061e50260801c5b61400082161561226b576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561228b576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156122ac576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156122cc576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156122eb576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615612308576b048a170391f7dc42444e8fa20260801c5b60008460020b131561232957806000198161232557612325614121565b0490505b600160201b81061561233c57600161233f565b60005b60ff16602082901c0192505050919050565b600080806123608686836126a4565b915091506000612378866001600160a01b0316611d79565b90508161238a8483600160801b612667565b6123949190613ddb565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa1580156123fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124209190614220565b905061244161243c82606001518761276d90919063ffffffff16565b61279d565b61244b9083613ddb565b81516040830151919350612461918791906127b3565b6118a59083613ddb565b6000805b600860ff821610156124d7578263ffffffff16848260ff1660088110612497576124976138f2565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16036124c5579050610ae5565b806124cf8161391e565b91505061246f565b5060089392505050565b6124ef8487878686866127ed565b8354602083810151604080516101008504600290810b8252600160201b90950490940b92840192909252828201525163ffffffff87169188917f841e7440ea722264a0d4fdfb3c6be43d4c3be7d0dd5334b7a2edab9e8ca845ff9181900360600190a38354600160381b90046001600160801b0316600003610f6057610f608785612bd2565b6000610ae582612c59565b60008080600019858709858702925082811083820303915050806000036125b957600084116125ae57600080fd5b508290049050611415565b8084116125c557600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60006118f5612641848661423c565b8390600160801b612c70565b6000610ae56001600160a01b03831680600160401b612580565b600061269061243c6000861261267d5785612689565b6126898660001961427b565b8585612580565b90506000841215611415576118f581613b21565b8254600090819081906126be90610100900460020b61202f565b86549091506000906126d990600160201b900460020b61202f565b9050856001600160a01b0380841690821610156126f7575081612714565b816001600160a01b0316876001600160a01b031611156127145750805b87546127389061243c9083908590600160381b90046001600160801b03168a612ccd565b945061276061243c84838b60000160079054906101000a90046001600160801b03168a612d8d565b9350505050935093915050565b8154600583015460009161141591600160381b9091046001600160801b031690600160801b90611ce39086613dc4565b6000600160ff1b82106127af57600080fd5b5090565b60028301546003840154600485015485546000936127e49387938793600160381b90046001600160801b0316612dfd565b6118f590613b21565b63ffffffff8416600090815260208290526040812060020154819081906001600160a01b031690506128406040518060800160405280600081526020016000815260200160008152602001600081525090565b600087600f0b1315612909578954604051631dce5fcf60e01b81526101008204600290810b6004830152600160201b90920490910b60248201526001600160801b038816604482015260009081906001600160a01b03851690631dce5fcf9060640160c0604051808303816000875af11580156128c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e59190614300565b945090925090506128f58261279d565b95506129008161279d565b945050506129ed565b895460009081906001600160a01b0385169063a34123a7906101008104600290810b91600160201b9004900b61293e8d613e58565b6040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160c0604051808303816000875af1158015612997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129bb9190614300565b945090925090506129cb8261279d565b6129d490613b21565b95506129df8161279d565b6129e890613b21565b945050505b6129fa8a8a8a848a612e25565b8286600001818151612a0c919061423c565b905250602086018051859190612a2390839061423c565b905250895463ffffffff8916908a907feb77cdd733ee295d52966d2946632ded675ffb7fbef59559ad0adea55cded940906101008104600290810b91600160201b810490910b908c9060ff16612a788b613b21565b612a818b613b21565b604051612a9396959493929190614336565b60405180910390a363ffffffff8816600090815260208690526040812060010154612ac6906001600160a01b0316612f6b565b90506000612ad58c83836126a4565b5060018d0154909150612ae8908261423c565b88604001818151612af99190613ddb565b9052506000600f8a900b1315612b56578b5489908d90600790612b2d908490600160381b90046001600160801b0316614374565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550612bb2565b600089600f0b1215612bb257612b6b89613e58565b8c548d90600790612b8d908490600160381b90046001600160801b031661439f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b612bbc8682613ddb565b8c60010181905550505050505050505050505050565b8054600160381b90046001600160801b031615612c33578054604051630268d7e960e31b81526101008204600290810b6004830152600160201b8304900b6024820152600160381b9091046001600160801b031660448201526064016114b0565b805461188690600160201b810462ffffff1661010090910460181b60050b018390613000565b60008082136127af57612c6b82613b21565b610ae5565b60006001818080612c818885613229565b94509250612c8f8785613229565b94509150612c9d8685613229565b94509050612caf61243c848484612580565b945083612cc257612cbf85613b21565b94505b505050509392505050565b6000836001600160a01b0316856001600160a01b03161115612ced579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b038686038116908716612d2057600080fd5b83612d5657866001600160a01b0316612d438383896001600160a01b0316612580565b81612d5057612d50614121565b04612d82565b612d82612d6d8383896001600160a01b0316613253565b886001600160a01b0316808204910615150190565b979650505050505050565b6000836001600160a01b0316856001600160a01b03161115612dad579293925b81612dda57612dd5836001600160801b03168686036001600160a01b0316600160601b612580565b6118a5565b6118a5836001600160801b03168686036001600160a01b0316600160601b613253565b6000612d8282600160801b612e148888888d613293565b612e1e908a61423c565b91906132b8565b81516040830151600091612e3b918891906127b3565b90508082600001818151612e4f9190613ddb565b9052506060830151600090612e699061243c90899061276d565b90508083600001818151612e7d9190613ddb565b9052508654604080516101008304600290810b8252600160201b90930490920b6020830152810183905263ffffffff86169087907fe78c346ca01ca7fd618ef99876cdc15c30b6f4072af58014453e6442fbeb70dc9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b6020830152810182905263ffffffff86169087907f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e74429060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015612fac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd09190614035565b5094965092945050506001600160a01b0384166000039150612ffa905057612ff78161202f565b91505b50919050565b8065ffffffffffff1660000361302c5760405163c712b5e960e01b8152600060048201526024016114b0565b600560005b60058110156130f6578265ffffffffffff16848260058110613055576130556138f2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1603613084578091505b838160058110613096576130966138f2565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000036130e457600081116130d25760006130dd565b6130dd600182613dc4565b90506130f6565b806130ee81613d93565b915050613031565b600581146131045780613114565b61311060016005613e1c565b60ff165b9050600582146106b75781810361316b576000848360058110613139576131396138f2565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff1602179055506106b7565b83816005811061317d5761317d6138f2565b600591828204019190066006029054906101000a900465ffffffffffff1660008584600581106131af576131af6138f2565b600591828204019190066006028785600581106131ce576131ce6138f2565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050505050565b60008060008412156132485791159161324184613b21565b915061324c565b8391505b5092909150565b6000613260848484612580565b90506000828061327257613272614121565b848609111561141557600019811061328957600080fd5b6001019392505050565b60006132ae6132a2868461423c565b8590600160801b612c70565b6118a59084613ddb565b60006132c5848484612667565b90506000811280156132e557506132e56132de85612575565b84846132f6565b15611415576118f560001982613ddb565b60008183850980156111d257506001949350505050565b6001600160a01b038116811461332257600080fd5b50565b60008060006060848603121561333a57600080fd5b83359250602084013561334c8161330d565b929592945050506040919091013590565b60006020828403121561336f57600080fd5b5035919050565b6000806040838503121561338957600080fd5b82359150602083013561339b8161330d565b809150509250929050565b60ff8116811461332257600080fd5b6000806000606084860312156133ca57600080fd5b8335925060208401356133dc8161330d565b915060408401356133ec816133a6565b809150509250925092565b6003811061341557634e487b7160e01b600052602160045260246000fd5b9052565b60028a810b825289900b6020820152610120810161343a604083018a6133f7565b6001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b60006101408284031215612ffa57600080fd5b60006020828403121561349b57600080fd5b81356114158161330d565b60006101a08201905060018060a01b03808916835280881660208401525061ffff8087511660408401528060208801511660608401528060408801511660808401525060608601516134fe60a084018261ffff169052565b50608086015161ffff811660c08401525060a086015161ffff811660e08401525060c086015167ffffffffffffffff81166101008401525060e086015167ffffffffffffffff811661012084015250846101408301528361016083015282610180830152979650505050505050565b63ffffffff8116811461332257600080fd5b60008060006060848603121561359457600080fd5b833561359f8161330d565b925060208401356135af8161330d565b915060408401356133ec8161356d565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156135f8576135f86135bf565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613627576136276135bf565b604052919050565b8060020b811461332257600080fd5b80356136498161330d565b919050565b61ffff8116811461332257600080fd5b80356136498161364e565b801515811461332257600080fd5b803561364981613669565b80356003811061364957600080fd5b60008060008385036101208112156136a857600080fd5b8435935060208501356136ba8161330d565b925060e0603f19820112156136ce57600080fd5b506136d76135d5565b60408501356136e58161362f565b815260608501356136f58161362f565b60208201526080850135600f81900b811461370f57600080fd5b604082015261372060a0860161363e565b606082015261373160c0860161365e565b608082015261374260e08601613677565b60a08201526137546101008601613682565b60c0820152809150509250925092565b6000806000806000808688036101a081121561377f57600080fd5b6101008082121561378f57600080fd5b8897508701359550506101208601359350610140860135925061016086013591506101808601356137bf8161330d565b809150509295509295509295565b600080604083850312156137e057600080fd5b50508035926020909101359150565b600080600080600060a0868803121561380757600080fd5b8535945060208601356138198161330d565b935060408601356138298161362f565b925060608601356138398161362f565b949793965091946080013592915050565b6000806040838503121561385d57600080fd5b82359150602083013561339b81613669565b94855263ffffffff939093166020808601919091528251604080870191909152908301516001600160a01b0316606080870191909152908301511515608086015290910151151560a084015260c0830152151560e08201526101000190565b600080604083850312156138e157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff810361393457613934613908565b60010192915050565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008135610ae58161364e565b60008135610ae581613669565b60008135610ae58161330d565b81356139a58161330d565b6139af8183613953565b5060208201356139be8161330d565b6139cb8160018401613953565b5060408201356139da8161330d565b6139e78160028401613953565b506003810160608301356139fa8161364e565b815461ffff191661ffff8216178255506080830135613a188161364e565b815463ffff00001916601082901b63ffff0000161782555060a0830135613a3e8161364e565b815465ffff000000001916602082901b65ffff00000000161782555060c0830135613a688161356d565b815469ffffffff000000000000191660309190911b69ffffffff00000000000016178155613ab9613a9b60e08501613980565b82805460ff60501b191691151560501b60ff60501b16919091179055565b613ae7613ac96101008501613980565b82805460ff60581b191691151560581b60ff60581b16919091179055565b611266613af7610120850161398d565b82546bffffffffffffffffffffffff1660609190911b6bffffffffffffffffffffffff1916178255565b6000600160ff1b8201613b3657613b36613908565b5060000390565b60006101608201905086825263ffffffff86166020830152845160020b6040830152602085015160020b60608301526040850151600f0b608083015260018060a01b0360608601511660a083015261ffff60808601511660c083015260a0850151613bac60e084018215159052565b5060c0850151613bc06101008401826133f7565b508361012083015261148061014083018415159052565b600080600060608486031215613bec57600080fd5b8351925060208401519150604084015190509250925092565b6000813567ffffffffffffffff81168114610ae557600080fd5b8135613c2a8161364e565b815461ffff191661ffff8216178255506020820135613c488161364e565b815463ffff00001916601082901b63ffff000016178255506040820135613c6e8161364e565b815465ffff000000001916602082901b65ffff0000000016178255506060820135613c988161364e565b815467ffff0000000000008260301b1691508167ffff0000000000001982161783556080840135613cc88161364e565b69ffff00000000000000008160401b168369ffffffff00000000000019841617178455505050613d1d613cfd60a08401613973565b82805461ffff60501b191660509290921b61ffff60501b16919091179055565b613d58613d2c60c08401613c05565b82805467ffffffffffffffff60601b191660609290921b67ffffffffffffffff60601b16919091179055565b611886613d6760e08401613c05565b82805467ffffffffffffffff60a01b191660a09290921b67ffffffffffffffff60a01b16919091179055565b600060018201613da557613da5613908565b5060010190565b60008219821115613dbf57613dbf613908565b500190565b600082821015613dd657613dd6613908565b500390565b600080821280156001600160ff1b0384900385131615613dfd57613dfd613908565b600160ff1b8390038412811615613e1657613e16613908565b50500190565b600060ff821660ff841680821015613e3657613e36613908565b90039392505050565b600060208284031215613e5157600080fd5b5051919050565b600081600f0b6f7fffffffffffffffffffffffffffffff198103613e7e57613e7e613908565b60000392915050565b6020808252825182820181905260009190848201906040850190845b81811015613ec557835163ffffffff1683529284019291840191600101613ea3565b50909695505050505050565b600067ffffffffffffffff821115613eeb57613eeb6135bf565b5060051b60200190565b600082601f830112613f0657600080fd5b81516020613f1b613f1683613ed1565b6135fe565b82815260059290921b84018101918181019086841115613f3a57600080fd5b8286015b84811015613f5e578051613f518161330d565b8352918301918301613f3e565b509695505050505050565b60008060408385031215613f7c57600080fd5b825167ffffffffffffffff80821115613f9457600080fd5b818501915085601f830112613fa857600080fd5b81516020613fb8613f1683613ed1565b82815260059290921b84018101918181019089841115613fd757600080fd5b948201945b838610156140055785518060060b8114613ff65760008081fd5b82529482019490820190613fdc565b9188015191965090935050508082111561401e57600080fd5b5061402b85828601613ef5565b9150509250929050565b600080600080600080600060e0888a03121561405057600080fd5b875161405b8161330d565b602089015190975061406c8161362f565b604089015190965061407d8161364e565b606089015190955061408e8161364e565b608089015190945061409f8161364e565b60a08901519093506140b0816133a6565b60c08901519092506140c181613669565b8091505092959891949750929550565b60008160060b8360060b6000811281667fffffffffffff19018312811516156140fc576140fc613908565b81667fffffffffffff01831381161561411757614117613908565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b8061414e5761414e614121565b667fffffffffffff1982146000198214161561416c5761416c613908565b90059392505050565b60008260060b8061418857614188614121565b808360060b0791505092915050565b60008160020b627fffff1981036141b0576141b0613908565b6000190192915050565b6000608082840312156141cc57600080fd5b6040516080810181811067ffffffffffffffff821117156141ef576141ef6135bf565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006080828403121561423257600080fd5b61141583836141ba565b60008083128015600160ff1b85018412161561425a5761425a613908565b6001600160ff1b038401831381161561427557614275613908565b50500390565b60006001600160ff1b03818413828413808216868404861116156142a1576142a1613908565b600160ff1b60008712828116878305891216156142c0576142c0613908565b600087129250878205871284841616156142dc576142dc613908565b878505871281841616156142f2576142f2613908565b505050929093029392505050565b600080600060c0848603121561431557600080fd5b835192506020840151915061432d85604086016141ba565b90509250925092565b600287810b825286900b6020820152600f85900b604082015260c0810161436060608301866133f7565b608082019390935260a00152949350505050565b60006001600160801b0380831681851680830382111561439657614396613908565b01949350505050565b60006001600160801b03838116908316818110156143bf576143bf613908565b03939250505056fea2646970667358221220efc5c49d9883bf97e23cff5df57fe33f73db167f566e442d1b3c4dcf9c5be30f64736f6c634300080d0033';

type AccountTestConstructorParams =
  | [linkLibraryAddresses: AccountTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class AccountTest__factory extends ContractFactory {
  constructor(...args: AccountTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        AccountTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
    this.contractName = 'AccountTest';
  }

  static linkBytecode(
    linkLibraryAddresses: AccountTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccountTest> {
    return super.deploy(overrides || {}) as Promise<AccountTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccountTest {
    return super.attach(address) as AccountTest;
  }
  connect(signer: Signer): AccountTest__factory {
    return super.connect(signer) as AccountTest__factory;
  }
  static readonly contractName: 'AccountTest';
  public readonly contractName: 'AccountTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountTestInterface {
    return new utils.Interface(_abi) as AccountTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountTest {
    return new Contract(address, _abi, signerOrProvider) as AccountTest;
  }
}

export interface AccountTestLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
