/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SwapAmountEstimator,
  SwapAmountEstimatorInterface,
} from '../SwapAmountEstimator';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IClearingHouse',
        name: 'clearingHouse',
        type: 'address',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'swapVTokenForVBase',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwap',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'amountSpecified',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIn',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vBaseIn',
            type: 'int256',
          },
          {
            internalType: 'uint256',
            name: 'liquidityFees',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'protocolFees',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.SwapValues',
        name: 'swapValues',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IUniswapV3Pool',
        name: 'vPool',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'zeroForOne',
        type: 'bool',
      },
      {
        internalType: 'int256',
        name: 'amountSpecified',
        type: 'int256',
      },
      {
        internalType: 'uint160',
        name: 'sqrtPriceLimitX96',
        type: 'uint160',
      },
    ],
    name: 'simulateSwapWithTickData',
    outputs: [
      {
        internalType: 'int256',
        name: 'amount0',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'amount1',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'uint160',
            name: 'sqrtPriceX96Start',
            type: 'uint160',
          },
          {
            internalType: 'int24',
            name: 'tickStart',
            type: 'int24',
          },
          {
            internalType: 'uint8',
            name: 'feeProtocol',
            type: 'uint8',
          },
          {
            internalType: 'uint128',
            name: 'liquidityStart',
            type: 'uint128',
          },
          {
            internalType: 'int24',
            name: 'tickSpacing',
            type: 'int24',
          },
          {
            internalType: 'uint24',
            name: 'fee',
            type: 'uint24',
          },
        ],
        internalType: 'struct SimulateSwap.SwapCache',
        name: 'cache',
        type: 'tuple',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'int256',
                name: 'amountSpecifiedRemaining',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'amountCalculated',
                type: 'int256',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tick',
                type: 'int24',
              },
              {
                internalType: 'uint256',
                name: 'feeGrowthGlobalIncreaseX128',
                type: 'uint256',
              },
              {
                internalType: 'uint128',
                name: 'protocolFee',
                type: 'uint128',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
            ],
            internalType: 'struct SimulateSwap.SwapState',
            name: 'state',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint160',
                name: 'sqrtPriceStartX96',
                type: 'uint160',
              },
              {
                internalType: 'int24',
                name: 'tickNext',
                type: 'int24',
              },
              {
                internalType: 'bool',
                name: 'initialized',
                type: 'bool',
              },
              {
                internalType: 'uint160',
                name: 'sqrtPriceNextX96',
                type: 'uint160',
              },
              {
                internalType: 'uint256',
                name: 'amountIn',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'amountOut',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'feeAmount',
                type: 'uint256',
              },
            ],
            internalType: 'struct SimulateSwap.StepComputations',
            name: 'step',
            type: 'tuple',
          },
        ],
        internalType: 'struct SwapAmountEstimator.SwapStep[]',
        name: 'steps',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506131d8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ad92de4d1461003b578063cfa7174c14610099575b600080fd5b61004e6100493660046127bc565b6100bc565b6040516100909190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b60405180910390f35b6100ac6100a7366004612824565b6103f9565b6040516100909493929190612970565b6100ee6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b8281526040516329018f6f60e21b81526001600160a01b0386811660048301526000919088169063a4063dbc9060240160e060405180830381865afa15801561013b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015f9190612a77565b905060008412156001600160a01b0384166101b0578561019d57610198600173fffd8963efd1fc6a506488495d951d5263988d26612b49565b6101ad565b6101ad6401000276a36001612b71565b93505b600080600084600001516001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021b9190612b9c565b85602001516001600160a01b03166386c8e9a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561025d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102819190612b9c565b86602001516001600160a01b031663fca6fbf26040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190612b9c565b9250925092506102fb848a8585858b6106eb565b8451600090819061031a906001600160a01b03168c8c8c610796610a76565b8851604051630251596160e31b81523060048201528e15156024820152604481018e90526001600160a01b038d8116606483015260a06084830152600060a4830152939550919350919091169063128acb089060c40160408051808303816000875af115801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190612bc1565b60408a015260208901819052821480156103cf5750876040015181145b6103db576103db612be5565b50506103eb848a8585858b610af6565b505050505095945050505050565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a08101829052819060606104466001600160a01b038916888888610796610a76565b6040805160c081018252600080546001600160a01b0381168352600160a01b8104600290810b602080860191909152600160b81b90920460ff16848601526001546001600160801b0381166060860152600160801b8104820b6080860152600160981b900462ffffff1660a08501528054855181840281018401909652808652969a509498509196509193919084015b828210156106ac57838290600052602060002090600a0201604051806040016040529081600082016040518060e001604052908160008201548152602001600182015481526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160149054906101000a900460020b60020b60020b8152602001600382015481526020016004820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016004820160109054906101000a90046001600160801b03166001600160801b03166001600160801b0316815250508152602001600582016040518060e00160405290816000820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016000820160149054906101000a900460020b60020b60020b81526020016000820160179054906101000a900460ff161515151581526020016001820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b03168152602001600282015481526020016003820154815260200160048201548152505081525050815260200190600101906104d6565b5050600080546001600160c01b0319168155600180546001600160b01b03191690559293506106e0926002925090506126fd565b945094509450949050565b851561074c57841561070a5780516107039085610c06565b815261078e565b80516107199060028585610c51565b6080830181905260608301829052825161073f92909161073891612bfb565b6001610d7e565b8082526107039085610c06565b846107565761078e565b80516107659060018585610c51565b6080830181905260608301829052825161078b92909161078491612bfb565b6000610d7e565b81525b505050505050565b826000808201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160176101000a81548160ff021916908360ff16021790555060608201518160010160006101000a8154816001600160801b0302191690836001600160801b0316021790555060808201518160010160106101000a81548162ffffff021916908360020b62ffffff16021790555060a08201518160010160136101000a81548162ffffff021916908362ffffff160217905550905050600260405180604001604052808481526020018381525090806001815401808255809150506001900390600052602060002090600a0201600090919091909150600082015181600001600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060608201518160020160146101000a81548162ffffff021916908360020b62ffffff1602179055506080820151816003015560a08201518160040160006101000a8154816001600160801b0302191690836001600160801b0316021790555060c08201518160040160106101000a8154816001600160801b0302191690836001600160801b03160217905550505060208201518160050160008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548162ffffff021916908360020b62ffffff16021790555060408201518160000160176101000a81548160ff02191690831515021790555060608201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506080820151816002015560a0820151816003015560c082015181600401555050505050505050565b600080610ae8878787878b6001600160a01b031663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae29190612b9c565b88610dc3565b915091509550959350505050565b8515610b80578415610b5357610b108160200151856114ec565b60208201526040810151610b279060008585610c51565b60808301819052606083018290526040830151610b4992909161073891612bfb565b604082015261078e565b610b618160400151856114ec565b6040820181905260808201516060830151610b49929161078491612bfb565b84610bc957610b938160400151856114ec565b60408201819052610ba79060008585610c51565b60808301819052606083018290526040830151610b4992909161078491612bfb565b610bd78160200151856114ec565b6020820152604081015160808201516060830151610bf9929161073891612bfb565b6040820152505050505050565b600080610c1683620f4240612c13565b60020b610c2862ffffff851686612c2f565b610c329190612cca565b610c3d906001612cf8565b9050610c498185612cf8565b949350505050565b6000806000610c5f87611513565b90506001866002811115610c7557610c75612d39565b1415610cb65783610c8986620f4240612c13565b610c939190612c13565b62ffffff16610ca582620f4240612d4f565b610caf9190612d6e565b9050610d07565b6002866002811115610cca57610cca612d39565b1415610d075783610cde86620f4240612d82565b610ce89190612d82565b62ffffff16610cfa82620f4240612d4f565b610d049190612d6e565b90505b6000620f4240610d178688612d82565b610d269062ffffff1684612d4f565b610d309190612d6e565b610d3b906001612bfb565b9050620f4240610d5062ffffff881684612d4f565b610d5a9190612d6e565b610d65906001612bfb565b9350610d718482612da0565b9250505094509492505050565b600080826001811115610d9357610d93612d39565b14600085131415610daf57610da88385612cf8565b9050610dbc565b610db98385612db7565b90505b9392505050565b60008085610dfd5760405162461bcd60e51b8152602060048201526002602482015261415360f01b60448201526064015b60405180910390fd5b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152886001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015610e6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e919190612e08565b5060ff1660408088019190915260029490940b6020808801919091526001600160a01b0395861687528451630d34328160e11b81529451958f1695631a68650295600480820196509294509092508290030181865afa158015610ef8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1c9190612eb4565b6001600160801b03166060820152604080516334324e9f60e21b815290516001600160a01b038b169163d0c93a7c9160048083019260209291908290030181865afa158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f939190612ecf565b60020b608082015262ffffff851660a082015287610ff15780600001516001600160a01b0316866001600160a01b0316118015610fec575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038716105b611023565b80600001516001600160a01b0316866001600160a01b031610801561102357506401000276a36001600160a01b038716115b6110555760405162461bcd60e51b815260206004820152600360248201526214d41360ea1b6044820152606401610df4565b6000808813905060006040518060e001604052808a81526020016000815260200184600001516001600160a01b03168152602001846020015160020b81526020016000815260200160006001600160801b0316815260200184606001516001600160801b031681525090505b8051158015906110e75750876001600160a01b031681604001516001600160a01b031614155b156114a7576040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915260408201516001600160a01b03908116825260608301516080860151611154928f1691635339c296918f611532565b1515604083015260020b60208201819052620d89e719131561117f57620d89e71960208201526111b3565b61118c620d89e719612eea565b60020b816020015160020b13156111b3576111aa620d89e719612eea565b60020b60208201525b6111c0816020015161179e565b6001600160a01b031660608201526040820151611235908c6111fa578a6001600160a01b031683606001516001600160a01b031611611214565b8a6001600160a01b031683606001516001600160a01b0316105b611222578260600151611224565b8a5b60c0850151855160a0890151611ad1565b60c085015260a084015260808301526001600160a01b0316604083015282156112ad576112748160c00151826080015161126f9190612bfb565b611cc3565b82518390611283908390612db7565b90525060a081015161129490611cc3565b82602001516112a39190612db7565b60208301526112f8565b6112ba8160a00151611cc3565b825183906112c9908390612cf8565b90525060c081015160808201516112e39161126f91612bfb565b82602001516112f29190612cf8565b60208301525b60c08201516001600160801b0316156113405761132b8160c00151600160801b8460c001516001600160801b0316611cd5565b8260800181815161133c9190612bfb565b9052505b63ffffffff611d83811690881614611362576113628b8584848b63ffffffff16565b80606001516001600160a01b031682604001516001600160a01b0316141561146a5780604001511561143d57602081015160405163f30dba9360e01b815260029190910b60048201526000906001600160a01b038e169063f30dba939060240161010060405180830381865afa1580156113e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114049190612f0d565b5050505050509150508b1561141f5761141c81612faf565b90505b61142d8360c0015182611d89565b6001600160801b031660c0840152505b8a61144c57806020015161145d565b6001816020015161145d9190612fd6565b60020b60608301526114a1565b80600001516001600160a01b031682604001516001600160a01b0316146114a1576114988260400151611e26565b60020b60608301525b506110c1565b8115158a1515146114c857602081015181516114c3908b612db7565b6114da565b80516114d4908a612db7565b81602001515b94509450505050965096945050505050565b6000620f42406114fc8382612c13565b6115099060020b85612c2f565b610dbc9190612cca565b600080821361152a576115258261301e565b61152c565b815b92915050565b60008080611540858761303b565b905060008660020b128015611560575061155a8587613075565b60020b15155b15611573578061156f81613097565b9150505b8315611678576000806115858361213f565b90925090506000600160ff831681901b906115a09082612da0565b6115aa9190612bfb565b90506000818c8c866040518263ffffffff1660e01b81526004016115d7919060019190910b815260200190565b602060405180830381865afa1580156115f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161891906130bb565b168015159650905085611642578861163360ff851687612fd6565b61163d91906130d4565b61166d565b8861164c8261215c565b6116569085613161565b6116639060ff1687612fd6565b61166d91906130d4565b965050505050611793565b60008061168e611689846001613184565b61213f565b909250905060006116a6600160ff841681901b612da0565b1990506000818c8c866040518263ffffffff1660e01b81526004016116d4919060019190910b815260200190565b602060405180830381865afa1580156116f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171591906130bb565b168015159650905085611755578861172e8460ff613161565b60ff1661173c876001613184565b6117469190613184565b61175091906130d4565b61178c565b8883611760836121fd565b61176a9190613161565b60ff16611778876001613184565b6117829190613184565b61178c91906130d4565b9650505050505b509550959350505050565b60008060008360020b126117b5578260020b6117bd565b8260020b6000035b9050620d89e88111156117f65760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610df4565b60006001821661180a57600160801b61181c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611850576ffff97272373d413259a46990580e213a0260801c5b600482161561186f576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561188e576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156118ad576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156118cc576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156118eb576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561190a576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561192a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561194a576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561196a576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561198a576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156119aa576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156119ca576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156119ea576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611a0a576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611a2b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611a4b576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611a6a576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611a87576b048a170391f7dc42444e8fa20260801c5b60008460020b1315611aa8578060001981611aa457611aa4612cb4565b0490505b640100000000810615611abc576001611abf565b60005b60ff16602082901c0192505050919050565b60008080806001600160a01b03808916908a161015818712801590611b56576000611b0a8989620f42400362ffffff16620f4240611cd5565b905082611b2357611b1e8c8c8c60016122e7565b611b30565b611b308b8d8c6001612360565b9550858110611b41578a9650611b50565b611b4d8c8b8386612417565b96505b50611ba0565b81611b6d57611b688b8b8b6000612360565b611b7a565b611b7a8a8c8b60006122e7565b9350838860000310611b8e57899550611ba0565b611b9d8b8a8a60000385612463565b95505b6001600160a01b038a8116908716148215611c0357808015611bbf5750815b611bd557611bd0878d8c6001612360565b611bd7565b855b9550808015611be4575081155b611bfa57611bf5878d8c60006122e7565b611bfc565b845b9450611c4d565b808015611c0d5750815b611c2357611c1e8c888c60016122e7565b611c25565b855b9550808015611c32575081155b611c4857611c438c888c6000612360565b611c4a565b845b94505b81158015611c5d57508860000385115b15611c69578860000394505b818015611c8857508a6001600160a01b0316876001600160a01b031614155b15611c97578589039350611cb4565b611cb1868962ffffff168a620f42400362ffffff166124af565b93505b50505095509550955095915050565b6000600160ff1b821061152a57600080fd5b600080806000198587098587029250828110838203039150508060001415611d0f5760008411611d0457600080fd5b508290049050610dbc565b808411611d1b57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b50505050565b60008082600f0b1215611dda57508082016001600160801b03808416908216106115255760405162461bcd60e51b81526020600482015260026024820152614c5360f01b6044820152606401610df4565b826001600160801b03168284019150816001600160801b0316101561152c5760405162461bcd60e51b81526020600482015260026024820152614c4160f01b6044820152606401610df4565b60006401000276a36001600160a01b03831610801590611e62575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b611e925760405162461bcd60e51b81526020600482015260016024820152602960f91b6044820152606401610df4565b640100000000600160c01b03602083901b166001600160801b03811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c97908811961790941790921717909117171760808110611f2657607f810383901c9150611f30565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581026f028f6481ab7f045a5af012a19d003aa9198101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461213057886001600160a01b03166121158261179e565b6001600160a01b0316111561212a5781612132565b80612132565b815b9998505050505050505050565b600281900b60081d600061215561010084613075565b9050915091565b600080821161216a57600080fd5b600160801b821061217d57608091821c91015b68010000000000000000821061219557604091821c91015b64010000000082106121a957602091821c91015b6201000082106121bb57601091821c91015b61010082106121cc57600891821c91015b601082106121dc57600491821c91015b600482106121ec57600291821c91015b600282106121f8576001015b919050565b600080821161220b57600080fd5b5060ff6001600160801b0382161561222657607f190161222e565b608082901c91505b67ffffffffffffffff82161561224757603f190161224f565b604082901c91505b63ffffffff82161561226457601f190161226c565b602082901c91505b61ffff82161561227f57600f1901612287565b601082901c91505b60ff82161561229957600719016122a1565b600882901c91505b600f8216156122b357600319016122bb565b600482901c91505b60038216156122cd57600119016122d5565b600282901c91505b60018216156121f85760001901919050565b6000836001600160a01b0316856001600160a01b03161115612307579293925b816123345761232f836001600160801b03168686036001600160a01b0316600160601b611cd5565b612357565b612357836001600160801b03168686036001600160a01b0316600160601b6124af565b95945050505050565b6000836001600160a01b0316856001600160a01b03161115612380579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166123aa57600080fd5b836123e057866001600160a01b03166123cd8383896001600160a01b0316611cd5565b816123da576123da612cb4565b0461240c565b61240c6123f78383896001600160a01b03166124af565b886001600160a01b0316808204910615150190565b979650505050505050565b600080856001600160a01b03161161242e57600080fd5b6000846001600160801b03161161244457600080fd5b816124565761232f85858560016124ef565b61235785858560016125dc565b600080856001600160a01b03161161247a57600080fd5b6000846001600160801b03161161249057600080fd5b816124a25761232f85858560006125dc565b61235785858560006124ef565b60006124bc848484611cd5565b9050600082806124ce576124ce612cb4565b8486091115610dbc5760001981106124e557600080fd5b6001019392505050565b600081156125685760006001600160a01b038411156125255761252084600160601b876001600160801b0316611cd5565b612543565b6001600160801b038516606085901b8161254157612541612cb4565b045b905061256061255b6001600160a01b038816836126d7565b6126e7565b915050610c49565b60006001600160a01b038411156125965761259184600160601b876001600160801b03166124af565b6125b3565b6125b3606085901b6001600160801b038716808204910615150190565b905080866001600160a01b0316116125ca57600080fd5b6001600160a01b038616039050610c49565b6000826125ea575083610c49565b600160601b600160e01b03606085901b16821561268a576001600160a01b0386168481029085828161261e5761261e612cb4565b04141561264f5781810182811061264d5761264383896001600160a01b0316836124af565b9350505050610c49565b505b61268182612676878a6001600160a01b0316868161266f5761266f612cb4565b04906126d7565b808204910615150190565b92505050610c49565b6001600160a01b038616848102908582816126a7576126a7612cb4565b041480156126b457508082115b6126bd57600080fd5b80820361264361255b846001600160a01b038b16846124af565b8082018281101561152c57600080fd5b806001600160a01b03811681146121f857600080fd5b50805460008255600a029060005260206000209081019061271e9190612721565b50565b5b80821115612795576000808255600182018190556002820180546001600160b81b031916905560038201819055600482018190556005820180546001600160c01b03191690556006820180546001600160a01b031916905560078201819055600882018190556009820155600a01612722565b5090565b6001600160a01b038116811461271e57600080fd5b801515811461271e57600080fd5b600080600080600060a086880312156127d457600080fd5b85356127df81612799565b945060208601356127ef81612799565b935060408601356127ff816127ae565b925060608601359150608086013561281681612799565b809150509295509295909350565b6000806000806080858703121561283a57600080fd5b843561284581612799565b93506020850135612855816127ae565b925060408501359150606085013561286c81612799565b939692955090935050565b600081518084526020808501945080840160005b8381101561296557815180518051895284810151858a01526040808201516001600160a01b0316908a015260608082015160020b908a0152608080820151908a015260a0808201516001600160801b03908116918b019190915260c091820151169089015283015161295060e089018260018060a01b03808251168352602082015160020b6020840152604082015115156040840152806060830151166060840152506080810151608083015260a081015160a083015260c081015160c08301525050565b506101c096909601959082019060010161288b565b509495945050505050565b600061012086835285602084015260018060a01b038551166040840152602085015160020b606084015260ff60408601511660808401526001600160801b0360608601511660a0840152608085015160020b60c084015262ffffff60a08601511660e08401528061010084015261240c81840185612877565b6040516060810167ffffffffffffffff81118282101715612a1a57634e487b7160e01b600052604160045260246000fd5b60405290565b60405160a0810167ffffffffffffffff81118282101715612a1a57634e487b7160e01b600052604160045260246000fd5b805161ffff811681146121f857600080fd5b805163ffffffff811681146121f857600080fd5b600081830360e0811215612a8a57600080fd5b612a926129e9565b8351612a9d81612799565b81526020840151612aad81612799565b602082015260a0603f1983011215612ac457600080fd5b612acc612a20565b9150612ada60408501612a51565b8252612ae860608501612a51565b6020830152612af960808501612a63565b604083015260a0840151612b0c816127ae565b606083015260c0840151612b1f81612799565b608083015260408101919091529392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160a01b0383811690831681811015612b6957612b69612b33565b039392505050565b60006001600160a01b03828116848216808303821115612b9357612b93612b33565b01949350505050565b600060208284031215612bae57600080fd5b815162ffffff81168114610dbc57600080fd5b60008060408385031215612bd457600080fd5b505080516020909101519092909150565b634e487b7160e01b600052600160045260246000fd5b60008219821115612c0e57612c0e612b33565b500190565b600062ffffff83811690831681811015612b6957612b69612b33565b60006001600160ff1b0381841382841380821686840486111615612c5557612c55612b33565b600160ff1b6000871282811687830589121615612c7457612c74612b33565b60008712925087820587128484161615612c9057612c90612b33565b87850587128184161615612ca657612ca6612b33565b505050929093029392505050565b634e487b7160e01b600052601260045260246000fd5b600082612cd957612cd9612cb4565b600160ff1b821460001984141615612cf357612cf3612b33565b500590565b600080821280156001600160ff1b0384900385131615612d1a57612d1a612b33565b600160ff1b8390038412811615612d3357612d33612b33565b50500190565b634e487b7160e01b600052602160045260246000fd5b6000816000190483118215151615612d6957612d69612b33565b500290565b600082612d7d57612d7d612cb4565b500490565b600062ffffff808316818516808303821115612b9357612b93612b33565b600082821015612db257612db2612b33565b500390565b60008083128015600160ff1b850184121615612dd557612dd5612b33565b6001600160ff1b0384018313811615612df057612df0612b33565b50500390565b8051600281900b81146121f857600080fd5b600080600080600080600060e0888a031215612e2357600080fd5b8751612e2e81612799565b9650612e3c60208901612df6565b9550612e4a60408901612a51565b9450612e5860608901612a51565b9350612e6660808901612a51565b925060a088015160ff81168114612e7c57600080fd5b60c0890151909250612e8d816127ae565b8091505092959891949750929550565b80516001600160801b03811681146121f857600080fd5b600060208284031215612ec657600080fd5b610dbc82612e9d565b600060208284031215612ee157600080fd5b610dbc82612df6565b60008160020b627fffff19811415612f0457612f04612b33565b60000392915050565b600080600080600080600080610100898b031215612f2a57600080fd5b612f3389612e9d565b9750602089015180600f0b8114612f4957600080fd5b80975050604089015195506060890151945060808901518060060b8114612f6f57600080fd5b60a08a0151909450612f8081612799565b9250612f8e60c08a01612a63565b915060e0890151612f9e816127ae565b809150509295985092959890939650565b600081600f0b6f7fffffffffffffffffffffffffffffff19811415612f0457612f04612b33565b60008160020b8360020b6000811281627fffff1901831281151615612ffd57612ffd612b33565b81627fffff01831381161561301457613014612b33565b5090039392505050565b6000600160ff1b82141561303457613034612b33565b5060000390565b60008160020b8360020b8061305257613052612cb4565b627fffff1982146000198214161561306c5761306c612b33565b90059392505050565b60008260020b8061308857613088612cb4565b808360020b0791505092915050565b60008160020b627fffff198114156130b1576130b1612b33565b6000190192915050565b6000602082840312156130cd57600080fd5b5051919050565b60008160020b8360020b627fffff60008213600084138383048511828216161561310057613100612b33565b627fffff19600085128281168783058712161561311f5761311f612b33565b6000871292508582058712848416161561313b5761313b612b33565b8585058712818416161561315157613151612b33565b5050509290910295945050505050565b600060ff821660ff84168082101561317b5761317b612b33565b90039392505050565b60008160020b8360020b6000821282627fffff038213811516156131aa576131aa612b33565b82627fffff190382128116156131c2576131c2612b33565b5001939250505056fea164736f6c634300080a000a';

type SwapAmountEstimatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapAmountEstimatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapAmountEstimator__factory extends ContractFactory {
  constructor(...args: SwapAmountEstimatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapAmountEstimator> {
    return super.deploy(overrides || {}) as Promise<SwapAmountEstimator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapAmountEstimator {
    return super.attach(address) as SwapAmountEstimator;
  }
  connect(signer: Signer): SwapAmountEstimator__factory {
    return super.connect(signer) as SwapAmountEstimator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapAmountEstimatorInterface {
    return new utils.Interface(_abi) as SwapAmountEstimatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapAmountEstimator {
    return new Contract(address, _abi, signerOrProvider) as SwapAmountEstimator;
  }
}
