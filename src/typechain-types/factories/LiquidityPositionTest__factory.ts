/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vBaseIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'baseValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouse.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'rBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060db80546001600160a01b0319166001600160a01b039290921691909117905561006c565b6108ec80611e7c83390190565b611e018061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063880776391161008c5780639d9ba482116100665780639d9ba482146102c7578063ac210cc7146102cf578063dd807e94146102fa578063f04af6ec1461030d57600080fd5b806388077639146101ee5780638ce744261461020157806391257584146102b457600080fd5b80633fd687a1116100c85780633fd687a11461018157806357595e87146101b15780635ea25032146101b9578063833b0acb146101e657600080fd5b80631ca45818146100ef5780632c83d1341461010b578063313c06a014610120575b600080fd5b6100f8606d5481565b6040519081526020015b60405180910390f35b61011e6101193660046115e7565b610320565b005b60715460725460735460745460755460765461016c9560ff8116956101008204600290810b96600160201b840490910b95600160381b9093046001600160801b03169491939092919089565b60405161010299989796959493929190611642565b61011e61018f3660046116b4565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61011e610330565b606e54606f546070546101cb92919083565b60408051938452602084019290925290820152606001610102565b6100f86103f3565b61011e6101fc3660046116d1565b610413565b6003546004546040805160608101825260055461ffff808216835262010000820481166020840152600160201b909104169181019190915260065460075460085461025a956001600160a01b0390811695169392919086565b604080516001600160a01b03978816815296909516602080880191909152845161ffff9081168888015290850151811660608801529390940151909216608085015260a084015260c083015260e082015261010001610102565b61011e6102c236600461171c565b610437565b6100f86104ce565b60db546102e2906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b6100f86103083660046116b4565b6104da565b61011e61031b36600461175f565b6104fd565b61032c6071838361053e565b5050565b60db546071546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b991906117f6565b60408051606081018252606e548152606f546020820152607054918101919091529091506103f09060719060009081908590610595565b50565b60db5460009061040e906071906001600160a01b03166106e6565b905090565b8460056104208282611822565b5050600693909355600791909155600855606d5550565b8160006001600160a01b03821663ffffffff808216600090815260026020526040812054929350610472926001600160a01b03169161078f16565b61047e5761047e611890565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835290829052902083906104c682826118ee565b505050505050565b600061040e60716107a0565b60db546000906104f79060719084906001600160a01b03166107f7565b92915050565b60db5460408051606081018252606e548152606f546020820152607054918101919091526103f091607191600091829186916001600160a01b03169061098a565b61054783610c29565b156105645760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b815160408301516000916105ab91889190610c4f565b905080826000018181516105bf9190611a78565b90525060608301516000906105de906105d9908990610c89565b610cc7565b905080836000018181516105f29190611a78565b9052508654604080516101008304600290810b8252600160201b90930490920b602083015281018390526001600160a01b0386169087907fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b602083015281018290526001600160a01b0386169087907f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c9060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b81546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b602482015260009081906001600160a01b0384169063a3c35e2c90604401608060405180830381865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e91906117f6565b9050610787816020015185610cdd90919063ffffffff16565b949350505050565b6001600160a01b0390811691161490565b805460009081906107b890610100900460020b610d14565b83549091506000906107d390600160201b900460020b610d14565b84549091506107879083908390600160381b90046001600160801b0316600161104b565b600080600061087b610872856001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190611ab9565b6001600160a01b031661110b565b8790600061119e565b915091506000610893866001600160a01b0316611267565b9050816108a58483600160801b6112d4565b6108af9190611a78565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b91906117f6565b90506109576105d9826060015187610c8990919063ffffffff16565b6109619083611a78565b8151604083015191935061097791879190610c4f565b6109819083611a78565b95945050505050565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af11580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a209190611ad6565b91945092509050610a348989898488610595565b8284600001818151610a469190611b0c565b905250602084018051839190610a5d908390611b0c565b90525088546001600160a01b0388169089907fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a69906101008104600290810b91600160201b810490910b908b9060ff16610ab589611b4b565b610abe8b611b4b565b604051610ad096959493929190611b68565b60405180910390a36000610b1b866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610840573d6000803e3d6000fd5b90506000610b2a8b838361119e565b5060018c0154909150610b3d9082611b0c565b86604001818151610b4e9190611a78565b9052506000600f89900b1315610bab578a5488908c90600790610b82908490600160381b90046001600160801b0316611ba6565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610c0a565b600088600f0b1215610c0a57610bc388600019611bd1565b8b548c90600790610be5908490600160381b90046001600160801b0316611c78565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b610c148482611a78565b8b600101819055505050505050505050505050565b8054600090610100900460020b1515806104f757505054600160201b900460020b151590565b6002830154600384015460048501548554600093610c809387938793600160381b90046001600160801b031661130e565b61078790611b4b565b81546005830154600091610cc091600160381b9091046001600160801b031690600160801b90610cb99086611ca0565b9190611336565b9392505050565b6000600160ff1b8210610cd957600080fd5b5090565b81546003830154600091610cc091600160381b9091046001600160801b031690600160801b90610d0d9086611b0c565b91906112d4565b60008060008360020b12610d2b578260020b610d33565b8260020b6000035b9050620d89e8811115610d715760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064015b60405180910390fd5b600060018216610d8557600160801b610d97565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610dcb576ffff97272373d413259a46990580e213a0260801c5b6004821615610dea576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610e09576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610e28576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610e47576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610e66576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610e85576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610ea5576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610ec5576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610ee5576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610f05576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610f25576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610f45576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610f65576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610f85576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610fa6576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610fc6576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610fe5576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611002576b048a170391f7dc42444e8fa20260801c5b60008460020b131561102357806000198161101f5761101f611cb7565b0490505b600160201b810615611036576001611039565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b0316111561106b579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661109e57600080fd5b836110d457866001600160a01b03166110c18383896001600160a01b0316611336565b816110ce576110ce611cb7565b04611100565b6111006110eb8383896001600160a01b03166113e4565b886001600160a01b0316808204910615150190565b979650505050505050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561114c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111709190611ccd565b509496509294505050506001600160a01b038316151590506111985761119581610d14565b91505b50919050565b8254600090819081906111b890610100900460020b610d14565b86549091506000906111d390600160201b900460020b610d14565b9050856001600160a01b0380841690821610156111f157508161120e565b816001600160a01b0316876001600160a01b0316111561120e5750805b8754611232906105d99083908590600160381b90046001600160801b03168a61104b565b945061125a6105d984838b60000160079054906101000a90046001600160801b03168a611424565b9350505050935093915050565b60006401000276a36001600160a01b03831610806112a2575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156112cb57604051635d236c4560e01b81526001600160a01b0383166004820152602401610d68565b6104f782611494565b60006112fa600085126112e757846112f3565b6112f385600019611d6f565b8484611336565b90506000841215610cc05761078781611b4b565b600061110082600160801b6113258888888d6114b3565b61132f908a611b0c565b91906114d8565b600080806000198587098587029250828110838203039150508060001415611370576000841161136557600080fd5b508290049050610cc0565b80841161137c57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006113f1848484611336565b90506000828061140357611403611cb7565b8486091115610cc057600019811061141a57600080fd5b6001019392505050565b6000836001600160a01b0316856001600160a01b03161115611444579293925b816114715761146c836001600160801b03168686036001600160a01b0316600160601b611336565b610981565b610981836001600160801b03168686036001600160a01b0316600160601b6113e4565b60006104f76001600160a01b0383168068010000000000000000611336565b60006114ce6114c28684611b0c565b8590600160801b611516565b6109819084611a78565b60006114e58484846112d4565b905060008112801561150557506115056114fe85611573565b848461157e565b15610cc05761078760001982611a78565b600060018180806115278885611597565b945092506115358785611597565b945091506115438685611597565b945090506115556105d9848484611336565b9450836115685761156585611b4b565b94505b505050509392505050565b60006104f7826115c1565b600081838509801561158f57600191505b509392505050565b60008060008412156115b6579115916115af84611b4b565b91506115ba565b8391505b5092909150565b6000808213610cd9576115d382611b4b565b6104f7565b8060020b81146103f057600080fd5b600080604083850312156115fa57600080fd5b8235611605816115d8565b91506020830135611615816115d8565b809150509250929050565b6003811061163e57634e487b7160e01b600052602160045260246000fd5b9052565b6101208101611651828c611620565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b6001600160a01b03811681146103f057600080fd5b6000602082840312156116c657600080fd5b8135610cc08161169f565b600080600080600085870360e08112156116ea57600080fd5b60608112156116f857600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b60008082840361012081121561173157600080fd5b833561173c8161169f565b9250610100601f198201121561175157600080fd5b506020830190509250929050565b60006020828403121561177157600080fd5b813580600f0b8114610cc057600080fd5b60006080828403121561179457600080fd5b6040516080810181811067ffffffffffffffff821117156117c557634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006080828403121561180857600080fd5b610cc08383611782565b61ffff811681146103f057600080fd5b813561182d81611812565b815461ffff191661ffff821617825550602082013561184b81611812565b815463ffff00001916601082901b63ffff00001617825550604082013561187181611812565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b80151581146103f057600080fd5b600081356104f7816118c6565b600081356104f78161169f565b81356118f98161169f565b61190381836118a6565b5060208201356119128161169f565b61191f81600184016118a6565b5060028101604083013561193281611812565b815461ffff191661ffff821617825550606083013561195081611812565b815463ffff00001916601082901b63ffff00001617825550608083013563ffffffff8116811461197f57600080fd5b815467ffffffff00000000191660209190911b67ffffffff00000000161781556119d66119ae60a085016118d4565b82805468ff0000000000000000191691151560401b68ff000000000000000016919091179055565b611a0f6119e560c085016118d4565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b611a5d611a1e60e085016118e1565b8280547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b505050565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615611a9a57611a9a611a62565b600160ff1b8390038412811615611ab357611ab3611a62565b50500190565b600060208284031215611acb57600080fd5b8151610cc08161169f565b600080600060c08486031215611aeb57600080fd5b8351925060208401519150611b038560408601611782565b90509250925092565b60008083128015600160ff1b850184121615611b2a57611b2a611a62565b6001600160ff1b0384018313811615611b4557611b45611a62565b50500390565b6000600160ff1b821415611b6157611b61611a62565b5060000390565b600287810b825286900b6020820152600f85900b604082015260c08101611b926060830186611620565b608082019390935260a00152949350505050565b60006001600160801b03808316818516808303821115611bc857611bc8611a62565b01949350505050565b600081600f0b83600f0b6f7fffffffffffffffffffffffffffffff600082136000841383830485118282161615611c0a57611c0a611a62565b6f7fffffffffffffffffffffffffffffff196000851282811687830587121615611c3657611c36611a62565b60008712925085820587128484161615611c5257611c52611a62565b85850587128184161615611c6857611c68611a62565b5050509290910295945050505050565b60006001600160801b0383811690831681811015611c9857611c98611a62565b039392505050565b600082821015611cb257611cb2611a62565b500390565b634e487b7160e01b600052601260045260246000fd5b600080600080600080600060e0888a031215611ce857600080fd5b8751611cf38161169f565b6020890151909750611d04816115d8565b6040890151909650611d1581611812565b6060890151909550611d2681611812565b6080890151909450611d3781611812565b60a089015190935060ff81168114611d4e57600080fd5b60c0890151909250611d5f816118c6565b8091505092959891949750929550565b60006001600160ff1b0381841382841380821686840486111615611d9557611d95611a62565b600160ff1b6000871282811687830589121615611db457611db4611a62565b60008712925087820587128484161615611dd057611dd0611a62565b87850587128184161615611de657611de6611a62565b50505092909302939250505056fea164736f6c634300080a000a608060405234801561001057600080fd5b506108cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806386c8e9a7116100a2578063bb152c5311610071578063bb152c5314610263578063d440c4201461028b578063d74dcaca146102ad578063ea6e4e52146102e6578063fca6fbf21461031657600080fd5b806386c8e9a71461023a57806397c71faf14610250578063a3a1e7e91461021f578063a3c35e2c1461016457600080fd5b80634c2ebc58116100e95780634c2ebc58146101865780635e622abc146101ed5780636719578c146101f45780637779815c1461021f5780637aba8e681461022957600080fd5b806302dc99511461011b5780630d8f6f46146101435780632a99a7921461016457806333f9096314610184575b600080fd5b60015461012a9062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b610156610151366004610508565b61032f565b60405190815260200161013a565b610177610172366004610538565b610344565b60405161013a919061056b565b005b610184610194366004610596565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610156565b600354610207906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b600560821b610156565b6101846102373660046105eb565b50565b60015461012a906301000000900462ffffff1681565b61015661025e366004610508565b6103c1565b610276610271366004610618565b6103cf565b6040805192835260208301919091520161013a565b61029e61029936600461065f565b61041a565b60405161013a939291906106a1565b6101846102bb3660046106e5565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101846102f4366004610727565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60015461012a906601000000000000900462ffffff1681565b600061033e82610f9f19610761565b92915050565b61036f6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061033e610fa0836107e6565b60008082156103f857610fa06103e486610822565b6103ee91906107e6565b9150849050610412565b61040185610822565b915061040f85610fa0610761565b90505b935093915050565b6000806104486040518060800160405280600081526020016000815260200160008152602001600081525090565b600084600f0b13156104745783600f0b60046000828254610469919061083f565b9091555061048f9050565b83600f0b600460008282546104899190610880565b90915550505b600286810b6000908152602082815260408083209389900b835292905220546104bd90600f86900b90610761565b600287810b600090815260208281526040808320938a900b835292905220600101549093506104f190600f86900b90610761565b91506104fd8686610344565b905093509350939050565b60006020828403121561051a57600080fd5b5035919050565b8035600281900b811461053357600080fd5b919050565b6000806040838503121561054b57600080fd5b61055483610521565b915061056260208401610521565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161033e565b60008060008060008060c087890312156105af57600080fd5b6105b887610521565b95506105c660208801610521565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060e082840312156105fd57600080fd5b50919050565b6001600160a01b038116811461023757600080fd5b60008060006060848603121561062d57600080fd5b83359250602084013561063f81610603565b91506040840135801515811461065457600080fd5b809150509250925092565b60008060006060848603121561067457600080fd5b61067d84610521565b925061068b60208501610521565b9150604084013580600f0b811461065457600080fd5b8381526020810183905260c081016106dd6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080600080608085870312156106fb57600080fd5b61070485610521565b935061071260208601610521565b93969395505050506040820135916060013590565b60006020828403121561073957600080fd5b813561074481610603565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b03818413828413808216868404861116156107875761078761074b565b600160ff1b60008712828116878305891216156107a6576107a661074b565b600087129250878205871284841616156107c2576107c261074b565b878505871281841616156107d8576107d861074b565b505050929093029392505050565b60008261080357634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561081d5761081d61074b565b500590565b6000600160ff1b8214156108385761083861074b565b5060000390565b600080821280156001600160ff1b03849003851316156108615761086161074b565b600160ff1b839003841281161561087a5761087a61074b565b50500190565b60008083128015600160ff1b85018412161561089e5761089e61074b565b6001600160ff1b03840183138116156108b9576108b961074b565b5050039056fea164736f6c634300080a000a';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
