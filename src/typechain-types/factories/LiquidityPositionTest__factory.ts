/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vBaseIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'baseValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouse.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060da80546001600160a01b0319166001600160a01b039290921691909117905561006c565b61087d80611daf83390190565b611d348061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063833b0acb1161008c5780639d9ba482116100665780639d9ba482146102b6578063ac210cc7146102be578063dd807e94146102e9578063f04af6ec146102fc57600080fd5b8063833b0acb146101f957806388077639146102015780638ce744261461021457600080fd5b8063313c06a0116100c8578063313c06a0146101335780633fd687a11461019457806357595e87146101c45780635ea25032146101cc57600080fd5b80631ca45818146100ef5780632a66e9ca1461010b5780632c83d13414610120575b600080fd5b6100f8606c5481565b6040519081526020015b60405180910390f35b61011e61011936600461154a565b61030f565b005b61011e61012e36600461159b565b6103a6565b60705460715460725460735460745460755461017f9560ff8116956101008204600290810b96600160201b840490910b95600160381b9093046001600160801b03169491939092919089565b604051610102999897969594939291906115f6565b61011e6101a2366004611653565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61011e6103b6565b606d54606e54606f546101de92919083565b60408051938452602084019290925290820152606001610102565b6100f8610479565b61011e61020f366004611670565b610499565b6003546040805160608101825260045461ffff808216835262010000820481166020840152600160201b9091041691810191909152600554600654600754610266946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e001610102565b6100f86104bd565b60da546102d1906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b6100f86102f7366004611653565b6104c9565b61011e61030a3660046116bb565b6104ec565b8160006001600160a01b03821663ffffffff80821660009081526002602052604081205492935061034a926001600160a01b03169161052d16565b610356576103566116de565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352908290529020839061039e828261173f565b505050505050565b6103b26070838361053e565b5050565b60da546070546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f91906118f3565b60408051606081018252606d548152606e546020820152606f54918101919091529091506104769060709060009081908590610595565b50565b60da54600090610494906070906001600160a01b03166106f4565b905090565b8460046104a6828261190f565b5050600593909355600691909155600755606c5550565b6000610494607061079d565b60da546000906104e69060709084906001600160a01b03166107f4565b92915050565b60da5460408051606081018252606d548152606e546020820152606f549181019190915261047691607091600091829186916001600160a01b031690610911565b6001600160a01b0390811691161490565b61054783610bdb565b156105645760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b815160408301516000916105ab91889190610c01565b905080826000018181516105bf9190611993565b90525060608301516000906105de906105d9908990610c3b565b610c79565b905080836000018181516105f29190611993565b9052508654604080518881526001600160a01b03881660208201526101008304600290810b82840152600160201b90930490920b606083015260808201849052517fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9181900360a00190a18654604080518881526001600160a01b03881660208201526101008304600290810b82840152600160201b90930490920b606083015260808201839052517f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c9181900360a00190a1505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b81546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b602482015260009081906001600160a01b0384169063a3c35e2c90604401608060405180830381865afa158015610758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c91906118f3565b9050610795816020015185610c8f90919063ffffffff16565b949350505050565b805460009081906107b590610100900460020b610cc6565b83549091506000906107d090600160201b900460020b610cc6565b84549091506107959083908390600160381b90046001600160801b03166001610ffd565b6000808061080286866110bd565b91509150600061081a866001600160a01b0316611187565b90508161082c8483600160801b611208565b6108369190611993565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa15801561089e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c291906118f3565b90506108de6105d9826060015187610c3b90919063ffffffff16565b6108e89083611993565b815160408301519193506108fe91879190610c01565b6109089083611993565b95945050505050565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af1158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a791906119d4565b919450925090506109bb8989898488610595565b82846000018181516109cd9190611a0a565b9052506020840180518391906109e4908390611a0a565b90525088547fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a6990899089906101008104600290810b91600160201b810490910b908b9060ff16610a3389611a49565b610a3c8b611a49565b604051610a50989796959493929190611a66565b60405180910390a16000610acd866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf9190611abc565b6001600160a01b0316611242565b90506000610adb8b836110bd565b5090508a6001015481610aee9190611a0a565b86604001818151610aff9190611993565b905250506000600f88900b1315610b6657895487908b90600790610b34908490600160381b90046001600160801b0316611ad9565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828a60010181905550610bcf565b600087600f0b1215610bcf57610b7e87600019611b04565b8a548b90600790610ba0908490600160381b90046001600160801b0316611bab565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060008a600101819055505b50505050505050505050565b8054600090610100900460020b1515806104e657505054600160201b900460020b151590565b6002830154600384015460048501548554600093610c329387938793600160381b90046001600160801b03166112d5565b61079590611a49565b81546005830154600091610c7291600160381b9091046001600160801b031690600160801b90610c6b9086611bd3565b91906112fd565b9392505050565b6000600160ff1b8210610c8b57600080fd5b5090565b81546003830154600091610c7291600160381b9091046001600160801b031690600160801b90610cbf9086611a0a565b9190611208565b60008060008360020b12610cdd578260020b610ce5565b8260020b6000035b9050620d89e8811115610d235760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064015b60405180910390fd5b600060018216610d3757600160801b610d49565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610d7d576ffff97272373d413259a46990580e213a0260801c5b6004821615610d9c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610dbb576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610dda576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610df9576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610e18576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610e37576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610e57576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610e77576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610e97576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610eb7576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610ed7576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610ef7576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610f17576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610f37576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610f58576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610f78576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610f97576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610fb4576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610fd5578060001981610fd157610fd1611bea565b0490505b600160201b810615610fe8576001610feb565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b0316111561101d579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661105057600080fd5b8361108657866001600160a01b03166110738383896001600160a01b03166112fd565b8161108057611080611bea565b046110b2565b6110b261109d8383896001600160a01b03166113ab565b886001600160a01b0316808204910615150190565b979650505050505050565b8154600090819081906110d790610100900460020b610cc6565b85549091506000906110f290600160201b900460020b610cc6565b9050846001600160a01b03808416908216101561111057508161112d565b816001600160a01b0316866001600160a01b0316111561112d5750805b8654611152906105d99083908590600160381b90046001600160801b03166000610ffd565b945061117b6105d984838a60000160079054906101000a90046001600160801b031660006113eb565b93505050509250929050565b60006401000276a36001600160a01b03831610806111c2575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156111eb57604051635d236c4560e01b81526001600160a01b0383166004820152602401610d1a565b6104e66001600160a01b03831680680100000000000000006112fd565b600061122e6000851261121b5784611227565b61122785600019611c00565b84846112fd565b90506000841215610c725761079581611a49565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611283573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a79190611c85565b509496509294505050506001600160a01b038316151590506112cf576112cc81610cc6565b91505b50919050565b60006110b282600160801b6112ec8888888d61145b565b6112f6908a611a0a565b9190611480565b600080806000198587098587029250828110838203039150508060001415611337576000841161132c57600080fd5b508290049050610c72565b80841161134357600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006113b88484846112fd565b9050600082806113ca576113ca611bea565b8486091115610c725760001981106113e157600080fd5b6001019392505050565b6000836001600160a01b0316856001600160a01b0316111561140b579293925b8161143857611433836001600160801b03168686036001600160a01b0316600160601b6112fd565b610908565b610908836001600160801b03168686036001600160a01b0316600160601b6113ab565b600061147661146a8684611a0a565b8590600160801b6114a4565b6109089084611993565b600061148d848484611208565b90506000811215610c725761079560001982611993565b60006001818080808812156114c6579215926114bf88611a49565b92506114ca565b8792505b60008712156114e6579215926114df87611a49565b91506114ea565b8691505b60008612156115095792159261150286600019611c00565b905061150c565b50845b6115178383836112fd565b94508361152a5761152785611a49565b94505b505050509392505050565b6001600160a01b038116811461047657600080fd5b60008082840361010081121561155f57600080fd5b833561156a81611535565b925060e0601f198201121561157e57600080fd5b506020830190509250929050565b8060020b811461047657600080fd5b600080604083850312156115ae57600080fd5b82356115b98161158c565b915060208301356115c98161158c565b809150509250929050565b600381106115f257634e487b7160e01b600052602160045260246000fd5b9052565b6101208101611605828c6115d4565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b60006020828403121561166557600080fd5b8135610c7281611535565b600080600080600085870360e081121561168957600080fd5b606081121561169757600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b6000602082840312156116cd57600080fd5b813580600f0b8114610c7257600080fd5b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b61ffff8116811461047657600080fd5b801515811461047657600080fd5b600081356104e681611535565b813561174a81611535565b61175481836116f4565b50602082013561176381611535565b61177081600184016116f4565b5060028101604083013561178381611714565b815461ffff191661ffff82161782555060608301356117a181611714565b815463ffff00001916601082901b63ffff00001617825550608083013563ffffffff811681146117d057600080fd5b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a085013561180081611724565b68ffffffffff00000000199190911690911790151560401b68ff00000000000000001617815561187a61183560c08501611732565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b505050565b60006080828403121561189157600080fd5b6040516080810181811067ffffffffffffffff821117156118c257634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006080828403121561190557600080fd5b610c72838361187f565b813561191a81611714565b815461ffff191661ffff821617825550602082013561193881611714565b815463ffff00001916601082901b63ffff00001617825550604082013561195e81611714565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b03849003851316156119b5576119b561197d565b600160ff1b83900384128116156119ce576119ce61197d565b50500190565b600080600060c084860312156119e957600080fd5b8351925060208401519150611a01856040860161187f565b90509250925092565b60008083128015600160ff1b850184121615611a2857611a2861197d565b6001600160ff1b0384018313811615611a4357611a4361197d565b50500390565b6000600160ff1b821415611a5f57611a5f61197d565b5060000390565b8881526001600160a01b0388166020820152600287810b604083015286900b6060820152600f85900b60808201526101008101611aa660a08301866115d4565b60c082019390935260e001529695505050505050565b600060208284031215611ace57600080fd5b8151610c7281611535565b60006001600160801b03808316818516808303821115611afb57611afb61197d565b01949350505050565b600081600f0b83600f0b6f7fffffffffffffffffffffffffffffff600082136000841383830485118282161615611b3d57611b3d61197d565b6f7fffffffffffffffffffffffffffffff196000851282811687830587121615611b6957611b6961197d565b60008712925085820587128484161615611b8557611b8561197d565b85850587128184161615611b9b57611b9b61197d565b5050509290910295945050505050565b60006001600160801b0383811690831681811015611bcb57611bcb61197d565b039392505050565b600082821015611be557611be561197d565b500390565b634e487b7160e01b600052601260045260246000fd5b60006001600160ff1b0381841382841380821686840486111615611c2657611c2661197d565b600160ff1b6000871282811687830589121615611c4557611c4561197d565b60008712925087820587128484161615611c6157611c6161197d565b87850587128184161615611c7757611c7761197d565b505050929093029392505050565b600080600080600080600060e0888a031215611ca057600080fd5b8751611cab81611535565b6020890151909750611cbc8161158c565b6040890151909650611ccd81611714565b6060890151909550611cde81611714565b6080890151909450611cef81611714565b60a089015190935060ff81168114611d0657600080fd5b60c0890151909250611d1781611724565b809150509295989194975092955056fea164736f6c634300080a000a608060405234801561001057600080fd5b5061085d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637aba8e6811610097578063bb152c5311610066578063bb152c5314610209578063d440c42014610231578063d74dcaca14610253578063ea6e4e521461028c57600080fd5b80637aba8e68146101e557806397c71faf146101f6578063a3a1e7e9146101db578063a3c35e2c1461012057600080fd5b80634c2ebc58116100d35780634c2ebc58146101425780635e622abc146101a95780636719578c146101b05780637779815c146101db57600080fd5b80630d8f6f46146100fa5780632a99a7921461012057806333f9096314610140575b600080fd5b61010d610108366004610499565b6102bc565b6040519081526020015b60405180910390f35b61013361012e3660046104c9565b6102d1565b60405161011791906104fc565b005b610140610150366004610527565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b600061010d565b6002546101c3906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b600560821b61010d565b6101406101f336600461057c565b50565b61010d610204366004610499565b61034e565b61021c6102173660046105a9565b61035c565b60408051928352602083019190915201610117565b61024461023f3660046105f0565b6103a7565b60405161011793929190610632565b610140610261366004610676565b600293840b60009081526001602081815260408084209690970b835294909452939093209081550155565b61014061029a3660046106b8565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006102cb82610f9f196106f2565b92915050565b6102fc6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b60006102cb610fa083610777565b600080821561038557610fa0610371866107b3565b61037b9190610777565b915084905061039f565b61038e856107b3565b915061039c85610fa06106f2565b90505b935093915050565b6000806103d56040518060800160405280600081526020016000815260200160008152602001600081525090565b600084600f0b13156104015783600f0b600360008282546103f691906107d0565b9091555061041c9050565b83600f0b600360008282546104169190610811565b90915550505b600286810b60009081526001602090815260408083209389900b8352929052205461044c90600f86900b906106f2565b600287810b6000908152600160208181526040808420948b900b8452939052919020015490935061048290600f86900b906106f2565b915061048e86866102d1565b905093509350939050565b6000602082840312156104ab57600080fd5b5035919050565b8035600281900b81146104c457600080fd5b919050565b600080604083850312156104dc57600080fd5b6104e5836104b2565b91506104f3602084016104b2565b90509250929050565b81518152602080830151908201526040808301519082015260608083015190820152608081016102cb565b60008060008060008060c0878903121561054057600080fd5b610549876104b2565b9550610557602088016104b2565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060e0828403121561058e57600080fd5b50919050565b6001600160a01b03811681146101f357600080fd5b6000806000606084860312156105be57600080fd5b8335925060208401356105d081610594565b9150604084013580151581146105e557600080fd5b809150509250925092565b60008060006060848603121561060557600080fd5b61060e846104b2565b925061061c602085016104b2565b9150604084013580600f0b81146105e557600080fd5b8381526020810183905260c0810161066e6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806000806080858703121561068c57600080fd5b610695856104b2565b93506106a3602086016104b2565b93969395505050506040820135916060013590565b6000602082840312156106ca57600080fd5b81356106d581610594565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b0381841382841380821686840486111615610718576107186106dc565b600160ff1b6000871282811687830589121615610737576107376106dc565b60008712925087820587128484161615610753576107536106dc565b87850587128184161615610769576107696106dc565b505050929093029392505050565b60008261079457634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156107ae576107ae6106dc565b500590565b6000600160ff1b8214156107c9576107c96106dc565b5060000390565b600080821280156001600160ff1b03849003851316156107f2576107f26106dc565b600160ff1b839003841281161561080b5761080b6106dc565b50500190565b60008083128015600160ff1b85018412161561082f5761082f6106dc565b6001600160ff1b038401831381161561084a5761084a6106dc565b5050039056fea164736f6c634300080a000a';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
