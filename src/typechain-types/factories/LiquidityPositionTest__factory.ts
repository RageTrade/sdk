/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LP_AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vQuoteIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouseEnums.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maxVirtualPriceDeviationRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060da80546001600160a01b0319166001600160a01b039290921691909117905561006d565b610a8a806200210383390190565b612086806200007d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635ea250321161008c5780639d9ba482116100665780639d9ba482146102e0578063ac210cc7146102e8578063c28fd78714610313578063f04af6ec1461032657600080fd5b80635ea25032146101c257806382d9dbaa146101ef5780638ce744261461021f57600080fd5b80632e0cb31a116100c85780632e0cb31a14610133578063313c06a0146101465780633ffe794c146101a757806357595e87146101ba57600080fd5b80631ca45818146100ef5780631f1b95021461010b5780632c83d1341461011e575b600080fd5b6100f8606c5481565b6040519081526020015b60405180910390f35b6100f86101193660046116d6565b610339565b61013161012c366004611702565b61034c565b005b6100f86101413660046116d6565b61035c565b6070546071546072546073546074546075546101929560ff8116956101008204600290810b96600160201b840490910b95600160381b9093046001600160801b03169491939092919089565b6040516101029998979695949392919061175d565b6101316101b53660046117ba565b610379565b6101316103be565b606d54606e54606f546101d492919083565b60408051938452602084019290925290820152606001610102565b6101316101fd3660046116d6565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600254600354604080516101008101825260045461ffff808216835262010000820481166020840152600160201b82048116938301939093526601000000000000810483166060830152600160401b810483166080830152600160501b810490921660a082015267ffffffffffffffff600160601b8304811660c0830152600160a01b90920490911660e08201526005546006546007546102ce956001600160a01b0390811695169392919086565b604051610102969594939291906117cd565b6100f8610481565b60da546102fb906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b610131610321366004611894565b610492565b6101316103343660046118e4565b6104b6565b60006103466070836105d8565b92915050565b61035860708383610601565b5050565b60da546000906103469060709084906001600160a01b0316610659565b600061039461038b60208401846116d6565b63ffffffff1690565b63ffffffff8116600090815260208190526040902090915082906103b8828261196c565b50505050565b60da546070546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190611b75565b60408051606081018252606d548152606e546020820152606f549181019190915290915061047e906070906000908190859061077c565b50565b600061048d60706108c2565b905090565b84600461049f8282611bab565b5050600593909355600691909155600755606c5550565b60da54600080805260209081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb780546001600160a01b0319166001600160a01b039093169283179055604080516319c655e360e21b81529051636719578c926004808401939192918290030181865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190611d1f565b600080805260208181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb680546001600160a01b0319166001600160a01b03949094169390931790925560408051606081018252606d548152606e5493810193909352606f549083015261047e91607091908190859082610972565b6000806105e6848483610d57565b5060018501549091506105f99082611d52565b949350505050565b61060a83610e20565b156106285760405163a0bb33f960e01b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b60008080610668868683610d57565b915091506000610680866001600160a01b0316610e46565b9050816106928483600160801b610eb7565b61069c9190611d91565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015610704573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107289190611b75565b9050610749610744826060015187610efe90919063ffffffff16565b610f35565b6107539083611d91565b8151604083015191935061076991879190610f4b565b6107739083611d91565b95945050505050565b8151604083015160009161079291889190610f4b565b905080826000018181516107a69190611d91565b90525060608301516000906107c090610744908990610efe565b905080836000018181516107d49190611d91565b9052508654604080516101008304600290810b8252600160201b90930490920b6020830152810183905263ffffffff86169087907fe78c346ca01ca7fd618ef99876cdc15c30b6f4072af58014453e6442fbeb70dc9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b6020830152810182905263ffffffff86169087907f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e74429060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b805460009081906108da90610100900460020b610f85565b83549091506000906108f590600160201b900460020b610f85565b9050600084600101541261093657836001015461092c83838760000160079054906101000a90046001600160801b031660016112a7565b6105f99190611dd2565b600184015461094790600019611de9565b84546109689084908490600160381b90046001600160801b031660016112a7565b6105f99190611e6e565b63ffffffff8416600090815260208290526040812060020154819081906001600160a01b031690506109c56040518060800160405280600081526020016000815260200160008152602001600081525090565b600087600f0b1315610a8e578954604051631dce5fcf60e01b81526101008204600290810b6004830152600160201b90920490910b60248201526001600160801b038816604482015260009081906001600160a01b03851690631dce5fcf9060640160c0604051808303816000875af1158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a9190611e86565b94509092509050610a7a82610f35565b9550610a8581610f35565b94505050610b72565b895460009081906001600160a01b0385169063a34123a7906101008104600290810b91600160201b9004900b610ac38d611ebc565b6040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160c0604051808303816000875af1158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190611e86565b94509092509050610b5082610f35565b610b5990611eeb565b9550610b6481610f35565b610b6d90611eeb565b945050505b610b7f8a8a8a848a61077c565b8286600001818151610b919190611d52565b905250602086018051859190610ba8908390611d52565b905250895463ffffffff8916908a907feb77cdd733ee295d52966d2946632ded675ffb7fbef59559ad0adea55cded940906101008104600290810b91600160201b810490910b908c9060ff16610bfd8b611eeb565b610c068b611eeb565b604051610c1896959493929190611f07565b60405180910390a363ffffffff8816600090815260208690526040812060010154610c4b906001600160a01b0316611367565b90506000610c5a8c8383610d57565b5060018d0154909150610c6d9082611d52565b88604001818151610c7e9190611d91565b9052506000600f8a900b1315610cdb578b5489908d90600790610cb2908490600160381b90046001600160801b0316611f45565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610d37565b600089600f0b1215610d3757610cf089611ebc565b8c548d90600790610d12908490600160381b90046001600160801b0316611f70565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b610d418682611d91565b8c60010181905550505050505050505050505050565b825460009081908190610d7190610100900460020b610f85565b8654909150600090610d8c90600160201b900460020b610f85565b9050856001600160a01b038084169082161015610daa575081610dc7565b816001600160a01b0316876001600160a01b03161115610dc75750805b8754610deb906107449083908590600160381b90046001600160801b03168a6112a7565b9450610e1361074484838b60000160079054906101000a90046001600160801b03168a6113fc565b9350505050935093915050565b8054600090610100900460020b15158061034657505054600160201b900460020b151590565b60006401000276a36001600160a01b0383161080610e81575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15610eae57604051635d236c4560e01b81526001600160a01b038316600482015260240160405180910390fd5b6103468261146c565b6000610ee061074460008612610ecd5785610ed9565b610ed986600019611de9565b8585611482565b90506000841215610ef757610ef481611eeb565b90505b9392505050565b81546005830154600091610ef791600160381b9091046001600160801b031690600160801b90610f2e9086611dd2565b9190611482565b6000600160ff1b8210610f4757600080fd5b5090565b6002830154600384015460048501548554600093610f7c9387938793600160381b90046001600160801b0316611534565b610ef490611eeb565b60008060008360020b12610f9c578260020b610fa4565b8260020b6000035b9050620d89e8811115610fca576040516315e4079d60e11b815260040160405180910390fd5b600081600116600003610fe157600160801b610ff3565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611027576ffff97272373d413259a46990580e213a0260801c5b6004821615611046576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611065576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615611084576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156110a3576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156110c2576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156110e1576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611101576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611121576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615611141576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615611161576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615611181576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156111a1576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156111c1576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156111e1576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611202576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611222576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615611241576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561125e576b048a170391f7dc42444e8fa20260801c5b60008460020b131561127f57806000198161127b5761127b611f98565b0490505b600160201b810615611292576001611295565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156112c7579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b0386860381169087166112fa57600080fd5b8361133057866001600160a01b031661131d8383896001600160a01b0316611482565b8161132a5761132a611f98565b0461135c565b61135c6113478383896001600160a01b031661155c565b886001600160a01b0316808204910615150190565b979650505050505050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156113a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cc9190611fae565b5094965092945050506001600160a01b03841660000391506113f69050576113f381610f85565b91505b50919050565b6000836001600160a01b0316856001600160a01b0316111561141c579293925b8161144957611444836001600160801b03168686036001600160a01b0316600160601b611482565b610773565b610773836001600160801b03168686036001600160a01b0316600160601b61155c565b60006103466001600160a01b03831680600160401b5b60008080600019858709858702925082811083820303915050806000036114bb57600084116114b057600080fd5b508290049050610ef7565b8084116114c757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600061135c82600160801b61154b8888888d61159c565b611555908a611d52565b91906115c1565b6000611569848484611482565b90506000828061157b5761157b611f98565b8486091115610ef757600019811061159257600080fd5b6001019392505050565b60006115b76115ab8684611d52565b8590600160801b6115ff565b6107739084611d91565b60006115ce848484610eb7565b90506000811280156115ee57506115ee6115e78561165c565b8484611667565b15610ef757610ef460001982611d91565b600060018180806116108885611680565b9450925061161e8785611680565b9450915061162c8685611680565b9450905061163e610744848484611482565b9450836116515761164e85611eeb565b94505b505050509392505050565b6000610346826116aa565b600081838509801561167857600191505b509392505050565b600080600084121561169f5791159161169884611eeb565b91506116a3565b8391505b5092909150565b6000808213610f47576116bc82611eeb565b610346565b6001600160a01b038116811461047e57600080fd5b6000602082840312156116e857600080fd5b8135610ef7816116c1565b8060020b811461047e57600080fd5b6000806040838503121561171557600080fd5b8235611720816116f3565b91506020830135611730816116f3565b809150509250929050565b6003811061175957634e487b7160e01b600052602160045260246000fd5b9052565b610120810161176c828c61173b565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b600061014082840312156113f657600080fd5b60006101a08201905060018060a01b03808916835280881660208401525061ffff80875116604084015280602088015116606084015280604088015116608084015250606086015161182560a084018261ffff169052565b50608086015161ffff811660c08401525060a086015161ffff811660e08401525060c086015167ffffffffffffffff81166101008401525060e086015167ffffffffffffffff811661012084015250846101408301528361016083015282610180830152979650505050505050565b60008060008060008587036101808112156118ae57600080fd5b610100808212156118be57600080fd5b969896890135975050506101208701359461014088013594506101608801359350915050565b6000602082840312156118f657600080fd5b813580600f0b8114610ef757600080fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b61ffff8116811461047e57600080fd5b6000813561034681611927565b801515811461047e57600080fd5b6000813561034681611944565b60008135610346816116c1565b8135611977816116c1565b6119818183611907565b506020820135611990816116c1565b61199d8160018401611907565b5060408201356119ac816116c1565b6119b98160028401611907565b506003810160608301356119cc81611927565b815461ffff191661ffff82161782555060808301356119ea81611927565b815463ffff00001916601082901b63ffff0000161782555060a0830135611a1081611927565b815465ffff000000001916602082901b65ffff00000000161782555060c083013563ffffffff81168114611a4357600080fd5b815469ffffffff000000000000191660309190911b69ffffffff00000000000016178155611a94611a7660e08501611952565b82805460ff60501b191691151560501b60ff60501b16919091179055565b611ac2611aa46101008501611952565b82805460ff60581b191691151560581b60ff60581b16919091179055565b611afc611ad2610120850161195f565b82546bffffffffffffffffffffffff1660609190911b6bffffffffffffffffffffffff1916178255565b505050565b600060808284031215611b1357600080fd5b6040516080810181811067ffffffffffffffff82111715611b4457634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060808284031215611b8757600080fd5b610ef78383611b01565b6000813567ffffffffffffffff8116811461034657600080fd5b8135611bb681611927565b815461ffff191661ffff8216178255506020820135611bd481611927565b815463ffff00001916601082901b63ffff000016178255506040820135611bfa81611927565b815465ffff000000001916602082901b65ffff0000000016178255506060820135611c2481611927565b815467ffff0000000000008260301b1691508167ffff0000000000001982161783556080840135611c5481611927565b69ffff00000000000000008160401b168369ffffffff00000000000019841617178455505050611ca9611c8960a08401611937565b82805461ffff60501b191660509290921b61ffff60501b16919091179055565b611ce4611cb860c08401611b91565b82805467ffffffffffffffff60601b191660609290921b67ffffffffffffffff60601b16919091179055565b610358611cf360e08401611b91565b82805467ffffffffffffffff60a01b191660a09290921b67ffffffffffffffff60a01b16919091179055565b600060208284031215611d3157600080fd5b8151610ef7816116c1565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b850184121615611d7057611d70611d3c565b6001600160ff1b0384018313811615611d8b57611d8b611d3c565b50500390565b600080821280156001600160ff1b0384900385131615611db357611db3611d3c565b600160ff1b8390038412811615611dcc57611dcc611d3c565b50500190565b600082821015611de457611de4611d3c565b500390565b60006001600160ff1b0381841382841380821686840486111615611e0f57611e0f611d3c565b600160ff1b6000871282811687830589121615611e2e57611e2e611d3c565b60008712925087820587128484161615611e4a57611e4a611d3c565b87850587128184161615611e6057611e60611d3c565b505050929093029392505050565b60008219821115611e8157611e81611d3c565b500190565b600080600060c08486031215611e9b57600080fd5b8351925060208401519150611eb38560408601611b01565b90509250925092565b600081600f0b6f7fffffffffffffffffffffffffffffff198103611ee257611ee2611d3c565b60000392915050565b6000600160ff1b8201611f0057611f00611d3c565b5060000390565b600287810b825286900b6020820152600f85900b604082015260c08101611f31606083018661173b565b608082019390935260a00152949350505050565b60006001600160801b03808316818516808303821115611f6757611f67611d3c565b01949350505050565b60006001600160801b0383811690831681811015611f9057611f90611d3c565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600080600080600080600060e0888a031215611fc957600080fd5b8751611fd4816116c1565b6020890151909750611fe5816116f3565b6040890151909650611ff681611927565b606089015190955061200781611927565b608089015190945061201881611927565b60a089015190935060ff8116811461202f57600080fd5b60c089015190925061204081611944565b809150509295989194975092955056fea264697066735822122052dbb9043061b6e77809e064bec3cacb7750e7279ec91ef77436a53bbf7079a764736f6c634300080d0033608060405234801561001057600080fd5b50610a6a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637779815c116100ad578063a3c35e2c11610071578063a3c35e2c14610204578063d74dcaca14610317578063dee4c1a614610350578063ea6e4e5214610361578063fca6fbf21461039157600080fd5b80637779815c146102d157806386c8e9a7146102db57806397c71faf146102f1578063a34123a714610304578063a3a1e7e9146102d157600080fd5b80632a99a792116100f45780632a99a792146102045780634c2ebc58146102245780635e622abc1461028d5780636719578c146102945780636d87989a146102bf57600080fd5b806302dc9951146101265780630d8f6f461461014e578063195cd92c1461016f5780631dce5fcf146101e2575b600080fd5b6001546101359062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61016161015c36600461068f565b6103aa565b604051908152602001610145565b61018261017d3660046106bd565b6103bf565b6040516101459190815181526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0808301516001600160a01b039081169183019190915260c092830151169181019190915260e00190565b6101f56101f036600461071b565b61046d565b60405161014593929190610763565b6102176102123660046107a7565b61053e565b60405161014591906107da565b61028b610232366004610805565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b005b6000610161565b6003546102a7906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b61028b6102cd36600461085a565b5050565b600560821b610161565b600154610135906301000000900462ffffff1681565b6101616102ff36600461068f565b6105bb565b6101f561031236600461071b565b6105c9565b61028b61032536600461087c565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b61028b61035e3660046108be565b50565b61028b61036f3660046108d6565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154610135906601000000000000900462ffffff1681565b60006103b982610f9f19610909565b92915050565b6104116040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b8315156000841303610443576020810183905261042d8361098e565b61043990610fa0610909565b6040820152610466565b610fa061044f8461098e565b61045991906109aa565b6020820152604081018390525b9392505050565b60008061049b6040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546104b691906109e6565b9091555050600286810b6000908152602082815260408083209389900b835292905220600101546104f1906001600160801b038616906109fe565b600287810b600090815260208281526040808320938a900b83529290522054909350610527906001600160801b038616906109fe565b9150610533868661053e565b905093509350939050565b6105696040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b60006103b9610fa0836109aa565b6000806105f76040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546106129190610a1d565b9091555050600286810b6000908152602082815260408083209389900b8352929052205461064a906001600160801b038616906109fe565b600287810b600090815260208281526040808320938a900b83529290522060010154909250610683906001600160801b038616906109fe565b9250610533868661053e565b6000602082840312156106a157600080fd5b5035919050565b6001600160a01b038116811461035e57600080fd5b6000806000606084860312156106d257600080fd5b833580151581146106e257600080fd5b92506020840135915060408401356106f9816106a8565b809150509250925092565b8035600281900b811461071657600080fd5b919050565b60008060006060848603121561073057600080fd5b61073984610704565b925061074760208501610704565b915060408401356001600160801b03811681146106f957600080fd5b8381526020810183905260c0810161079f6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080604083850312156107ba57600080fd5b6107c383610704565b91506107d160208401610704565b90509250929050565b81518152602080830151908201526040808301519082015260608083015190820152608081016103b9565b60008060008060008060c0878903121561081e57600080fd5b61082787610704565b955061083560208801610704565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806040838503121561086d57600080fd5b50508035926020909101359150565b6000806000806080858703121561089257600080fd5b61089b85610704565b93506108a960208601610704565b93969395505050506040820135916060013590565b600060c082840312156108d057600080fd5b50919050565b6000602082840312156108e857600080fd5b8135610466816106a8565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b038184138284138082168684048611161561092f5761092f6108f3565b600160ff1b600087128281168783058912161561094e5761094e6108f3565b6000871292508782058712848416161561096a5761096a6108f3565b87850587128184161615610980576109806108f3565b505050929093029392505050565b6000600160ff1b82016109a3576109a36108f3565b5060000390565b6000826109c757634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156109e1576109e16108f3565b500590565b600082198211156109f9576109f96108f3565b500190565b6000816000190483118215151615610a1857610a186108f3565b500290565b600082821015610a2f57610a2f6108f3565b50039056fea2646970667358221220cbadca65ab2ffcc633714427230e78ae73084762cfa1935124d19c1514807d0464736f6c634300080d0033';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'LiquidityPositionTest';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }
  static readonly contractName: 'LiquidityPositionTest';
  public readonly contractName: 'LiquidityPositionTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
