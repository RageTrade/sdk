/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vBaseIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouseEnums.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'cBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060da80546001600160a01b0319166001600160a01b039290921691909117905561006c565b61098780611ea783390190565b611e2c8061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80633fd687a11161008c5780638ce74426116100665780638ce74426146102325780639d9ba48214610312578063ac210cc71461031a578063f04af6ec1461034557600080fd5b80633fd687a1146101cd57806357595e87146101fd5780635ea250321461020557600080fd5b80632e0cb31a116100c85780632e0cb31a14610133578063313c06a01461014657806338da803e146101a75780633a64c245146101ba57600080fd5b80631ca45818146100ef5780631f1b95021461010b5780632c83d1341461011e575b600080fd5b6100f8606c5481565b6040519081526020015b60405180910390f35b6100f8610119366004611644565b610358565b61013161012c366004611670565b61036b565b005b6100f8610141366004611644565b61037b565b6070546071546072546073546074546075546101929560ff8116956101008204600290810b96600160201b840490910b95600160381b9093046001600160801b03169491939092919089565b604051610102999897969594939291906116cb565b6101316101b5366004611728565b610398565b6101316101c8366004611774565b6103bc565b6101316101db366004611644565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610131610401565b606d54606e54606f5461021792919083565b60408051938452602084019290925290820152606001610102565b6002546003546040805160808101825260045461ffff808216835262010000820481166020840152600160201b8204169282019290925266010000000000009091046001600160801b031660608201526005546006546007546102a3956001600160a01b0390811695169392919086565b604080516001600160a01b03978816815296909516602080880191909152845161ffff908116888801529085015181166060808901919091529585015116608087015293909201516001600160801b031660a085015260c084015260e083015261010082015261012001610102565b6100f86104c4565b60da5461032d906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b610131610353366004611787565b6104d5565b6000610365607083610516565b92915050565b6103776070838361053f565b5050565b60da546000906103659060709084906001600160a01b0316610596565b8460046103a582826117ba565b5050600593909355600691909155600755606c5550565b60006103d76103ce6020840184611644565b63ffffffff1690565b63ffffffff8116600090815260208190526040902090915082906103fb82826118cb565b50505050565b60da546070546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190611ad0565b60408051606081018252606d548152606e546020820152606f54918101919091529091506104c190607090600090819085906106b9565b50565b60006104d060706107ff565b905090565b60da5460408051606081018252606d548152606e546020820152606f54918101919091526104c191607091600091829186916001600160a01b0316906108af565b600080610524848483610cb8565b5060018501549091506105379082611b02565b949350505050565b61054883610d81565b156105655760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b600080806105a5868683610cb8565b9150915060006105bd866001600160a01b0316610da7565b9050816105cf8483600160801b610e19565b6105d99190611b41565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015610641573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106659190611ad0565b9050610686610681826060015187610e5d90919063ffffffff16565b610e94565b6106909083611b41565b815160408301519193506106a691879190610eaa565b6106b09083611b41565b95945050505050565b815160408301516000916106cf91889190610eaa565b905080826000018181516106e39190611b41565b90525060608301516000906106fd90610681908990610e5d565b905080836000018181516107119190611b41565b9052508654604080516101008304600290810b8252600160201b90930490920b6020830152810183905263ffffffff86169087907fe78c346ca01ca7fd618ef99876cdc15c30b6f4072af58014453e6442fbeb70dc9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b6020830152810182905263ffffffff86169087907f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e74429060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b8054600090819061081790610100900460020b610ee4565b835490915060009061083290600160201b900460020b610ee4565b9050600084600101541261087357836001015461086983838760000160079054906101000a90046001600160801b03166001611216565b6105379190611b82565b600184015461088490600019611b99565b84546108a59084908490600160381b90046001600160801b03166001611216565b6105379190611c1e565b6000806108dd6040518060800160405280600081526020016000815260200160008152602001600081525090565b600086600f0b13156109a6578854604051631dce5fcf60e01b81526101008204600290810b6004830152600160201b90920490910b60248201526001600160801b038716604482015260009081906001600160a01b03881690631dce5fcf9060640160c0604051808303816000875af115801561095e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109829190611c36565b9450909250905061099282610e94565b945061099d81610e94565b93505050610a8a565b885460009081906001600160a01b0388169063a34123a7906101008104600290810b91600160201b9004900b6109db8c611c6c565b6040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160c0604051808303816000875af1158015610a34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a589190611c36565b94509092509050610a6882610e94565b610a7190611c9c565b9450610a7c81610e94565b610a8590611c9c565b935050505b610a9789898984886106b9565b8184600001818151610aa99190611b02565b905250602084018051849190610ac0908390611b02565b905250885463ffffffff88169089907feb77cdd733ee295d52966d2946632ded675ffb7fbef59559ad0adea55cded940906101008104600290810b91600160201b810490910b908b9060ff16610b158a611c9c565b610b1e8a611c9c565b604051610b3096959493929190611cb9565b60405180910390a36000610bad866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9f9190611cf7565b6001600160a01b03166112d6565b90506000610bbc8b8383610cb8565b5060018c0154909150610bcf9082611b02565b86604001818151610be09190611b41565b9052506000600f89900b1315610c3d578a5488908c90600790610c14908490600160381b90046001600160801b0316611d14565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610c99565b600088600f0b1215610c9957610c5288611c6c565b8b548c90600790610c74908490600160381b90046001600160801b0316611d3f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b610ca38582611b41565b8b600101819055505050505050505050505050565b825460009081908190610cd290610100900460020b610ee4565b8654909150600090610ced90600160201b900460020b610ee4565b9050856001600160a01b038084169082161015610d0b575081610d28565b816001600160a01b0316876001600160a01b03161115610d285750805b8754610d4c906106819083908590600160381b90046001600160801b03168a611216565b9450610d7461068184838b60000160079054906101000a90046001600160801b03168a611369565b9350505050935093915050565b8054600090610100900460020b15158061036557505054600160201b900460020b151590565b60006401000276a36001600160a01b0383161080610de2575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15610e1057604051635d236c4560e01b81526001600160a01b03831660048201526024015b60405180910390fd5b610365826113d9565b6000610e3f60008512610e2c5784610e38565b610e3885600019611b99565b84846113f4565b90506000841215610e5657610e5381611c9c565b90505b9392505050565b81546005830154600091610e5691600160381b9091046001600160801b031690600160801b90610e8d9086611b82565b91906113f4565b6000600160ff1b8210610ea657600080fd5b5090565b6002830154600384015460048501548554600093610edb9387938793600160381b90046001600160801b03166114a2565b610e5390611c9c565b60008060008360020b12610efb578260020b610f03565b8260020b6000035b9050620d89e8811115610f3c5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610e07565b600060018216610f5057600160801b610f62565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610f96576ffff97272373d413259a46990580e213a0260801c5b6004821615610fb5576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610fd4576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610ff3576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615611012576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615611031576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615611050576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615611070576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615611090576ff987a7253ac413176f2b074cf7815e540260801c5b6104008216156110b0576ff3392b0822b70005940c7a398e4b70f30260801c5b6108008216156110d0576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156110f0576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615611110576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615611130576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615611150576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615611171576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615611191576e5d6af8dedb81196699c329225ee6040260801c5b620400008216156111b0576d2216e584f5fa1ea926041bedfe980260801c5b620800008216156111cd576b048a170391f7dc42444e8fa20260801c5b60008460020b13156111ee5780600019816111ea576111ea611d67565b0490505b600160201b810615611201576001611204565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b03161115611236579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661126957600080fd5b8361129f57866001600160a01b031661128c8383896001600160a01b03166113f4565b8161129957611299611d67565b046112cb565b6112cb6112b68383896001600160a01b03166114ca565b886001600160a01b0316808204910615150190565b979650505050505050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015611317573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133b9190611d7d565b509496509294505050506001600160a01b038316151590506113635761136081610ee4565b91505b50919050565b6000836001600160a01b0316856001600160a01b03161115611389579293925b816113b6576113b1836001600160801b03168686036001600160a01b0316600160601b6113f4565b6106b0565b6106b0836001600160801b03168686036001600160a01b0316600160601b6114ca565b60006103656001600160a01b03831680680100000000000000005b60008080600019858709858702925082811083820303915050806000141561142e576000841161142357600080fd5b508290049050610e56565b80841161143a57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006112cb82600160801b6114b98888888d61150a565b6114c3908a611b02565b919061152f565b60006114d78484846113f4565b9050600082806114e9576114e9611d67565b8486091115610e5657600019811061150057600080fd5b6001019392505050565b60006115256115198684611b02565b8590600160801b61156d565b6106b09084611b41565b600061153c848484610e19565b905060008112801561155c575061155c611555856115ca565b84846115d5565b15610e5657610e5360001982611b41565b6000600181808061157e88856115ee565b9450925061158c87856115ee565b9450915061159a86856115ee565b945090506115ac6106818484846113f4565b9450836115bf576115bc85611c9c565b94505b505050509392505050565b600061036582611618565b60008183850980156115e657600191505b509392505050565b600080600084121561160d5791159161160684611c9c565b9150611611565b8391505b5092909150565b6000808213610ea65761162a82611c9c565b610365565b6001600160a01b03811681146104c157600080fd5b60006020828403121561165657600080fd5b8135610e568161162f565b8060020b81146104c157600080fd5b6000806040838503121561168357600080fd5b823561168e81611661565b9150602083013561169e81611661565b809150509250929050565b600381106116c757634e487b7160e01b600052602160045260246000fd5b9052565b61012081016116da828c6116a9565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b600080600080600085870361010081121561174257600080fd5b608081121561175057600080fd5b5094966080880135965060a0880135955060c0880135945060e08801359350915050565b6000610120828403121561136357600080fd5b60006020828403121561179957600080fd5b813580600f0b8114610e5657600080fd5b61ffff811681146104c157600080fd5b81356117c5816117aa565b815461ffff191661ffff82161782555060208201356117e3816117aa565b815463ffff00001916601082901b63ffff000016178255506040820135611809816117aa565b815465ffff000000008260201b1691508165ffff0000000019821617835560608401356001600160801b038116811461184157600080fd5b75ffffffffffffffffffffffffffffffff0000000000008160301b168375ffffffffffffffffffffffffffffffffffff00000000198416171784555050505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b80151581146104c157600080fd5b60008135610365816118a3565b600081356103658161162f565b81356118d68161162f565b6118e08183611883565b5060208201356118ef8161162f565b6118fc8160018401611883565b50604082013561190b8161162f565b6119188160028401611883565b5060038101606083013561192b816117aa565b815461ffff191661ffff8216178255506080830135611949816117aa565b815463ffff00001916601082901b63ffff0000161782555060a083013563ffffffff8116811461197857600080fd5b815467ffffffff00000000191660209190911b67ffffffff00000000161781556119cf6119a760c085016118b1565b82805468ff0000000000000000191691151560401b68ff000000000000000016919091179055565b611a086119de60e085016118b1565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b611a57611a1861010085016118be565b8280547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b505050565b600060808284031215611a6e57600080fd5b6040516080810181811067ffffffffffffffff82111715611a9f57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060808284031215611ae257600080fd5b610e568383611a5c565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b850184121615611b2057611b20611aec565b6001600160ff1b0384018313811615611b3b57611b3b611aec565b50500390565b600080821280156001600160ff1b0384900385131615611b6357611b63611aec565b600160ff1b8390038412811615611b7c57611b7c611aec565b50500190565b600082821015611b9457611b94611aec565b500390565b60006001600160ff1b0381841382841380821686840486111615611bbf57611bbf611aec565b600160ff1b6000871282811687830589121615611bde57611bde611aec565b60008712925087820587128484161615611bfa57611bfa611aec565b87850587128184161615611c1057611c10611aec565b505050929093029392505050565b60008219821115611c3157611c31611aec565b500190565b600080600060c08486031215611c4b57600080fd5b8351925060208401519150611c638560408601611a5c565b90509250925092565b600081600f0b6f7fffffffffffffffffffffffffffffff19811415611c9357611c93611aec565b60000392915050565b6000600160ff1b821415611cb257611cb2611aec565b5060000390565b600287810b825286900b6020820152600f85900b604082015260c08101611ce360608301866116a9565b608082019390935260a00152949350505050565b600060208284031215611d0957600080fd5b8151610e568161162f565b60006001600160801b03808316818516808303821115611d3657611d36611aec565b01949350505050565b60006001600160801b0383811690831681811015611d5f57611d5f611aec565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600080600080600080600060e0888a031215611d9857600080fd5b8751611da38161162f565b6020890151909750611db481611661565b6040890151909650611dc5816117aa565b6060890151909550611dd6816117aa565b6080890151909450611de7816117aa565b60a089015190935060ff81168114611dfe57600080fd5b60c0890151909250611e0f816118a3565b809150509295989194975092955056fea164736f6c634300080c000a608060405234801561001057600080fd5b50610967806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806386c8e9a7116100ad578063bb152c5311610071578063bb152c5314610292578063d74dcaca146102ba578063d9fe08d4146102f3578063ea6e4e5214610304578063fca6fbf21461033457600080fd5b806386c8e9a71461025657806397c71faf1461026c578063a34123a71461027f578063a3a1e7e91461024c578063a3c35e2c1461019157600080fd5b806333f90963116100f457806333f90963146101b15780634c2ebc58146101b35780635e622abc1461021a5780636719578c146102215780637779815c1461024c57600080fd5b806302dc9951146101265780630d8f6f461461014e5780631dce5fcf1461016f5780632a99a79214610191575b600080fd5b6001546101359062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61016161015c3660046105cf565b61034d565b604051908152602001610145565b61018261017d3660046105ff565b610362565b60405161014593929190610652565b6101a461019f366004610696565b610433565b60405161014591906106c9565b005b6101b16101c13660046106f4565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610161565b600354610234906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b600560821b610161565b600154610135906301000000900462ffffff1681565b61016161027a3660046105cf565b6104b0565b61018261028d3660046105ff565b6104be565b6102a56102a036600461075e565b610584565b60408051928352602083019190915201610145565b6101b16102c836600461079a565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101b16103013660046107dc565b50565b6101b16103123660046107f4565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154610135906601000000000000900462ffffff1681565b600061035c82610f9f1961082e565b92915050565b6000806103906040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546103ab91906108b3565b9091555050600286810b6000908152602082815260408083209389900b835292905220600101546103e6906001600160801b038616906108cb565b600287810b600090815260208281526040808320938a900b8352929052205490935061041c906001600160801b038616906108cb565b91506104288686610433565b905093509350939050565b61045e6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061035c610fa0836108ea565b6000806104ec6040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546105079190610926565b9091555050600286810b6000908152602082815260408083209389900b8352929052205461053f906001600160801b038616906108cb565b600287810b600090815260208281526040808320938a900b83529290522060010154909250610578906001600160801b038616906108cb565b92506104288686610433565b60008082156105ad57610fa06105998661093d565b6105a391906108ea565b91508490506105c7565b6105b68561093d565b91506105c485610fa061082e565b90505b935093915050565b6000602082840312156105e157600080fd5b5035919050565b8035600281900b81146105fa57600080fd5b919050565b60008060006060848603121561061457600080fd5b61061d846105e8565b925061062b602085016105e8565b915060408401356001600160801b038116811461064757600080fd5b809150509250925092565b8381526020810183905260c0810161068e6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080604083850312156106a957600080fd5b6106b2836105e8565b91506106c0602084016105e8565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161035c565b60008060008060008060c0878903121561070d57600080fd5b610716876105e8565b9550610724602088016105e8565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6001600160a01b038116811461030157600080fd5b60008060006060848603121561077357600080fd5b83359250602084013561078581610749565b91506040840135801515811461064757600080fd5b600080600080608085870312156107b057600080fd5b6107b9856105e8565b93506107c7602086016105e8565b93969395505050506040820135916060013590565b600060e082840312156107ee57600080fd5b50919050565b60006020828403121561080657600080fd5b813561081181610749565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b038184138284138082168684048611161561085457610854610818565b600160ff1b600087128281168783058912161561087357610873610818565b6000871292508782058712848416161561088f5761088f610818565b878505871281841616156108a5576108a5610818565b505050929093029392505050565b600082198211156108c6576108c6610818565b500190565b60008160001904831182151516156108e5576108e5610818565b500290565b60008261090757634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561092157610921610818565b500590565b60008282101561093857610938610818565b500390565b6000600160ff1b82141561095357610953610818565b506000039056fea164736f6c634300080c000a';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
