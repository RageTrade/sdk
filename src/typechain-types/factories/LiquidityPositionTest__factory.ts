/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LP_AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vQuoteIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouseEnums.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060da80546001600160a01b0319166001600160a01b039290921691909117905561006d565b6109b78062001f8483390190565b611f07806200007d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806357595e871161008c5780638ce74426116100665780638ce74426146102325780639d9ba48214610312578063ac210cc71461031a578063f04af6ec1461034557600080fd5b806357595e87146101cd5780635ea25032146101d557806382d9dbaa1461020257600080fd5b80632e0cb31a116100c85780632e0cb31a14610133578063313c06a01461014657806338da803e146101a75780633a64c245146101ba57600080fd5b80631ca45818146100ef5780631f1b95021461010b5780632c83d1341461011e575b600080fd5b6100f8606c5481565b6040519081526020015b60405180910390f35b6100f86101193660046116f6565b610358565b61013161012c366004611722565b61036b565b005b6100f86101413660046116f6565b61037b565b6070546071546072546073546074546075546101929560ff8116956101008204600290810b96600160201b840490910b95600160381b9093046001600160801b03169491939092919089565b6040516101029998979695949392919061177d565b6101316101b53660046117da565b610398565b6101316101c8366004611826565b6103bc565b610131610401565b606d54606e54606f546101e792919083565b60408051938452602084019290925290820152606001610102565b6101316102103660046116f6565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6002546003546040805160808101825260045461ffff808216835262010000820481166020840152600160201b8204169282019290925266010000000000009091046001600160801b031660608201526005546006546007546102a3956001600160a01b0390811695169392919086565b604080516001600160a01b03978816815296909516602080880191909152845161ffff908116888801529085015181166060808901919091529585015116608087015293909201516001600160801b031660a085015260c084015260e083015261010082015261012001610102565b6100f86104c4565b60da5461032d906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b610131610353366004611839565b6104d5565b60006103656070836105f7565b92915050565b61037760708383610620565b5050565b60da546000906103659060709084906001600160a01b0316610678565b8460046103a5828261186c565b5050600593909355600691909155600755606c5550565b60006103d76103ce60208401846116f6565b63ffffffff1690565b63ffffffff8116600090815260208190526040902090915082906103fb828261197d565b50505050565b60da546070546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a9190611b82565b60408051606081018252606d548152606e546020820152606f54918101919091529091506104c1906070906000908190859061079b565b50565b60006104d060706108e1565b905090565b60da54600080805260209081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb780546001600160a01b0319166001600160a01b039093169283179055604080516319c655e360e21b81529051636719578c926004808401939192918290030181865afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611b9e565b600080805260208181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb680546001600160a01b0319166001600160a01b03949094169390931790925560408051606081018252606d548152606e5493810193909352606f54908301526104c191607091908190859082610991565b600080610605848483610d76565b5060018501549091506106189082611bd1565b949350505050565b61062983610e3f565b156106475760405163a0bb33f960e01b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b60008080610687868683610d76565b91509150600061069f866001600160a01b0316610e65565b9050816106b18483600160801b610ed6565b6106bb9190611c10565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107479190611b82565b9050610768610763826060015187610f1d90919063ffffffff16565b610f54565b6107729083611c10565b8151604083015191935061078891879190610f6a565b6107929083611c10565b95945050505050565b815160408301516000916107b191889190610f6a565b905080826000018181516107c59190611c10565b90525060608301516000906107df90610763908990610f1d565b905080836000018181516107f39190611c10565b9052508654604080516101008304600290810b8252600160201b90930490920b6020830152810183905263ffffffff86169087907fe78c346ca01ca7fd618ef99876cdc15c30b6f4072af58014453e6442fbeb70dc9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b6020830152810182905263ffffffff86169087907f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e74429060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b805460009081906108f990610100900460020b610fa4565b835490915060009061091490600160201b900460020b610fa4565b9050600084600101541261095557836001015461094b83838760000160079054906101000a90046001600160801b031660016112c3565b6106189190611c51565b600184015461096690600019611c68565b84546109879084908490600160381b90046001600160801b031660016112c3565b6106189190611ced565b63ffffffff8416600090815260208290526040812060020154819081906001600160a01b031690506109e46040518060800160405280600081526020016000815260200160008152602001600081525090565b600087600f0b1315610aad578954604051631dce5fcf60e01b81526101008204600290810b6004830152600160201b90920490910b60248201526001600160801b038816604482015260009081906001600160a01b03851690631dce5fcf9060640160c0604051808303816000875af1158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a899190611d05565b94509092509050610a9982610f54565b9550610aa481610f54565b94505050610b91565b895460009081906001600160a01b0385169063a34123a7906101008104600290810b91600160201b9004900b610ae28d611d3b565b6040516001600160e01b031960e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160c0604051808303816000875af1158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190611d05565b94509092509050610b6f82610f54565b610b7890611d6b565b9550610b8381610f54565b610b8c90611d6b565b945050505b610b9e8a8a8a848a61079b565b8286600001818151610bb09190611bd1565b905250602086018051859190610bc7908390611bd1565b905250895463ffffffff8916908a907feb77cdd733ee295d52966d2946632ded675ffb7fbef59559ad0adea55cded940906101008104600290810b91600160201b810490910b908c9060ff16610c1c8b611d6b565b610c258b611d6b565b604051610c3796959493929190611d88565b60405180910390a363ffffffff8816600090815260208690526040812060010154610c6a906001600160a01b0316611383565b90506000610c798c8383610d76565b5060018d0154909150610c8c9082611bd1565b88604001818151610c9d9190611c10565b9052506000600f8a900b1315610cfa578b5489908d90600790610cd1908490600160381b90046001600160801b0316611dc6565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610d56565b600089600f0b1215610d5657610d0f89611d3b565b8c548d90600790610d31908490600160381b90046001600160801b0316611df1565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b610d608682611c10565b8c60010181905550505050505050505050505050565b825460009081908190610d9090610100900460020b610fa4565b8654909150600090610dab90600160201b900460020b610fa4565b9050856001600160a01b038084169082161015610dc9575081610de6565b816001600160a01b0316876001600160a01b03161115610de65750805b8754610e0a906107639083908590600160381b90046001600160801b03168a6112c3565b9450610e3261076384838b60000160079054906101000a90046001600160801b03168a611416565b9350505050935093915050565b8054600090610100900460020b15158061036557505054600160201b900460020b151590565b60006401000276a36001600160a01b0383161080610ea0575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15610ecd57604051635d236c4560e01b81526001600160a01b038316600482015260240160405180910390fd5b61036582611486565b6000610eff61076360008612610eec5785610ef8565b610ef886600019611c68565b85856114a1565b90506000841215610f1657610f1381611d6b565b90505b9392505050565b81546005830154600091610f1691600160381b9091046001600160801b031690600160801b90610f4d9086611c51565b91906114a1565b6000600160ff1b8210610f6657600080fd5b5090565b6002830154600384015460048501548554600093610f9b9387938793600160381b90046001600160801b0316611554565b610f1390611d6b565b60008060008360020b12610fbb578260020b610fc3565b8260020b6000035b9050620d89e8811115610fe9576040516315e4079d60e11b815260040160405180910390fd5b600060018216610ffd57600160801b61100f565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611043576ffff97272373d413259a46990580e213a0260801c5b6004821615611062576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615611081576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156110a0576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156110bf576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156110de576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156110fd576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561111d576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561113d576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561115d576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561117d576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561119d576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156111bd576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156111dd576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156111fd576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561121e576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561123e576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561125d576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561127a576b048a170391f7dc42444e8fa20260801c5b60008460020b131561129b57806000198161129757611297611e19565b0490505b600160201b8106156112ae5760016112b1565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b031611156112e3579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661131657600080fd5b8361134c57866001600160a01b03166113398383896001600160a01b03166114a1565b8161134657611346611e19565b04611378565b6113786113638383896001600160a01b031661157c565b886001600160a01b0316808204910615150190565b979650505050505050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156113c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e89190611e2f565b509496509294505050506001600160a01b038316151590506114105761140d81610fa4565b91505b50919050565b6000836001600160a01b0316856001600160a01b03161115611436579293925b816114635761145e836001600160801b03168686036001600160a01b0316600160601b6114a1565b610792565b610792836001600160801b03168686036001600160a01b0316600160601b61157c565b60006103656001600160a01b03831680680100000000000000005b6000808060001985870985870292508281108382030391505080600014156114db57600084116114d057600080fd5b508290049050610f16565b8084116114e757600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600061137882600160801b61156b8888888d6115bc565b611575908a611bd1565b91906115e1565b60006115898484846114a1565b90506000828061159b5761159b611e19565b8486091115610f165760001981106115b257600080fd5b6001019392505050565b60006115d76115cb8684611bd1565b8590600160801b61161f565b6107929084611c10565b60006115ee848484610ed6565b905060008112801561160e575061160e6116078561167c565b8484611687565b15610f1657610f1360001982611c10565b6000600181808061163088856116a0565b9450925061163e87856116a0565b9450915061164c86856116a0565b9450905061165e6107638484846114a1565b9450836116715761166e85611d6b565b94505b505050509392505050565b6000610365826116ca565b600081838509801561169857600191505b509392505050565b60008060008412156116bf579115916116b884611d6b565b91506116c3565b8391505b5092909150565b6000808213610f66576116dc82611d6b565b610365565b6001600160a01b03811681146104c157600080fd5b60006020828403121561170857600080fd5b8135610f16816116e1565b8060020b81146104c157600080fd5b6000806040838503121561173557600080fd5b823561174081611713565b9150602083013561175081611713565b809150509250929050565b6003811061177957634e487b7160e01b600052602160045260246000fd5b9052565b610120810161178c828c61175b565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b60008060008060008587036101008112156117f457600080fd5b608081121561180257600080fd5b5094966080880135965060a0880135955060c0880135945060e08801359350915050565b6000610120828403121561141057600080fd5b60006020828403121561184b57600080fd5b813580600f0b8114610f1657600080fd5b61ffff811681146104c157600080fd5b81356118778161185c565b815461ffff191661ffff82161782555060208201356118958161185c565b815463ffff00001916601082901b63ffff0000161782555060408201356118bb8161185c565b815465ffff000000008260201b1691508165ffff0000000019821617835560608401356001600160801b03811681146118f357600080fd5b75ffffffffffffffffffffffffffffffff0000000000008160301b168375ffffffffffffffffffffffffffffffffffff00000000198416171784555050505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b80151581146104c157600080fd5b6000813561036581611955565b60008135610365816116e1565b8135611988816116e1565b6119928183611935565b5060208201356119a1816116e1565b6119ae8160018401611935565b5060408201356119bd816116e1565b6119ca8160028401611935565b506003810160608301356119dd8161185c565b815461ffff191661ffff82161782555060808301356119fb8161185c565b815463ffff00001916601082901b63ffff0000161782555060a083013563ffffffff81168114611a2a57600080fd5b815467ffffffff00000000191660209190911b67ffffffff0000000016178155611a81611a5960c08501611963565b82805468ff0000000000000000191691151560401b68ff000000000000000016919091179055565b611aba611a9060e08501611963565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b611b09611aca6101008501611970565b8280547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b505050565b600060808284031215611b2057600080fd5b6040516080810181811067ffffffffffffffff82111715611b5157634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060808284031215611b9457600080fd5b610f168383611b0e565b600060208284031215611bb057600080fd5b8151610f16816116e1565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b850184121615611bef57611bef611bbb565b6001600160ff1b0384018313811615611c0a57611c0a611bbb565b50500390565b600080821280156001600160ff1b0384900385131615611c3257611c32611bbb565b600160ff1b8390038412811615611c4b57611c4b611bbb565b50500190565b600082821015611c6357611c63611bbb565b500390565b60006001600160ff1b0381841382841380821686840486111615611c8e57611c8e611bbb565b600160ff1b6000871282811687830589121615611cad57611cad611bbb565b60008712925087820587128484161615611cc957611cc9611bbb565b87850587128184161615611cdf57611cdf611bbb565b505050929093029392505050565b60008219821115611d0057611d00611bbb565b500190565b600080600060c08486031215611d1a57600080fd5b8351925060208401519150611d328560408601611b0e565b90509250925092565b600081600f0b6f7fffffffffffffffffffffffffffffff19811415611d6257611d62611bbb565b60000392915050565b6000600160ff1b821415611d8157611d81611bbb565b5060000390565b600287810b825286900b6020820152600f85900b604082015260c08101611db2606083018661175b565b608082019390935260a00152949350505050565b60006001600160801b03808316818516808303821115611de857611de8611bbb565b01949350505050565b60006001600160801b0383811690831681811015611e1157611e11611bbb565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600080600080600080600060e0888a031215611e4a57600080fd5b8751611e55816116e1565b6020890151909750611e6681611713565b6040890151909650611e778161185c565b6060890151909550611e888161185c565b6080890151909450611e998161185c565b60a089015190935060ff81168114611eb057600080fd5b60c0890151909250611ec181611955565b809150509295989194975092955056fea264697066735822122070d92ec063efede67069cbc33f7638e79585718c19d821465f8942ca866e8b3e64736f6c634300080c0033608060405234801561001057600080fd5b50610997806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637779815c116100ad578063a3c35e2c11610071578063a3c35e2c146101b9578063d74dcaca146102ba578063dee4c1a6146102f3578063ea6e4e5214610304578063fca6fbf21461033457600080fd5b80637779815c1461027457806386c8e9a71461027e57806397c71faf14610294578063a34123a7146102a7578063a3a1e7e91461027457600080fd5b80632a99a792116100f45780632a99a792146101b957806333f90963146101d95780634c2ebc58146101db5780635e622abc146102425780636719578c1461024957600080fd5b806302dc9951146101265780630d8f6f461461014e578063195cd92c1461016f5780631dce5fcf14610197575b600080fd5b6001546101359062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61016161015c3660046105d6565b61034d565b604051908152602001610145565b61018261017d366004610604565b610362565b60408051928352602083019190915201610145565b6101aa6101a5366004610662565b6103b4565b604051610145939291906106aa565b6101cc6101c73660046106ee565b610485565b6040516101459190610721565b005b6101d96101e936600461074c565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610161565b60035461025c906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b600560821b610161565b600154610135906301000000900462ffffff1681565b6101616102a23660046105d6565b610502565b6101aa6102b5366004610662565b610510565b6101d96102c83660046107a1565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101d96103013660046107e3565b50565b6101d96103123660046107fb565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154610135906601000000000000900462ffffff1681565b600061035c82610f9f19610835565b92915050565b60008080841385151514156103905783915061037d826108ba565b61038990610fa0610835565b90506103ac565b610fa061039c856108ba565b6103a691906108d7565b91508390505b935093915050565b6000806103e26040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546103fd9190610913565b9091555050600286810b6000908152602082815260408083209389900b83529290522060010154610438906001600160801b0386169061092b565b600287810b600090815260208281526040808320938a900b8352929052205490935061046e906001600160801b0386169061092b565b915061047a8686610485565b905093509350939050565b6104b06040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061035c610fa0836108d7565b60008061053e6040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b031660046000828254610559919061094a565b9091555050600286810b6000908152602082815260408083209389900b83529290522054610591906001600160801b0386169061092b565b600287810b600090815260208281526040808320938a900b835292905220600101549092506105ca906001600160801b0386169061092b565b925061047a8686610485565b6000602082840312156105e857600080fd5b5035919050565b6001600160a01b038116811461030157600080fd5b60008060006060848603121561061957600080fd5b8335801515811461062957600080fd5b9250602084013591506040840135610640816105ef565b809150509250925092565b8035600281900b811461065d57600080fd5b919050565b60008060006060848603121561067757600080fd5b6106808461064b565b925061068e6020850161064b565b915060408401356001600160801b038116811461064057600080fd5b8381526020810183905260c081016106e66040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806040838503121561070157600080fd5b61070a8361064b565b91506107186020840161064b565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161035c565b60008060008060008060c0878903121561076557600080fd5b61076e8761064b565b955061077c6020880161064b565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600080600080608085870312156107b757600080fd5b6107c08561064b565b93506107ce6020860161064b565b93969395505050506040820135916060013590565b600060c082840312156107f557600080fd5b50919050565b60006020828403121561080d57600080fd5b8135610818816105ef565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b038184138284138082168684048611161561085b5761085b61081f565b600160ff1b600087128281168783058912161561087a5761087a61081f565b600087129250878205871284841616156108965761089661081f565b878505871281841616156108ac576108ac61081f565b505050929093029392505050565b6000600160ff1b8214156108d0576108d061081f565b5060000390565b6000826108f457634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561090e5761090e61081f565b500590565b600082198211156109265761092661081f565b500190565b60008160001904831182151516156109455761094561081f565b500290565b60008282101561095c5761095c61081f565b50039056fea26469706673582212208df0ed3240a429573f6125f28a8d86e61804c215c58c7aa08415d07a3da4f64264736f6c634300080c0033';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'LiquidityPositionTest';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }
  static readonly contractName: 'LiquidityPositionTest';
  public readonly contractName: 'LiquidityPositionTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
