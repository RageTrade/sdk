/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vBaseIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'baseValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouse.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060da80546001600160a01b0319166001600160a01b039290921691909117905561006c565b6108ec80611e1b83390190565b611da08061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063833b0acb1161008c5780639d9ba482116100665780639d9ba482146102b6578063ac210cc7146102be578063dd807e94146102e9578063f04af6ec146102fc57600080fd5b8063833b0acb146101f957806388077639146102015780638ce744261461021457600080fd5b8063313c06a0116100c8578063313c06a0146101335780633fd687a11461019457806357595e87146101c45780635ea25032146101cc57600080fd5b80631ca45818146100ef5780632a66e9ca1461010b5780632c83d13414610120575b600080fd5b6100f8606c5481565b6040519081526020015b60405180910390f35b61011e6101193660046115ce565b61030f565b005b61011e61012e36600461161f565b6103a6565b60705460715460725460735460745460755461017f9560ff8116956101008204600290810b96600160201b840490910b95600160381b9093046001600160801b03169491939092919089565b6040516101029998979695949392919061167a565b61011e6101a23660046116d7565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61011e6103b6565b606d54606e54606f546101de92919083565b60408051938452602084019290925290820152606001610102565b6100f8610479565b61011e61020f3660046116f4565b610499565b6003546040805160608101825260045461ffff808216835262010000820481166020840152600160201b9091041691810191909152600554600654600754610266946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e001610102565b6100f86104bd565b60da546102d1906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b6100f86102f73660046116d7565b6104c9565b61011e61030a36600461173f565b6104ec565b8160006001600160a01b03821663ffffffff80821660009081526002602052604081205492935061034a926001600160a01b03169161052d16565b61035657610356611762565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352908290529020839061039e82826117c3565b505050505050565b6103b26070838361053e565b5050565b60da546070546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190611977565b60408051606081018252606d548152606e546020820152606f54918101919091529091506104769060709060009081908590610595565b50565b60da54600090610494906070906001600160a01b03166106e6565b905090565b8460046104a68282611993565b5050600593909355600691909155600755606c5550565b6000610494607061078f565b60da546000906104e69060709084906001600160a01b03166107e6565b92915050565b60da5460408051606081018252606d548152606e546020820152606f549181019190915261047691607091600091829186916001600160a01b031690610979565b6001600160a01b0390811691161490565b61054783610c18565b156105645760405162dc149f60e41b815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff00000000191617600160201b9190921602179055565b815160408301516000916105ab91889190610c3e565b905080826000018181516105bf9190611a17565b90525060608301516000906105de906105d9908990610c78565b610cb6565b905080836000018181516105f29190611a17565b9052508654604080516101008304600290810b8252600160201b90930490920b602083015281018390526001600160a01b0386169087907fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9060600160405180910390a38654604080516101008304600290810b8252600160201b90930490920b602083015281018290526001600160a01b0386169087907f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c9060600160405180910390a3505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b81546040516328f0d78b60e21b81526101008204600290810b6004830152600160201b90920490910b602482015260009081906001600160a01b0384169063a3c35e2c90604401608060405180830381865afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190611977565b9050610787816020015185610ccc90919063ffffffff16565b949350505050565b805460009081906107a790610100900460020b610d03565b83549091506000906107c290600160201b900460020b610d03565b84549091506107879083908390600160381b90046001600160801b0316600161103a565b600080600061086a610861856001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108539190611a58565b6001600160a01b03166110fa565b8790600061118d565b915091506000610882866001600160a01b0316611256565b9050816108948483600160801b6112d7565b61089e9190611a17565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a9190611977565b90506109466105d9826060015187610c7890919063ffffffff16565b6109509083611a17565b8151604083015191935061096691879190610c3e565b6109709083611a17565b95945050505050565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af11580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190611a75565b91945092509050610a238989898488610595565b8284600001818151610a359190611aab565b905250602084018051839190610a4c908390611aab565b90525088546001600160a01b0388169089907fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a69906101008104600290810b91600160201b810490910b908b9060ff16610aa489611aea565b610aad8b611aea565b604051610abf96959493929190611b07565b60405180910390a36000610b0a866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082f573d6000803e3d6000fd5b90506000610b198b838361118d565b5060018c0154909150610b2c9082611aab565b86604001818151610b3d9190611a17565b9052506000600f89900b1315610b9a578a5488908c90600790610b71908490600160381b90046001600160801b0316611b45565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610bf9565b600088600f0b1215610bf957610bb288600019611b70565b8b548c90600790610bd4908490600160381b90046001600160801b0316611c17565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b610c038482611a17565b8b600101819055505050505050505050505050565b8054600090610100900460020b1515806104e657505054600160201b900460020b151590565b6002830154600384015460048501548554600093610c6f9387938793600160381b90046001600160801b0316611311565b61078790611aea565b81546005830154600091610caf91600160381b9091046001600160801b031690600160801b90610ca89086611c3f565b9190611339565b9392505050565b6000600160ff1b8210610cc857600080fd5b5090565b81546003830154600091610caf91600160381b9091046001600160801b031690600160801b90610cfc9086611aab565b91906112d7565b60008060008360020b12610d1a578260020b610d22565b8260020b6000035b9050620d89e8811115610d605760405162461bcd60e51b81526020600482015260016024820152601560fa1b60448201526064015b60405180910390fd5b600060018216610d7457600160801b610d86565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610dba576ffff97272373d413259a46990580e213a0260801c5b6004821615610dd9576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610df8576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610e17576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610e36576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610e55576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610e74576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610e94576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610eb4576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610ed4576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610ef4576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610f14576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610f34576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610f54576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610f74576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610f95576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610fb5576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610fd4576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610ff1576b048a170391f7dc42444e8fa20260801c5b60008460020b131561101257806000198161100e5761100e611c56565b0490505b600160201b810615611025576001611028565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b0316111561105a579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661108d57600080fd5b836110c357866001600160a01b03166110b08383896001600160a01b0316611339565b816110bd576110bd611c56565b046110ef565b6110ef6110da8383896001600160a01b03166113e7565b886001600160a01b0316808204910615150190565b979650505050505050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561113b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f9190611c6c565b509496509294505050506001600160a01b038316151590506111875761118481610d03565b91505b50919050565b8254600090819081906111a790610100900460020b610d03565b86549091506000906111c290600160201b900460020b610d03565b9050856001600160a01b0380841690821610156111e05750816111fd565b816001600160a01b0316876001600160a01b031611156111fd5750805b8754611221906105d99083908590600160381b90046001600160801b03168a61103a565b94506112496105d984838b60000160079054906101000a90046001600160801b03168a611427565b9350505050935093915050565b60006401000276a36001600160a01b0383161080611291575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156112ba57604051635d236c4560e01b81526001600160a01b0383166004820152602401610d57565b6104e66001600160a01b0383168068010000000000000000611339565b60006112fd600085126112ea57846112f6565b6112f685600019611d0e565b8484611339565b90506000841215610caf5761078781611aea565b60006110ef82600160801b6113288888888d611497565b611332908a611aab565b91906114bc565b600080806000198587098587029250828110838203039150508060001415611373576000841161136857600080fd5b508290049050610caf565b80841161137f57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b60006113f4848484611339565b90506000828061140657611406611c56565b8486091115610caf57600019811061141d57600080fd5b6001019392505050565b6000836001600160a01b0316856001600160a01b03161115611447579293925b816114745761146f836001600160801b03168686036001600160a01b0316600160601b611339565b610970565b610970836001600160801b03168686036001600160a01b0316600160601b6113e7565b60006114b26114a68684611aab565b8590600160801b6114fa565b6109709084611a17565b60006114c98484846112d7565b90506000811280156114e957506114e96114e285611554565b848461155f565b15610caf5761078760001982611a17565b6000600181808061150b8885611578565b945092506115198785611578565b945091506115278685611578565b94509050611536838383611339565b9450836115495761154685611aea565b94505b505050509392505050565b60006104e6826115a2565b600081838509801561157057600191505b509392505050565b60008060008412156115975791159161159084611aea565b915061159b565b8391505b5092909150565b6000808213610cc8576115b482611aea565b6104e6565b6001600160a01b038116811461047657600080fd5b6000808284036101008112156115e357600080fd5b83356115ee816115b9565b925060e0601f198201121561160257600080fd5b506020830190509250929050565b8060020b811461047657600080fd5b6000806040838503121561163257600080fd5b823561163d81611610565b9150602083013561164d81611610565b809150509250929050565b6003811061167657634e487b7160e01b600052602160045260246000fd5b9052565b6101208101611689828c611658565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b6000602082840312156116e957600080fd5b8135610caf816115b9565b600080600080600085870360e081121561170d57600080fd5b606081121561171b57600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b60006020828403121561175157600080fd5b813580600f0b8114610caf57600080fd5b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b61ffff8116811461047657600080fd5b801515811461047657600080fd5b600081356104e6816115b9565b81356117ce816115b9565b6117d88183611778565b5060208201356117e7816115b9565b6117f48160018401611778565b5060028101604083013561180781611798565b815461ffff191661ffff821617825550606083013561182581611798565b815463ffff00001916601082901b63ffff00001617825550608083013563ffffffff8116811461185457600080fd5b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135611884816117a8565b68ffffffffff00000000199190911690911790151560401b68ff0000000000000000161781556118fe6118b960c085016117b6565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b505050565b60006080828403121561191557600080fd5b6040516080810181811067ffffffffffffffff8211171561194657634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b60006080828403121561198957600080fd5b610caf8383611903565b813561199e81611798565b815461ffff191661ffff82161782555060208201356119bc81611798565b815463ffff00001916601082901b63ffff0000161782555060408201356119e281611798565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b0384900385131615611a3957611a39611a01565b600160ff1b8390038412811615611a5257611a52611a01565b50500190565b600060208284031215611a6a57600080fd5b8151610caf816115b9565b600080600060c08486031215611a8a57600080fd5b8351925060208401519150611aa28560408601611903565b90509250925092565b60008083128015600160ff1b850184121615611ac957611ac9611a01565b6001600160ff1b0384018313811615611ae457611ae4611a01565b50500390565b6000600160ff1b821415611b0057611b00611a01565b5060000390565b600287810b825286900b6020820152600f85900b604082015260c08101611b316060830186611658565b608082019390935260a00152949350505050565b60006001600160801b03808316818516808303821115611b6757611b67611a01565b01949350505050565b600081600f0b83600f0b6f7fffffffffffffffffffffffffffffff600082136000841383830485118282161615611ba957611ba9611a01565b6f7fffffffffffffffffffffffffffffff196000851282811687830587121615611bd557611bd5611a01565b60008712925085820587128484161615611bf157611bf1611a01565b85850587128184161615611c0757611c07611a01565b5050509290910295945050505050565b60006001600160801b0383811690831681811015611c3757611c37611a01565b039392505050565b600082821015611c5157611c51611a01565b500390565b634e487b7160e01b600052601260045260246000fd5b600080600080600080600060e0888a031215611c8757600080fd5b8751611c92816115b9565b6020890151909750611ca381611610565b6040890151909650611cb481611798565b6060890151909550611cc581611798565b6080890151909450611cd681611798565b60a089015190935060ff81168114611ced57600080fd5b60c0890151909250611cfe816117a8565b8091505092959891949750929550565b60006001600160ff1b0381841382841380821686840486111615611d3457611d34611a01565b600160ff1b6000871282811687830589121615611d5357611d53611a01565b60008712925087820587128484161615611d6f57611d6f611a01565b87850587128184161615611d8557611d85611a01565b50505092909302939250505056fea164736f6c634300080a000a608060405234801561001057600080fd5b506108cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806386c8e9a7116100a2578063bb152c5311610071578063bb152c5314610263578063d440c4201461028b578063d74dcaca146102ad578063ea6e4e52146102e6578063fca6fbf21461031657600080fd5b806386c8e9a71461023a57806397c71faf14610250578063a3a1e7e91461021f578063a3c35e2c1461016457600080fd5b80634c2ebc58116100e95780634c2ebc58146101865780635e622abc146101ed5780636719578c146101f45780637779815c1461021f5780637aba8e681461022957600080fd5b806302dc99511461011b5780630d8f6f46146101435780632a99a7921461016457806333f9096314610184575b600080fd5b60015461012a9062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b610156610151366004610508565b61032f565b60405190815260200161013a565b610177610172366004610538565b610344565b60405161013a919061056b565b005b610184610194366004610596565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610156565b600354610207906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b600560821b610156565b6101846102373660046105eb565b50565b60015461012a906301000000900462ffffff1681565b61015661025e366004610508565b6103c1565b610276610271366004610618565b6103cf565b6040805192835260208301919091520161013a565b61029e61029936600461065f565b61041a565b60405161013a939291906106a1565b6101846102bb3660046106e5565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101846102f4366004610727565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60015461012a906601000000000000900462ffffff1681565b600061033e82610f9f19610761565b92915050565b61036f6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061033e610fa0836107e6565b60008082156103f857610fa06103e486610822565b6103ee91906107e6565b9150849050610412565b61040185610822565b915061040f85610fa0610761565b90505b935093915050565b6000806104486040518060800160405280600081526020016000815260200160008152602001600081525090565b600084600f0b13156104745783600f0b60046000828254610469919061083f565b9091555061048f9050565b83600f0b600460008282546104899190610880565b90915550505b600286810b6000908152602082815260408083209389900b835292905220546104bd90600f86900b90610761565b600287810b600090815260208281526040808320938a900b835292905220600101549093506104f190600f86900b90610761565b91506104fd8686610344565b905093509350939050565b60006020828403121561051a57600080fd5b5035919050565b8035600281900b811461053357600080fd5b919050565b6000806040838503121561054b57600080fd5b61055483610521565b915061056260208401610521565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161033e565b60008060008060008060c087890312156105af57600080fd5b6105b887610521565b95506105c660208801610521565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060e082840312156105fd57600080fd5b50919050565b6001600160a01b038116811461023757600080fd5b60008060006060848603121561062d57600080fd5b83359250602084013561063f81610603565b91506040840135801515811461065457600080fd5b809150509250925092565b60008060006060848603121561067457600080fd5b61067d84610521565b925061068b60208501610521565b9150604084013580600f0b811461065457600080fd5b8381526020810183905260c081016106dd6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080600080608085870312156106fb57600080fd5b61070485610521565b935061071260208601610521565b93969395505050506040820135916060013590565b60006020828403121561073957600080fd5b813561074481610603565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b03818413828413808216868404861116156107875761078761074b565b600160ff1b60008712828116878305891216156107a6576107a661074b565b600087129250878205871284841616156107c2576107c261074b565b878505871281841616156107d8576107d861074b565b505050929093029392505050565b60008261080357634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561081d5761081d61074b565b500590565b6000600160ff1b8214156108385761083861074b565b5060000390565b600080821280156001600160ff1b03849003851316156108615761086161074b565b600160ff1b839003841281161561087a5761087a61074b565b50500190565b60008083128015600160ff1b85018412161561089e5761089e61074b565b6001600160ff1b03840183138116156108b9576108b961074b565b5050039056fea164736f6c634300080a000a';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
