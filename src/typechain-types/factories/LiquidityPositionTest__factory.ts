/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  LiquidityPositionTest,
  LiquidityPositionTestInterface,
} from '../LiquidityPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LP_AlreadyInitialized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'T',
    type: 'error',
  },
  {
    inputs: [],
    name: 'balanceAdjustments',
    outputs: [
      {
        internalType: 'int256',
        name: 'vQuoteIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vTokenIncrease',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'traderPositionIncrease',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int128',
        name: 'liquidity',
        type: 'int128',
      },
    ],
    name: 'liquidityChange',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lp',
    outputs: [
      {
        internalType: 'enum IClearingHouseEnums.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'vTokenAmountIn',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxNetPosition',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceCurrent',
        type: 'uint160',
      },
    ],
    name: 'netPosition',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: 'settlementToken',
        type: 'address',
      },
      {
        internalType: 'contract IVQuote',
        name: 'vQuote',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maxVirtualPriceDeviationRatioBps',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'isAllowedForTrade',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rangeLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'closeFactorMMThresholdBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'partialLiquidationCloseFactorBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidationSlippageSqrtToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'uint64',
            name: 'maxRangeLiquidationFees',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'minNotionalLiquidatable',
            type: 'uint64',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVQuote',
        name: '_vQuote',
        type: 'address',
      },
    ],
    name: 'setVQuoteAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updateCheckpoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060da80546001600160a01b0319166001600160a01b039290921691909117905561006d565b610b3e80620022de83390190565b612261806200007d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635ea250321161008c5780639d9ba482116100665780639d9ba4821461030c578063ac210cc714610314578063c28fd7871461033f578063f04af6ec1461035257600080fd5b80635ea25032146101c757806382d9dbaa146101f45780638ce744261461022457600080fd5b80632e0cb31a116100c85780632e0cb31a14610133578063313c06a0146101465780633ffe794c146101ac57806357595e87146101bf57600080fd5b80631ca45818146100ef5780631f1b95021461010b5780632c83d1341461011e575b600080fd5b6100f8606c5481565b6040519081526020015b60405180910390f35b6100f8610119366004611830565b610365565b61013161012c36600461185c565b610378565b005b6100f8610141366004611830565b610388565b6070546071546072546073546074546075546101979560ff8116956101008204600290810b96640100000000840490910b956701000000000000009093046001600160801b03169491939092919089565b604051610102999897969594939291906118b7565b6101316101ba366004611914565b6103a5565b6101316103ea565b606d54606e54606f546101d992919083565b60408051938452602084019290925290820152606001610102565b610131610202366004611830565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600254600354604080516101008101825260045461ffff80821683526201000082048116602084015264010000000082048116938301939093526601000000000000810483166060830152680100000000000000008104831660808301526a0100000000000000000000810490921660a082015267ffffffffffffffff6c010000000000000000000000008304811660c08301527401000000000000000000000000000000000000000090920490911660e08201526005546006546007546102fa956001600160a01b0390811695169392919086565b60405161010296959493929190611927565b6100f86104c7565b60da54610327906001600160a01b031681565b6040516001600160a01b039091168152602001610102565b61013161034d3660046119ef565b6104d8565b610131610360366004611a3f565b6104fc565b6000610372607083610637565b92915050565b61038460708383610660565b5050565b60da546000906103729060709084906001600160a01b03166106d2565b60006103c06103b76020840184611830565b63ffffffff1690565b63ffffffff8116600090815260208190526040902090915082906103e48282611aa7565b50505050565b60da546070546040517fa3c35e2c0000000000000000000000000000000000000000000000000000000081526101008204600290810b600483015264010000000090920490910b60248201526000916001600160a01b03169063a3c35e2c90604401608060405180830381865afa158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d9190611cfd565b60408051606081018252606d548152606e546020820152606f54918101919091529091506104c4906070906000908190859061080f565b50565b60006104d3607061097a565b905090565b8460046104e58282611d33565b5050600593909355600691909155600755606c5550565b60da54600080805260209081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb780546001600160a01b0319166001600160a01b039093169283179055604080517f6719578c0000000000000000000000000000000000000000000000000000000081529051636719578c926004808401939192918290030181865afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb9190611eeb565b600080805260208181527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb680546001600160a01b0319166001600160a01b03949094169390931790925560408051606081018252606d548152606e5493810193909352606f54908301526104c491607091908190859082610a2f565b600080610645848483610e50565b5060018501549091506106589082611f1e565b949350505050565b61066983610f1e565b156106a0576040517fa0bb33f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b825466ffffffffffff00191661010062ffffff9384160266ffffff000000001916176401000000009190921602179055565b600080806106e1868683610e50565b9150915060006106f9866001600160a01b0316610f45565b90508161070b8483600160801b610fcf565b6107159190611f5d565b87546040517f2a99a7920000000000000000000000000000000000000000000000000000000081526101008204600290810b600483015264010000000090920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190611cfd565b90506107dc6107d782606001518761101690919063ffffffff16565b611051565b6107e69083611f5d565b815160408301519193506107fc91879190611067565b6108069083611f5d565b95945050505050565b8151604083015160009161082591889190611067565b905080826000018181516108399190611f5d565b9052506060830151600090610853906107d7908990611016565b905080836000018181516108679190611f5d565b9052508351600288810182905560208087015160038b0181905560408089015160048d018190556060808b015160058f018190558e5484516101008204890b815264010000000090910490970b95870195909552858301899052850195909552608084019190915260a083019390935260c0820152905163ffffffff87169188917fb9b041b729bca1f1535dde5369cddca43b655bbc9dbd3e5878047a06e11a45c79181900360e00190a38654604080516101008304600290810b825264010000000090930490920b6020830152810182905263ffffffff86169087907f8415d777c210eb5ec128f3ed52b314fc5c06eb3a464c58fa8f06a56aea5e74429060600160405180910390a350505050505050565b8054600090819061099290610100900460020b6110a5565b83549091506000906109ae90640100000000900460020b6110a5565b905060008460010154126109ef5783600101546109e583838760000160079054906101000a90046001600160801b031660016113e1565b6106589190611f9c565b6001840154610a0090600019611fb3565b8454610a25908490849067010000000000000090046001600160801b031660016113e1565b610658919061203a565b63ffffffff8416600090815260208290526040812060020154819081906001600160a01b03169050610a826040518060800160405280600081526020016000815260200160008152602001600081525090565b600087600f0b1315610b655789546040517f1dce5fcf0000000000000000000000000000000000000000000000000000000081526101008204600290810b600483015264010000000090920490910b60248201526001600160801b038816604482015260009081906001600160a01b03851690631dce5fcf9060640160c0604051808303816000875af1158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190612052565b94509092509050610b5182611051565b9550610b5c81611051565b94505050610c62565b895460009081906001600160a01b0385169063a34123a7906101008104600290810b916401000000009004900b610b9b8d612088565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600293840b60048201529190920b60248201526001600160801b03909116604482015260640160c0604051808303816000875af1158015610c0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c309190612052565b94509092509050610c4082611051565b610c49906120c6565b9550610c5481611051565b610c5d906120c6565b945050505b610c6f8a8a8a848a61080f565b8286600001818151610c819190611f1e565b905250602086018051859190610c98908390611f1e565b905250895463ffffffff8916908a907feb77cdd733ee295d52966d2946632ded675ffb7fbef59559ad0adea55cded940906101008104600290810b91640100000000810490910b908c9060ff16610cee8b6120c6565b610cf78b6120c6565b604051610d09969594939291906120e2565b60405180910390a363ffffffff8816600090815260208690526040812060010154610d3c906001600160a01b03166114aa565b90506000610d4b8c8383610e50565b5060018d0154909150610d5e9082611f1e565b88604001818151610d6f9190611f5d565b9052506000600f8a900b1315610dd0578b5489908d90600790610da790849067010000000000000090046001600160801b0316612120565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550610e30565b600089600f0b1215610e3057610de589612088565b8c548d90600790610e0b90849067010000000000000090046001600160801b031661214b565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b610e3a8682611f5d565b8c60010181905550505050505050505050505050565b825460009081908190610e6a90610100900460020b6110a5565b8654909150600090610e8690640100000000900460020b6110a5565b9050856001600160a01b038084169082161015610ea4575081610ec1565b816001600160a01b0316876001600160a01b03161115610ec15750805b8754610ee9906107d7908390859067010000000000000090046001600160801b03168a6113e1565b9450610f116107d784838b60000160079054906101000a90046001600160801b03168a61153f565b9350505050935093915050565b8054600090610100900460020b15158061037257505054640100000000900460020b151590565b60006401000276a36001600160a01b0383161080610f80575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15610fc6576040517f5d236c450000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260240160405180910390fd5b610372826115c1565b6000610ff86107d760008612610fe55785610ff1565b610ff186600019611fb3565b85856115dc565b9050600084121561100f5761100c816120c6565b90505b9392505050565b8154600583015460009161100f916701000000000000009091046001600160801b031690600160801b9061104a9086611f9c565b91906115dc565b6000600160ff1b821061106357600080fd5b5090565b600283015460038401546004850154855460009361109c938793879367010000000000000090046001600160801b031661168e565b61100c906120c6565b60008060008360020b126110bc578260020b6110c4565b8260020b6000035b9050620d89e8811115611103576040517f2bc80f3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160011660000361111a57600160801b61112c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615611160576ffff97272373d413259a46990580e213a0260801c5b600482161561117f576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561119e576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b60108216156111bd576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156111dc576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156111fb576fff2ea16466c96a3843ec78b326b528610260801c5b608082161561121a576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561123a576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561125a576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561127a576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561129a576fe7159475a2c29b7443b29c7fa6e889d90260801c5b6110008216156112ba576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156112da576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156112fa576f70d869a156d2a1b890bb3df62baf32f70260801c5b61800082161561131a576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561133b576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561135b576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561137a576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615611397576b048a170391f7dc42444e8fa20260801c5b60008460020b13156113b85780600019816113b4576113b4612173565b0490505b6401000000008106156113cc5760016113cf565b60005b60ff16602082901c0192505050919050565b6000836001600160a01b0316856001600160a01b03161115611401579293925b7bffffffffffffffffffffffffffffffff000000000000000000000000606084901b166001600160a01b03868603811690871661143d57600080fd5b8361147357866001600160a01b03166114608383896001600160a01b03166115dc565b8161146d5761146d612173565b0461149f565b61149f61148a8383896001600160a01b03166116b6565b886001600160a01b0316808204910615150190565b979650505050505050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156114eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150f9190612189565b5094965092945050506001600160a01b0384166000039150611539905057611536816110a5565b91505b50919050565b6000836001600160a01b0316856001600160a01b0316111561155f579293925b8161159557611590836001600160801b03168686036001600160a01b03166c010000000000000000000000006115dc565b610806565b610806836001600160801b03168686036001600160a01b03166c010000000000000000000000006116b6565b60006103726001600160a01b03831680680100000000000000005b6000808060001985870985870292508281108382030391505080600003611615576000841161160a57600080fd5b50829004905061100f565b80841161162157600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b600061149f82600160801b6116a58888888d6116f6565b6116af908a611f1e565b919061171b565b60006116c38484846115dc565b9050600082806116d5576116d5612173565b848609111561100f5760001981106116ec57600080fd5b6001019392505050565b60006117116117058684611f1e565b8590600160801b611759565b6108069084611f5d565b6000611728848484610fcf565b90506000811280156117485750611748611741856117b6565b84846117c1565b1561100f5761100c60001982611f5d565b6000600181808061176a88856117da565b9450925061177887856117da565b9450915061178686856117da565b945090506117986107d78484846115dc565b9450836117ab576117a8856120c6565b94505b505050509392505050565b600061037282611804565b60008183850980156117d257600191505b509392505050565b60008060008412156117f9579115916117f2846120c6565b91506117fd565b8391505b5092909150565b600080821361106357611816826120c6565b610372565b6001600160a01b03811681146104c457600080fd5b60006020828403121561184257600080fd5b813561100f8161181b565b8060020b81146104c457600080fd5b6000806040838503121561186f57600080fd5b823561187a8161184d565b9150602083013561188a8161184d565b809150509250929050565b600381106118b357634e487b7160e01b600052602160045260246000fd5b9052565b61012081016118c6828c611895565b8960020b60208301528860020b60408301526001600160801b03881660608301528660808301528560a08301528460c08301528360e0830152826101008301529a9950505050505050505050565b6000610140828403121561153957600080fd5b60006101a0820190506001600160a01b03808916835280881660208401525061ffff80875116604084015280602088015116606084015280604088015116608084015250606086015161198060a084018261ffff169052565b50608086015161ffff811660c08401525060a086015161ffff811660e08401525060c086015167ffffffffffffffff81166101008401525060e086015167ffffffffffffffff811661012084015250846101408301528361016083015282610180830152979650505050505050565b6000806000806000858703610180811215611a0957600080fd5b61010080821215611a1957600080fd5b969896890135975050506101208701359461014088013594506101608801359350915050565b600060208284031215611a5157600080fd5b813580600f0b811461100f57600080fd5b61ffff811681146104c457600080fd5b6000813561037281611a62565b80151581146104c457600080fd5b6000813561037281611a7f565b600081356103728161181b565b8135611ab28161181b565b81546001600160a01b0319166001600160a01b038216178255506020820135611ada8161181b565b6001820180546001600160a01b0319166001600160a01b038316179055506040820135611b068161181b565b6002820180546001600160a01b0319166001600160a01b03831617905550600381016060830135611b3681611a62565b815461ffff191661ffff8216178255506080830135611b5481611a62565b815463ffff00001916601082901b63ffff0000161782555060a0830135611b7a81611a62565b815465ffff000000001916602082901b65ffff00000000161782555060c083013563ffffffff81168114611bad57600080fd5b815469ffffffff000000000000191660309190911b69ffffffff00000000000016178155611c0c611be060e08501611a8d565b8280546aff00000000000000000000191691151560501b6aff0000000000000000000016919091179055565b611c4a611c1c6101008501611a8d565b8280546bff0000000000000000000000191691151560581b6bff000000000000000000000016919091179055565b611c84611c5a6101208501611a9a565b82546bffffffffffffffffffffffff1660609190911b6bffffffffffffffffffffffff1916178255565b505050565b600060808284031215611c9b57600080fd5b6040516080810181811067ffffffffffffffff82111715611ccc57634e487b7160e01b600052604160045260246000fd5b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060808284031215611d0f57600080fd5b61100f8383611c89565b6000813567ffffffffffffffff8116811461037257600080fd5b8135611d3e81611a62565b815461ffff191661ffff8216178255506020820135611d5c81611a62565b815463ffff00001916601082901b63ffff000016178255506040820135611d8281611a62565b815465ffff000000001916602082901b65ffff0000000016178255506060820135611dac81611a62565b815467ffff0000000000008260301b1691508167ffff0000000000001982161783556080840135611ddc81611a62565b69ffff00000000000000008160401b168369ffffffff00000000000019841617178455505050611e3b611e1160a08401611a72565b82546bffff00000000000000000000191660509190911b6bffff0000000000000000000016178255565b611e8f611e4a60c08401611d19565b82547fffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffff1660609190911b73ffffffffffffffff00000000000000000000000016178255565b610384611e9e60e08401611d19565b82547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b7bffffffffffffffff000000000000000000000000000000000000000016178255565b600060208284031215611efd57600080fd5b815161100f8161181b565b634e487b7160e01b600052601160045260246000fd5b600080831283600160ff1b01831281151615611f3c57611f3c611f08565b836001600160ff1b03018313811615611f5757611f57611f08565b50500390565b6000808212826001600160ff1b0303841381151615611f7e57611f7e611f08565b82600160ff1b038412811615611f9657611f96611f08565b50500190565b600082821015611fae57611fae611f08565b500390565b60006001600160ff1b03600084136000841385830485118282161615611fdb57611fdb611f08565b600160ff1b6000871286820588128184161615611ffa57611ffa611f08565b6000871292508782058712848416161561201657612016611f08565b8785058712818416161561202c5761202c611f08565b505050929093029392505050565b6000821982111561204d5761204d611f08565b500190565b600080600060c0848603121561206757600080fd5b835192506020840151915061207f8560408601611c89565b90509250925092565b600081600f0b7fffffffffffffffffffffffffffffffff8000000000000000000000000000000081036120bd576120bd611f08565b60000392915050565b6000600160ff1b82036120db576120db611f08565b5060000390565b600287810b825286900b6020820152600f85900b604082015260c0810161210c6060830186611895565b608082019390935260a00152949350505050565b60006001600160801b0380831681851680830382111561214257612142611f08565b01949350505050565b60006001600160801b038381169083168181101561216b5761216b611f08565b039392505050565b634e487b7160e01b600052601260045260246000fd5b600080600080600080600060e0888a0312156121a457600080fd5b87516121af8161181b565b60208901519097506121c08161184d565b60408901519096506121d181611a62565b60608901519095506121e281611a62565b60808901519094506121f381611a62565b60a089015190935060ff8116811461220a57600080fd5b60c089015190925061221b81611a7f565b809150509295989194975092955056fea26469706673582212209fbaf1d4bb8165fe3e9bacff6804aaa11028b14a87b2edec5361b947a8a94e7364736f6c634300080d0033608060405234801561001057600080fd5b50610b1e806100206000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80637779815c116100cd578063a3c35e2c11610081578063dee4c1a611610066578063dee4c1a614610392578063ea6e4e52146103a3578063fca6fbf2146103eb57600080fd5b8063a3c35e2c14610239578063d74dcaca1461035957600080fd5b806397c71faf116100b257806397c71faf14610333578063a34123a714610346578063a3a1e7e91461030657600080fd5b80637779815c1461030657806386c8e9a71461031d57600080fd5b80632a99a792116101245780635e622abc116101095780635e622abc146102c25780636719578c146102c95780636d87989a146102f457600080fd5b80632a99a792146102395780634c2ebc581461025957600080fd5b806302dc9951146101565780630d8f6f461461017e578063195cd92c1461019f5780631dce5fcf14610217575b600080fd5b6001546101659062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61019161018c36600461071f565b610404565b604051908152602001610175565b6101b26101ad36600461074d565b610419565b6040516101759190600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516001600160a01b0380821660a08501528060c08601511660c0850152505092915050565b61022a6102253660046107ab565b6104c7565b604051610175939291906107fc565b61024c610247366004610840565b6105b3565b6040516101759190610873565b6102c061026736600461089e565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b005b6000610191565b6003546102dc906001600160a01b031681565b6040516001600160a01b039091168152602001610175565b6102c06103023660046108f3565b5050565b701400000000000000000000000000000000610191565b600154610165906301000000900462ffffff1681565b61019161034136600461071f565b610630565b61022a6103543660046107ab565b61063e565b6102c0610367366004610915565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6102c06103a0366004610957565b50565b6102c06103b136600461096f565b600380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600154610165906601000000000000900462ffffff1681565b600061041382610f9f196109a2565b92915050565b61046b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b831515600084130361049d576020810183905261048783610a42565b61049390610fa06109a2565b60408201526104c0565b610fa06104a984610a42565b6104b39190610a5e565b6020820152604081018390525b9392505050565b6000806104f56040518060800160405280600081526020016000815260200160008152602001600081525090565b836fffffffffffffffffffffffffffffffff16600460008282546105199190610a9a565b9091555050600286810b6000908152602082815260408083209389900b8352929052206001015461055d906fffffffffffffffffffffffffffffffff861690610ab2565b600287810b600090815260208281526040808320938a900b8352929052205490935061059c906fffffffffffffffffffffffffffffffff861690610ab2565b91506105a886866105b3565b905093509350939050565b6105de6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b6000610413610fa083610a5e565b60008061066c6040518060800160405280600081526020016000815260200160008152602001600081525090565b836fffffffffffffffffffffffffffffffff16600460008282546106909190610ad1565b9091555050600286810b6000908152602082815260408083209389900b835292905220546106d1906fffffffffffffffffffffffffffffffff861690610ab2565b600287810b600090815260208281526040808320938a900b83529290522060010154909250610713906fffffffffffffffffffffffffffffffff861690610ab2565b92506105a886866105b3565b60006020828403121561073157600080fd5b5035919050565b6001600160a01b03811681146103a057600080fd5b60008060006060848603121561076257600080fd5b8335801515811461077257600080fd5b925060208401359150604084013561078981610738565b809150509250925092565b8035600281900b81146107a657600080fd5b919050565b6000806000606084860312156107c057600080fd5b6107c984610794565b92506107d760208501610794565b915060408401356fffffffffffffffffffffffffffffffff8116811461078957600080fd5b8381526020810183905260c081016108386040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806040838503121561085357600080fd5b61085c83610794565b915061086a60208401610794565b90509250929050565b8151815260208083015190820152604080830151908201526060808301519082015260808101610413565b60008060008060008060c087890312156108b757600080fd5b6108c087610794565b95506108ce60208801610794565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6000806040838503121561090657600080fd5b50508035926020909101359150565b6000806000806080858703121561092b57600080fd5b61093485610794565b935061094260208601610794565b93969395505050506040820135916060013590565b600060c0828403121561096957600080fd5b50919050565b60006020828403121561098157600080fd5b81356104c081610738565b634e487b7160e01b600052601160045260246000fd5b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000841360008413858304851182821616156109e3576109e361098c565b600160ff1b6000871286820588128184161615610a0257610a0261098c565b60008712925087820587128484161615610a1e57610a1e61098c565b87850587128184161615610a3457610a3461098c565b505050929093029392505050565b6000600160ff1b8203610a5757610a5761098c565b5060000390565b600082610a7b57634e487b7160e01b600052601260045260246000fd5b600160ff1b821460001984141615610a9557610a9561098c565b500590565b60008219821115610aad57610aad61098c565b500190565b6000816000190483118215151615610acc57610acc61098c565b500290565b600082821015610ae357610ae361098c565b50039056fea26469706673582212202e65a65ca0d854001f3612c507b4e82e0a27fffc670f982ee5fd06eb07e9b60b64736f6c634300080d0033';

type LiquidityPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityPositionTest__factory extends ContractFactory {
  constructor(...args: LiquidityPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'LiquidityPositionTest';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidityPositionTest> {
    return super.deploy(overrides || {}) as Promise<LiquidityPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LiquidityPositionTest {
    return super.attach(address) as LiquidityPositionTest;
  }
  connect(signer: Signer): LiquidityPositionTest__factory {
    return super.connect(signer) as LiquidityPositionTest__factory;
  }
  static readonly contractName: 'LiquidityPositionTest';
  public readonly contractName: 'LiquidityPositionTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityPositionTestInterface {
    return new utils.Interface(_abi) as LiquidityPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidityPositionTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LiquidityPositionTest;
  }
}
