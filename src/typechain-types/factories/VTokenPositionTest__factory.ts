/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionTest,
  VTokenPositionTestInterface,
} from '../VTokenPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_netTraderPosition',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_sumAChkpt',
        type: 'int256',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'riskSide',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unrealizedFundingPayment',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905561006c565b610987806106cc83390190565b6106518061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063125071271461005c578063481050a91461007b5780635094b8ea14610090578063ac210cc7146100a6578063f78231b2146100d1575b600080fd5b6100646100e4565b60405160ff90911681526020015b60405180910390f35b61008e61008936600461047d565b61012d565b005b610098610169565b604051908152602001610072565b6002546100b9906001600160a01b031681565b6040516001600160a01b039091168152602001610072565b6100986100df3660046104a9565b6101ab565b600080805260016020526101177fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb496101f5565b6001811115610128576101286104c2565b905090565b6000805460019082908180610141836104ee565b9091555081526020810191909152604001600020938455506001830191909155600290910155565b6002546000808052600160205290610128907fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49906001600160a01b0316610211565b60025460008080526001602052906101ef907fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb499084906001600160a01b031661029f565b92915050565b6000808260000154136102095760016101ef565b600092915050565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610509565b9050600061028d82866002015487600101546102d1565b61029690610522565b95945050505050565b82546000906102b39084600160801b6102f3565b90506102bf8483610211565b6102c9908261053f565b949350505050565b60006102c96102e08486610580565b8390600160801b61032d565b9392505050565b6000610319600085126103065784610312565b610312856000196105bf565b848461038f565b905060008412156102ec576102c981610522565b6000600181808061033e888561043d565b9450925061034c878561043d565b9450915061035a868561043d565b9450905061037161036c84848461038f565b610467565b9450836103845761038185610522565b94505b505050509392505050565b6000808060001985870985870292508281108382030391505080600014156103c957600084116103be57600080fd5b5082900490506102ec565b8084116103d557600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600080600084121561045c5791159161045584610522565b9150610460565b8391505b5092909150565b6000600160ff1b821061047957600080fd5b5090565b60008060006060848603121561049257600080fd5b505081359360208301359350604090920135919050565b6000602082840312156104bb57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610502576105026104d8565b5060010190565b60006020828403121561051b57600080fd5b5051919050565b6000600160ff1b821415610538576105386104d8565b5060000390565b600080821280156001600160ff1b0384900385131615610561576105616104d8565b600160ff1b839003841281161561057a5761057a6104d8565b50500190565b60008083128015600160ff1b85018412161561059e5761059e6104d8565b6001600160ff1b03840183138116156105b9576105b96104d8565b50500390565b60006001600160ff1b03818413828413808216868404861116156105e5576105e56104d8565b600160ff1b6000871282811687830589121615610604576106046104d8565b60008712925087820587128484161615610620576106206104d8565b87850587128184161615610636576106366104d8565b50505092909302939250505056fea164736f6c634300080c000a608060405234801561001057600080fd5b50610967806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806386c8e9a7116100ad578063bb152c5311610071578063bb152c5314610292578063d74dcaca146102ba578063d9fe08d4146102f3578063ea6e4e5214610304578063fca6fbf21461033457600080fd5b806386c8e9a71461025657806397c71faf1461026c578063a34123a71461027f578063a3a1e7e91461024c578063a3c35e2c1461019157600080fd5b806333f90963116100f457806333f90963146101b15780634c2ebc58146101b35780635e622abc1461021a5780636719578c146102215780637779815c1461024c57600080fd5b806302dc9951146101265780630d8f6f461461014e5780631dce5fcf1461016f5780632a99a79214610191575b600080fd5b6001546101359062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61016161015c3660046105cf565b61034d565b604051908152602001610145565b61018261017d3660046105ff565b610362565b60405161014593929190610652565b6101a461019f366004610696565b610433565b60405161014591906106c9565b005b6101b16101c13660046106f4565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610161565b600354610234906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b600560821b610161565b600154610135906301000000900462ffffff1681565b61016161027a3660046105cf565b6104b0565b61018261028d3660046105ff565b6104be565b6102a56102a036600461075e565b610584565b60408051928352602083019190915201610145565b6101b16102c836600461079a565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101b16103013660046107dc565b50565b6101b16103123660046107f4565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154610135906601000000000000900462ffffff1681565b600061035c82610f9f1961082e565b92915050565b6000806103906040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546103ab91906108b3565b9091555050600286810b6000908152602082815260408083209389900b835292905220600101546103e6906001600160801b038616906108cb565b600287810b600090815260208281526040808320938a900b8352929052205490935061041c906001600160801b038616906108cb565b91506104288686610433565b905093509350939050565b61045e6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061035c610fa0836108ea565b6000806104ec6040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546105079190610926565b9091555050600286810b6000908152602082815260408083209389900b8352929052205461053f906001600160801b038616906108cb565b600287810b600090815260208281526040808320938a900b83529290522060010154909250610578906001600160801b038616906108cb565b92506104288686610433565b60008082156105ad57610fa06105998661093d565b6105a391906108ea565b91508490506105c7565b6105b68561093d565b91506105c485610fa061082e565b90505b935093915050565b6000602082840312156105e157600080fd5b5035919050565b8035600281900b81146105fa57600080fd5b919050565b60008060006060848603121561061457600080fd5b61061d846105e8565b925061062b602085016105e8565b915060408401356001600160801b038116811461064757600080fd5b809150509250925092565b8381526020810183905260c0810161068e6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080604083850312156106a957600080fd5b6106b2836105e8565b91506106c0602084016105e8565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161035c565b60008060008060008060c0878903121561070d57600080fd5b610716876105e8565b9550610724602088016105e8565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6001600160a01b038116811461030157600080fd5b60008060006060848603121561077357600080fd5b83359250602084013561078581610749565b91506040840135801515811461064757600080fd5b600080600080608085870312156107b057600080fd5b6107b9856105e8565b93506107c7602086016105e8565b93969395505050506040820135916060013590565b600060e082840312156107ee57600080fd5b50919050565b60006020828403121561080657600080fd5b813561081181610749565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b038184138284138082168684048611161561085457610854610818565b600160ff1b600087128281168783058912161561087357610873610818565b6000871292508782058712848416161561088f5761088f610818565b878505871281841616156108a5576108a5610818565b505050929093029392505050565b600082198211156108c6576108c6610818565b500190565b60008160001904831182151516156108e5576108e5610818565b500290565b60008261090757634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561092157610921610818565b500590565b60008282101561093857610938610818565b500390565b6000600160ff1b82141561095357610953610818565b506000039056fea164736f6c634300080c000a';

type VTokenPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionTest__factory extends ContractFactory {
  constructor(...args: VTokenPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionTest> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VTokenPositionTest {
    return super.attach(address) as VTokenPositionTest;
  }
  connect(signer: Signer): VTokenPositionTest__factory {
    return super.connect(signer) as VTokenPositionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionTestInterface {
    return new utils.Interface(_abi) as VTokenPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionTest {
    return new Contract(address, _abi, signerOrProvider) as VTokenPositionTest;
  }
}
