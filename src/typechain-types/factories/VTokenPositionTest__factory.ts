/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  VTokenPositionTest,
  VTokenPositionTestInterface,
} from '../VTokenPositionTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: '_balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_netTraderPosition',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_sumAChkpt',
        type: 'int256',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    name: 'marketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'value',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'riskSide',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unrealizedFundingPayment',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '';

type VTokenPositionTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VTokenPositionTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VTokenPositionTest__factory extends ContractFactory {
  constructor(...args: VTokenPositionTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VTokenPositionTest> {
    return super.deploy(overrides || {}) as Promise<VTokenPositionTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VTokenPositionTest {
    return super.attach(address) as VTokenPositionTest;
  }
  connect(signer: Signer): VTokenPositionTest__factory {
    return super.connect(signer) as VTokenPositionTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VTokenPositionTestInterface {
    return new utils.Interface(_abi) as VTokenPositionTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VTokenPositionTest {
    return new Contract(address, _abi, signerOrProvider) as VTokenPositionTest;
  }
}
