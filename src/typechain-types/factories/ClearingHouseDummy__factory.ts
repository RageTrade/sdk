/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ClearingHouseDummy,
  ClearingHouseDummyInterface,
} from '../ClearingHouseDummy';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IClearingHouse.MulticallOperationType',
        name: 'multicallOperationType',
        type: 'uint8',
      },
    ],
    name: 'InvalidMulticallOperationType',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    name: 'KeeperFeeNotPositive',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'cTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedCToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'NewCollateralSupported',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'NewVTokenSupported',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        indexed: false,
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'settings',
        type: 'tuple',
      },
    ],
    name: 'RageTradePoolSettingsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_defaultCollateralToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_defaultCollateralTokenOracle',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'cTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'cTokenId',
        type: 'uint32',
      },
    ],
    name: 'cTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
        ],
        internalType: 'struct CTokenLib.CToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'createAccountAndAddMargin',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountNetProfit',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountNetProfit',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'cTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'enum IClearingHouse.MulticallOperationType',
            name: 'operationType',
            type: 'uint8',
          },
          {
            internalType: 'bytes',
            name: 'data',
            type: 'bytes',
          },
        ],
        internalType: 'struct IClearingHouse.MulticallOperation[]',
        name: 'operations',
        type: 'tuple[]',
      },
    ],
    name: 'multicallWithSingleMarginCheck',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'newMethodAdded',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'cTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
    ],
    name: 'updateProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'supported',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCrossMargined',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b61595a806200019a6000396000f3fe6080604052600436106102885760003560e01c80637cc2f4f51161015a578063d257be2b116100c1578063e3d41c181161007a578063e3d41c1814610a63578063e450f6f414610a83578063e67ed1df14610aa3578063ee6cd5ee14610ac3578063fcd0a50614610ae3578063fe6f083a14610b0357600080fd5b8063d257be2b14610998578063d38bfff4146109b8578063dac42a96146109d8578063dbc0c085146109f8578063dbd035ff14610a16578063e1f1671314610a4357600080fd5b806394c8c71d1161011357806394c8c71d1461086c5780639cd1be581461088c5780639dca362f146108ac578063a4063dbc146108c1578063ac9650d814610965578063b79023031461097857600080fd5b80637cc2f4f5146107005780637f64d6631461072057806384088b65146107405780638ce25a9314610782578063912575841461079857806393420cf4146107b857600080fd5b80633fc42d80116101fe5780635aa6e675116101b75780635aa6e6751461061f5780635c318ad9146106435780635c975abb1461066357806364f368011461067d57806369c716681461069d57806373cceb9d146106bd57600080fd5b80633fc42d801461050657806340c4f69b1461055657806342be9fca1461058357806343233d2e146105a357806353440597146105df578063569634d3146105ff57600080fd5b8063241c486a11610250578063241c486a1461035c5780632afaea371461044c57806332a72d981461046c57806336fadead146104a157806339359029146104c15780633d56a35e146104e157600080fd5b8063127fec131461028d57806316c38b3c146102ca5780631b38ab04146102ec5780631e2eaeaf1461030d57806321df4c0e1461032c575b600080fd5b34801561029957600080fd5b5060d5546102ad906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102d657600080fd5b506102ea6102e5366004613e71565b610b23565b005b3480156102f857600080fd5b5063499602d25b6040519081526020016102c1565b34801561031957600080fd5b506102ff610328366004613e8e565b5490565b34801561033857600080fd5b5061034c610347366004613e8e565b610b81565b6040516102c19493929190613ed1565b34801561036857600080fd5b50610403610377366004614070565b6040805160808101825260008082526020820181905291810182905260608101919091525063ffffffff908116600090815260656020908152604091829020825160808101845281546001600160a01b03908116825260019092015491821692810192909252600160a01b810490931691810191909152600160c01b90910460ff161515606082015290565b6040516102c1919081516001600160a01b0390811682526020808401519091169082015260408083015163ffffffff169082015260609182015115159181019190915260800190565b34801561045857600080fd5b506102ea61046736600461408d565b610c25565b34801561047857600080fd5b5061048c610487366004614239565b610c68565b604080519283526020830191909152016102c1565b3480156104ad57600080fd5b506102ea6104bc366004614278565b610cb8565b3480156104cd57600080fd5b506102ea6104dc36600461408d565b610dd8565b3480156104ed57600080fd5b5060d3546102ad9061010090046001600160a01b031681565b34801561051257600080fd5b506105466105213660046142b1565b63ffffffff16600090815260656020526040902060010154600160c01b900460ff1690565b60405190151581526020016102c1565b34801561056257600080fd5b50610576610571366004614319565b610e17565b6040516102c191906143bc565b34801561058f57600080fd5b506102ff61059e36600461441e565b611546565b3480156105af57600080fd5b506102ad6105be366004614070565b63ffffffff166000908152606660205260409020546001600160a01b031690565b3480156105eb57600080fd5b506102ea6105fa366004614440565b6115ca565b34801561060b57600080fd5b506102ea61061a366004613e8e565b61167c565b34801561062b57600080fd5b506000546201000090046001600160a01b03166102ad565b34801561064f57600080fd5b506102ea61065e366004614481565b61168b565b34801561066f57600080fd5b5060d3546105469060ff1681565b34801561068957600080fd5b506102ea610698366004614278565b6116f4565b3480156106a957600080fd5b506102ea6106b83660046144c3565b611814565b3480156106c957600080fd5b506105466106d83660046142b1565b6001600160a01b0316600090815260646020526040902060020154600160401b900460ff1690565b34801561070c57600080fd5b506102ea61071b366004614554565b611901565b34801561072c57600080fd5b506102ea61073b3660046142b1565b611916565b34801561074c57600080fd5b5061076061075b3660046145c2565b6119e4565b60408051825181526020808401519082015291810151908201526060016102c1565b34801561078e57600080fd5b506102ff60d15481565b3480156107a457600080fd5b506102ea6107b3366004614601565b611a1f565b3480156107c457600080fd5b50604080516060808201835260008083526020808401829052928401526067548351808301855260695461ffff808216835262010000820481168387019081526401000000009092048116838801908152606a54606b54606c548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102c1565b34801561087857600080fd5b50610760610887366004614636565b611ae7565b34801561089857600080fd5b506102ea6108a736600461441e565b611b96565b3480156108b857600080fd5b506102ff611bd9565b3480156108cd57600080fd5b506108e16108dc3660046142b1565b611c7b565b6040516102c1919060006101008201905060018060a01b03808451168352806020850151166020840152604084015161ffff8082511660408601528060208301511660608601525063ffffffff60408201511660808501526060810151151560a08501526080810151151560c08501528160a08201511660e0850152505092915050565b610576610973366004614688565b611d78565b34801561098457600080fd5b5060d4546102ad906001600160a01b031681565b3480156109a457600080fd5b5061048c6109b33660046142b1565b611ec8565b3480156109c457600080fd5b506102ea6109d33660046142b1565b611efc565b3480156109e457600080fd5b506105466109f3366004614070565b611fbe565b348015610a0457600080fd5b506001546001600160a01b03166102ad565b348015610a2257600080fd5b50610a36610a313660046146ec565b611ff3565b6040516102c19190614776565b348015610a4f57600080fd5b506102ea610a5e366004614688565b612021565b348015610a6f57600080fd5b506102ff610a7e366004613e8e565b61216d565b348015610a8f57600080fd5b506102ff610a9e3660046147ba565b6121f7565b348015610aaf57600080fd5b5061048c610abe3660046147e6565b61220e565b348015610acf57600080fd5b5061048c610ade36600461480b565b6122ac565b348015610aef57600080fd5b506102ea610afe366004614856565b6122fd565b348015610b0f57600080fd5b506102ff610b1e3660046148a1565b612353565b6001546001600160a01b03163314801590610b5057506000546001600160a01b0362010000909104163314155b15610b6e57604051636bd1573560e11b815260040160405180910390fd5b60d3805460ff1916911515919091179055565b600081815260d2602052604080822090516330977c6d60e21b81526004810191909152606460248201528190606090819073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063c25df1b490604401600060405180830381865af4158015610bee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c169190810190614afa565b93509350935093509193509193565b60d35460ff1615610c49576040516313d0ff5960e31b815260040160405180910390fd5b6000610c548461238f565b9050610c62848285856123ce565b50505050565b60d354600090819060ff1615610c91576040516313d0ff5960e31b815260040160405180910390fd5b6000610c9c8661238f565b9050610cab81868660016124ef565b9250925050935093915050565b6001546001600160a01b03163314801590610ce557506000546001600160a01b0362010000909104163314155b15610d0357604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216610d1957610d19614c00565b6001600160a01b0382166000908152606460205260409020600201805461ffff16610d7d5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b60448201526064015b60405180910390fd5b805468ff00000000000000001916600160401b831515021781556040516001600160a01b03841681527f7e69aaf85f04d7a874f7bf8768cd38b8fcf65e261176bdcb61c9d542b26c9c9c9060200160405180910390a1505050565b60d35460ff1615610dfc576040516313d0ff5960e31b815260040160405180910390fd5b6000610e078461238f565b9050610c628482858560016126c8565b6060816001600160401b03811115610e3157610e316140c5565b604051908082528060200260200182016040528015610e6457816020015b6060815260200190600190039081610e4f5790505b5090506000610e728561238f565b90506000805b84811015611459576000868683818110610e9457610e94614c16565b9050602002810190610ea69190614c2c565b610eb4906020810190614c4c565b6007811115610ec557610ec5613ea7565b1415610f2457600080878784818110610ee057610ee0614c16565b9050602002810190610ef29190614c2c565b610f00906020810190614c6d565b810190610f0d91906147ba565b91509150610f1d898684846123ce565b5050611447565b6001868683818110610f3857610f38614c16565b9050602002810190610f4a9190614c2c565b610f58906020810190614c4c565b6007811115610f6957610f69613ea7565b1415610fc357600080878784818110610f8457610f84614c16565b9050602002810190610f969190614c2c565b610fa4906020810190614c6d565b810190610fb191906147ba565b91509150610f1d8986848460006126c8565b6002868683818110610fd757610fd7614c16565b9050602002810190610fe99190614c2c565b610ff7906020810190614c4c565b600781111561100857611008613ea7565b141561106857600086868381811061102257611022614c16565b90506020028101906110349190614c2c565b611042906020810190614c6d565b81019061104f9190613e8e565b905061105e88858360006127f7565b6001925050611447565b600386868381811061107c5761107c614c16565b905060200281019061108e9190614c2c565b61109c906020810190614c4c565b60078111156110ad576110ad613ea7565b1415611157576000808787848181106110c8576110c8614c16565b90506020028101906110da9190614c2c565b6110e8906020810190614c6d565b8101906110f59190614cb3565b9150915060008061110987858560006124ef565b6040805160208101849052908101829052919350915060600160405160208183030381529060405288868151811061114357611143614c16565b602002602001018190525050505050611447565b600486868381811061116b5761116b614c16565b905060200281019061117d9190614c2c565b61118b906020810190614c4c565b600781111561119c5761119c613ea7565b14156111f8576000808787848181106111b7576111b7614c16565b90506020028101906111c99190614c2c565b6111d7906020810190614c6d565b8101906111e49190614d94565b915091506000806111098785856000612952565b600586868381811061120c5761120c614c16565b905060200281019061121e9190614c2c565b61122c906020810190614c4c565b600781111561123d5761123d613ea7565b14156112a75760008060008089898681811061125b5761125b614c16565b905060200281019061126d9190614c2c565b61127b906020810190614c6d565b8101906112889190614dc2565b935093509350935061129d8b85858585612a6d565b5050505050611447565b60068686838181106112bb576112bb614c16565b90506020028101906112cd9190614c2c565b6112db906020810190614c4c565b60078111156112ec576112ec613ea7565b1415611303576112fd876000612b77565b50611447565b600786868381811061131757611317614c16565b90506020028101906113299190614c2c565b611337906020810190614c4c565b600781111561134857611348613ea7565b14156113fb57600080600088888581811061136557611365614c16565b90506020028101906113779190614c2c565b611385906020810190614c6d565b8101906113929190614e13565b9250925092506113a68a8484846000612cd9565b6040805182516020808301919091528301518183015291015160608201526080016040516020818303038152906040528785815181106113e8576113e8614c16565b6020026020010181905250505050611447565b85858281811061140d5761140d614c16565b905060200281019061141f9190614c2c565b61142d906020810190614c4c565b604051633164e52160e11b8152600401610d749190614e4a565b8061145181614e7a565b915050610e78565b5080156114cb57604051638c9f0c8960e01b8152600481018390526064602482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90638c9f0c899060440160006040518083038186803b1580156114b257600080fd5b505af41580156114c6573d6000803e3d6000fd5b505050505b60405163954eea2160e01b8152600481018390526001602482015260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163954eea21910160006040518083038186803b15801561152457600080fd5b505af4158015611538573d6000803e3d6000fd5b5050505050505b9392505050565b60008180156115ac5760005a905061155e6044612e41565b6115688585612b77565b92506000815a6115789190614e95565b9050808311156115a557604051634010928f60e01b81526004810184905260248101829052604401610d74565b50506115c3565b6115b66044612e41565b6115c08484612b77565b91505b5092915050565b6001546001600160a01b031633148015906115f757506000546001600160a01b0362010000909104163314155b1561161557604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0382166000908152606460205260409020819060020161163c8282614f04565b9050507ff495762bbd6f871d11992fa00aba5fde436c630137b4c977b97ff7ad289ed2fb8282604051611670929190614fe3565b60405180910390a15050565b611687816000612b77565b5050565b6001546001600160a01b031633148015906116b857506000546001600160a01b0362010000909104163314155b156116d657604051636bd1573560e11b815260040160405180910390fd5b8360696116e3828261508d565b5050606b92909255606c55606a5550565b6001546001600160a01b0316331480159061172157506000546001600160a01b0362010000909104163314155b1561173f57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03821661175557611755614c00565b63ffffffff8083166000908152606560205260409020839161177b9082908490612e6e16565b6117b95760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964204164647265737360881b6044820152606401610d74565b60018101805460ff60c01b1916600160c01b851515021790556040516001600160a01b03851681527f608ea0cd92f466c2b2ed8d950ef3b2e94ef37fb25ff849b89bb004c6e78c69a99060200160405180910390a150505050565b600054610100900460ff168061182d575060005460ff16155b6118495760405162461bcd60e51b8152600401610d74906150fb565b600054610100900460ff1615801561186b576000805461ffff19166101011790555b60d38054610100600160a81b0319166101006001600160a01b038a81169190910291909117909155606880546001600160a01b03199081168984161790915560d48054821687841617905560d580548216858416179055606780549091169185169190911790556118de8686603c612e81565b6118e6612f1f565b80156118f8576000805461ff00191690555b50505050505050565b61190f848484846000612a6d565b5050505050565b6001546001600160a01b0316331480159061194357506000546001600160a01b0362010000909104163314155b1561196157604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0381166119885760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b611a0860405180606001604052806000815260200160008152602001600081525090565b611a16858585856000612cd9565b95945050505050565b60d35461010090046001600160a01b03163314611a4f576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff808216600090815260666020526040812054929350611a8a926001600160a01b0316916126b716565b611a9657611a96614c00565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390611adf8282615169565b505050505050565b611b0b60405180606001604052806000815260200160008152602001600081525090565b818015611b725760005a9050611b2160a4612e41565b611b2e8888888888612cd9565b92506000815a611b3e9190614e95565b905080831115611b6b57604051634010928f60e01b81526004810184905260248101829052604401610d74565b5050611b8c565b611b7c60a4612e41565b611b898787878787612cd9565b91505b5095945050505050565b60d35460ff1615611bba576040516313d0ff5960e31b815260040160405180910390fd5b6000611bc58361238f565b9050611bd483828460016127f7565b505050565b60d35460009060ff1615611c00576040516313d0ff5960e31b815260040160405180910390fd5b5060d154611c0f816001615284565b60d155600081815260d260205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea390611c6f9085815260200190565b60405180910390a25090565b611cc7604080516060808201835260008083526020808401829052845160c0810186528281529081018290528085018290529182018190526080820181905260a0820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160c08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff6401000000008504168386015260ff600160401b85048116151591840191909152690100000000000000000084041615156080830152600160501b90920490931660a08401529081019190915290565b6060816001600160401b03811115611d9257611d926140c5565b604051908082528060200260200182016040528015611dc557816020015b6060815260200190600190039081611db05790505b50905060005b828110156115c35760008030868685818110611de957611de9614c16565b9050602002810190611dfb9190614c6d565b604051611e0992919061529c565b600060405180830381855af49150503d8060008114611e44576040519150601f19603f3d011682016040523d82523d6000602084013e611e49565b606091505b509150915081611e9557604481511015611e6257600080fd5b60048101905080806020019051810190611e7c91906152ac565b60405162461bcd60e51b8152600401610d74919061533f565b80848481518110611ea857611ea8614c16565b602002602001018190525050508080611ec090614e7a565b915050611dcb565b600080611edf6001600160a01b0384166064612f2a565b9150611ef56001600160a01b0384166064612fbd565b9050915091565b6000546001600160a01b0362010000909104163314611f2e57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038116611f555760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff8082166000908152606660205260408120549091611fed916001600160a01b03169083906126b716565b92915050565b606060208251028201602001602083015b81811015612019578051548152602001612004565b509192915050565b6000805b8281101561214457600084848381811061204157612041614c16565b905060200201602081019061205691906142b1565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015612095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b99190615352565b90508484838181106120cd576120cd614c16565b90506020020160208101906120e291906142b1565b6001600160a01b03167f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c48260405161211c91815260200190565b60405180910390a261212e8184615284565b925050808061213c90614e7a565b915050612025565b50611bd461215a6001546001600160a01b031690565b6068546001600160a01b03169083612fe3565b600081815260d260205260408082209051631d51169760e11b815260048101919091526064602482015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90633aa22d2e90604401602060405180830381865af41580156121d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fed9190615352565b6000612201611bd9565b9050611fed818484610c25565b600082815260d260205260408082209051631361754b60e11b815260048101919091528215156024820152606460448201819052829173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__916326c2ea9691016040805180830381865af415801561227d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122a1919061536b565b909590945092505050565b60d354600090819060ff16156122d5576040516313d0ff5960e31b815260040160405180910390fd5b60006122e08661238f565b9050610cab81866122f63688900388018861538f565b6001612952565b6001546001600160a01b0316331480159061232a57506000546001600160a01b0362010000909104163314155b1561234857604051636bd1573560e11b815260040160405180910390fd5b611bd4838383612e81565b60008180156123785760005a905061236b60a4612e41565b611b2e8888888888612a6d565b61238260a4612e41565b611b898787878787612a6d565b600081815260d26020526040902080546001600160a01b031633146123c957604051630504a20d60e01b8152336004820152602401610d74565b919050565b60d35460ff16156123f2576040516313d0ff5960e31b815260040160405180910390fd5b60006123ff836001613046565b905061242933308461241885546001600160a01b031690565b6001600160a01b03169291906130d4565b8054604051631b2d4e8960e01b8152600481018690526001600160a01b0390911660248201526044810183905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b15801561248d57600080fd5b505af41580156124a1573d6000803e3d6000fd5b505082546040518581526001600160a01b0390911692508791507fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee759060200160405180910390a35050505050565b60d354600090819060ff1615612518576040516313d0ff5960e31b815260040160405180910390fd5b60006125238661310c565b60408051639747e26360e01b8152600481018a90526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915285151560e482015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639747e26390610104016040805180830381865af41580156125c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e8919061536b565b909350915060006125f8836131ad565b606c54909150811015612621576040516312b6b5cd60e11b815260048101829052602401610d74565b60208601516001600160a01b03161580159061263f57508560600151155b156126ac57856040015180156126665750855161265b906131ad565b612664846131ad565b145b8061268f5750856040015115801561268f57508551612684906131ad565b61268d856131ad565b145b6126ac576040516307a1db0760e01b815260040160405180910390fd5b505094509492505050565b6001600160a01b0390811691161490565b60d35460ff16156126ec576040516313d0ff5960e31b815260040160405180910390fd5b60006126f9846000613046565b80546040516341901e3560e11b8152600481018890526001600160a01b03909116602482015260448101859052606480820152831515608482015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906383203c6a9060a40160006040518083038186803b15801561276e57600080fd5b505af4158015612782573d6000803e3d6000fd5b505050506127ac338461279c84546001600160a01b031690565b6001600160a01b03169190612fe3565b80546040518481526001600160a01b039091169087907fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c9220018309469060200160405180910390a3505050505050565b60d35460ff161561281b576040516313d0ff5960e31b815260040160405180910390fd5b816128525760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b6044820152606401610d74565b604051632f342a3560e11b815260048101849052602481018390526064604482018190528215159082015273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90635e68546a9060840160006040518083038186803b1580156128b457600080fd5b505af41580156128c8573d6000803e3d6000fd5b5050505060008213156128f2576068546128ed906001600160a01b03163330856130d4565b612912565b612912336128ff846153ab565b6068546001600160a01b03169190612fe3565b837fb4604a31ce2914796ae6383c67cee47a3cb969b59a7dba0d06edcab53ff96a848360405161294491815260200190565b60405180910390a250505050565b60d354600090819060ff161561297b576040516313d0ff5960e31b815260040160405180910390fd5b60006129868661310c565b905084606001516001600160a01b03166000146129b0576129b081866060015187608001516131c8565b60405163086d871160e11b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906310db0e22906129f0908a9085908a906064908b906004016153c8565b6040805180830381865af4158015612a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a30919061536b565b90935091506000612a448285856064613263565b606c549091508110156126ac576040516312b6b5cd60e11b815260048101829052602401610d74565b60d35460009060ff1615612a94576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d26020526040812090612aac8761310c565b90506000606b54612abd9190615284565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b158015612b3c57600080fd5b505af4158015612b50573d6000803e3d6000fd5b5050606854612b6c92506001600160a01b031690503385612fe3565b505095945050505050565b60d35460009060ff1615612b9e576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d2602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383836040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c34919061536b565b90935090506000612c45828561546a565b905060008413612c6b5760405163ef37dcc760e01b815260048101859052602401610d74565b606854612c82906001600160a01b03163386612fe3565b612c8b826132a3565b6040805182815260208101869052908101839052339087907f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060600160405180910390a350505092915050565b612cfd60405180606001604052806000815260200160008152602001600081525090565b60d35460ff1615612d21576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff161115612d48576040516348d69f3560e01b815260040160405180910390fd5b600085815260d26020526040812090612d608661310c565b600089815260d26020526040808220815160016276815760e11b0319815260048101879052602481019190915261ffff891660448201526001600160a01b0384166064808301919091526084820184905260a4820152600160c48201529051929350909173__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9163ff12fd529160e48083019260809291908290030181865af4158015612e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e2891906154ab565b94509050612e35816132a3565b50505095945050505050565b36811015612e6b57604051634219202560e01b815236600482015260248101829052604401610d74565b50565b90546001600160a01b0391821691161490565b604080516080810182526001600160a01b038581168252938416602080830191825263ffffffff94851683850190815260006060850181815298871681526065909252939020915182549086166001600160a01b03199091161782555160019091018054925195511515600160c01b0260ff60c01b1996909416600160a01b026001600160c01b031990931691909416171792909216919091179055565b33612e6b818061332f565b6001600160a01b0382811660009081526020839052604080822060020154905163dd86c10160e01b8152640100000000820463ffffffff1660048201529192600160501b909104169063dd86c10190602401602060405180830381865afa158015612f99573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153f9190615352565b600061153f612fd56001600160a01b03851684613437565b6001600160a01b0316613476565b6040516001600160a01b038316602482015260448101829052611bd490849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526134e3565b63ffffffff808316600090815260656020526040812091613069918391612e6e16565b1561308f5760405163b087c8c360e01b815263ffffffff84166004820152602401610d74565b8180156130a857506001810154600160c01b900460ff16155b15611fed57805460405163a006afaf60e01b81526001600160a01b039091166004820152602401610d74565b6040516001600160a01b0380851660248301528316604482015260648101829052610c629085906323b872dd60e01b9060840161300f565b63ffffffff8082166000908152606660205260408120546001600160a01b0316916131399183916126b716565b1561315f5760405163b087c8c360e01b815263ffffffff83166004820152602401610d74565b6001600160a01b038116600090815260646020526040902060020154600160401b900460ff166123c957604051631079472960e21b81526001600160a01b0382166004820152602401610d74565b60008082136131c4576131bf826153ab565b611fed565b5090565b60006131de6001600160a01b03851660646135b5565b90506000836001600160a01b0316826001600160a01b03161161320a576132058285615523565b613214565b6132148483615523565b90506127106132278561ffff861661554b565b6132319190615590565b6001600160a01b0316816001600160a01b0316111561190f576040516307a1db0760e01b815260040160405180910390fd5b600061326e836131ad565b6132996132846001600160a01b03881685612fbd565b600160801b613292886131ad565b91906135db565b611a16919061546a565b60008113156132c95760d454606854612e6b916001600160a01b03918216911683612fe3565b60d4546001600160a01b031663379607f56132e3836153ab565b6040518263ffffffff1660e01b815260040161330191815260200190565b600060405180830381600087803b15801561331b57600080fd5b505af115801561190f573d6000803e3d6000fd5b600054610100900460ff1680613348575060005460ff16155b6133645760405162461bcd60e51b8152600401610d74906150fb565b600054610100900460ff16158015613386576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a38015611bd4576000805461ff0019169055505050565b6001600160a01b03808316600090815260208390526040812060028101549054919261153f92169063ffffffff64010000000090910481169061361d16565b60006401000276a36001600160a01b03831610806134b1575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156134da57604051635d236c4560e01b81526001600160a01b0383166004820152602401610d74565b611fed8261363e565b6000613538826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166136589092919063ffffffff16565b805190915015611bd4578080602001905181019061355691906155b6565b611bd45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d74565b6001600160a01b03808316600090815260208390526040812054909161153f9116613667565b6000613601600085126135ee57846135fa565b6135fa856000196155d3565b84846136fa565b9050600084121561153f57613615816153ab565b949350505050565b6000806136336001600160a01b038516846137a8565b90506115c0816139c4565b6000611fed6001600160a01b03831680600160401b6136fa565b60606136158484600085613cf7565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156136a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136cc9190615658565b509496509294505050506001600160a01b038316151590506136f4576136f1816139c4565b91505b50919050565b600080806000198587098587029250828110838203039150508060001415613734576000841161372957600080fd5b50829004905061153f565b80841161374057600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600063ffffffff82166137d1576040516351a4d88160e01b815260006004820152602401610d74565b604080516002808252606082018352600092602083019080368337019050509050828160008151811061380657613806614c16565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061383557613835614c16565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd906138769084906004016156fa565b600060405180830381865afa9250505080156138b457506040513d6000823e601f3d908101601f191682016040526138b1919081019061579c565b60015b61392957836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156138f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061391a9190615658565b509396506115c3945050505050565b60008260008151811061393e5761393e614c16565b60200260200101518360018151811061395957613959614c16565b602002602001015161396b9190615867565b9050600061397f63ffffffff8816836158b7565b905060008260060b1280156139a5575061399f63ffffffff8816836158f5565b60060b15155b156139b857806139b481615917565b9150505b9450611fed9350505050565b60008060008360020b126139db578260020b6139e3565b8260020b6000035b9050620d89e8811115613a1c5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610d74565b600060018216613a3057600160801b613a42565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613a76576ffff97272373d413259a46990580e213a0260801c5b6004821615613a95576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613ab4576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613ad3576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613af2576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613b11576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613b30576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613b50576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613b70576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613b90576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613bb0576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613bd0576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613bf0576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613c10576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613c30576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613c51576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613c71576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613c90576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613cad576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613cce578060001981613cca57613cca61557a565b0490505b640100000000810615613ce2576001613ce5565b60005b60ff16602082901c0192505050919050565b606082471015613d585760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d74565b843b613da65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d74565b600080866001600160a01b03168587604051613dc2919061593b565b60006040518083038185875af1925050503d8060008114613dff576040519150601f19603f3d011682016040523d82523d6000602084013e613e04565b606091505b5091509150613e14828286613e1f565b979650505050505050565b60608315613e2e57508161153f565b825115613e3e5782518084602001fd5b8160405162461bcd60e51b8152600401610d74919061533f565b8015158114612e6b57600080fd5b80356123c981613e58565b600060208284031215613e8357600080fd5b813561153f81613e58565b600060208284031215613ea057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110613ecd57613ecd613ea7565b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b81811015613f2d578651805187168452850151858401529584019591830191600101613f06565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561404a57848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b80831015614035578351613fb8838251613ebd565b8b8101518060020b8d850152508a81015160020b8b8401526060810151613fea60608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a84019350600183019250613fa3565b509a89019a9450505090860190600101613f50565b50909e9d5050505050505050505050505050565b63ffffffff81168114612e6b57600080fd5b60006020828403121561408257600080fd5b813561153f8161405e565b6000806000606084860312156140a257600080fd5b8335925060208401356140b48161405e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156140fd576140fd6140c5565b60405290565b60405161012081016001600160401b03811182821017156140fd576140fd6140c5565b604080519081016001600160401b03811182821017156140fd576140fd6140c5565b60405160e081016001600160401b03811182821017156140fd576140fd6140c5565b604051601f8201601f191681016001600160401b0381118282101715614192576141926140c5565b604052919050565b6001600160a01b0381168114612e6b57600080fd5b80356123c98161419a565b6000608082840312156141cc57600080fd5b604051608081018181106001600160401b03821117156141ee576141ee6140c5565b6040528235815290508060208301356142068161419a565b6020820152604083013561421981613e58565b6040820152606083013561422c81613e58565b6060919091015292915050565b600080600060c0848603121561424e57600080fd5b8335925060208401356142608161405e565b915061426f85604086016141ba565b90509250925092565b6000806040838503121561428b57600080fd5b82356142968161419a565b915060208301356142a681613e58565b809150509250929050565b6000602082840312156142c357600080fd5b813561153f8161419a565b60008083601f8401126142e057600080fd5b5081356001600160401b038111156142f757600080fd5b6020830191508360208260051b850101111561431257600080fd5b9250929050565b60008060006040848603121561432e57600080fd5b8335925060208401356001600160401b0381111561434b57600080fd5b614357868287016142ce565b9497909650939450505050565b60005b8381101561437f578181015183820152602001614367565b83811115610c625750506000910152565b600081518084526143a8816020860160208601614364565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561441157603f198886030184526143ff858351614390565b945092850192908501906001016143e3565b5092979650505050505050565b6000806040838503121561443157600080fd5b50508035926020909101359150565b60008082840360e081121561445457600080fd5b833561445f8161419a565b925060c0601f198201121561447357600080fd5b506020830190509250929050565b60008060008084860360c081121561449857600080fd5b60608112156144a657600080fd5b509395606087013595506080870135945060a08701359350915050565b60008060008060008060c087890312156144dc57600080fd5b86356144e78161419a565b955060208701356144f78161419a565b945060408701356145078161419a565b935060608701356145178161419a565b925060808701356145278161419a565b915060a08701356145378161419a565b809150509295509295509295565b8060020b8114612e6b57600080fd5b6000806000806080858703121561456a57600080fd5b84359350602085013561457c8161405e565b9250604085013561458c81614545565b9150606085013561459c81614545565b939692955090935050565b61ffff81168114612e6b57600080fd5b80356123c9816145a7565b600080600080608085870312156145d857600080fd5b843593506020850135925060408501356145f18161405e565b9150606085013561459c816145a7565b60008082840361012081121561461657600080fd5b83356146218161419a565b9250610100601f198201121561447357600080fd5b600080600080600060a0868803121561464e57600080fd5b853594506020860135935060408601356146678161405e565b92506060860135614677816145a7565b949793965091946080013592915050565b6000806020838503121561469b57600080fd5b82356001600160401b038111156146b157600080fd5b6146bd858286016142ce565b90969095509350505050565b60006001600160401b038211156146e2576146e26140c5565b5060051b60200190565b600060208083850312156146ff57600080fd5b82356001600160401b0381111561471557600080fd5b8301601f8101851361472657600080fd5b8035614739614734826146c9565b61416a565b81815260059190911b8201830190838101908783111561475857600080fd5b928401925b82841015613e145783358252928401929084019061475d565b6020808252825182820181905260009190848201906040850190845b818110156147ae57835183529284019291840191600101614792565b50909695505050505050565b600080604083850312156147cd57600080fd5b82356147d88161405e565b946020939093013593505050565b600080604083850312156147f957600080fd5b8235915060208301356142a681613e58565b600080600083850361012081121561482257600080fd5b8435935060208501356148348161405e565b925060e0603f198201121561484857600080fd5b506040840190509250925092565b60008060006060848603121561486b57600080fd5b83356148768161419a565b925060208401356148868161419a565b915060408401356148968161405e565b809150509250925092565b600080600080600060a086880312156148b957600080fd5b8535945060208601356148cb8161405e565b935060408601356148db81614545565b9250606086013561467781614545565b60038110612e6b57600080fd5b80516123c9816148eb565b80516123c981614545565b80516001600160801b03811681146123c957600080fd5b600082601f83011261493657600080fd5b81516020614946614734836146c9565b82815260059290921b8401810191818101908684111561496557600080fd5b8286015b84811015614aef5780516001600160401b038082111561498857600080fd5b9088019060a0828b03601f190112156149a057600080fd5b6149a86140db565b868301516149b58161419a565b80825250604083015187820152606083015160408201526080830151606082015260a0830151828111156149e857600080fd5b8084019350508a603f8401126149fd57600080fd5b868301519150614a0f614734836146c9565b82815261012092830284016040019288820191908d851115614a3057600080fd5b6040860195505b84861015614ad95780868f031215614a4e57600080fd5b614a56614103565b614a5f876148f8565b8152614a6c8b8801614903565b8b820152614a7c60408801614903565b6040820152614a8d6060880161490e565b60608201526080870151608082015260a087015160a082015260c087015160c082015260e087015160e08201526101008701516101008201528084525089830192508086019550614a37565b5060808301525085525050918301918301614969565b509695505050505050565b60008060008060808587031215614b1057600080fd5b8451614b1b8161419a565b8094505060208086015193506040808701516001600160401b0380821115614b4257600080fd5b818901915089601f830112614b5657600080fd5b8151614b64614734826146c9565b81815260069190911b8301850190858101908c831115614b8357600080fd5b938601935b82851015614bcc5785858e031215614ba05760008081fd5b614ba8614126565b8551614bb38161419a565b8152858801518882015282529385019390860190614b88565b60608c01519098509550505080841115614be557600080fd5b505050614bf487828801614925565b91505092959194509250565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235603e19833603018112614c4257600080fd5b9190910192915050565b600060208284031215614c5e57600080fd5b81356008811061153f57600080fd5b6000808335601e19843603018112614c8457600080fd5b8301803591506001600160401b03821115614c9e57600080fd5b60200191503681900382131561431257600080fd5b60008060a08385031215614cc657600080fd5b8235614cd18161405e565b9150614ce084602085016141ba565b90509250929050565b80356123c9816148eb565b600060e08284031215614d0657600080fd5b614d0e614148565b90508135614d1b81614545565b81526020820135614d2b81614545565b60208201526040820135600f81900b8114614d4557600080fd5b6040820152614d56606083016141af565b6060820152614d67608083016145b7565b6080820152614d7860a08301613e66565b60a0820152614d8960c08301614ce9565b60c082015292915050565b6000806101008385031215614da857600080fd5b8235614db38161405e565b9150614ce08460208501614cf4565b60008060008060808587031215614dd857600080fd5b8435614de38161405e565b93506020850135614df381614545565b92506040850135614e0381614545565b9396929550929360600135925050565b600080600060608486031215614e2857600080fd5b833592506020840135614e3a8161405e565b91506040840135614896816145a7565b6020810160088310614e5e57614e5e613ea7565b91905290565b634e487b7160e01b600052601160045260246000fd5b6000600019821415614e8e57614e8e614e64565b5060010190565b600082821015614ea757614ea7614e64565b500390565b60008135611fed81613e58565b60008135611fed8161419a565b80547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b8135614f0f816145a7565b815461ffff191661ffff8216178255506020820135614f2d816145a7565b815463ffff00001916601082901b63ffff000016178255506040820135614f538161405e565b815467ffffffff000000008260201b1691508167ffffffff000000001982161783556060840135614f8381613e58565b68ffffffffff00000000199190911690911790151560401b60ff60401b161781556080820135614fb281613e58565b815460ff60481b191681151560481b60ff60481b161782555060a0820135614fd98161419a565b611bd48183614ec6565b6001600160a01b038316815260e081018235614ffe816145a7565b61ffff808216602085015260208501359150615019826145a7565b1660408381019190915283013561502f8161405e565b63ffffffff8116606084015250606083013561504a81613e58565b801515608084015250608083013561506181613e58565b80151560a08401525061507660a084016141af565b6001600160a01b03811660c0840152509392505050565b8135615098816145a7565b815461ffff191661ffff82161782555060208201356150b6816145a7565b815463ffff00001916601082901b63ffff0000161782555060408201356150dc816145a7565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b80546001600160a01b0319166001600160a01b0392909216919091179055565b81356151748161419a565b61517e8183615149565b50602082013561518d8161419a565b61519a8160018401615149565b506002810160408301356151ad816145a7565b815461ffff191661ffff82161782555060608301356151cb816145a7565b815463ffff00001916601082901b63ffff0000161782555060808301356151f18161405e565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a085013561522181613e58565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815561526f61525160c08501614eac565b82805460ff60481b191691151560481b60ff60481b16919091179055565b611bd461527e60e08501614eb9565b82614ec6565b6000821982111561529757615297614e64565b500190565b8183823760009101908152919050565b6000602082840312156152be57600080fd5b81516001600160401b03808211156152d557600080fd5b818401915084601f8301126152e957600080fd5b8151818111156152fb576152fb6140c5565b61530e601f8201601f191660200161416a565b915080825285602082850101111561532557600080fd5b615336816020840160208601614364565b50949350505050565b60208152600061153f6020830184614390565b60006020828403121561536457600080fd5b5051919050565b6000806040838503121561537e57600080fd5b505080516020909101519092909150565b600060e082840312156153a157600080fd5b61153f8383614cf4565b6000600160ff1b8214156153c1576153c1614e64565b5060000390565b60006101608201905086825260018060a01b038087166020840152855160020b6040840152602086015160020b60608401526040860151600f0b60808401528060608701511660a08401525061ffff60808601511660c083015260a085015161543560e084018215159052565b5060c0850151615449610100840182613ebd565b508361012083015261546061014083018415159052565b9695505050505050565b600080821280156001600160ff1b038490038513161561548c5761548c614e64565b600160ff1b83900384128116156154a5576154a5614e64565b50500190565b60008082840360808112156154bf57600080fd5b835192506060601f19820112156154d557600080fd5b50604051606081018181106001600160401b03821117156154f8576154f86140c5565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b038381169083168181101561554357615543614e64565b039392505050565b60006001600160a01b038281168482168115158284048211161561557157615571614e64565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b03838116806155aa576155aa61557a565b92169190910492915050565b6000602082840312156155c857600080fd5b815161153f81613e58565b60006001600160ff1b03818413828413808216868404861116156155f9576155f9614e64565b600160ff1b600087128281168783058912161561561857615618614e64565b6000871292508782058712848416161561563457615634614e64565b8785058712818416161561564a5761564a614e64565b505050929093029392505050565b600080600080600080600060e0888a03121561567357600080fd5b875161567e8161419a565b602089015190975061568f81614545565b60408901519096506156a0816145a7565b60608901519095506156b1816145a7565b60808901519094506156c2816145a7565b60a089015190935060ff811681146156d957600080fd5b60c08901519092506156ea81613e58565b8091505092959891949750929550565b6020808252825182820181905260009190848201906040850190845b818110156147ae57835163ffffffff1683529284019291840191600101615716565b600082601f83011261574957600080fd5b81516020615759614734836146c9565b82815260059290921b8401810191818101908684111561577857600080fd5b8286015b84811015614aef57805161578f8161419a565b835291830191830161577c565b600080604083850312156157af57600080fd5b82516001600160401b03808211156157c657600080fd5b818501915085601f8301126157da57600080fd5b815160206157ea614734836146c9565b82815260059290921b8401810191818101908984111561580957600080fd5b948201945b838610156158375785518060060b81146158285760008081fd5b8252948201949082019061580e565b9188015191965090935050508082111561585057600080fd5b5061585d85828601615738565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561589257615892614e64565b81667fffffffffffff0183138116156158ad576158ad614e64565b5090039392505050565b60008160060b8360060b806158ce576158ce61557a565b667fffffffffffff198214600019821416156158ec576158ec614e64565b90059392505050565b60008260060b806159085761590861557a565b808360060b0791505092915050565b60008160020b627fffff1981141561593157615931614e64565b6000190192915050565b60008251614c4281846020870161436456fea164736f6c634300080a000a';

type ClearingHouseDummyConstructorParams =
  | [linkLibraryAddresses: ClearingHouseDummyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseDummyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouseDummy__factory extends ContractFactory {
  constructor(...args: ClearingHouseDummyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouseDummy__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseDummyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseDummy> {
    return super.deploy(overrides || {}) as Promise<ClearingHouseDummy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouseDummy {
    return super.attach(address) as ClearingHouseDummy;
  }
  connect(signer: Signer): ClearingHouseDummy__factory {
    return super.connect(signer) as ClearingHouseDummy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseDummyInterface {
    return new utils.Interface(_abi) as ClearingHouseDummyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseDummy {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouseDummy;
  }
}

export interface ClearingHouseDummyLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
