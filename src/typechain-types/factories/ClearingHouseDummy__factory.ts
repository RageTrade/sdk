/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ClearingHouseDummy,
  ClearingHouseDummyInterface,
} from '../ClearingHouseDummy';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'initRealToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'isRealTokenAlreadyInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'newMethodAdded',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'realTokenInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b615b1d806200019a6000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c80637938d8a311610167578063b7902303116100ce578063e1f1671311610087578063e1f167131461077c578063e67ed1df1461078f578063eb7c987d146107a2578063ee6cd5ee1461084d578063fcd0a50614610860578063fe6f083a1461087357600080fd5b8063b7902303146106ff578063d257be2b14610712578063d38bfff414610725578063dac42a9614610738578063dbc0c0851461074b578063dbd035ff1461075c57600080fd5b806394c8c71d1161012057806394c8c71d1461062357806398f5c527146106365780639dca362f14610649578063a26f7ca714610651578063a4063dbc14610664578063a5cf7688146106e757600080fd5b80637938d8a3146105065780637cc2f4f5146105195780637f64d6631461052c57806384088b651461053f5780638ce25a931461057457806393420cf41461057d57600080fd5b80633d56a35e1161020b578063569634d3116101c4578063569634d3146104865780635aa6e675146104995780635c318ad9146104b05780635c975abb146104c357806364f36801146104d057806373cceb9d146104e357600080fd5b80633d56a35e146103af5780633fc42d80146103c257806342be9fca146103f557806343233d2e146104085780634e10b6e314610437578063561684761461045a57600080fd5b8063261f80671161025d578063261f8067146103285780632a66e9ca1461033b5780632afaea371461034e57806332a72d981461036157806336fadead14610389578063393590291461039c57600080fd5b8063127fec131461029a57806316c38b3c146102ca5780631b38ab04146102df5780631e2eaeaf146102f357806321df4c0e14610305575b600080fd5b60d8546102ad906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102dd6102d8366004614781565b610886565b005b63499602d25b6040519081526020016102c1565b6102e561030136600461479e565b5490565b61031861031336600461479e565b6108e4565b6040516102c194939291906147ef565b6102dd610336366004614991565b61092f565b6102dd6103493660046149c0565b61097e565b6102dd61035c366004614a09565b610a41565b61037461036f366004614a93565b610ba9565b604080519283526020830191909152016102c1565b6102dd610397366004614b42565b610da2565b6102dd6103aa366004614a09565b610e18565b60d6546102ad906001600160a01b031681565b6103e56103d0366004614991565b60d26020526000908152604090205460ff1681565b60405190151581526020016102c1565b6102e5610403366004614b7b565b610f74565b6102ad610416366004614b9d565b63ffffffff166000908152606660205260409020546001600160a01b031690565b6103e5610445366004614991565b60d06020526000908152604090205460ff1681565b6103e5610468366004614991565b6001600160a01b0316600090815260d0602052604090205460ff1690565b6102e561049436600461479e565b610ff8565b6000546201000090046001600160a01b03166102ad565b6102dd6104be366004614bba565b61100b565b60d5546103e59060ff1681565b6102dd6104de366004614b42565b611074565b6103e56104f1366004614991565b60d16020526000908152604090205460ff1681565b6102dd610514366004614b7b565b6110ea565b6102e5610527366004614c0b565b611214565b6102dd61053a366004614991565b61122d565b61055261054d366004614c79565b6112fb565b60408051825181526020808401519082015291810151908201526060016102c1565b6102e560d35481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff80821683526201000082048116838701908152600160201b9092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102c1565b610552610631366004614cb8565b61132d565b6102dd610644366004614d0a565b6113dc565b6102e56114b7565b6102dd61065f366004614d7b565b611559565b610677610672366004614991565b6115d1565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e0016102c1565b60d5546102ad9061010090046001600160a01b031681565b60d7546102ad906001600160a01b031681565b610374610720366004614991565b6116ad565b6102dd610733366004614991565b6116e1565b6103e5610746366004614b9d565b6117a3565b6001546001600160a01b03166102ad565b61076f61076a366004614de0565b6117d2565b6040516102c19190614e6b565b6102dd61078a366004614eaf565b6117fd565b61037461079d366004614f24565b611953565b6108176107b0366004614b9d565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff16908201526060016102c1565b61037461085b366004614f49565b61197a565b6102dd61086e366004614f89565b611aec565b6102e5610881366004614fd4565b611bbd565b6001546001600160a01b031633148015906108b357506000546001600160a01b0362010000909104163314155b156108d157604051636bd1573560e11b815260040160405180910390fd5b60d5805460ff1916911515919091179055565b600081815260d46020526040812080546001600160a01b031691906060908190610912606882016064611bf9565b9250610922600182016064611d7b565b9597909650929493505050565b60d6546001600160a01b0316331461095a576040516385734f3160e01b815260040160405180910390fd5b6001600160a01b0316600090815260d060205260409020805460ff19166001179055565b60d6546001600160a01b031633146109a9576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff8082166000908152606660205260408120549293506109e4926001600160a01b0316916120bb16565b6109f0576109f061501e565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b0387169081179091558352606490915290208390610a39828261515d565b505050505050565b60d55460ff1615610a65576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610aa457604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610aaf846120cc565b9050610ad9333085610ac885546001600160a01b031690565b6001600160a01b0316929190612162565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610b3d57600080fd5b505af4158015610b51573d6000803e3d6000fd5b50508254604080518981526001600160a01b03909216602083015281018690527fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75925060600190505b60405180910390a15050505050565b60d554600090819060ff1615610bd2576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314610c0c57604051630504a20d60e01b8152336004820152602401610a9b565b6000610c17866121cd565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd3919061524b565b90945092506000610ce384612264565b606b54909150811015610d0c576040516312b6b5cd60e11b815260048101829052602401610a9b565b60208601516001600160a01b031615801590610d2a57508560600151155b15610d975785604001518015610d5157508551610d4690612264565b610d4f85612264565b145b80610d7a57508560400151158015610d7a57508551610d6f90612264565b610d7886612264565b145b610d97576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610dcf57506000546001600160a01b0362010000909104163314155b15610ded57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b60d55460ff1615610e3c576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610e7657604051630504a20d60e01b8152336004820152602401610a9b565b6000610e81846120cc565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610eee57600080fd5b505af4158015610f02573d6000803e3d6000fd5b50505050610f2c3384610f1c84546001600160a01b031690565b6001600160a01b0316919061227f565b8054604080518781526001600160a01b03909216602083015281018490527fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690606001610b9a565b6000818015610fda5760005a9050610f8c60446122af565b610f9685856122db565b92506000815a610fa69190615285565b905080831115610fd357604051634010928f60e01b81526004810184905260248101829052604401610a9b565b5050610ff1565b610fe460446122af565b610fee84846122db565b91505b5092915050565b60006110058260006122db565b92915050565b6001546001600160a01b0316331480159061103857506000546001600160a01b0362010000909104163314155b1561105657604051636bd1573560e11b815260040160405180910390fd5b836068611063828261529c565b5050606a92909255606b5560695550565b6001546001600160a01b031633148015906110a157506000546001600160a01b0362010000909104163314155b156110bf57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d260205260409020805460ff1916911515919091179055565b60d55460ff161561110e576040516313d0ff5960e31b815260040160405180910390fd5b600082815260d46020526040902080546001600160a01b0316331461114857604051630504a20d60e01b8152336004820152602401610a9b565b604051634042e78f60e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91634042e78f910160006040518083038186803b1580156111a157600080fd5b505af41580156111b5573d6000803e3d6000fd5b505060d5546111d6925061010090046001600160a01b03169050338461227f565b60408051848152602081018490527fb8635fe5938466cc626f7c214bf818f090e2b736368828f448cd2b379cf0174e910160405180910390a1505050565b6000611224858585856000612428565b95945050505050565b6001546001600160a01b0316331480159061125a57506000546001600160a01b0362010000909104163314155b1561127857604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661129f5760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b61131f60405180606001604052806000815260200160008152602001600081525090565b611224858585856000612537565b61135160405180606001604052806000815260200160008152602001600081525090565b8180156113b85760005a905061136760a46122af565b6113748888888888612537565b92506000815a6113849190615285565b9050808311156113b157604051634010928f60e01b81526004810184905260248101829052604401610a9b565b50506113d2565b6113c260a46122af565b6113cf8787878787612537565b91505b5095945050505050565b600054610100900460ff16806113f5575060005460ff16155b6114115760405162461bcd60e51b8152600401610a9b9061530a565b600054610100900460ff16158015611433576000805461ffff19166101011790555b60d680546001600160a01b03199081166001600160a01b038981169190911790925560d58054610100600160a81b0319166101008985160217905560d78054821687841617905560d8805482168584161790556067805490911691851691909117905561149e61268e565b8015610a39576000805461ff0019169055505050505050565b60d55460009060ff16156114de576040516313d0ff5960e31b815260040160405180910390fd5b5060d3546114ed816001615358565b60d355600081815260d460205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea39061154d9085815260200190565b60405180910390a25090565b6001546001600160a01b0316331480159061158657506000546001600160a01b0362010000909104163314155b156115a457604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216600090815260646020526040902081906002016115cb82826150a5565b50505050565b611616604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff600160201b8504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b6000806116c46001600160a01b0384166064612699565b91506116da6001600160a01b03841660646126c6565b9050915091565b6000546001600160a01b036201000090910416331461171357604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661173a5760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff8082166000908152606660205260408120549091611005916001600160a01b03169083906120bb16565b606060208251028201602001825b818110156117f55760200180515481526117e0565b509192915050565b6000805b8281101561192057600084848381811061181d5761181d615370565b90506020020160208101906118329190614991565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611871573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118959190615386565b90507f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c48585848181106118ca576118ca615370565b90506020020160208101906118df9190614991565b604080516001600160a01b039092168252602082018490520160405180910390a161190a8184615358565b92505080806119189061539f565b915050611801565b5061194e6119366001546001600160a01b031690565b60d55461010090046001600160a01b0316908361227f565b505050565b600082815260d460205260408120819061196f908460646126de565b909590945092505050565b60d554600090819060ff16156119a3576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b031633146119dd57604051630504a20d60e01b8152336004820152602401610a9b565b60006119e8866121cd565b90506119fa6080860160608701614991565b6001600160a01b031615611a3157611a3181611a1c6080880160608901614991565b611a2c60a0890160808a016153ba565b612734565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611a6f90859085908a906064906004016153e6565b6040805180830381865af4158015611a8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aaf919061524b565b90945092506000611ac382868660646127d6565b606b54909150811015610d97576040516312b6b5cd60e11b815260048101829052602401610a9b565b6001546001600160a01b03163314801590611b1957506000546001600160a01b0362010000909104163314155b15611b3757604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611be25760005a9050611bd560a46122af565b6113748888888888612428565b611bec60a46122af565b6113cf8787878787612428565b60606000611c0684612816565b90508067ffffffffffffffff811115611c2157611c21614a41565b604051908082528060200260200182016040528015611c6657816020015b6040805180820190915260008082526020820152815260200190600190039081611c3f5790505b50915060005b81811015611d7357600184016000868360088110611c8c57611c8c615370565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611cda57611cda615370565b60209081029190910101516001600160a01b039091169052600185016000868360088110611d0a57611d0a615370565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002054838281518110611d5357611d53615370565b602090810291909101810151015280611d6b8161539f565b915050611c6c565b505092915050565b600381015463ffffffff16600090815260028301602052604081205490606090611da760018601612816565b90508067ffffffffffffffff811115611dc257611dc2614a41565b604051908082528060200260200182016040528015611e2e57816020015b611e1b6040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b815260200190600190039081611de05790505b50915060005b818110156120b257846002016000876001018360088110611e5757611e57615370565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b0390911690849083908110611ea557611ea5615370565b60209081029190910101516001600160a01b039091169052600286016000600188018360088110611ed857611ed8615370565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060000154838281518110611f2457611f24615370565b60200260200101516020018181525050856002016000876001018360088110611f4f57611f4f615370565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010154838281518110611f9b57611f9b615370565b60200260200101516040018181525050856002016000876001018360088110611fc657611fc6615370565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000206002015483828151811061201257612012615370565b6020026020010151606001818152505061207e86600201600088600101846008811061204057612040615370565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600301612880565b83828151811061209057612090615370565b60200260200101516080018190525080806120aa9061539f565b915050611e34565b50509250929050565b6001600160a01b0390811691161490565b63ffffffff8082166000908152606560205260408120916120ef918391612e0416565b156121155760405163b087c8c360e01b815263ffffffff83166004820152602401610a9b565b80546001600160a01b0316600090815260d2602052604090205460ff1661215d57805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610a9b565b919050565b6040516001600160a01b03808516602483015283166044820152606481018290526115cb9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612e17565b63ffffffff8082166000908152606660205260408120546001600160a01b0316916121fa9183916120bb16565b156122205760405163b087c8c360e01b815263ffffffff83166004820152602401610a9b565b6001600160a01b038116600090815260d1602052604090205460ff1661215d57604051631079472960e21b81526001600160a01b0382166004820152602401610a9b565b600080821361227b57612276826154b8565b611005565b5090565b6040516001600160a01b03831660248201526044810182905261194e90849063a9059cbb60e01b90606401612196565b3681106122d857604051634219202560e01b815236600482015260248101829052604401610a9b565b50565b60d55460009060ff1615612302576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d4602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383836040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612374573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612398919061524b565b909350905060006123a982856154d5565b60d5549091506123c89061010090046001600160a01b0316338661227f565b6123d182612ee9565b6040805187815233602082015290810182905260608101859052608081018390527f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060a00160405180910390a150505092915050565b60d55460009060ff161561244f576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d46020526040812090612467876121cd565b90506000606a546124789190615358565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b1580156124f757600080fd5b505af415801561250b573d6000803e3d6000fd5b505060d55461252c925061010090046001600160a01b03169050338561227f565b505095945050505050565b61255b60405180606001604052806000815260200160008152602001600081525090565b60d55460ff161561257f576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff1611156125a6576040516348d69f3560e01b815260040160405180910390fd5b600085815260d460205260408120906125be866121cd565b600089815260d46020526040808220905163487e8af160e01b815260048101869052602481019190915261ffff881660448201526001600160a01b0383166064828101919091526084820183905260a48201529192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af19060c401608060405180830381865af4158015612651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126759190615516565b9450905061268281612ee9565b50505095945050505050565b336122d88180612f7a565b60006126bf6126b16001600160a01b03851684613082565b6001600160a01b0316613114565b9392505050565b60006126bf6126b16001600160a01b03851684613190565b6000806126eb85846131ce565b91506126ff600186018560028601866131fa565b600286015490915063ffffffff161561272c57826005015481126127235780612729565b82600501545b90505b935093915050565b600061274a6001600160a01b038516606461334f565b90506000836001600160a01b0316826001600160a01b03161161277657612771828561558f565b612780565b612780848361558f565b90506127106127938561ffff86166155b7565b61279d91906155fc565b6001600160a01b0316816001600160a01b031611156127cf576040516307a1db0760e01b815260040160405180910390fd5b5050505050565b60006127e183612264565b61280c6127f76001600160a01b038816856126c6565b600160801b61280588612264565b9190613375565b61122491906154d5565b6000805b60088160ff16101561287757828160ff166008811061283b5761283b615370565b60088104919091015460079091166004026101000a900463ffffffff166128655760ff1692915050565b8061286f81615622565b91505061281a565b50600892915050565b6060600061288d836133b7565b90508067ffffffffffffffff8111156128a8576128a8614a41565b60405190808252806020026020018201604052801561293857816020015b6129256040805161012081019091528060008152602001600060020b8152602001600060020b815260200160006001600160801b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816128c65790505b50915060005b81811015612dfd5760018401600085836005811061295e5761295e615370565b600580820492909201549190066006026101000a900465ffffffffffff168152602081019190915260400160002054835160ff909116908490839081106129a7576129a7615370565b60200260200101516000019060028111156129c4576129c46147b7565b908160028111156129d7576129d76147b7565b9052506001840160008583600581106129f2576129f2615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160019054906101000a900460020b838281518110612a5157612a51615370565b60209081029190910181015160029290920b910152600184016000858360058110612a7e57612a7e615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160049054906101000a900460020b838281518110612add57612add615370565b602090810291909101015160029190910b604090910152600184016000858360058110612b0c57612b0c615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160079054906101000a90046001600160801b0316838281518110612b7157612b71615370565b60209081029190910101516001600160801b03909116606090910152600184016000858360058110612ba557612ba5615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060010154838281518110612bf757612bf7615370565b602090810291909101015160800152600184016000858360058110612c1e57612c1e615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060020154838281518110612c7057612c70615370565b602090810291909101015160a00152600184016000858360058110612c9757612c97615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060030154838281518110612ce957612ce9615370565b602090810291909101015160c00152600184016000858360058110612d1057612d10615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060040154838281518110612d6257612d62615370565b602090810291909101015160e00152600184016000858360058110612d8957612d89615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060050154838281518110612ddb57612ddb615370565b6020908102919091010151610100015280612df58161539f565b91505061293e565b5050919050565b90546001600160a01b0391821691161490565b6000612e6c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661342e9092919063ffffffff16565b80519091501561194e5780806020019051810190612e8a9190615642565b61194e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a9b565b6000811315612f145760d75460d5546122d8916001600160a01b03610100909204821691168361227f565b60d7546001600160a01b031663379607f5612f2e836154b8565b6040518263ffffffff1660e01b8152600401612f4c91815260200190565b600060405180830381600087803b158015612f6657600080fd5b505af11580156127cf573d6000803e3d6000fd5b600054610100900460ff1680612f93575060005460ff16155b612faf5760405162461bcd60e51b8152600401610a9b9061530a565b600054610100900460ff16158015612fd1576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801561194e576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152600160201b820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa1580156130f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126bf919061565f565b60006401000276a36001600160a01b038316108061314f575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b1561317857604051635d236c4560e01b81526001600160a01b0383166004820152602401610a9b565b6110056001600160a01b03831680600160401b61343d565b6001600160a01b0380831660009081526020839052604081206002810154905491926126bf92169063ffffffff600160201b9091048116906134eb16565b60006131e160018401600284018461350c565b90506131f0606884018361361a565b6126bf90826154d5565b600080808080805b60088160ff16101561332d57896001018160ff166008811061322657613226615370565b60088104919091015460079091166004026101000a900463ffffffff1661324c5761332d565b60008860008c6001018460ff166008811061326957613269615370565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b031691506132b6908c908c9084908c906136e016565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff1615613303576132f084876154d5565b95506132fc83866154d5565b945061331a565b61330d848461379b565b61331790886154d5565b96505b508061332581615622565b915050613202565b50613338848461379b565b61334290866154d5565b9998505050505050505050565b6001600160a01b0380831660009081526020839052604081205490916126bf91166137b2565b600061339b600085126133885784613394565b6133948560001961567c565b848461343d565b905060008412156126bf576133af816154b8565b949350505050565b6000805b60058160ff16101561342557828160ff16600581106133dc576133dc615370565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156134135760ff1692915050565b8061341d81615622565b9150506133bb565b50600592915050565b60606133af848460008561383c565b600080806000198587098587029250828110838203039150508060001415613477576000841161346c57600080fd5b5082900490506126bf565b80841161348357600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806135016001600160a01b03851684613964565b9050610fee81613b80565b6000805b60088160ff1610156135f3576000856001018260ff166008811061353657613536615370565b60088104919091015460079091166004026101000a900463ffffffff1690508061356057506135f3565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b039091169161359e90829084908990613eb216565b6135a890866154d5565b945060006135bf6001600160a01b03841688613190565b90506135d06003830182858a613ed6565b6135da90876154d5565b95505050505080806135eb90615622565b915050613510565b50600382015463ffffffff1660009081526002850160205260409020546133af90826154d5565b60008060005b60088160ff1610156136d85760008560ff83166008811061364357613643615370565b60088104919091015460079091166004026101000a900463ffffffff1690508061366d57506136d8565b63ffffffff8116600090815260018601602052604090206136b761369082613f03565b63ffffffff808516600090815260018b0160205260409020549190600160801b9061337516565b6136c190856154d5565b9350505080806136d090615622565b915050613620565b509392505050565b63ffffffff8083166000908152600286016020526040812090918291908290613716906001600160a01b0388169087906126c616565b9050600061372e6001600160a01b0388168988613f11565b8354909150600061374160038601613f6b565b905061376a61ffff8416620186a061280587600160801b82613763888a6154d5565b600061379b565b965061378b61ffff8416620186a061280587600160801b82613763896154b8565b9550505050505094509492505050565b6000818313156137ac575081611005565b50919050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa1580156137f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138179190615701565b509496509294505050506001600160a01b038316151590506137ac576126bf81613b80565b60608247101561389d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a9b565b843b6138eb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a9b565b600080866001600160a01b0316858760405161390791906157cf565b60006040518083038185875af1925050503d8060008114613944576040519150601f19603f3d011682016040523d82523d6000602084013e613949565b606091505b5091509150613959828286613fe6565b979650505050505050565b600063ffffffff821661398d576040516351a4d88160e01b815260006004820152602401610a9b565b60408051600280825260608201835260009260208301908036833701905050905082816000815181106139c2576139c2615370565b602002602001019063ffffffff16908163ffffffff16815250506000816001815181106139f1576139f1615370565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90613a329084906004016157eb565b600060405180830381865afa925050508015613a7057506040513d6000823e601f3d908101601f19168201604052613a6d9190810190615898565b60015b613ae557836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015613ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ad69190615701565b50939650610ff1945050505050565b600082600081518110613afa57613afa615370565b602002602001015183600181518110613b1557613b15615370565b6020026020010151613b279190615964565b90506000613b3b63ffffffff8816836159b4565b905060008260060b128015613b615750613b5b63ffffffff8816836159f2565b60060b15155b15613b745780613b7081615a14565b9150505b94506110059350505050565b60008060008360020b12613b97578260020b613b9f565b8260020b6000035b9050620d89e8811115613bd85760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610a9b565b600060018216613bec57600160801b613bfe565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615613c32576ffff97272373d413259a46990580e213a0260801c5b6004821615613c51576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615613c70576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615613c8f576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615613cae576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615613ccd576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615613cec576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615613d0c576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615613d2c576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615613d4c576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615613d6c576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615613d8c576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615613dac576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615613dcc576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615613dec576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615613e0d576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615613e2d576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615613e4c576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615613e69576b048a170391f7dc42444e8fa20260801c5b60008460020b1315613e8a578060001981613e8657613e866155e6565b0490505b600160201b810615613e9d576001613ea0565b60005b60ff16602082901c0192505050919050565b600080613ec86001600160a01b038516846126c6565b90506112248585838661401f565b6001600160a01b03828116600090815260208390526040812060010154909161122491879187911661404c565b60006110056126b1836140e8565b60008215613f3f57506001600160a01b03831660009081526020829052604090206002015461ffff166126bf565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff166126bf565b6000805b60058110156137ac576000838260058110613f8c57613f8c615370565b600580820492909201549190066006026101000a900465ffffffffffff1660008181526001860160205260409020909150613fc69061417a565b613fd09084615358565b9250508080613fde9061539f565b915050613f6f565b60608315613ff55750816126bf565b8251156140055782518084602001fd5b8160405162461bcd60e51b8152600401610a9b9190615a38565b6001600160a01b0383811660009081526020839052604081206001015490916112249187918691166141d1565b6000805b60058110156136d857600085826005811061406d5761406d615370565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff16600014156140a457506136d8565b65ffffffffffff8116600090815260018701602052604090206140c89086866141fb565b6140d290846154d5565b92505080806140e09061539f565b915050614050565b60006140fe82600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015614156573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611005919061565f565b8054600090819061419290610100900460020b613b80565b83549091506000906141ad90600160201b900460020b613b80565b84549091506133af9083908390600160381b90046001600160801b03166001614314565b82546000906141e59084600160801b613375565b90506141f184836143c9565b6133af90826154d5565b60008080614209868661444e565b915091506000614221866001600160a01b0316613114565b9050816142338483600160801b613375565b61423d91906154d5565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa1580156142a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142c99190615a6b565b90506142ea6142e582606001518761451890919063ffffffff16565b61454f565b6142f490836154d5565b8151604083015191935061430a91879190614561565b61122490836154d5565b6000836001600160a01b0316856001600160a01b03161115614334579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b03868603811690871661436757600080fd5b8361439d57866001600160a01b031661438a8383896001600160a01b031661343d565b81614397576143976155e6565b04613959565b6139596143b48383896001600160a01b031661459b565b886001600160a01b0316808204910615150190565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561440a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061442e9190615386565b9050600061444582866002015487600101546145db565b611224906154b8565b81546000908190819061446890610100900460020b613b80565b855490915060009061448390600160201b900460020b613b80565b9050846001600160a01b0380841690821610156144a15750816144be565b816001600160a01b0316866001600160a01b031611156144be5750805b86546144e3906142e59083908590600160381b90046001600160801b03166000614314565b945061450c6142e584838a60000160079054906101000a90046001600160801b031660006145f6565b93505050509250929050565b815460058301546000916126bf91600160381b9091046001600160801b031690600160801b906145489086615285565b919061343d565b6000600160ff1b821061227b57600080fd5b60028301546003840154600485015485546000936145929387938793600160381b90046001600160801b0316614666565b6133af906154b8565b60006145a884848461343d565b9050600082806145ba576145ba6155e6565b84860911156126bf5760001981106145d157600080fd5b6001019392505050565b60006133af6145ea8486615ad1565b8390600160801b61468e565b6000836001600160a01b0316856001600160a01b03161115614616579293925b816146435761463e836001600160801b03168686036001600160a01b0316600160601b61343d565b611224565b611224836001600160801b03168686036001600160a01b0316600160601b61459b565b600061395982600160801b61467d8888888d61471f565b614687908a615ad1565b9190614744565b60006001818080808812156146b0579215926146a9886154b8565b92506146b4565b8792505b60008712156146d0579215926146c9876154b8565b91506146d4565b8691505b60008612156146f3579215926146ec8660001961567c565b90506146f6565b50845b61470183838361343d565b94508361471457614711856154b8565b94505b505050509392505050565b600061473a61472e8684615ad1565b8590600160801b61468e565b61122490846154d5565b6000614751848484613375565b905060008112156126bf576133af600019826154d5565b80151581146122d857600080fd5b803561215d81614768565b60006020828403121561479357600080fd5b81356126bf81614768565b6000602082840312156147b057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106147eb57634e487b7160e01b600052602160045260246000fd5b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b8181101561484b578651805187168452850151858401529584019591830191600101614824565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561496857848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b808310156149535783516148d68382516147cd565b8b8101518060020b8d850152508a81015160020b8b840152606081015161490860608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a840193506001830192506148c1565b509a89019a945050509086019060010161486e565b50909e9d5050505050505050505050505050565b6001600160a01b03811681146122d857600080fd5b6000602082840312156149a357600080fd5b81356126bf8161497c565b600060e082840312156137ac57600080fd5b60008061010083850312156149d457600080fd5b82356149df8161497c565b91506149ee84602085016149ae565b90509250929050565b63ffffffff811681146122d857600080fd5b600080600060608486031215614a1e57600080fd5b833592506020840135614a30816149f7565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715614a8057614a80614a41565b604052919050565b803561215d8161497c565b600080600083850360c0811215614aa957600080fd5b843593506020850135614abb816149f7565b92506080603f1982011215614acf57600080fd5b506040516080810181811067ffffffffffffffff82111715614af357614af3614a41565b604090815285013581526060850135614b0b8161497c565b60208201526080850135614b1e81614768565b604082015260a0850135614b3181614768565b606082015292959194509192509050565b60008060408385031215614b5557600080fd5b8235614b608161497c565b91506020830135614b7081614768565b809150509250929050565b60008060408385031215614b8e57600080fd5b50508035926020909101359150565b600060208284031215614baf57600080fd5b81356126bf816149f7565b60008060008084860360c0811215614bd157600080fd5b6060811215614bdf57600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b81146122d857600080fd5b60008060008060808587031215614c2157600080fd5b843593506020850135614c33816149f7565b92506040850135614c4381614bfc565b91506060850135614c5381614bfc565b939692955090935050565b61ffff811681146122d857600080fd5b803561215d81614c5e565b60008060008060808587031215614c8f57600080fd5b84359350602085013592506040850135614ca8816149f7565b91506060850135614c5381614c5e565b600080600080600060a08688031215614cd057600080fd5b85359450602086013593506040860135614ce9816149f7565b92506060860135614cf981614c5e565b949793965091946080013592915050565b600080600080600060a08688031215614d2257600080fd5b8535614d2d8161497c565b94506020860135614d3d8161497c565b93506040860135614d4d8161497c565b92506060860135614d5d8161497c565b91506080860135614d6d8161497c565b809150509295509295909350565b60008082840360c0811215614d8f57600080fd5b8335614d9a8161497c565b925060a0601f1982011215614dae57600080fd5b506020830190509250929050565b600067ffffffffffffffff821115614dd657614dd6614a41565b5060051b60200190565b60006020808385031215614df357600080fd5b823567ffffffffffffffff811115614e0a57600080fd5b8301601f81018513614e1b57600080fd5b8035614e2e614e2982614dbc565b614a57565b81815260059190911b82018301908381019087831115614e4d57600080fd5b928401925b8284101561395957833582529284019290840190614e52565b6020808252825182820181905260009190848201906040850190845b81811015614ea357835183529284019291840191600101614e87565b50909695505050505050565b60008060208385031215614ec257600080fd5b823567ffffffffffffffff80821115614eda57600080fd5b818501915085601f830112614eee57600080fd5b813581811115614efd57600080fd5b8660208260051b8501011115614f1257600080fd5b60209290920196919550909350505050565b60008060408385031215614f3757600080fd5b823591506020830135614b7081614768565b60008060006101208486031215614f5f57600080fd5b833592506020840135614f71816149f7565b9150614f8085604086016149ae565b90509250925092565b600080600060608486031215614f9e57600080fd5b8335614fa98161497c565b92506020840135614fb98161497c565b91506040840135614fc9816149f7565b809150509250925092565b600080600080600060a08688031215614fec57600080fd5b853594506020860135614ffe816149f7565b9350604086013561500e81614bfc565b92506060860135614cf981614bfc565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b600081356110058161497c565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b81356150b081614c5e565b815461ffff191661ffff82161782555060208201356150ce81614c5e565b815463ffff00001916601082901b63ffff0000161782555060408201356150f4816149f7565b815467ffffffff000000008260201b1691508167ffffffff00000000198216178355606084013561512481614768565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815560808201356151538161497c565b61194e8183615061565b81356151688161497c565b6151728183615034565b5060208201356151818161497c565b61518e8160018401615034565b506002810160408301356151a181614c5e565b815461ffff191661ffff82161782555060608301356151bf81614c5e565b815463ffff00001916601082901b63ffff0000161782555060808301356151e5816149f7565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a085013561521581614768565b68ffffffffff00000000199190911690911790151560401b60ff60401b1617815561194e61524560c08501615054565b82615061565b6000806040838503121561525e57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000828210156152975761529761526f565b500390565b81356152a781614c5e565b815461ffff191661ffff82161782555060208201356152c581614c5e565b815463ffff00001916601082901b63ffff0000161782555060408201356152eb81614c5e565b815465ffff00000000191660209190911b65ffff000000001617905550565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000821982111561536b5761536b61526f565b500190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561539857600080fd5b5051919050565b60006000198214156153b3576153b361526f565b5060010190565b6000602082840312156153cc57600080fd5b81356126bf81614c5e565b80356003811061215d57600080fd5b8481526001600160a01b03841660208201526101408101833561540881614bfc565b60020b6040830152602084013561541e81614bfc565b60020b60608301526040840135600f81900b811461543b57600080fd5b61544a6080840182600f0b9052565b5061545760608501614a88565b6001600160a01b031660a083015261547160808501614c6e565b61ffff1660c083015261548660a08501614776565b151560e083015261549960c085016153d7565b6154a76101008401826147cd565b508261012083015295945050505050565b6000600160ff1b8214156154ce576154ce61526f565b5060000390565b600080821280156001600160ff1b03849003851316156154f7576154f761526f565b600160ff1b83900384128116156155105761551061526f565b50500190565b600080828403608081121561552a57600080fd5b835192506060601f198201121561554057600080fd5b506040516060810181811067ffffffffffffffff8211171561556457615564614a41565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b03838116908316818110156155af576155af61526f565b039392505050565b60006001600160a01b03828116848216811515828404821116156155dd576155dd61526f565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b0383811680615616576156166155e6565b92169190910492915050565b600060ff821660ff8114156156395761563961526f565b60010192915050565b60006020828403121561565457600080fd5b81516126bf81614768565b60006020828403121561567157600080fd5b81516126bf8161497c565b60006001600160ff1b03818413828413808216868404861116156156a2576156a261526f565b600160ff1b60008712828116878305891216156156c1576156c161526f565b600087129250878205871284841616156156dd576156dd61526f565b878505871281841616156156f3576156f361526f565b505050929093029392505050565b600080600080600080600060e0888a03121561571c57600080fd5b87516157278161497c565b602089015190975061573881614bfc565b604089015190965061574981614c5e565b606089015190955061575a81614c5e565b608089015190945061576b81614c5e565b60a089015190935060ff8116811461578257600080fd5b60c089015190925061579381614768565b8091505092959891949750929550565b60005b838110156157be5781810151838201526020016157a6565b838111156115cb5750506000910152565b600082516157e18184602087016157a3565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015614ea357835163ffffffff1683529284019291840191600101615807565b600082601f83011261583a57600080fd5b8151602061584a614e2983614dbc565b82815260059290921b8401810191818101908684111561586957600080fd5b8286015b8481101561588d5780516158808161497c565b835291830191830161586d565b509695505050505050565b600080604083850312156158ab57600080fd5b825167ffffffffffffffff808211156158c357600080fd5b818501915085601f8301126158d757600080fd5b815160206158e7614e2983614dbc565b82815260059290921b8401810191818101908984111561590657600080fd5b948201945b838610156159345785518060060b81146159255760008081fd5b8252948201949082019061590b565b9188015191965090935050508082111561594d57600080fd5b5061595a85828601615829565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff190183128115161561598f5761598f61526f565b81667fffffffffffff0183138116156159aa576159aa61526f565b5090039392505050565b60008160060b8360060b806159cb576159cb6155e6565b667fffffffffffff198214600019821416156159e9576159e961526f565b90059392505050565b60008260060b80615a0557615a056155e6565b808360060b0791505092915050565b60008160020b627fffff19811415615a2e57615a2e61526f565b6000190192915050565b6020815260008251806020840152615a578160408501602087016157a3565b601f01601f19169190910160400192915050565b600060808284031215615a7d57600080fd5b6040516080810181811067ffffffffffffffff82111715615aa057615aa0614a41565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b60008083128015600160ff1b850184121615615aef57615aef61526f565b6001600160ff1b0384018313811615615b0a57615b0a61526f565b5050039056fea164736f6c634300080a000a';

type ClearingHouseDummyConstructorParams =
  | [linkLibraryAddresses: ClearingHouseDummyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseDummyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouseDummy__factory extends ContractFactory {
  constructor(...args: ClearingHouseDummyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouseDummy__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseDummyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseDummy> {
    return super.deploy(overrides || {}) as Promise<ClearingHouseDummy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouseDummy {
    return super.attach(address) as ClearingHouseDummy;
  }
  connect(signer: Signer): ClearingHouseDummy__factory {
    return super.connect(signer) as ClearingHouseDummy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseDummyInterface {
    return new utils.Interface(_abi) as ClearingHouseDummyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseDummy {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouseDummy;
  }
}

export interface ClearingHouseDummyLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
