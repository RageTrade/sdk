/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  SignedFullMathTest,
  SignedFullMathTestInterface,
} from '../SignedFullMathTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'a',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDiv',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'b',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'denominator',
        type: 'int256',
      },
    ],
    name: 'mulDiv',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDiv',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDivRoundingDown',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'int256',
        name: 'a',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'b',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'denominator',
        type: 'int256',
      },
    ],
    name: 'mulDivRoundingDown',
    outputs: [
      {
        internalType: 'int256',
        name: 'result',
        type: 'int256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'a',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'b',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'denominator',
        type: 'uint256',
      },
    ],
    name: 'mulDivRoundingUp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610540806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630af8b27f146100675780637972563e1461008c578063aa9a09121461009f578063b81461a0146100b2578063cf828136146100c5578063fb8a0ac4146100d8575b600080fd5b61007a6100753660046103d0565b6100eb565b60405190815260200160405180910390f35b61007a61009a3660046103d0565b610102565b61007a6100ad3660046103d0565b61010f565b61007a6100c03660046103d0565b61011c565b61007a6100d33660046103d0565b610129565b61007a6100e63660046103d0565b610136565b60006100f8848484610143565b90505b9392505050565b60006100f8848484610183565b60006100f88484846101c1565b60006100f8848484610273565b60006100f88484846102b0565b60006100f8848484610312565b60006101508484846101c1565b905060008280610162576101626103fc565b84860911156100fb57600019811061017957600080fd5b6001019392505050565b6000610190848484610312565b90506000811280156101b057506101b06101a98561034f565b8484610360565b156100fb576100f860001982610428565b60008080600019858709858702925082811083820303915050806000036101fa57600084116101ef57600080fd5b5082900490506100fb565b80841161020657600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b60006102808484846102b0565b90506000811280156101b057506101b06102998561034f565b6102a28561034f565b6102ab8561034f565b610360565b600060018180806102c18885610379565b945092506102cf8785610379565b945091506102dd8685610379565b945090506102f46102ef8484846101c1565b6103a3565b9450836103075761030485610469565b94505b505050509392505050565b600061033b6102ef600086126103285785610334565b61033486600019610485565b85856101c1565b905060008412156100fb576100f881610469565b600061035a826103b9565b92915050565b600081838509801561037157600191505b509392505050565b60008060008412156103985791159161039184610469565b915061039c565b8391505b5092909150565b6000600160ff1b82106103b557600080fd5b5090565b60008082136103b5576103cb82610469565b61035a565b6000806000606084860312156103e557600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b038490038513161561044a5761044a610412565b600160ff1b839003841281161561046357610463610412565b50500190565b6000600160ff1b820161047e5761047e610412565b5060000390565b60006001600160ff1b03818413828413808216868404861116156104ab576104ab610412565b600160ff1b60008712828116878305891216156104ca576104ca610412565b600087129250878205871284841616156104e6576104e6610412565b878505871281841616156104fc576104fc610412565b50505092909302939250505056fea26469706673582212207b9f270a8df2904f217beff16aa219d5e3b32bbffd06de0131760c855dd8291664736f6c634300080d0033';

type SignedFullMathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignedFullMathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignedFullMathTest__factory extends ContractFactory {
  constructor(...args: SignedFullMathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'SignedFullMathTest';
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignedFullMathTest> {
    return super.deploy(overrides || {}) as Promise<SignedFullMathTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignedFullMathTest {
    return super.attach(address) as SignedFullMathTest;
  }
  connect(signer: Signer): SignedFullMathTest__factory {
    return super.connect(signer) as SignedFullMathTest__factory;
  }
  static readonly contractName: 'SignedFullMathTest';
  public readonly contractName: 'SignedFullMathTest';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedFullMathTestInterface {
    return new utils.Interface(_abi) as SignedFullMathTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedFullMathTest {
    return new Contract(address, _abi, signerOrProvider) as SignedFullMathTest;
  }
}
