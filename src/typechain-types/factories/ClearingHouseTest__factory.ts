/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ClearingHouseTest,
  ClearingHouseTestInterface,
} from '../ClearingHouseTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'liquidity',
        type: 'uint256',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'DeactivationFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint48',
        name: 'element',
        type: 'uint48',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'TokenInactive',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'cleanPositions',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountDepositBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: 'num',
        type: 'uint8',
      },
    ],
    name: 'getAccountLiquidityPositionDetails',
    outputs: [
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'enum IClearingHouse.LimitOrderType',
        name: 'limitOrderType',
        type: 'uint8',
      },
      {
        internalType: 'uint128',
        name: 'liquidity',
        type: 'uint128',
      },
      {
        internalType: 'int256',
        name: 'sumALastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumBInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'sumFpInsideLastX128',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'sumFeeInsideLastX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
      {
        internalType: 'uint8',
        name: 'num',
        type: 'uint8',
      },
    ],
    name: 'getAccountLiquidityPositionFundingAndFee',
    outputs: [
      {
        internalType: 'int256',
        name: 'fundingPayment',
        type: 'int256',
      },
      {
        internalType: 'uint256',
        name: 'unrealizedLiquidityFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountLiquidityPositionNum',
    outputs: [
      {
        internalType: 'uint8',
        name: 'num',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountMarketValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountNumInTokenPositionSet',
    outputs: [
      {
        internalType: 'uint256',
        name: 'accountNoInTokenSet',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountOpenTokenPosition',
    outputs: [
      {
        internalType: 'int256',
        name: 'balance',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'netTraderPosition',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountOwner',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getAccountTokenPositionFunding',
    outputs: [
      {
        internalType: 'int256',
        name: 'fundingPayment',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isInitialMargin',
        type: 'bool',
      },
    ],
    name: 'getAccountValueAndRequiredMargin',
    outputs: [
      {
        internalType: 'int256',
        name: 'accountMarketValue',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'requiredMargin',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'getAccountView',
    outputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: 'vBaseBalance',
        type: 'int256',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'rTokenAddress',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'balance',
            type: 'uint256',
          },
        ],
        internalType: 'struct IClearingHouse.DepositTokenView[]',
        name: 'tokenDeposits',
        type: 'tuple[]',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'vTokenAddress',
            type: 'address',
          },
          {
            internalType: 'int256',
            name: 'balance',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'netTraderPosition',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sumAX128Ckpt',
            type: 'int256',
          },
          {
            components: [
              {
                internalType: 'enum IClearingHouse.LimitOrderType',
                name: 'limitOrderType',
                type: 'uint8',
              },
              {
                internalType: 'int24',
                name: 'tickLower',
                type: 'int24',
              },
              {
                internalType: 'int24',
                name: 'tickUpper',
                type: 'int24',
              },
              {
                internalType: 'uint128',
                name: 'liquidity',
                type: 'uint128',
              },
              {
                internalType: 'int256',
                name: 'vTokenAmountIn',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumALastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumBInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'int256',
                name: 'sumFpInsideLastX128',
                type: 'int256',
              },
              {
                internalType: 'uint256',
                name: 'sumFeeInsideLastX128',
                type: 'uint256',
              },
            ],
            internalType: 'struct IClearingHouse.LiquidityPositionView[]',
            name: 'liquidityPositions',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct IClearingHouse.VTokenPositionView[]',
        name: 'tokenPositions',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTokenAddressInVTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: 'vTokenInIVTokenes',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTruncatedTokenAddress',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'initRealToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'isRealTokenAlreadyInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'realTokenInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setFixFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610f5157600080fd5b505af4158015610f65573d6000803e3d6000fd5b50508254604080518981526001600160a01b03909216602083015281018690527fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75925060600190505b60405180910390a15050505050565b60d554600090819060ff1615610fe6576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b0316331461102057604051630504a20d60e01b8152336004820152602401610eaf565b600061102b86612c7b565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af41580156110c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e79190616d33565b909450925060006110f784612d12565b606b54909150811015611120576040516312b6b5cd60e11b815260048101829052602401610eaf565b60208601516001600160a01b03161580159061113e57508560600151155b156111ab57856040015180156111655750855161115a90612d12565b61116385612d12565b145b8061118e5750856040015115801561118e5750855161118390612d12565b61118c86612d12565b145b6111ab576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b600082815260d46020908152604080832063ffffffff8516845260039081019092528220015b60058260ff161015611242578060ff8316600581106111fd576111fd616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff166000141561123057611242565b8161123a81616ae6565b9250506111dc565b5092915050565b6001546001600160a01b0316331480159061127657506000546001600160a01b0362010000909104163314155b1561129457604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b60d55460ff16156112e3576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b0316331461131d57604051630504a20d60e01b8152336004820152602401610eaf565b600061132884612b7a565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b15801561139557600080fd5b505af41580156113a9573d6000803e3d6000fd5b505050506113d333846113c384546001600160a01b031690565b6001600160a01b03169190612d2d565b8054604080518781526001600160a01b03909216602083015281018490527fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690606001610fae565b600080600080600080600080600060d460008d815260200190815260200160002060010160020160006114548d6001600160a01b031690565b63ffffffff16815260208101919091526040016000908120600381019250600401818360ff8e166005811061148b5761148b616aba565b60058082049092015465ffffffffffff6006928490069290920261010090810a909104919091168352602083019390935260409091016000208054600280830154600384015460048501549490950154958304820b9f50600160201b830490910b9d5060ff82169c506001600160801b03600160381b909204919091169a5098509096509450925050509397509397509397509397565b60008180156115885760005a905061153a6044612d5d565b6115448585612d89565b92506000815a6115549190616d57565b90508083111561158157604051634010928f60e01b81526004810184905260248101829052604401610eaf565b5050611242565b6115926044612d5d565b61159c8484612d89565b949350505050565b600081815260d46020908152604080832081516060808201845285825281850186905281840186905260675463ffffffff168652600383019094529382902082519384019092528154600190910193919290819061160190616d6e565b815260006020820181905260409091015260675490915061163090849083906001600160a01b03166064612edf565b60005b60088160ff161015611723576000846001018260ff166008811061165957611659616aba565b60088104919091015460079091166004026101000a900463ffffffff169050806116835750611723565b8460020160008263ffffffff1663ffffffff168152602001908152602001600020935060405180606001604052806000815260200185600001546116c690616d6e565b815260200185600101546116d990616d6e565b905263ffffffff80831660009081526066602052604090205491945061171091879186916001600160a01b031690606490612edf16565b508061171b81616ae6565b915050611633565b5050505050565b6000610b66826000612d89565b6001546001600160a01b0316331480159061176457506000546001600160a01b0362010000909104163314155b1561178257604051636bd1573560e11b815260040160405180910390fd5b83606861178f8282616d8b565b5050606a92909255606b5560695550565b6001546001600160a01b031633148015906117cd57506000546001600160a01b0362010000909104163314155b156117eb57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d260205260409020805460ff1916911515919091179055565b600083815260d46020908152604080832063ffffffff861684526003908101909252822082918101908290600401818360ff88166005811061185a5761185a616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff168152602001908152602001600020905060006118b76064886001600160a01b031661249f90919063ffffffff16565b825460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b60248201526001600160a01b039190911690632a99a79290604401608060405180830381865afa158015611918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193c9190616e3d565b8051604082015191925061195291849190612fca565b945061196b81606001518361300490919063ffffffff16565b9350505050935093915050565b60d55460ff161561199c576040516313d0ff5960e31b815260040160405180910390fd5b600082815260d46020526040902080546001600160a01b031633146119d657604051630504a20d60e01b8152336004820152602401610eaf565b604051634042e78f60e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91634042e78f910160006040518083038186803b158015611a2f57600080fd5b505af4158015611a43573d6000803e3d6000fd5b505060d554611a64925061010090046001600160a01b031690503384612d2d565b60408051848152602081018490527fb8635fe5938466cc626f7c214bf818f090e2b736368828f448cd2b379cf0174e910160405180910390a1505050565b6000610bb8858585856000613042565b6001546001600160a01b03163314801590611adf57506000546001600160a01b0362010000909104163314155b15611afd57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038116611b245760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b611ba460405180606001604052806000815260200160008152602001600081525090565b610bb8858585856000613159565b611bd660405180606001604052806000815260200160008152602001600081525090565b818015611c3d5760005a9050611bec60a4612d5d565b611bf98888888888613159565b92506000815a611c099190616d57565b905080831115611c3657604051634010928f60e01b81526004810184905260248101829052604401610eaf565b5050611c57565b611c4760a4612d5d565b611c548787878787613159565b91505b5095945050505050565b600054610100900460ff1680611c7a575060005460ff16155b611c965760405162461bcd60e51b8152600401610eaf90616e59565b600054610100900460ff16158015611cb8576000805461ffff19166101011790555b60d680546001600160a01b03199081166001600160a01b038981169190911790925560d58054610100600160a81b0319166101008985160217905560d78054821687841617905560d88054821685841617905560678054909116918516919091179055611d236132c9565b8015610e4d576000805461ff0019169055505050505050565b60d55460009060ff1615611d63576040516313d0ff5960e31b815260040160405180910390fd5b5060d354611d72816001616ea7565b60d355600081815260d460205260409081902080546001600160a01b0319163390811782556001820184905591519091907f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea390611dd29085815260200190565b60405180910390a25090565b6001546001600160a01b03163314801590611e0b57506000546001600160a01b0362010000909104163314155b15611e2957604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03821660009081526064602052604090208190600201610cf28282616b8d565b611e95604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff600160201b8504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b600080611f436001600160a01b03841660646132d4565b9150611f596001600160a01b03841660646132fa565b9050915091565b6000546001600160a01b0362010000909104163314611f9257604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038116611fb95760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff8082166000908152606660205260408120549091610b66916001600160a01b0316908390612b6916565b606060208251028201602001825b8181101561207457602001805154815261205f565b509192915050565b6000805b8281101561219f57600084848381811061209c5761209c616aba565b90506020020160208101906120b1919061614f565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156120f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121149190616ebf565b90507f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c485858481811061214957612149616aba565b905060200201602081019061215e919061614f565b604080516001600160a01b039092168252602082018490520160405180910390a16121898184616ea7565b925050808061219790616ed8565b915050612080565b506121cd6121b56001546001600160a01b031690565b60d55461010090046001600160a01b03169083612d2d565b505050565b600082815260d46020526040812081906121ee90846064613312565b909590945092505050565b60d554600090819060ff1615612222576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b0316331461225c57604051630504a20d60e01b8152336004820152602401610eaf565b600061226786612c7b565b9050612279608086016060870161614f565b6001600160a01b0316156122b0576122b08161229b608088016060890161614f565b6122ab60a0890160808a01616ef3565b613368565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d3906122ee90859085908a90606490600401616f1f565b6040805180830381865af415801561230a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061232e9190616d33565b909450925060006123428286866064613403565b606b549091508110156111ab576040516312b6b5cd60e11b815260048101829052602401610eaf565b600082815260d460205260408120819061238790846064613312565b915091509250929050565b6001546001600160a01b031633148015906123bf57506000546001600160a01b0362010000909104163314155b156123dd57604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b60008180156124885760005a905061247b60a4612d5d565b611bf98888888888613042565b61249260a4612d5d565b611c548787878787613042565b6001600160a01b03918216600090815260209190915260409020600101541690565b600080826001600160a01b031663a3a1e7e96040518163ffffffff1660e01b8152600401602060405180830381865afa158015612502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125269190616ebf565b9050600061253d8286600201548760010154613443565b610bb890616d6e565b6000805b60088160ff16101561261e576000856001018260ff166008811061257057612570616aba565b60088104919091015460079091166004026101000a900463ffffffff1690508061259a575061261e565b6125fe856000886001018560ff16600881106125b8576125b8616aba565b60088104919091015460079091166004026101000a900463ffffffff908116825260208201929092526040016000205488916001600160a01b0390911690879061345e16565b6126089084616ff1565b925050808061261690616ae6565b91505061254a565b509392505050565b63ffffffff821660009081526001840160205260409020546001600160a01b0383169082111561265557600080fd5b63ffffffff811660009081526001850160205260408120805484929061267c908490616d57565b909155505063ffffffff81166000908152600185016020526040902054610cf257610cf28482613480565b606060006126b484613666565b90508067ffffffffffffffff8111156126cf576126cf616443565b60405190808252806020026020018201604052801561271457816020015b60408051808201909152600080825260208201528152602001906001900390816126ed5790505b50915060005b818110156128215760018401600086836008811061273a5761273a616aba565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b039091169084908390811061278857612788616aba565b60209081029190910101516001600160a01b0390911690526001850160008683600881106127b8576127b8616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000205483828151811061280157612801616aba565b60209081029190910181015101528061281981616ed8565b91505061271a565b505092915050565b600381015463ffffffff1660009081526002830160205260408120549060609061285560018601613666565b90508067ffffffffffffffff81111561287057612870616443565b6040519080825280602002602001820160405280156128dc57816020015b6128c96040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b81526020019060019003908161288e5790505b50915060005b81811015612b605784600201600087600101836008811061290557612905616aba565b60088104919091015460079091166004026101000a900463ffffffff16815260208101919091526040016000205483516001600160a01b039091169084908390811061295357612953616aba565b60209081029190910101516001600160a01b03909116905260028601600060018801836008811061298657612986616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001908152602001600020600001548382815181106129d2576129d2616aba565b602002602001015160200181815250508560020160008760010183600881106129fd576129fd616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060010154838281518110612a4957612a49616aba565b60200260200101516040018181525050856002016000876001018360088110612a7457612a74616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002060020154838281518110612ac057612ac0616aba565b60200260200101516060018181525050612b2c866002016000886001018460088110612aee57612aee616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000206003016136d0565b838281518110612b3e57612b3e616aba565b6020026020010151608001819052508080612b5890616ed8565b9150506128e2565b50509250929050565b6001600160a01b0390811691161490565b63ffffffff808216600090815260656020526040812091612b9d918391613c5416565b15612bc35760405163b087c8c360e01b815263ffffffff83166004820152602401610eaf565b80546001600160a01b0316600090815260d2602052604090205460ff16612c0b57805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610eaf565b919050565b6040516001600160a01b0380851660248301528316604482015260648101829052610cf29085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152613c67565b63ffffffff8082166000908152606660205260408120546001600160a01b031691612ca8918391612b6916565b15612cce5760405163b087c8c360e01b815263ffffffff83166004820152602401610eaf565b6001600160a01b038116600090815260d1602052604090205460ff16612c0b57604051631079472960e21b81526001600160a01b0382166004820152602401610eaf565b6000808213612d2957612d2482616d6e565b610b66565b5090565b6040516001600160a01b0383166024820152604481018290526121cd90849063a9059cbb60e01b90606401612c44565b368110612d8657604051634219202560e01b815236600482015260248101829052604401610eaf565b50565b60d55460009060ff1615612db0576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d4602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383612de461013d5490565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015612e2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e4f9190616d33565b90935090506000612e608285616ff1565b60d554909150612e7f9061010090046001600160a01b03163386612d2d565b612e8882613d39565b6040805187815233602082015290810182905260608101859052608081018390527f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060a00160405180910390a150505092915050565b60038101546001600160a01b0383811691168114612f0f57612f02858484613dca565b612f0f6001860182613df6565b63ffffffff811660009081526002860160209081526040822090860151815491929091839190612f40908490616ff1565b90915550506040850151600182018054600090612f5e908490616ff1565b9091555050600383015463ffffffff16600090815260028701602052604081208651815491929091839190612f94908490616ff1565b90915550508154158015612fb25750600382015465ffffffffffff16155b15612fc157612fc18786613f3c565b50505050505050565b6002830154600384015460048501548554600093612ffb9387938793600160381b90046001600160801b0316613fc4565b61159c90616d6e565b8154600583015460009161303b91600160381b9091046001600160801b031690600160801b906130349086616d57565b9190613ff7565b9392505050565b60d55460009060ff1615613069576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d4602052604081209061308187612c7b565b905061308d61013d5490565b606a5461309a9190616ea7565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b15801561311957600080fd5b505af415801561312d573d6000803e3d6000fd5b505060d55461314e925061010090046001600160a01b031690503385612d2d565b505095945050505050565b61317d60405180606001604052806000815260200160008152602001600081525090565b60d55460ff16156131a1576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff1611156131c8576040516348d69f3560e01b815260040160405180910390fd5b600085815260d460205260408120906131e086612c7b565b600089815260d4602052604081209192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063487e8af1908590898661321c61013d5490565b60646040518763ffffffff1660e01b815260040161326f96959493929190958652602086019490945261ffff9290921660408501526001600160a01b03166060840152608083015260a082015260c00190565b608060405180830381865af415801561328c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132b09190617032565b945090506132bd81613d39565b50505095945050505050565b33612d8681806140a5565b600061303b6132ec6001600160a01b038516846141ad565b6001600160a01b031661423f565b600061303b6132ec6001600160a01b038516846142bb565b60008061331f85846142f9565b915061333360018601856002860186614325565b600286015490915063ffffffff16156133605782600501548112613357578061335d565b82600501545b90505b935093915050565b600061337e6001600160a01b038516606461447a565b90506000836001600160a01b0316826001600160a01b0316116133aa576133a582856170ab565b6133b4565b6133b484836170ab565b90506127106133c78561ffff86166170d3565b6133d19190617118565b6001600160a01b0316816001600160a01b03161115611723576040516307a1db0760e01b815260040160405180910390fd5b600061340e83612d12565b6134396134246001600160a01b038816856132fa565b600160801b61343288612d12565b91906144a0565b610bb89190616ff1565b600061159c613452848661713e565b8390600160801b6144da565b600061159c836134776001600160a01b0382168561249f565b8691908561456b565b63ffffffff81166134a757604051633f16439160e01b815260006004820152602401610eaf565b600860005b6008811015613560578263ffffffff168482600881106134ce576134ce616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156134fa578091505b83816008811061350c5761350c616aba565b60088104919091015460079091166004026101000a900463ffffffff1661354e576000811161353c576000613547565b613547600182616d57565b9050613560565b8061355881616ed8565b9150506134ac565b81600814610cf257818114156135b257600084836008811061358457613584616aba565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550610cf2565b8381600881106135c4576135c4616aba565b600891828204019190066004029054906101000a900463ffffffff1660008584600881106135f4576135f4616aba565b6008918282040191900660040287856008811061361357613613616aba565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b6000805b60088160ff1610156136c757828160ff166008811061368b5761368b616aba565b60088104919091015460079091166004026101000a900463ffffffff166136b55760ff1692915050565b806136bf81616ae6565b91505061366a565b50600892915050565b606060006136dd836145dd565b90508067ffffffffffffffff8111156136f8576136f8616443565b60405190808252806020026020018201604052801561378857816020015b6137756040805161012081019091528060008152602001600060020b8152602001600060020b815260200160006001600160801b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816137165790505b50915060005b81811015613c4d576001840160008583600581106137ae576137ae616aba565b600580820492909201549190066006026101000a900465ffffffffffff168152602081019190915260400160002054835160ff909116908490839081106137f7576137f7616aba565b6020026020010151600001906002811115613814576138146161eb565b90816002811115613827576138276161eb565b90525060018401600085836005811061384257613842616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160019054906101000a900460020b8382815181106138a1576138a1616aba565b60209081029190910181015160029290920b9101526001840160008583600581106138ce576138ce616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160049054906101000a900460020b83828151811061392d5761392d616aba565b602090810291909101015160029190910b60409091015260018401600085836005811061395c5761395c616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060000160079054906101000a90046001600160801b03168382815181106139c1576139c1616aba565b60209081029190910101516001600160801b039091166060909101526001840160008583600581106139f5576139f5616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060010154838281518110613a4757613a47616aba565b602090810291909101015160800152600184016000858360058110613a6e57613a6e616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060020154838281518110613ac057613ac0616aba565b602090810291909101015160a00152600184016000858360058110613ae757613ae7616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060030154838281518110613b3957613b39616aba565b602090810291909101015160c00152600184016000858360058110613b6057613b60616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060040154838281518110613bb257613bb2616aba565b602090810291909101015160e00152600184016000858360058110613bd957613bd9616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200190815260200160002060050154838281518110613c2b57613c2b616aba565b6020908102919091010151610100015280613c4581616ed8565b91505061378e565b5050919050565b90546001600160a01b0391821691161490565b6000613cbc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166146549092919063ffffffff16565b8051909150156121cd5780806020019051810190613cda919061717d565b6121cd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610eaf565b6000811315613d645760d75460d554612d86916001600160a01b036101009092048216911683612d2d565b60d7546001600160a01b031663379607f5613d7e83616d6e565b6040518263ffffffff1660e01b8152600401613d9c91815260200190565b600060405180830381600087803b158015613db657600080fd5b505af1158015611723573d6000803e3d6000fd5b6001600160a01b038083166000908152602083905260409020600101546121cd91859185911684614663565b63ffffffff8116613e1d57604051633f16439160e01b815260006004820152602401610eaf565b600860005b6008811015613ed0578263ffffffff16848260088110613e4457613e44616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415613e725750505050565b816008148015613eb557506000848260088110613e9157613e91616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b15613ebe578091505b80613ec881616ed8565b915050613e22565b508060081415613efb57604051630695727160e11b815263ffffffff83166004820152602401610eaf565b81838260088110613f0e57613f0e616aba565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b63ffffffff811660009081526002830160205260409020546001600160a01b0382169015801590613f8e575063ffffffff8116600090815260028401602052604090206003015465ffffffffffff1615155b15613fb75760405163aeed59dd60e01b81526001600160a01b0383166004820152602401610eaf565b6121cd6001840182613480565b6000613fec82600160801b613fdb8888888d61477f565b613fe5908a61713e565b91906147a4565b979650505050505050565b600080806000198587098587029250828110838203039150508060001415614031576000841161402657600080fd5b50829004905061303b565b80841161403d57600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b600054610100900460ff16806140be575060005460ff16155b6140da5760405162461bcd60e51b8152600401610eaf90616e59565b600054610100900460ff161580156140fc576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a380156121cd576000805461ff0019169055505050565b6001600160a01b03828116600090815260208390526040808220600201549051630e56d76760e31b8152600160201b820463ffffffff1660048201529192600160481b90910416906372b6bb3890602401602060405180830381865afa15801561421b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061303b919061719a565b60006401000276a36001600160a01b038316108061427a575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b156142a357604051635d236c4560e01b81526001600160a01b0383166004820152602401610eaf565b610b666001600160a01b03831680600160401b613ff7565b6001600160a01b03808316600090815260208390526040812060028101549054919261303b92169063ffffffff600160201b9091048116906147c816565b600061430c6001840160028401846147e9565b905061431b60688401836148f7565b61303b9082616ff1565b600080808080805b60088160ff16101561445857896001018160ff166008811061435157614351616aba565b60088104919091015460079091166004026101000a900463ffffffff1661437757614458565b60008860008c6001018460ff166008811061439457614394616aba565b60088104919091015460079091166004026101000a900463ffffffff90811682526020820192909252604001600020546001600160a01b031691506143e1908c908c9084908c906149b516565b6001600160a01b038316600090815260208b905260409020600201549195509350600160401b900460ff161561442e5761441b8487616ff1565b95506144278386616ff1565b9450614445565b6144388484614a70565b6144429088616ff1565b96505b508061445081616ae6565b91505061432d565b506144638484614a70565b61446d9086616ff1565b9998505050505050505050565b6001600160a01b03808316600090815260208390526040812054909161303b9116614a87565b60006144c6600085126144b357846144bf565b6144bf856000196171b7565b8484613ff7565b9050600084121561303b5761159c81616d6e565b60006001818080808812156144fc579215926144f588616d6e565b9250614500565b8792505b600087121561451c5792159261451587616d6e565b9150614520565b8691505b600086121561453f57921592614538866000196171b7565b9050614542565b50845b61454d838383613ff7565b9450836145605761455d85616d6e565b94505b505050509392505050565b600061459160405180606001604052806000815260200160008152602001600081525090565b85546145b3908686846145a78b8460008b614b11565b60030193929190614b9c565b6145bf86828786612edf565b6145d3858260200151836000015186613403565b9695505050505050565b6000805b60058160ff16101561464b57828160ff166005811061460257614602616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff16600014156146395760ff1692915050565b8061464381616ae6565b9150506145e1565b50600592915050565b606061159c8484600085614c49565b63ffffffff8316600090815260028501602090815260408083208151631dde605760e21b815291519093926001600160a01b03871692637779815c92600480830193928290030181865afa1580156146bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146e39190616ebf565b600384015463ffffffff908116600090815260028901602052604081209293509061471290859088906124c116565b9050808260000160008282546147289190616ff1565b90915550506002840183905587546040517fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c9161476d918a906000908190879061723c565b60405180910390a15050505050505050565b600061479a61478e868461713e565b8590600160801b6144da565b610bb89084616ff1565b60006147b18484846144a0565b9050600081121561303b5761159c60001982616ff1565b6000806147de6001600160a01b03851684614d66565b905061159c81614f82565b6000805b60088160ff1610156148d0576000856001018260ff166008811061481357614813616aba565b60088104919091015460079091166004026101000a900463ffffffff1690508061483d57506148d0565b63ffffffff8082166000908152602087815260408083205460028b019092529091206001600160a01b039091169161487b908290849089906152b416565b6148859086616ff1565b9450600061489c6001600160a01b038416886142bb565b90506148ad6003830182858a6152d8565b6148b79087616ff1565b95505050505080806148c890616ae6565b9150506147ed565b50600382015463ffffffff16600090815260028501602052604090205461159c9082616ff1565b60008060005b60088160ff16101561261e5760008560ff83166008811061492057614920616aba565b60088104919091015460079091166004026101000a900463ffffffff1690508061494a575061261e565b63ffffffff81166000908152600186016020526040902061499461496d826152f9565b63ffffffff808516600090815260018b0160205260409020549190600160801b906144a016565b61499e9085616ff1565b9350505080806149ad90616ae6565b9150506148fd565b63ffffffff80831660009081526002860160205260408120909182919082906149eb906001600160a01b0388169087906132fa16565b90506000614a036001600160a01b0388168988615307565b83549091506000614a1660038601615361565b9050614a3f61ffff8416620186a061343287600160801b82614a38888a616ff1565b6000614a70565b9650614a6061ffff8416620186a061343287600160801b82614a3889616d6e565b9550505050505094509492505050565b600081831315614a81575081610b66565b50919050565b600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015614ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614aec919061726c565b509496509294505050506001600160a01b03831615159050614a815761303b81614f82565b60038101546000906001600160a01b03858116911614614b7e578215614b4057614b3b85856153dc565b614b7e565b614b56600186016001600160a01b0386166153f6565b614b7e576040516319a4abb360e21b81526001600160a01b0385166004820152602401610eaf565b50505063ffffffff1660009081526002919091016020526040902090565b60005b855465ffffffffffff1615610e4d57614bd260405180606001604052806000815260200160008152602001600081525090565b865465ffffffffffff16600090815260018801602052604090209150614bfc878787858886615411565b805183518490614c0d908390616ff1565b9052506020808201519084018051614c26908390616ff1565b9052506040808201519084018051614c3f908390616ff1565b905250614b9f9050565b606082471015614caa5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610eaf565b843b614cf85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610eaf565b600080866001600160a01b03168587604051614d149190617334565b60006040518083038185875af1925050503d8060008114614d51576040519150601f19603f3d011682016040523d82523d6000602084013e614d56565b606091505b5091509150613fec828286615442565b600063ffffffff8216614d8f576040516351a4d88160e01b815260006004820152602401610eaf565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110614dc457614dc4616aba565b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110614df357614df3616aba565b63ffffffff9092166020928302919091019091015260405163883bdbfd60e01b81526001600160a01b0385169063883bdbfd90614e34908490600401617350565b600060405180830381865afa925050508015614e7257506040513d6000823e601f3d908101601f19168201604052614e6f91908101906173fd565b60015b614ee757836001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa158015614eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614ed8919061726c565b50939650611242945050505050565b600082600081518110614efc57614efc616aba565b602002602001015183600181518110614f1757614f17616aba565b6020026020010151614f2991906174c9565b90506000614f3d63ffffffff881683617519565b905060008260060b128015614f635750614f5d63ffffffff881683617557565b60060b15155b15614f765780614f7281617579565b9150505b9450610b669350505050565b60008060008360020b12614f99578260020b614fa1565b8260020b6000035b9050620d89e8811115614fda5760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610eaf565b600060018216614fee57600160801b615000565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615615034576ffff97272373d413259a46990580e213a0260801c5b6004821615615053576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615615072576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615615091576fffcb9843d60f6159c9db58835c9266440260801c5b60208216156150b0576fff973b41fa98c081472e6896dfb254c00260801c5b60408216156150cf576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156150ee576ffe5dee046a99a2a811c461f1969c30530260801c5b61010082161561510e576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b61020082161561512e576ff987a7253ac413176f2b074cf7815e540260801c5b61040082161561514e576ff3392b0822b70005940c7a398e4b70f30260801c5b61080082161561516e576fe7159475a2c29b7443b29c7fa6e889d90260801c5b61100082161561518e576fd097f3bdfd2022b8845ad8f792aa58250260801c5b6120008216156151ae576fa9f746462d870fdf8a65dc1f90e061e50260801c5b6140008216156151ce576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156151ee576f31be135f97d08fd981231505542fcfa60260801c5b6201000082161561520f576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b6202000082161561522f576e5d6af8dedb81196699c329225ee6040260801c5b6204000082161561524e576d2216e584f5fa1ea926041bedfe980260801c5b6208000082161561526b576b048a170391f7dc42444e8fa20260801c5b60008460020b131561528c57806000198161528857615288617102565b0490505b600160201b81061561529f5760016152a2565b60005b60ff16602082901c0192505050919050565b6000806152ca6001600160a01b038516846132fa565b9050610bb88585838661547b565b6000610bb8846152f16001600160a01b0386168561249f565b87919061549a565b6000610b666132ec83615536565b6000821561533557506001600160a01b03831660009081526020829052604090206002015461ffff1661303b565b506001600160a01b03831660009081526020829052604090206002015462010000900461ffff1661303b565b6000805b6005811015614a8157600083826005811061538257615382616aba565b600580820492909201549190066006026101000a900465ffffffffffff16600081815260018601602052604090209091506153bc906155c8565b6153c69084616ea7565b92505080806153d490616ed8565b915050615365565b6153f2600183016001600160a01b038316613df6565b5050565b6000615402838361561f565b60ff1660ff1415905092915050565b8254610e4d9086908690869061543690600160381b90046001600160801b031661759d565b8a939291908787615696565b6060831561545157508161303b565b8251156154615782518084602001fd5b8160405162461bcd60e51b8152600401610eaf91906175c4565b6000610bb885846154956001600160a01b0388168661249f565b61571b565b6000805b600581101561261e5760008582600581106154bb576154bb616aba565b600591828204019190066006029054906101000a900465ffffffffffff1690508065ffffffffffff16600014156154f2575061261e565b65ffffffffffff811660009081526001870160205260409020615516908686615745565b6155209084616ff1565b925050808061552e90616ed8565b91505061549e565b600061554c82600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa1580156155a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b66919061719a565b805460009081906155e090610100900460020b614f82565b83549091506000906155fb90600160201b900460020b614f82565b845490915061159c9083908390600160381b90046001600160801b0316600161585e565b6000805b60088160ff16101561568c578263ffffffff16848260ff166008811061564b5761564b616aba565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16141561567a579050610b66565b8061568481616ae6565b915050615623565b5060ff9392505050565b6156a4848787868686615913565b835460208201516040517f4926c62827d5760a170acd8b688ca78ac14a0e11ce80adb478f32409cc903105926156f3928a928a926101008104600290810b93600160201b909204900b9161723c565b60405180910390a18354600160381b90046001600160801b0316612fc157612fc18785615bdd565b825460009061572f9084600160801b6144a0565b905061573b84836124c1565b61159c9082616ff1565b600080806157538686615c5f565b91509150600061576b866001600160a01b031661423f565b90508161577d8483600160801b6144a0565b6157879190616ff1565b875460405163154cd3c960e11b81526101008204600290810b6004830152600160201b90920490910b6024820152909450600093506001600160a01b0386169250632a99a7929150604401608060405180830381865afa1580156157ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906158139190616e3d565b905061583461582f82606001518761300490919063ffffffff16565b615d29565b61583e9083616ff1565b8151604083015191935061585491879190612fca565b610bb89083616ff1565b6000836001600160a01b0316856001600160a01b0316111561587e579293925b6fffffffffffffffffffffffffffffffff60601b606084901b166001600160a01b0386860381169087166158b157600080fd5b836158e757866001600160a01b03166158d48383896001600160a01b0316613ff7565b816158e1576158e1617102565b04613fec565b613fec6158fe8383896001600160a01b0316615d3b565b886001600160a01b0316808204910615150190565b85546040516306a2062160e51b81526101008204600290810b6004830152600160201b90920490910b6024820152600f84900b6044820152600090819081906001600160a01b0386169063d440c4209060640160c0604051808303816000875af1158015615985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906159a991906175f7565b919450925090506159bd8989898488615d7b565b82846000018181516159cf919061713e565b9052506020840180518391906159e690839061713e565b90525088547fc127b280624c9643cb56c3d294bf1fde822a489052e91c454e83a46d13119a6990899089906101008104600290810b91600160201b810490910b908b9060ff16615a3589616d6e565b615a3e8b616d6e565b604051615a52989796959493929190617624565b60405180910390a16000615acf866001600160a01b0316636719578c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015615a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190615ac1919061719a565b6001600160a01b0316614a87565b90506000615add8b83615c5f565b5090508a6001015481615af0919061713e565b86604001818151615b019190616ff1565b905250506000600f88900b1315615b6857895487908b90600790615b36908490600160381b90046001600160801b031661767a565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550828a60010181905550615bd1565b600087600f0b1215615bd157615b80876000196176a5565b8a548b90600790615ba2908490600160381b90046001600160801b0316617743565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060008a600101819055505b50505050505050505050565b8054600160381b90046001600160801b031615615c3e57805460405163042f31f360e01b81526101008204600290810b6004830152600160201b8304900b6024820152600160381b9091046001600160801b03166044820152606401610eaf565b80546121cd9083906101008104600290810b91600160201b9004900b615eab565b815460009081908190615c7990610100900460020b614f82565b8554909150600090615c9490600160201b900460020b614f82565b9050846001600160a01b038084169082161015615cb2575081615ccf565b816001600160a01b0316866001600160a01b03161115615ccf5750805b8654615cf49061582f9083908590600160381b90046001600160801b0316600061585e565b9450615d1d61582f84838a60000160079054906101000a90046001600160801b03166000615ec1565b93505050509250929050565b6000600160ff1b8210612d2957600080fd5b6000615d48848484613ff7565b905060008280615d5a57615d5a617102565b848609111561303b576000198110615d7157600080fd5b6001019392505050565b81516040830151600091615d9191889190612fca565b90508082600001818151615da59190616ff1565b9052506060830151600090615dbf9061582f908990613004565b90508083600001818151615dd39190616ff1565b90525086546040517fabd2c4c3f91146d2cb957cb9951816ce67eb14ab662ba314d0bdba08b66a798c91615e2191899189916101008204600290810b92600160201b9004900b90889061723c565b60405180910390a186546040517f0a60599814ebac54e4159ccbfd0f1d13a615ab3b2205adad089d72f4195fa92c91615e7491899189916101008204600290810b92600160201b9004900b90879061723c565b60405180910390a1505081516002860155506020810151600385015560408101516004850155606001516005909301929092555050565b601882901b62ffffff82160161303b8482615f31565b6000836001600160a01b0316856001600160a01b03161115615ee1579293925b81615f0e57615f09836001600160801b03168686036001600160a01b0316600160601b613ff7565b610bb8565b610bb8836001600160801b03168686036001600160a01b0316600160601b615d3b565b65ffffffffffff8116615f5a5760405163fda0966560e01b815260006004820152602401610eaf565b600560005b6005811015616026578265ffffffffffff16848260058110615f8357615f83616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff161415615fb3578091505b838160058110615fc557615fc5616aba565b600591828204019190066006029054906101000a900465ffffffffffff1665ffffffffffff1660001415616014576000811161600257600061600d565b61600d600182616d57565b9050616026565b8061601e81616ed8565b915050615f5f565b81600514610cf2578181141561607c57600084836005811061604a5761604a616aba565b600591828204019190066006026101000a81548165ffffffffffff021916908365ffffffffffff160217905550610cf2565b83816005811061608e5761608e616aba565b600591828204019190066006029054906101000a900465ffffffffffff1660008584600581106160c0576160c0616aba565b600591828204019190066006028785600581106160df576160df616aba565b600591828204019190066006028491906101000a81548165ffffffffffff021916908365ffffffffffff1602179055508391906101000a81548165ffffffffffff021916908365ffffffffffff160217905550505050505050565b6001600160a01b0381168114612d8657600080fd5b60006020828403121561616157600080fd5b813561303b8161613a565b6000806040838503121561617f57600080fd5b8235915060208301356161918161613a565b809150509250929050565b8015158114612d8657600080fd5b8035612c0b8161619c565b6000602082840312156161c757600080fd5b813561303b8161619c565b6000602082840312156161e457600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061621f57634e487b7160e01b600052602160045260246000fd5b9052565b6000608080830160018060a01b038089168552602088818701526040848188015283895180865260a089019150838b01955060005b8181101561627f578651805187168452850151858401529584019591830191600101616258565b5050878103606089015288518082528382019550600581901b82018401848b0160005b8381101561639c57848303601f19018952815180518916845287810151888501528681015187850152606080820151908501528a015160a08b850181905281519085018190529088019060009060c08601905b8083101561638757835161630a838251616201565b8b8101518060020b8d850152508a81015160020b8b840152606081015161633c60608501826001600160801b03169052565b508e8101518f84015260a081015160a084015260c081015160c084015260e081015160e084015261010080820151818501525050610120820191508a840193506001830192506162f5565b509a89019a94505050908601906001016162a2565b50909e9d5050505050505050505050505050565b600060e08284031215614a8157600080fd5b60008061010083850312156163d657600080fd5b82356163e18161613a565b91506163f084602085016163b0565b90509250929050565b63ffffffff81168114612d8657600080fd5b60008060006060848603121561642057600080fd5b833592506020840135616432816163f9565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561647c5761647c616443565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156164ab576164ab616443565b604052919050565b8035612c0b8161613a565b600080600083850360c08112156164d457600080fd5b8435935060208501356164e6816163f9565b92506080603f19820112156164fa57600080fd5b50616503616459565b6040850135815260608501356165188161613a565b6020820152608085013561652b8161619c565b604082015260a085013561653e8161619c565b606082015292959194509192509050565b6000806040838503121561656257600080fd5b823561656d8161613a565b915060208301356161918161619c565b60ff81168114612d8657600080fd5b6000806000606084860312156165a157600080fd5b8335925060208401356165b38161613a565b915060408401356165c38161657d565b809150509250925092565b600289810b825288900b602082015261010081016165ef6040830189616201565b6001600160801b03969096166060820152608081019490945260a084019290925260c083015260e0909101529392505050565b6000806040838503121561663557600080fd5b50508035926020909101359150565b60006020828403121561665657600080fd5b813561303b816163f9565b60008060008084860360c081121561667857600080fd5b606081121561668657600080fd5b509395606087013595506080870135945060a08701359350915050565b8060020b8114612d8657600080fd5b600080600080608085870312156166c857600080fd5b8435935060208501356166da816163f9565b925060408501356166ea816166a3565b915060608501356166fa816166a3565b939692955090935050565b61ffff81168114612d8657600080fd5b8035612c0b81616705565b6000806000806080858703121561673657600080fd5b8435935060208501359250604085013561674f816163f9565b915060608501356166fa81616705565b600080600080600060a0868803121561677757600080fd5b85359450602086013593506040860135616790816163f9565b925060608601356167a081616705565b949793965091946080013592915050565b600080600080600060a086880312156167c957600080fd5b85356167d48161613a565b945060208601356167e48161613a565b935060408601356167f48161613a565b925060608601356168048161613a565b915060808601356168148161613a565b809150509295509295909350565b60008082840360c081121561683657600080fd5b83356168418161613a565b925060a0601f198201121561685557600080fd5b506020830190509250929050565b600067ffffffffffffffff82111561687d5761687d616443565b5060051b60200190565b6000602080838503121561689a57600080fd5b823567ffffffffffffffff8111156168b157600080fd5b8301601f810185136168c257600080fd5b80356168d56168d082616863565b616482565b81815260059190911b820183019083810190878311156168f457600080fd5b928401925b82841015613fec578335825292840192908401906168f9565b6020808252825182820181905260009190848201906040850190845b8181101561694a5783518352928401929184019160010161692e565b50909695505050505050565b6000806020838503121561696957600080fd5b823567ffffffffffffffff8082111561698157600080fd5b818501915085601f83011261699557600080fd5b8135818111156169a457600080fd5b8660208260051b85010111156169b957600080fd5b60209290920196919550909350505050565b600080604083850312156169de57600080fd5b8235915060208301356161918161619c565b60008060006101208486031215616a0657600080fd5b833592506020840135616a18816163f9565b9150616a2785604086016163b0565b90509250925092565b600080600060608486031215616a4557600080fd5b8335616a508161613a565b92506020840135616a608161613a565b915060408401356165c3816163f9565b600080600080600060a08688031215616a8857600080fd5b853594506020860135616a9a816163f9565b93506040860135616aaa816166a3565b925060608601356167a0816166a3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415616afd57616afd616ad0565b60010192915050565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b60008135610b668161613a565b80547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b8135616b9881616705565b815461ffff191661ffff8216178255506020820135616bb681616705565b815463ffff00001916601082901b63ffff000016178255506040820135616bdc816163f9565b815467ffffffff000000008260201b1691508167ffffffff000000001982161783556060840135616c0c8161619c565b68ffffffffff00000000199190911690911790151560401b60ff60401b161781556080820135616c3b8161613a565b6121cd8183616b49565b8135616c508161613a565b616c5a8183616b1c565b506020820135616c698161613a565b616c768160018401616b1c565b50600281016040830135616c8981616705565b815461ffff191661ffff8216178255506060830135616ca781616705565b815463ffff00001916601082901b63ffff000016178255506080830135616ccd816163f9565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135616cfd8161619c565b68ffffffffff00000000199190911690911790151560401b60ff60401b161781556121cd616d2d60c08501616b3c565b82616b49565b60008060408385031215616d4657600080fd5b505080516020909101519092909150565b600082821015616d6957616d69616ad0565b500390565b6000600160ff1b821415616d8457616d84616ad0565b5060000390565b8135616d9681616705565b815461ffff191661ffff8216178255506020820135616db481616705565b815463ffff00001916601082901b63ffff000016178255506040820135616dda81616705565b815465ffff00000000191660209190911b65ffff000000001617905550565b600060808284031215616e0b57600080fd5b616e13616459565b90508151815260208201516020820152604082015160408201526060820151606082015292915050565b600060808284031215616e4f57600080fd5b61303b8383616df9565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115616eba57616eba616ad0565b500190565b600060208284031215616ed157600080fd5b5051919050565b6000600019821415616eec57616eec616ad0565b5060010190565b600060208284031215616f0557600080fd5b813561303b81616705565b803560038110612c0b57600080fd5b8481526001600160a01b038416602082015261014081018335616f41816166a3565b60020b60408301526020840135616f57816166a3565b60020b60608301526040840135600f81900b8114616f7457600080fd5b616f836080840182600f0b9052565b50616f90606085016164b3565b6001600160a01b031660a0830152616faa60808501616715565b61ffff1660c0830152616fbf60a085016161aa565b151560e0830152616fd260c08501616f10565b616fe0610100840182616201565b508261012083015295945050505050565b600080821280156001600160ff1b038490038513161561701357617013616ad0565b600160ff1b839003841281161561702c5761702c616ad0565b50500190565b600080828403608081121561704657600080fd5b835192506060601f198201121561705c57600080fd5b506040516060810181811067ffffffffffffffff8211171561708057617080616443565b8060405250602084015181526040840151602082015260608401516040820152809150509250929050565b60006001600160a01b03838116908316818110156170cb576170cb616ad0565b039392505050565b60006001600160a01b03828116848216811515828404821116156170f9576170f9616ad0565b02949350505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160a01b038381168061713257617132617102565b92169190910492915050565b60008083128015600160ff1b85018412161561715c5761715c616ad0565b6001600160ff1b038401831381161561717757617177616ad0565b50500390565b60006020828403121561718f57600080fd5b815161303b8161619c565b6000602082840312156171ac57600080fd5b815161303b8161613a565b60006001600160ff1b03818413828413808216868404861116156171dd576171dd616ad0565b600160ff1b60008712828116878305891216156171fc576171fc616ad0565b6000871292508782058712848416161561721857617218616ad0565b8785058712818416161561722e5761722e616ad0565b505050929093029392505050565b9485526001600160a01b03939093166020850152600291820b6040850152900b6060830152608082015260a00190565b600080600080600080600060e0888a03121561728757600080fd5b87516172928161613a565b60208901519097506172a3816166a3565b60408901519096506172b481616705565b60608901519095506172c581616705565b60808901519094506172d681616705565b60a08901519093506172e78161657d565b60c08901519092506172f88161619c565b8091505092959891949750929550565b60005b8381101561732357818101518382015260200161730b565b83811115610cf25750506000910152565b60008251617346818460208701617308565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561694a57835163ffffffff168352928401929184019160010161736c565b600082601f83011261739f57600080fd5b815160206173af6168d083616863565b82815260059290921b840181019181810190868411156173ce57600080fd5b8286015b848110156173f25780516173e58161613a565b83529183019183016173d2565b509695505050505050565b6000806040838503121561741057600080fd5b825167ffffffffffffffff8082111561742857600080fd5b818501915085601f83011261743c57600080fd5b8151602061744c6168d083616863565b82815260059290921b8401810191818101908984111561746b57600080fd5b948201945b838610156174995785518060060b811461748a5760008081fd5b82529482019490820190617470565b918801519196509093505050808211156174b257600080fd5b506174bf8582860161738e565b9150509250929050565b60008160060b8360060b6000811281667fffffffffffff19018312811516156174f4576174f4616ad0565b81667fffffffffffff01831381161561750f5761750f616ad0565b5090039392505050565b60008160060b8360060b8061753057617530617102565b667fffffffffffff1982146000198214161561754e5761754e616ad0565b90059392505050565b60008260060b8061756a5761756a617102565b808360060b0791505092915050565b60008160020b627fffff1981141561759357617593616ad0565b6000190192915050565b600081600f0b60016001607f1b03198114156175bb576175bb616ad0565b60000392915050565b60208152600082518060208401526175e3816040850160208701617308565b601f01601f19169190910160400192915050565b600080600060c0848603121561760c57600080fd5b8351925060208401519150616a278560408601616df9565b8881526001600160a01b0388166020820152600287810b604083015286900b6060820152600f85900b6080820152610100810161766460a0830186616201565b60c082019390935260e001529695505050505050565b60006001600160801b0380831681851680830382111561769c5761769c616ad0565b01949350505050565b600081600f0b83600f0b60016001607f1b036000821360008413838304851182821616156176d5576176d5616ad0565b6f7fffffffffffffffffffffffffffffff19600085128281168783058712161561770157617701616ad0565b6000871292508582058712848416161561771d5761771d616ad0565b8585058712818416161561773357617733616ad0565b5050509290910295945050505050565b60006001600160801b03838116908316818110156170cb576170cb616ad056fea164736f6c634300080a000a';

type ClearingHouseTestConstructorParams =
  | [linkLibraryAddresses: ClearingHouseTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouseTest__factory extends ContractFactory {
  constructor(...args: ClearingHouseTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouseTest__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseTestLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseTest> {
    return super.deploy(overrides || {}) as Promise<ClearingHouseTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouseTest {
    return super.attach(address) as ClearingHouseTest;
  }
  connect(signer: Signer): ClearingHouseTest__factory {
    return super.connect(signer) as ClearingHouseTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseTestInterface {
    return new utils.Interface(_abi) as ClearingHouseTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseTest {
    return new Contract(address, _abi, signerOrProvider) as ClearingHouseTest;
  }
}

export interface ClearingHouseTestLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
