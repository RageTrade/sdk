/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  ClearingHouseArbitrum,
  ClearingHouseArbitrumInterface,
} from '../ClearingHouseArbitrum';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'senderAddress',
        type: 'address',
      },
    ],
    name: 'AccessDenied',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'CalldataLengthExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'gasUsedClaim',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasUsedActual',
        type: 'uint256',
      },
    ],
    name: 'ExcessGasUsedClaim',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'txGasPrice',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'limit',
        type: 'uint256',
      },
    ],
    name: 'ExcessTxGasPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'period',
        type: 'uint32',
      },
    ],
    name: 'IllegalTwapDuration',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTokenLiquidationParameters',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'notionalValue',
        type: 'uint256',
      },
    ],
    name: 'LowNotionalValue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotRageTradeFactory',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Paused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SlippageBeyondTolerance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'Unauthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
    ],
    name: 'UninitializedToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
    ],
    name: 'UnsupportedRToken',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'UnsupportedVToken',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousGovernance',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'GovernanceTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousTeamMultisig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'TeamMultisigTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rageTradeFactoryAddress',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: '_rBase',
        type: 'address',
      },
      {
        internalType: 'contract IInsuranceFund',
        name: '_insuranceFund',
        type: 'address',
      },
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: '_nativeOracle',
        type: 'address',
      },
    ],
    name: '__ClearingHouse_init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'addCollateralSupport',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'addMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'createAccount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'newAccountId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'slot',
        type: 'bytes32',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'val',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'slots',
        type: 'bytes32[]',
      },
    ],
    name: 'extsload',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'getTwapSqrtPricesForSetDuration',
    outputs: [
      {
        internalType: 'uint256',
        name: 'realPriceX128',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'virtualPriceX128',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'governance',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'initRealToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'insuranceFund',
    outputs: [
      {
        internalType: 'contract IInsuranceFund',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realToken',
        type: 'address',
      },
    ],
    name: 'isRealTokenAlreadyInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'truncated',
        type: 'uint32',
      },
    ],
    name: 'isVTokenAddressAvailable',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositions',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateLiquidityPositionsWithGasClaim',
    outputs: [
      {
        internalType: 'int256',
        name: 'keeperFee',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
    ],
    name: 'liquidateTokenPosition',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'liquidatorAccountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint16',
        name: 'liquidationBps',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'liquidateTokenPositionWithGasClaim',
    outputs: [
      {
        components: [
          {
            internalType: 'int256',
            name: 'vBaseIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'vTokenIncrease',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'traderPositionIncrease',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearingHouse.BalanceAdjustments',
        name: 'liquidatorBalanceAdjustments',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeOracle',
    outputs: [
      {
        internalType: 'contract IOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'numAccounts',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'pools',
    outputs: [
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolInfo',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rBase',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'rTokenId',
        type: 'uint32',
      },
    ],
    name: 'rTokens',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'tokenAddress',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'oracleAddress',
            type: 'address',
          },
          {
            internalType: 'uint32',
            name: 'oracleTimeHorizon',
            type: 'uint32',
          },
        ],
        internalType: 'struct RTokenLib.RToken',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rageTradeFactoryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'realTokenInitilized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
    ],
    name: 'removeLimitOrder',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'int24',
        name: 'tickLower',
        type: 'int24',
      },
      {
        internalType: 'int24',
        name: 'tickUpper',
        type: 'int24',
      },
      {
        internalType: 'uint256',
        name: 'gasComputationUnitsClaim',
        type: 'uint256',
      },
    ],
    name: 'removeLimitOrderWithGasClaim',
    outputs: [
      {
        internalType: 'uint256',
        name: 'keeperFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'rTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeMargin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'removeProfit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_pause',
        type: 'bool',
      },
    ],
    name: 'setPaused',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
    ],
    name: 'setPlatformParameters',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_txGasPriceLimit',
        type: 'uint256',
      },
    ],
    name: 'setTxGasPriceLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedDeposits',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    name: 'supportedVTokens',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int256',
            name: 'amount',
            type: 'int256',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceLimit',
            type: 'uint160',
          },
          {
            internalType: 'bool',
            name: 'isNotional',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isPartialAllowed',
            type: 'bool',
          },
        ],
        internalType: 'struct IClearingHouse.SwapParams',
        name: 'swapParams',
        type: 'tuple',
      },
    ],
    name: 'swapToken',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'teamMultisig',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newGovernance',
        type: 'address',
      },
    ],
    name: 'transferGovernance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newTeamMultisig',
        type: 'address',
      },
    ],
    name: 'transferTeamMultisig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txGasPriceLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'vToken',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'initialMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'maintainanceMarginRatio',
            type: 'uint16',
          },
          {
            internalType: 'uint32',
            name: 'twapDuration',
            type: 'uint32',
          },
          {
            internalType: 'bool',
            name: 'whitelisted',
            type: 'bool',
          },
          {
            internalType: 'contract IOracle',
            name: 'oracle',
            type: 'address',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePoolSettings',
        name: 'newSettings',
        type: 'tuple',
      },
    ],
    name: 'updateRageTradePoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'accountNo',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: 'vTokenTruncatedAddress',
        type: 'uint32',
      },
      {
        components: [
          {
            internalType: 'int24',
            name: 'tickLower',
            type: 'int24',
          },
          {
            internalType: 'int24',
            name: 'tickUpper',
            type: 'int24',
          },
          {
            internalType: 'int128',
            name: 'liquidityDelta',
            type: 'int128',
          },
          {
            internalType: 'uint160',
            name: 'sqrtPriceCurrent',
            type: 'uint160',
          },
          {
            internalType: 'uint16',
            name: 'slippageToleranceBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'closeTokenPosition',
            type: 'bool',
          },
          {
            internalType: 'enum IClearingHouse.LimitOrderType',
            name: 'limitOrderType',
            type: 'uint8',
          },
        ],
        internalType: 'struct IClearingHouse.LiquidityChangeParams',
        name: 'liquidityChangeParams',
        type: 'tuple',
      },
    ],
    name: 'updateRangeOrder',
    outputs: [
      {
        internalType: 'int256',
        name: 'vTokenAmountOut',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: 'vBaseAmountOut',
        type: 'int256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVToken',
        name: 'add',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'status',
        type: 'bool',
      },
    ],
    name: 'updateSupportedVTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'vTokenAddressTruncated',
        type: 'uint32',
      },
    ],
    name: 'vTokens',
    outputs: [
      {
        internalType: 'contract IVToken',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'wrapperAddresses',
        type: 'address[]',
      },
    ],
    name: 'withdrawProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506200001c62000022565b6200018a565b336200002f818062000032565b50565b600054610100900460ff16806200004c575060005460ff16155b620000b45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000d7576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b0386169081029190911782556040519091907f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce80908290a3600180546001600160a01b0319166001600160a01b0384169081179091556040516000907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb2908290a3801562000185576000805461ff00191690555b505050565b6142d3806200019a6000396000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c80637cc2f4f51161015c578063a5cf7688116100ce578063dbd035ff11610087578063dbd035ff14610746578063e1f1671314610766578063eb7c987d14610779578063ee6cd5ee14610824578063fcd0a50614610837578063fe6f083a1461084a57600080fd5b8063a5cf7688146106d1578063b7902303146106e9578063d257be2b146106fc578063d38bfff41461070f578063dac42a9614610722578063dbc0c0851461073557600080fd5b806393420cf41161012057806393420cf41461056657806394c8c71d1461060d57806398f5c527146106205780639dca362f14610633578063a26f7ca71461063b578063a4063dbc1461064e57600080fd5b80637cc2f4f5146104ef5780637ec6ba31146105025780637f64d6631461051557806384088b65146105285780638ce25a931461055d57600080fd5b80633fc42d80116102005780635aa6e675116101b95780635aa6e6751461046f5780635c318ad9146104865780635c975abb1461049957806364f36801146104a657806373cceb9d146104b95780637938d8a3146104dc57600080fd5b80633fc42d801461039857806342be9fca146103cb57806343233d2e146103de5780634e10b6e31461040d5780635616847614610430578063569634d31461045c57600080fd5b80632a66e9ca116102525780632a66e9ca146103115780632afaea371461032457806332a72d981461033757806336fadead1461035f57806339359029146103725780633d56a35e1461038557600080fd5b8063127fec131461028f57806316c38b3c146102bf5780631a1feae1146102d45780631e2eaeaf146102ec578063261f8067146102fe575b600080fd5b60d8546102a2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102d26102cd3660046131a5565b61085d565b005b6102de61013d5481565b6040519081526020016102b6565b6102de6102fa3660046131c2565b5490565b6102d261030c3660046131f0565b6108bb565b6102d261031f36600461321f565b61090a565b6102d2610332366004613268565b6109cd565b61034a6103453660046132f2565b610b35565b604080519283526020830191909152016102b6565b6102d261036d3660046133a1565b610d2e565b6102d2610380366004613268565b610da4565b60d6546102a2906001600160a01b031681565b6103bb6103a63660046131f0565b60d26020526000908152604090205460ff1681565b60405190151581526020016102b6565b6102de6103d93660046133da565b610f00565b6102a26103ec3660046133fc565b63ffffffff166000908152606660205260409020546001600160a01b031690565b6103bb61041b3660046131f0565b60d06020526000908152604090205460ff1681565b6103bb61043e3660046131f0565b6001600160a01b0316600090815260d0602052604090205460ff1690565b6102de61046a3660046131c2565b610fa7565b6000546201000090046001600160a01b03166102a2565b6102d2610494366004613419565b610fba565b60d5546103bb9060ff1681565b6102d26104b43660046133a1565b611023565b6103bb6104c73660046131f0565b60d16020526000908152604090205460ff1681565b6102d26104ea3660046133da565b611099565b6102de6104fd36600461346a565b6111c3565b6102d26105103660046131c2565b6111dc565b6102d26105233660046131f0565b61122d565b61053b6105363660046134d8565b6112fb565b60408051825181526020808401519082015291810151908201526060016102b6565b6102de60d35481565b604080516060808201835260008083526020808401829052928401526067548351808301855260685461ffff808216835262010000820481168387019081526401000000009092048116838801908152606954606a54606b548a516001600160a01b03909816885295518416988701989098529251821697850197909752955190951692820192909252608081019390935260a083019190915260c082015260e0016102b6565b61053b61061b366004613517565b61132d565b6102d261062e366004613569565b6113ff565b6102de6114da565b6102d26106493660046135da565b611579565b61066161065c3660046131f0565b6115f1565b6040805182516001600160a01b03908116825260208085015182168184015293830151805161ffff90811684860152948101519094166060808401919091529284015163ffffffff1660808084019190915292840151151560a083015291909201511660c082015260e0016102b6565b60d5546102a29061010090046001600160a01b031681565b60d7546102a2906001600160a01b031681565b61034a61070a3660046131f0565b6116ce565b6102d261071d3660046131f0565b611702565b6103bb6107303660046133fc565b6117c4565b6001546001600160a01b03166102a2565b61075961075436600461363f565b6117f3565b6040516102b691906136ca565b6102d261077436600461370e565b61181e565b6107ee6107873660046133fc565b60408051606080820183526000808352602080840182905292840181905263ffffffff9485168152606583528390208351918201845280546001600160a01b03908116835260019091015490811692820192909252600160a01b9091049092169082015290565b6040805182516001600160a01b039081168252602080850151909116908201529181015163ffffffff16908201526060016102b6565b61034a610832366004613783565b611974565b6102d26108453660046137c3565b611ae6565b6102de61085836600461380e565b611bb7565b6001546001600160a01b0316331480159061088a57506000546001600160a01b0362010000909104163314155b156108a857604051636bd1573560e11b815260040160405180910390fd5b60d5805460ff1916911515919091179055565b60d6546001600160a01b031633146108e6576040516385734f3160e01b815260040160405180910390fd5b6001600160a01b0316600090815260d060205260409020805460ff19166001179055565b60d6546001600160a01b03163314610935576040516385734f3160e01b815260040160405180910390fd5b8160006001600160a01b03821663ffffffff808216600090815260666020526040812054929350610970926001600160a01b031691611c0516565b61097c5761097c613858565b63ffffffff8116600090815260666020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526064909152902083906109c58282613997565b505050505050565b60d55460ff16156109f1576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610a3057604051630504a20d60e01b81523360048201526024015b60405180910390fd5b6000610a3b84611c16565b9050610a65333085610a5485546001600160a01b031690565b6001600160a01b0316929190611cac565b8054604051631b2d4e8960e01b8152600481018490526001600160a01b0390911660248201526044810184905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90631b2d4e899060640160006040518083038186803b158015610ac957600080fd5b505af4158015610add573d6000803e3d6000fd5b50508254604080518981526001600160a01b03909216602083015281018690527fdce3cf2323481f6a4ecd26864872ec536609f1ad0788710e5786c65b8e51ee75925060600190505b60405180910390a15050505050565b60d554600090819060ff1615610b5e576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b03163314610b9857604051630504a20d60e01b8152336004820152602401610a27565b6000610ba386611d17565b6040805163edd75e2160e01b8152600481018590526001600160a01b0380841660248301528851604483015260208901511660648083019190915291880151151560848201526060880151151560a482015260c481019190915290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__9063edd75e219060e4016040805180830381865af4158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190613a85565b90945092506000610c6f84611dae565b606b54909150811015610c98576040516312b6b5cd60e11b815260048101829052602401610a27565b60208601516001600160a01b031615801590610cb657508560600151155b15610d235785604001518015610cdd57508551610cd290611dae565b610cdb85611dae565b145b80610d0657508560400151158015610d0657508551610cfb90611dae565b610d0486611dae565b145b610d23576040516307a1db0760e01b815260040160405180910390fd5b505050935093915050565b6001546001600160a01b03163314801590610d5b57506000546001600160a01b0362010000909104163314155b15610d7957604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d160205260409020805460ff1916911515919091179055565b60d55460ff1615610dc8576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d46020526040902080546001600160a01b03163314610e0257604051630504a20d60e01b8152336004820152602401610a27565b6000610e0d84611c16565b8054604051634de2913360e11b8152600481018590526001600160a01b0390911660248201526044810185905260648082015290915073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__90639bc522669060840160006040518083038186803b158015610e7a57600080fd5b505af4158015610e8e573d6000803e3d6000fd5b50505050610eb83384610ea884546001600160a01b031690565b6001600160a01b03169190611dc9565b8054604080518781526001600160a01b03909216602083015281018490527fbe29a6b389df4dde99b5e61c229ee4fcb393f7f54c362aa57d8c92200183094690606001610b26565b6000818015610f89576000610f13611df9565b5a610f1e9190613abf565b9050610f2a6044611eb1565b610f348585611edd565b92506000610f40611df9565b5a610f4b9190613abf565b610f559083613ad7565b905080831115610f8257604051634010928f60e01b81526004810184905260248101829052604401610a27565b5050610fa0565b610f936044611eb1565b610f9d8484611edd565b91505b5092915050565b6000610fb4826000611edd565b92915050565b6001546001600160a01b03163314801590610fe757506000546001600160a01b0362010000909104163314155b1561100557604051636bd1573560e11b815260040160405180910390fd5b8360686110128282613aee565b5050606a92909255606b5560695550565b6001546001600160a01b0316331480159061105057506000546001600160a01b0362010000909104163314155b1561106e57604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b0391909116600090815260d260205260409020805460ff1916911515919091179055565b60d55460ff16156110bd576040516313d0ff5960e31b815260040160405180910390fd5b600082815260d46020526040902080546001600160a01b031633146110f757604051630504a20d60e01b8152336004820152602401610a27565b604051634042e78f60e01b8152600481018290526024810183905260646044820181905273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__91634042e78f910160006040518083038186803b15801561115057600080fd5b505af4158015611164573d6000803e3d6000fd5b505060d554611185925061010090046001600160a01b031690503384611dc9565b60408051848152602081018490527fb8635fe5938466cc626f7c214bf818f090e2b736368828f448cd2b379cf0174e910160405180910390a1505050565b60006111d3858585856000612032565b95945050505050565b6001546001600160a01b0316331480159061120957506000546001600160a01b0362010000909104163314155b1561122757604051636bd1573560e11b815260040160405180910390fd5b61013d55565b6001546001600160a01b0316331480159061125a57506000546001600160a01b0362010000909104163314155b1561127857604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661129f5760405163d92e233d60e01b815260040160405180910390fd5b6001546040516001600160a01b038084169216907f39355f2f5c8206286978f443aa8126bbd29fa09c53c04569502647f3a59c8cb290600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b61131f60405180606001604052806000815260200160008152602001600081525090565b6111d3858585856000612148565b61135160405180606001604052806000815260200160008152602001600081525090565b8180156113db576000611362611df9565b5a61136d9190613abf565b905061137960a4611eb1565b6113868888888888612148565b92506000611392611df9565b5a61139d9190613abf565b6113a79083613ad7565b9050808311156113d457604051634010928f60e01b81526004810184905260248101829052604401610a27565b50506113f5565b6113e560a4611eb1565b6113f28787878787612148565b91505b5095945050505050565b600054610100900460ff1680611418575060005460ff16155b6114345760405162461bcd60e51b8152600401610a2790613b5c565b600054610100900460ff16158015611456576000805461ffff19166101011790555b60d680546001600160a01b03199081166001600160a01b038981169190911790925560d58054610100600160a81b0319166101008985160217905560d78054821687841617905560d880548216858416179055606780549091169185169190911790556114c16122b7565b80156109c5576000805461ff0019169055505050505050565b60d55460009060ff1615611501576040516313d0ff5960e31b815260040160405180910390fd5b5060d354611510816001613abf565b60d355600081815260d4602090815260409182902080546001600160a01b031916339081178255600182018590558351908152918201849052917f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3910160405180910390a15090565b6001546001600160a01b031633148015906115a657506000546001600160a01b0362010000909104163314155b156115c457604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b038216600090815260646020526040902081906002016115eb82826138df565b50505050565b611636604080516060808201835260008083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b506001600160a01b039081166000908152606460209081526040918290208251606080820185528254861682526001830154861682850152845160a08101865260029093015461ffff8082168552620100008204169484019490945263ffffffff6401000000008504168386015260ff600160401b850416151590830152600160481b90920490931660808401529081019190915290565b6000806116e56001600160a01b03841660646122c2565b91506116fb6001600160a01b03841660646122ef565b9050915091565b6000546001600160a01b036201000090910416331461173457604051636bd1573560e11b815260040160405180910390fd5b6001600160a01b03811661175b5760405163d92e233d60e01b815260040160405180910390fd5b600080546040516001600160a01b03808516936201000090930416917f5f56bee8cffbe9a78652a74a60705edede02af10b0bbb888ca44b79a0d42ce8091a3600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b63ffffffff8082166000908152606660205260408120549091610fb4916001600160a01b0316908390611c0516565b606060208251028201602001825b81811015611816576020018051548152611801565b509192915050565b6000805b8281101561194157600084848381811061183e5761183e613baa565b905060200201602081019061185391906131f0565b6001600160a01b0316635e622abc6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b69190613bc0565b90507f4b5237f428d31406cf0f93a4ab5fd11482f2fe9a1420271368d67e83496346c48585848181106118eb576118eb613baa565b905060200201602081019061190091906131f0565b604080516001600160a01b039092168252602082018490520160405180910390a161192b8184613abf565b925050808061193990613bd9565b915050611822565b5061196f6119576001546001600160a01b031690565b60d55461010090046001600160a01b03169083611dc9565b505050565b60d554600090819060ff161561199d576040516313d0ff5960e31b815260040160405180910390fd5b600085815260d46020526040902080546001600160a01b031633146119d757604051630504a20d60e01b8152336004820152602401610a27565b60006119e286611d17565b90506119f460808601606087016131f0565b6001600160a01b031615611a2b57611a2b81611a1660808801606089016131f0565b611a2660a0890160808a01613bf4565b612307565b6040516349e373d360e01b815273__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906349e373d390611a6990859085908a90606490600401613c42565b6040805180830381865af4158015611a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa99190613a85565b90945092506000611abd82868660646123a9565b606b54909150811015610d23576040516312b6b5cd60e11b815260048101829052602401610a27565b6001546001600160a01b03163314801590611b1357506000546001600160a01b0362010000909104163314155b15611b3157604051636bd1573560e11b815260040160405180910390fd5b604080516060810182526001600160a01b038086168252938416602080830191825263ffffffff9485168385019081529685166000908152606590915292909220905181549085166001600160a01b0319909116178155905160019190910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6000818015611bee576000611bca611df9565b5a611bd59190613abf565b9050611be160a4611eb1565b6113868888888888612032565b611bf860a4611eb1565b6113f28787878787612032565b6001600160a01b0390811691161490565b63ffffffff808216600090815260656020526040812091611c399183916123e916565b15611c5f5760405163b087c8c360e01b815263ffffffff83166004820152602401610a27565b80546001600160a01b0316600090815260d2602052604090205460ff16611ca757805460405163340e1b9160e21b81526001600160a01b039091166004820152602401610a27565b919050565b6040516001600160a01b03808516602483015283166044820152606481018290526115eb9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526123fc565b63ffffffff8082166000908152606660205260408120546001600160a01b031691611d44918391611c0516565b15611d6a5760405163b087c8c360e01b815263ffffffff83166004820152602401610a27565b6001600160a01b038116600090815260d1602052604090205460ff16611ca757604051631079472960e21b81526001600160a01b0382166004820152602401610a27565b6000808213611dc557611dc082613d14565b610fb4565b5090565b6040516001600160a01b03831660248201526044810182905261196f90849063a9059cbb60e01b90606401611ce0565b60408051600481526024810182526020810180516001600160e01b031663a94597ff60e01b179052905160009182918291606491611e379190613d5d565b600060405180830381855afa9150503d8060008114611e72576040519150601f19603f3d011682016040523d82523d6000602084013e611e77565b606091505b5091509150811580611e8857508051155b15611e965760009250505090565b80806020019051810190611eaa9190613bc0565b9250505090565b368110611eda57604051634219202560e01b815236600482015260248101829052604401610a27565b50565b60d55460009060ff1615611f04576040516313d0ff5960e31b815260040160405180910390fd5b600083815260d4602052604081209073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__6379452b2383611f37876124ce565b6040516001600160e01b031960e085901b16815260048101929092526024820152606460448201819052016040805180830381865af4158015611f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa29190613a85565b90935090506000611fb38285613d79565b60d554909150611fd29061010090046001600160a01b03163386611dc9565b611fdb826125e7565b6040805187815233602082015290810182905260608101859052608081018390527f914a6aef8c0c1a591157ee7d71dfbd71d1d7df090d3ec047f8eac01fc21b2f439060a00160405180910390a150505092915050565b60d55460009060ff1615612059576040516313d0ff5960e31b815260040160405180910390fd5b600086815260d4602052604081209061207187611d17565b905061207c846124ce565b606a546120899190613abf565b6040516343c74e9360e01b8152600481018490526001600160a01b0383166024820152600288810b604483015287900b6064808301919091526084820183905260a482015290935073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$__906343c74e939060c40160006040518083038186803b15801561210857600080fd5b505af415801561211c573d6000803e3d6000fd5b505060d55461213d925061010090046001600160a01b031690503385611dc9565b505095945050505050565b61216c60405180606001604052806000815260200160008152602001600081525090565b60d55460ff1615612190576040516313d0ff5960e31b815260040160405180910390fd5b6127108361ffff1611156121b7576040516348d69f3560e01b815260040160405180910390fd5b600085815260d460205260408120906121cf86611d17565b600089815260d4602052604081209192509073__$86182d6e9eac51236f2aa8dd2a3ddeab6c$';

type ClearingHouseArbitrumConstructorParams =
  | [
      linkLibraryAddresses: ClearingHouseArbitrumLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClearingHouseArbitrumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === 'string' ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    '_isInterface' in xs[0]
  );
};

export class ClearingHouseArbitrum__factory extends ContractFactory {
  constructor(...args: ClearingHouseArbitrumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClearingHouseArbitrum__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClearingHouseArbitrumLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp('__\\$86182d6e9eac51236f2aa8dd2a3ddeab6c\\$__', 'g'),
      linkLibraryAddresses['contracts/libraries/Account.sol:Account']
        .replace(/^0x/, '')
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClearingHouseArbitrum> {
    return super.deploy(overrides || {}) as Promise<ClearingHouseArbitrum>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClearingHouseArbitrum {
    return super.attach(address) as ClearingHouseArbitrum;
  }
  connect(signer: Signer): ClearingHouseArbitrum__factory {
    return super.connect(signer) as ClearingHouseArbitrum__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClearingHouseArbitrumInterface {
    return new utils.Interface(_abi) as ClearingHouseArbitrumInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClearingHouseArbitrum {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ClearingHouseArbitrum;
  }
}

export interface ClearingHouseArbitrumLibraryAddresses {
  ['contracts/libraries/Account.sol:Account']: string;
}
