/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  DepositTokenSetTest,
  DepositTokenSetTestInterface,
} from '../DepositTokenSetTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllDepositAccountMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'depositValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
    ],
    name: 'getBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'initVToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060d380546001600160a01b0319166001600160a01b039290921691909117905561006c565b61087d8061110583390190565b61108a8061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638b1a8fb61161008c578063ac210cc711610066578063ac210cc7146102d8578063ed16575a14610303578063f8b2cb4f1461030b578063ff0569491461033157600080fd5b80638b1a8fb6146101eb5780638ce744261461022d578063a96822a3146102d057600080fd5b80631ca45818146100d45780632a66e9ca146100f05780633fd687a1146101055780635b86f59914610135578063713fdf471461014857806388077639146101d8575b600080fd5b6100dd606c5481565b6040519081526020015b60405180910390f35b6101036100fe366004610bd4565b610344565b005b610103610113366004610c16565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610103610143366004610c33565b6103db565b610103610156366004610c71565b604080516060810182526001600160a01b038581168252938416602080830191825263ffffffff948516838501908152968516600090815260019182905293909320915182549086166001600160a01b031990911617825551910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6101036101e6366004610cbc565b6103eb565b6101036101f9366004610c16565b63ffffffff8116600090815260026020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b6003546040805160608101825260045461ffff8082168352620100008204811660208401526401000000009091041691810191909152600554600654600754610280946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e0016100e7565b6100dd61040f565b60d3546102eb906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b610103610421565b6100dd610319366004610c16565b63ffffffff166000908152606e602052604090205490565b61010361033f366004610c33565b6104bb565b8160006001600160a01b03821663ffffffff80821660009081526002602052604081205492935061037f926001600160a01b0316916104c716565b61038b5761038b610d07565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835290829052902083906103d38282610d5e565b505050505050565b6103e7606d83836104d8565b5050565b8460046103f88282610ea1565b5050600593909355600691909155600755606c5550565b600061041c606d8261051e565b905090565b60005b60088110156104b8576000606d826008811061044257610442610ee7565b60088104919091015460079091166004026101000a900463ffffffff1690508061046a575050565b63ffffffff808216600090815260016020908152604080832054606e909252909120546104a592606d926001600160a01b031691906105e416565b50806104b081610f13565b915050610424565b50565b6103e7606d83836105e4565b6001600160a01b0390811691161490565b6001600160a01b0382166104ec848261066b565b63ffffffff8316600090815260018501602052604081208054849290610513908490610f2e565b909155505050505050565b60008060005b60088160ff1610156105dc5760008560ff83166008811061054757610547610ee7565b60088104919091015460079091166004026101000a900463ffffffff1690508061057157506105dc565b63ffffffff8116600090815260018601602052604090206105bb610594826107b6565b63ffffffff808516600090815260018b0160205260409020549190600160801b906107d816565b6105c59085610f46565b9350505080806105d490610f87565b915050610524565b509392505050565b63ffffffff821660009081526001840160205260409020546001600160a01b0383169082111561061357600080fd5b63ffffffff811660009081526001850160205260408120805484929061063a908490610fa7565b909155505063ffffffff8116600090815260018501602052604090205461066557610665848261081c565b50505050565b63ffffffff811661069757604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b600881101561074a578263ffffffff168482600881106106be576106be610ee7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156106ec5750505050565b81600814801561072f5750600084826008811061070b5761070b610ee7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b15610738578091505b8061074281610f13565b91505061069c565b50806008141561077557604051630695727160e11b815263ffffffff8316600482015260240161068e565b8183826008811061078857610788610ee7565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b60006107d26107c483610a02565b6001600160a01b0316610a94565b92915050565b60006107fe600085126107eb57846107f7565b6107f785600019610fbe565b8484610b11565b905060008412156108155761081281611043565b90505b9392505050565b63ffffffff811661084357604051633f16439160e01b81526000600482015260240161068e565b600860005b60088110156108fc578263ffffffff1684826008811061086a5761086a610ee7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610896578091505b8381600881106108a8576108a8610ee7565b60088104919091015460079091166004026101000a900463ffffffff166108ea57600081116108d85760006108e3565b6108e3600182610fa7565b90506108fc565b806108f481610f13565b915050610848565b81600814610665578181141561094e57600084836008811061092057610920610ee7565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550610665565b83816008811061096057610960610ee7565b600891828204019190066004029054906101000a900463ffffffff16600085846008811061099057610990610ee7565b600891828204019190066004028785600881106109af576109af610ee7565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b6000610a1882600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190611060565b60006401000276a36001600160a01b0383161080610acf575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15610af857604051635d236c4560e01b81526001600160a01b038316600482015260240161068e565b6107d26001600160a01b03831680680100000000000000005b600080806000198587098587029250828110838203039150508060001415610b4b5760008411610b4057600080fd5b508290049050610815565b808411610b5757600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6001600160a01b03811681146104b857600080fd5b600080828403610100811215610be957600080fd5b8335610bf481610bbf565b925060e0601f1982011215610c0857600080fd5b506020830190509250929050565b600060208284031215610c2857600080fd5b813561081581610bbf565b60008060408385031215610c4657600080fd5b8235610c5181610bbf565b946020939093013593505050565b63ffffffff811681146104b857600080fd5b600080600060608486031215610c8657600080fd5b8335610c9181610bbf565b92506020840135610ca181610bbf565b91506040840135610cb181610c5f565b809150509250925092565b600080600080600085870360e0811215610cd557600080fd5b6060811215610ce357600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000813561ffff811681146107d257600080fd5b600081356107d281610bbf565b8135610d6981610bbf565b610d738183610d1d565b506020820135610d8281610bbf565b610d8f8160018401610d1d565b5060028101610db6610da360408501610d3d565b825461ffff191661ffff91909116178255565b610ddf610dc560608501610d3d565b825463ffff0000191660109190911b63ffff000016178255565b6080830135610ded81610c5f565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135801515808214610e2357600080fd5b68ff00000000000000008160401b168468ffffffffff000000001985161717855550505050610e9c610e5760c08501610d51565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b505050565b610ead610da383610d3d565b610ebc610dc560208401610d3d565b610ec860408301610d3d565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f2757610f27610efd565b5060010190565b60008219821115610f4157610f41610efd565b500190565b600080821280156001600160ff1b0384900385131615610f6857610f68610efd565b600160ff1b8390038412811615610f8157610f81610efd565b50500190565b600060ff821660ff811415610f9e57610f9e610efd565b60010192915050565b600082821015610fb957610fb9610efd565b500390565b60006001600160ff1b0381841382841380821686840486111615610fe457610fe4610efd565b600160ff1b600087128281168783058912161561100357611003610efd565b6000871292508782058712848416161561101f5761101f610efd565b8785058712818416161561103557611035610efd565b505050929093029392505050565b6000600160ff1b82141561105957611059610efd565b5060000390565b60006020828403121561107257600080fd5b815161081581610bbf56fea164736f6c634300080a000a608060405234801561001057600080fd5b5061085d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637aba8e6811610097578063bb152c5311610066578063bb152c5314610209578063d440c42014610231578063d74dcaca14610253578063ea6e4e521461028c57600080fd5b80637aba8e68146101e557806397c71faf146101f6578063a3a1e7e9146101db578063a3c35e2c1461012057600080fd5b80634c2ebc58116100d35780634c2ebc58146101425780635e622abc146101a95780636719578c146101b05780637779815c146101db57600080fd5b80630d8f6f46146100fa5780632a99a7921461012057806333f9096314610140575b600080fd5b61010d610108366004610499565b6102bc565b6040519081526020015b60405180910390f35b61013361012e3660046104c9565b6102d1565b60405161011791906104fc565b005b610140610150366004610527565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b600061010d565b6002546101c3906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b600560821b61010d565b6101406101f336600461057c565b50565b61010d610204366004610499565b61034e565b61021c6102173660046105a9565b61035c565b60408051928352602083019190915201610117565b61024461023f3660046105f0565b6103a7565b60405161011793929190610632565b610140610261366004610676565b600293840b60009081526001602081815260408084209690970b835294909452939093209081550155565b61014061029a3660046106b8565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60006102cb82610f9f196106f2565b92915050565b6102fc6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b60006102cb610fa083610777565b600080821561038557610fa0610371866107b3565b61037b9190610777565b915084905061039f565b61038e856107b3565b915061039c85610fa06106f2565b90505b935093915050565b6000806103d56040518060800160405280600081526020016000815260200160008152602001600081525090565b600084600f0b13156104015783600f0b600360008282546103f691906107d0565b9091555061041c9050565b83600f0b600360008282546104169190610811565b90915550505b600286810b60009081526001602090815260408083209389900b8352929052205461044c90600f86900b906106f2565b600287810b6000908152600160208181526040808420948b900b8452939052919020015490935061048290600f86900b906106f2565b915061048e86866102d1565b905093509350939050565b6000602082840312156104ab57600080fd5b5035919050565b8035600281900b81146104c457600080fd5b919050565b600080604083850312156104dc57600080fd5b6104e5836104b2565b91506104f3602084016104b2565b90509250929050565b81518152602080830151908201526040808301519082015260608083015190820152608081016102cb565b60008060008060008060c0878903121561054057600080fd5b610549876104b2565b9550610557602088016104b2565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060e0828403121561058e57600080fd5b50919050565b6001600160a01b03811681146101f357600080fd5b6000806000606084860312156105be57600080fd5b8335925060208401356105d081610594565b9150604084013580151581146105e557600080fd5b809150509250925092565b60008060006060848603121561060557600080fd5b61060e846104b2565b925061061c602085016104b2565b9150604084013580600f0b81146105e557600080fd5b8381526020810183905260c0810161066e6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b6000806000806080858703121561068c57600080fd5b610695856104b2565b93506106a3602086016104b2565b93969395505050506040820135916060013590565b6000602082840312156106ca57600080fd5b81356106d581610594565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b0381841382841380821686840486111615610718576107186106dc565b600160ff1b6000871282811687830589121615610737576107376106dc565b60008712925087820587128484161615610753576107536106dc565b87850587128184161615610769576107696106dc565b505050929093029392505050565b60008261079457634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156107ae576107ae6106dc565b500590565b6000600160ff1b8214156107c9576107c96106dc565b5060000390565b600080821280156001600160ff1b03849003851316156107f2576107f26106dc565b600160ff1b839003841281161561080b5761080b6106dc565b50500190565b60008083128015600160ff1b85018412161561082f5761082f6106dc565b6001600160ff1b038401831381161561084a5761084a6106dc565b5050039056fea164736f6c634300080a000a';

type DepositTokenSetTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositTokenSetTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositTokenSetTest__factory extends ContractFactory {
  constructor(...args: DepositTokenSetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DepositTokenSetTest> {
    return super.deploy(overrides || {}) as Promise<DepositTokenSetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DepositTokenSetTest {
    return super.attach(address) as DepositTokenSetTest;
  }
  connect(signer: Signer): DepositTokenSetTest__factory {
    return super.connect(signer) as DepositTokenSetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositTokenSetTestInterface {
    return new utils.Interface(_abi) as DepositTokenSetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositTokenSetTest {
    return new Contract(address, _abi, signerOrProvider) as DepositTokenSetTest;
  }
}
