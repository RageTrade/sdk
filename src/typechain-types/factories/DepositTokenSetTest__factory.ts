/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  DepositTokenSetTest,
  DepositTokenSetTestInterface,
} from '../DepositTokenSetTest';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint160',
        name: 'sqrtPriceX96',
        type: 'uint160',
      },
    ],
    name: 'IllegalSqrtPrice',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllDepositAccountMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'depositValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
    ],
    name: 'getBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'rTokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'initVToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'full',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'whitelisted',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouse.RageTradePoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouse.RageTradePool',
        name: 'rageTradePool',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct Account.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b5060d380546001600160a01b0319166001600160a01b039290921691909117905561006c565b6108ec8061110583390190565b61108a8061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638b1a8fb61161008c578063ac210cc711610066578063ac210cc7146102d8578063ed16575a14610303578063f8b2cb4f1461030b578063ff0569491461033157600080fd5b80638b1a8fb6146101eb5780638ce744261461022d578063a96822a3146102d057600080fd5b80631ca45818146100d45780632a66e9ca146100f05780633fd687a1146101055780635b86f59914610135578063713fdf471461014857806388077639146101d8575b600080fd5b6100dd606c5481565b6040519081526020015b60405180910390f35b6101036100fe366004610bd4565b610344565b005b610103610113366004610c16565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b610103610143366004610c33565b6103db565b610103610156366004610c71565b604080516060810182526001600160a01b038581168252938416602080830191825263ffffffff948516838501908152968516600090815260019182905293909320915182549086166001600160a01b031990911617825551910180549451909216600160a01b026001600160c01b0319909416921691909117919091179055565b6101036101e6366004610cbc565b6103eb565b6101036101f9366004610c16565b63ffffffff8116600090815260026020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b6003546040805160608101825260045461ffff8082168352620100008204811660208401526401000000009091041691810191909152600554600654600754610280946001600160a01b03169392919085565b604080516001600160a01b039096168652845161ffff9081166020808901919091528601518116878301529401519093166060850152608084019190915260a083015260c082015260e0016100e7565b6100dd61040f565b60d3546102eb906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b610103610421565b6100dd610319366004610c16565b63ffffffff166000908152606e602052604090205490565b61010361033f366004610c33565b6104bb565b8160006001600160a01b03821663ffffffff80821660009081526002602052604081205492935061037f926001600160a01b0316916104c716565b61038b5761038b610d07565b63ffffffff8116600090815260026020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835290829052902083906103d38282610d5e565b505050505050565b6103e7606d83836104d8565b5050565b8460046103f88282610ea1565b5050600593909355600691909155600755606c5550565b600061041c606d8261051e565b905090565b60005b60088110156104b8576000606d826008811061044257610442610ee7565b60088104919091015460079091166004026101000a900463ffffffff1690508061046a575050565b63ffffffff808216600090815260016020908152604080832054606e909252909120546104a592606d926001600160a01b031691906105e416565b50806104b081610f13565b915050610424565b50565b6103e7606d83836105e4565b6001600160a01b0390811691161490565b6001600160a01b0382166104ec848261066b565b63ffffffff8316600090815260018501602052604081208054849290610513908490610f2e565b909155505050505050565b60008060005b60088160ff1610156105dc5760008560ff83166008811061054757610547610ee7565b60088104919091015460079091166004026101000a900463ffffffff1690508061057157506105dc565b63ffffffff8116600090815260018601602052604090206105bb610594826107b6565b63ffffffff808516600090815260018b0160205260409020549190600160801b906107d816565b6105c59085610f46565b9350505080806105d490610f87565b915050610524565b509392505050565b63ffffffff821660009081526001840160205260409020546001600160a01b0383169082111561061357600080fd5b63ffffffff811660009081526001850160205260408120805484929061063a908490610fa7565b909155505063ffffffff8116600090815260018501602052604090205461066557610665848261081c565b50505050565b63ffffffff811661069757604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b600881101561074a578263ffffffff168482600881106106be576106be610ee7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156106ec5750505050565b81600814801561072f5750600084826008811061070b5761070b610ee7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b15610738578091505b8061074281610f13565b91505061069c565b50806008141561077557604051630695727160e11b815263ffffffff8316600482015260240161068e565b8183826008811061078857610788610ee7565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b60006107d26107c483610a02565b6001600160a01b0316610a94565b92915050565b60006107fe600085126107eb57846107f7565b6107f785600019610fbe565b8484610b11565b905060008412156108155761081281611043565b90505b9392505050565b63ffffffff811661084357604051633f16439160e01b81526000600482015260240161068e565b600860005b60088110156108fc578263ffffffff1684826008811061086a5761086a610ee7565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610896578091505b8381600881106108a8576108a8610ee7565b60088104919091015460079091166004026101000a900463ffffffff166108ea57600081116108d85760006108e3565b6108e3600182610fa7565b90506108fc565b806108f481610f13565b915050610848565b81600814610665578181141561094e57600084836008811061092057610920610ee7565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550610665565b83816008811061096057610960610ee7565b600891828204019190066004029054906101000a900463ffffffff16600085846008811061099057610990610ee7565b600891828204019190066004028785600881106109af576109af610ee7565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b6000610a1882600101546001600160a01b031690565b6001830154604051630e56d76760e31b8152600160a01b90910463ffffffff1660048201526001600160a01b0391909116906372b6bb3890602401602060405180830381865afa158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190611060565b60006401000276a36001600160a01b0383161080610acf575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b03831610155b15610af857604051635d236c4560e01b81526001600160a01b038316600482015260240161068e565b6107d26001600160a01b03831680680100000000000000005b600080806000198587098587029250828110838203039150508060001415610b4b5760008411610b4057600080fd5b508290049050610815565b808411610b5757600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6001600160a01b03811681146104b857600080fd5b600080828403610100811215610be957600080fd5b8335610bf481610bbf565b925060e0601f1982011215610c0857600080fd5b506020830190509250929050565b600060208284031215610c2857600080fd5b813561081581610bbf565b60008060408385031215610c4657600080fd5b8235610c5181610bbf565b946020939093013593505050565b63ffffffff811681146104b857600080fd5b600080600060608486031215610c8657600080fd5b8335610c9181610bbf565b92506020840135610ca181610bbf565b91506040840135610cb181610c5f565b809150509250925092565b600080600080600085870360e0811215610cd557600080fd5b6060811215610ce357600080fd5b509496606088013596506080880135955060a0880135945060c08801359350915050565b634e487b7160e01b600052600160045260246000fd5b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000813561ffff811681146107d257600080fd5b600081356107d281610bbf565b8135610d6981610bbf565b610d738183610d1d565b506020820135610d8281610bbf565b610d8f8160018401610d1d565b5060028101610db6610da360408501610d3d565b825461ffff191661ffff91909116178255565b610ddf610dc560608501610d3d565b825463ffff0000191660109190911b63ffff000016178255565b6080830135610ded81610c5f565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835560a0850135801515808214610e2357600080fd5b68ff00000000000000008160401b168468ffffffffff000000001985161717855550505050610e9c610e5760c08501610d51565b8280547fffffff0000000000000000000000000000000000000000ffffffffffffffffff1660489290921b6901000000000000000000600160e81b0316919091179055565b505050565b610ead610da383610d3d565b610ebc610dc560208401610d3d565b610ec860408301610d3d565b815465ffff00000000191660209190911b65ffff000000001617905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f2757610f27610efd565b5060010190565b60008219821115610f4157610f41610efd565b500190565b600080821280156001600160ff1b0384900385131615610f6857610f68610efd565b600160ff1b8390038412811615610f8157610f81610efd565b50500190565b600060ff821660ff811415610f9e57610f9e610efd565b60010192915050565b600082821015610fb957610fb9610efd565b500390565b60006001600160ff1b0381841382841380821686840486111615610fe457610fe4610efd565b600160ff1b600087128281168783058912161561100357611003610efd565b6000871292508782058712848416161561101f5761101f610efd565b8785058712818416161561103557611035610efd565b505050929093029392505050565b6000600160ff1b82141561105957611059610efd565b5060000390565b60006020828403121561107257600080fd5b815161081581610bbf56fea164736f6c634300080a000a608060405234801561001057600080fd5b506108cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806386c8e9a7116100a2578063bb152c5311610071578063bb152c5314610263578063d440c4201461028b578063d74dcaca146102ad578063ea6e4e52146102e6578063fca6fbf21461031657600080fd5b806386c8e9a71461023a57806397c71faf14610250578063a3a1e7e91461021f578063a3c35e2c1461016457600080fd5b80634c2ebc58116100e95780634c2ebc58146101865780635e622abc146101ed5780636719578c146101f45780637779815c1461021f5780637aba8e681461022957600080fd5b806302dc99511461011b5780630d8f6f46146101435780632a99a7921461016457806333f9096314610184575b600080fd5b60015461012a9062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b610156610151366004610508565b61032f565b60405190815260200161013a565b610177610172366004610538565b610344565b60405161013a919061056b565b005b610184610194366004610596565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610156565b600354610207906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b600560821b610156565b6101846102373660046105eb565b50565b60015461012a906301000000900462ffffff1681565b61015661025e366004610508565b6103c1565b610276610271366004610618565b6103cf565b6040805192835260208301919091520161013a565b61029e61029936600461065f565b61041a565b60405161013a939291906106a1565b6101846102bb3660046106e5565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101846102f4366004610727565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60015461012a906601000000000000900462ffffff1681565b600061033e82610f9f19610761565b92915050565b61036f6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061033e610fa0836107e6565b60008082156103f857610fa06103e486610822565b6103ee91906107e6565b9150849050610412565b61040185610822565b915061040f85610fa0610761565b90505b935093915050565b6000806104486040518060800160405280600081526020016000815260200160008152602001600081525090565b600084600f0b13156104745783600f0b60046000828254610469919061083f565b9091555061048f9050565b83600f0b600460008282546104899190610880565b90915550505b600286810b6000908152602082815260408083209389900b835292905220546104bd90600f86900b90610761565b600287810b600090815260208281526040808320938a900b835292905220600101549093506104f190600f86900b90610761565b91506104fd8686610344565b905093509350939050565b60006020828403121561051a57600080fd5b5035919050565b8035600281900b811461053357600080fd5b919050565b6000806040838503121561054b57600080fd5b61055483610521565b915061056260208401610521565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161033e565b60008060008060008060c087890312156105af57600080fd5b6105b887610521565b95506105c660208801610521565b95989597505050506040840135936060810135936080820135935060a0909101359150565b600060e082840312156105fd57600080fd5b50919050565b6001600160a01b038116811461023757600080fd5b60008060006060848603121561062d57600080fd5b83359250602084013561063f81610603565b91506040840135801515811461065457600080fd5b809150509250925092565b60008060006060848603121561067457600080fd5b61067d84610521565b925061068b60208501610521565b9150604084013580600f0b811461065457600080fd5b8381526020810183905260c081016106dd6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080600080608085870312156106fb57600080fd5b61070485610521565b935061071260208601610521565b93969395505050506040820135916060013590565b60006020828403121561073957600080fd5b813561074481610603565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b03818413828413808216868404861116156107875761078761074b565b600160ff1b60008712828116878305891216156107a6576107a661074b565b600087129250878205871284841616156107c2576107c261074b565b878505871281841616156107d8576107d861074b565b505050929093029392505050565b60008261080357634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561081d5761081d61074b565b500590565b6000600160ff1b8214156108385761083861074b565b5060000390565b600080821280156001600160ff1b03849003851316156108615761086161074b565b600160ff1b839003841281161561087a5761087a61074b565b50500190565b60008083128015600160ff1b85018412161561089e5761089e61074b565b6001600160ff1b03840183138116156108b9576108b961074b565b5050039056fea164736f6c634300080a000a';

type DepositTokenSetTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositTokenSetTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositTokenSetTest__factory extends ContractFactory {
  constructor(...args: DepositTokenSetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DepositTokenSetTest> {
    return super.deploy(overrides || {}) as Promise<DepositTokenSetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DepositTokenSetTest {
    return super.attach(address) as DepositTokenSetTest;
  }
  connect(signer: Signer): DepositTokenSetTest__factory {
    return super.connect(signer) as DepositTokenSetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositTokenSetTestInterface {
    return new utils.Interface(_abi) as DepositTokenSetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositTokenSetTest {
    return new Contract(address, _abi, signerOrProvider) as DepositTokenSetTest;
  }
}
