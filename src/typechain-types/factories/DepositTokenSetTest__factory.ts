/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  DepositTokenSetTest,
  DepositTokenSetTestInterface,
} from '../DepositTokenSetTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_rBase',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'IllegalElement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'element',
        type: 'uint32',
      },
    ],
    name: 'NoSpaceLeftToInsert',
    type: 'error',
  },
  {
    inputs: [],
    name: 'cleanDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'decreaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'fixFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllDepositAccountMarketValue',
    outputs: [
      {
        internalType: 'int256',
        name: 'depositValue',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
    ],
    name: 'getBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'realTokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'increaseBalance',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'cToken',
        type: 'address',
      },
      {
        internalType: 'contract IOracle',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'twapDuration',
        type: 'uint32',
      },
    ],
    name: 'init',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vToken',
        type: 'address',
      },
    ],
    name: 'initVToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocol',
    outputs: [
      {
        internalType: 'contract IVBase',
        name: 'vBase',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'cBase',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: 'liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'minimumOrderNotional',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'contract IVToken',
            name: 'vToken',
            type: 'address',
          },
          {
            internalType: 'contract IUniswapV3Pool',
            name: 'vPool',
            type: 'address',
          },
          {
            internalType: 'contract IVPoolWrapper',
            name: 'vPoolWrapper',
            type: 'address',
          },
          {
            components: [
              {
                internalType: 'uint16',
                name: 'initialMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint16',
                name: 'maintainanceMarginRatio',
                type: 'uint16',
              },
              {
                internalType: 'uint32',
                name: 'twapDuration',
                type: 'uint32',
              },
              {
                internalType: 'bool',
                name: 'supported',
                type: 'bool',
              },
              {
                internalType: 'bool',
                name: 'isCrossMargined',
                type: 'bool',
              },
              {
                internalType: 'contract IOracle',
                name: 'oracle',
                type: 'address',
              },
            ],
            internalType: 'struct IClearingHouseStructures.PoolSettings',
            name: 'settings',
            type: 'tuple',
          },
        ],
        internalType: 'struct IClearingHouseStructures.Pool',
        name: 'poolInfo',
        type: 'tuple',
      },
    ],
    name: 'registerPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'liquidationFeeFraction',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tokenLiquidationPriceDeltaBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'insuranceFundFeeShareBps',
            type: 'uint16',
          },
          {
            internalType: 'uint128',
            name: 'maxRangeLiquidationFees',
            type: 'uint128',
          },
        ],
        internalType: 'struct IClearingHouseStructures.LiquidationParams',
        name: '_liquidationParams',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_minRequiredMargin',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_removeLimitOrderFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minimumOrderNotional',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_fixFee',
        type: 'uint256',
      },
    ],
    name: 'setAccountStorage',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVBase',
        name: '_vBase',
        type: 'address',
      },
    ],
    name: 'setVBaseAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wrapper',
    outputs: [
      {
        internalType: 'contract VPoolWrapperMock',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051611aed380380611aed83398101604081905261002f91610099565b60405161003b9061008c565b604051809103906000f080158015610057573d6000803e3d6000fd5b5060d380546001600160a01b039283166001600160a01b031991821617909155600380549390921692169190911790556100c9565b6109878061116683390190565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b61108e806100d86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638b1a8fb61161008c578063ac210cc711610066578063ac210cc714610299578063ed16575a146102c4578063f8b2cb4f146102cc578063ff056949146102f257600080fd5b80638b1a8fb61461016e5780638ce74426146101b0578063a96822a31461029157600080fd5b80631ca45818146100d457806338da803e146100f05780633a64c245146101055780633fd687a1146101185780635b86f59914610148578063713fdf471461015b575b600080fd5b6100dd606c5481565b6040519081526020015b60405180910390f35b6101036100fe366004610b50565b610305565b005b610103610113366004610b9c565b610329565b610103610126366004610bca565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610103610156366004610be7565b61036e565b610103610169366004610c25565b610384565b61010361017c366004610bca565b63ffffffff8116600090815260208190526040902080546001600160a01b0319166001600160a01b03909216919091179055565b6002546003546040805160808101825260045461ffff8082168352620100008204811660208401526401000000008204169282019290925266010000000000009091046001600160801b03166060820152600554600654600754610222956001600160a01b0390811695169392919086565b604080516001600160a01b03978816815296909516602080880191909152845161ffff908116888801529085015181166060808901919091529585015116608087015293909201516001600160801b031660a085015260c084015260e0830152610100820152610120016100e7565b6100dd610464565b60d3546102ac906001600160a01b031681565b6040516001600160a01b0390911681526020016100e7565b610103610476565b6100dd6102da366004610bca565b63ffffffff166000908152606e602052604090205490565b610103610300366004610be7565b6104fb565b8460046103128282610c8a565b5050600593909355600691909155600755606c5550565b600061034461033b6020840184610bca565b63ffffffff1690565b63ffffffff8116600090815260208190526040902090915082906103688282610d97565b50505050565b610380606d63ffffffff84168361050d565b5050565b6040805180820182526001600160a01b0380861682528251606081018452858216815263ffffffff8516602082810191909152600194820185905283015281519192839290916000916103db911663ffffffff1690565b63ffffffff90811682526020808301939093526040918201600020845181546001600160a01b039182166001600160a01b0319909116178255948401518051600190920180549582015191909401511515600160c01b0260ff60c01b1991909316600160a01b026001600160c01b03199095169190951617929092179290921617905550505050565b6000610471606d82610548565b905090565b60005b60088110156104f8576000606d826008811061049757610497610eef565b60088104919091015460079091166004026101000a900463ffffffff169050806104bf575050565b63ffffffff8082166000908152606e60205260409020546104e591606d91849161068516565b50806104f081610f1b565b915050610479565b50565b610380606d63ffffffff841683610685565b6105178383610700565b63ffffffff821660009081526001840160205260408120805483929061053e908490610f36565b9091555050505050565b60008060005b60088160ff16101561067d5760008560ff83166008811061057157610571610eef565b60088104919091015460079091166004026101000a900463ffffffff1690508061059b575061067d565b63ffffffff8181166000908152600187810160205260409182902090810154915163dd86c10160e01b8152600160a01b830490931660048401529161065c916001600160a01b03169063dd86c10190602401602060405180830381865afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610f4e565b63ffffffff8416600090815260018a016020526040902054600160801b906106559061084f565b9190610865565b6106669085610f67565b93505050808061067590610fa8565b91505061054e565b509392505050565b63ffffffff821660009081526001840160205260409020548111156106a957600080fd5b63ffffffff82166000908152600184016020526040812080548392906106d0908490610fc8565b909155505063ffffffff821660009081526001840160205260409020546106fb576106fb83836108a9565b505050565b63ffffffff811661072c57604051633f16439160e01b8152600060048201526024015b60405180910390fd5b600860005b60088110156107e3578263ffffffff1684826008811061075357610753610eef565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1614156107815750505050565b8160081480156107c4575060008482600881106107a0576107a0610eef565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16145b156107d1578091506107e3565b806107db81610f1b565b915050610731565b50806008141561080e57604051630695727160e11b815263ffffffff83166004820152602401610723565b8183826008811061082157610821610eef565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550505050565b6000600160ff1b821061086157600080fd5b5090565b600061088b600085126108785784610884565b61088485600019610fdf565b8484610aa2565b905060008412156108a25761089f81611064565b90505b9392505050565b63ffffffff81166108d057604051633f16439160e01b815260006004820152602401610723565b600860005b6008811015610989578263ffffffff168482600881106108f7576108f7610eef565b600891828204019190066004029054906101000a900463ffffffff1663ffffffff161415610923578091505b83816008811061093557610935610eef565b60088104919091015460079091166004026101000a900463ffffffff166109775760008111610965576000610970565b610970600182610fc8565b9050610989565b8061098181610f1b565b9150506108d5565b80600814610997578061099a565b60075b90508160081461036857818114156109ee5760008483600881106109c0576109c0610eef565b600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550610368565b838160088110610a0057610a00610eef565b600891828204019190066004029054906101000a900463ffffffff166000858460088110610a3057610a30610eef565b60089182820401919006600402878560088110610a4f57610a4f610eef565b600891828204019190066004028491906101000a81548163ffffffff021916908363ffffffff1602179055508391906101000a81548163ffffffff021916908363ffffffff160217905550505050505050565b600080806000198587098587029250828110838203039150508060001415610adc5760008411610ad157600080fd5b5082900490506108a2565b808411610ae857600080fd5b600084868809851960019081018716968790046003810260029081188083028203028083028203028083028203028083028203028083028203029182029003026000889003889004909101858311909403939093029303949094049190911702949350505050565b6000806000806000858703610100811215610b6a57600080fd5b6080811215610b7857600080fd5b5094966080880135965060a0880135955060c0880135945060e08801359350915050565b60006101208284031215610baf57600080fd5b50919050565b6001600160a01b03811681146104f857600080fd5b600060208284031215610bdc57600080fd5b81356108a281610bb5565b60008060408385031215610bfa57600080fd5b8235610c0581610bb5565b946020939093013593505050565b63ffffffff811681146104f857600080fd5b600080600060608486031215610c3a57600080fd5b8335610c4581610bb5565b92506020840135610c5581610bb5565b91506040840135610c6581610c13565b809150509250925092565b6000813561ffff81168114610c8457600080fd5b92915050565b610ca9610c9683610c70565b825461ffff191661ffff91909116178255565b610cd2610cb860208401610c70565b825463ffff0000191660109190911b63ffff000016178255565b610cde60408301610c70565b815465ffff000000008260201b1691508165ffff0000000019821617835560608401356001600160801b0381168114610d1657600080fd5b75ffffffffffffffffffffffffffffffff0000000000008160301b168375ffffffffffffffffffffffffffffffffffff00000000198416171784555050505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b600081358015158114610c8457600080fd5b60008135610c8481610bb5565b8135610da281610bb5565b610dac8183610d58565b506020820135610dbb81610bb5565b610dc88160018401610d58565b506040820135610dd781610bb5565b610de48160028401610d58565b5060038101610df8610c9660608501610c70565b610e07610cb860808501610c70565b60a0830135610e1581610c13565b815467ffffffff000000008260201b1691508167ffffffff0000000019821617835568ff0000000000000000610e4d60c08701610d78565b151560401b168268ffffffffff00000000198316171783555050610ea0610e7660e08501610d78565b82805469ff000000000000000000191691151560481b69ff00000000000000000016919091179055565b6106fb610eb06101008501610d8a565b8280547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660509290921b600160501b600160f01b0316919091179055565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f2f57610f2f610f05565b5060010190565b60008219821115610f4957610f49610f05565b500190565b600060208284031215610f6057600080fd5b5051919050565b600080821280156001600160ff1b0384900385131615610f8957610f89610f05565b600160ff1b8390038412811615610fa257610fa2610f05565b50500190565b600060ff821660ff811415610fbf57610fbf610f05565b60010192915050565b600082821015610fda57610fda610f05565b500390565b60006001600160ff1b038184138284138082168684048611161561100557611005610f05565b600160ff1b600087128281168783058912161561102457611024610f05565b6000871292508782058712848416161561104057611040610f05565b8785058712818416161561105657611056610f05565b505050929093029392505050565b6000600160ff1b82141561107a5761107a610f05565b506000039056fea164736f6c634300080c000a608060405234801561001057600080fd5b50610967806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806386c8e9a7116100ad578063bb152c5311610071578063bb152c5314610292578063d74dcaca146102ba578063d9fe08d4146102f3578063ea6e4e5214610304578063fca6fbf21461033457600080fd5b806386c8e9a71461025657806397c71faf1461026c578063a34123a71461027f578063a3a1e7e91461024c578063a3c35e2c1461019157600080fd5b806333f90963116100f457806333f90963146101b15780634c2ebc58146101b35780635e622abc1461021a5780636719578c146102215780637779815c1461024c57600080fd5b806302dc9951146101265780630d8f6f461461014e5780631dce5fcf1461016f5780632a99a79214610191575b600080fd5b6001546101359062ffffff1681565b60405162ffffff90911681526020015b60405180910390f35b61016161015c3660046105cf565b61034d565b604051908152602001610145565b61018261017d3660046105ff565b610362565b60405161014593929190610652565b6101a461019f366004610696565b610433565b60405161014591906106c9565b005b6101b16101c13660046106f4565b60408051608081018252948552602080860194855285820193845260608601928352600297880b600090815280825282812097890b81529690529094209251835590516001830155519281019290925551600390910155565b6000610161565b600354610234906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b600560821b610161565b600154610135906301000000900462ffffff1681565b61016161027a3660046105cf565b6104b0565b61018261028d3660046105ff565b6104be565b6102a56102a036600461075e565b610584565b60408051928352602083019190915201610145565b6101b16102c836600461079a565b600293840b6000908152602085815260408083209590960b8252939093529290912090815560010155565b6101b16103013660046107dc565b50565b6101b16103123660046107f4565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154610135906601000000000000900462ffffff1681565b600061035c82610f9f1961082e565b92915050565b6000806103906040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546103ab91906108b3565b9091555050600286810b6000908152602082815260408083209389900b835292905220600101546103e6906001600160801b038616906108cb565b600287810b600090815260208281526040808320938a900b8352929052205490935061041c906001600160801b038616906108cb565b91506104288686610433565b905093509350939050565b61045e6040518060800160405280600081526020016000815260200160008152602001600081525090565b50600291820b60009081526020818152604080832093850b8352928152908290208251608081018452815481526001820154928101929092529283015491810191909152600390910154606082015290565b600061035c610fa0836108ea565b6000806104ec6040518060800160405280600081526020016000815260200160008152602001600081525090565b836001600160801b0316600460008282546105079190610926565b9091555050600286810b6000908152602082815260408083209389900b8352929052205461053f906001600160801b038616906108cb565b600287810b600090815260208281526040808320938a900b83529290522060010154909250610578906001600160801b038616906108cb565b92506104288686610433565b60008082156105ad57610fa06105998661093d565b6105a391906108ea565b91508490506105c7565b6105b68561093d565b91506105c485610fa061082e565b90505b935093915050565b6000602082840312156105e157600080fd5b5035919050565b8035600281900b81146105fa57600080fd5b919050565b60008060006060848603121561061457600080fd5b61061d846105e8565b925061062b602085016105e8565b915060408401356001600160801b038116811461064757600080fd5b809150509250925092565b8381526020810183905260c0810161068e6040830184805182526020810151602083015260408101516040830152606081015160608301525050565b949350505050565b600080604083850312156106a957600080fd5b6106b2836105e8565b91506106c0602084016105e8565b90509250929050565b815181526020808301519082015260408083015190820152606080830151908201526080810161035c565b60008060008060008060c0878903121561070d57600080fd5b610716876105e8565b9550610724602088016105e8565b95989597505050506040840135936060810135936080820135935060a0909101359150565b6001600160a01b038116811461030157600080fd5b60008060006060848603121561077357600080fd5b83359250602084013561078581610749565b91506040840135801515811461064757600080fd5b600080600080608085870312156107b057600080fd5b6107b9856105e8565b93506107c7602086016105e8565b93969395505050506040820135916060013590565b600060e082840312156107ee57600080fd5b50919050565b60006020828403121561080657600080fd5b813561081181610749565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160ff1b038184138284138082168684048611161561085457610854610818565b600160ff1b600087128281168783058912161561087357610873610818565b6000871292508782058712848416161561088f5761088f610818565b878505871281841616156108a5576108a5610818565b505050929093029392505050565b600082198211156108c6576108c6610818565b500190565b60008160001904831182151516156108e5576108e5610818565b500290565b60008261090757634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561092157610921610818565b500590565b60008282101561093857610938610818565b500390565b6000600160ff1b82141561095357610953610818565b506000039056fea164736f6c634300080c000a';

type DepositTokenSetTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositTokenSetTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositTokenSetTest__factory extends ContractFactory {
  constructor(...args: DepositTokenSetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _rBase: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DepositTokenSetTest> {
    return super.deploy(
      _rBase,
      overrides || {}
    ) as Promise<DepositTokenSetTest>;
  }
  getDeployTransaction(
    _rBase: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rBase, overrides || {});
  }
  attach(address: string): DepositTokenSetTest {
    return super.attach(address) as DepositTokenSetTest;
  }
  connect(signer: Signer): DepositTokenSetTest__factory {
    return super.connect(signer) as DepositTokenSetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositTokenSetTestInterface {
    return new utils.Interface(_abi) as DepositTokenSetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositTokenSetTest {
    return new Contract(address, _abi, signerOrProvider) as DepositTokenSetTest;
  }
}
